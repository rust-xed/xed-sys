#[repr(C)]
#[derive(Copy, Clone, Debug, Default, Eq, Hash, Ord, PartialEq, PartialOrd)]
pub struct __BindgenBitfieldUnit<Storage> {
    storage: Storage,
}
impl<Storage> __BindgenBitfieldUnit<Storage> {
    #[inline]
    pub const fn new(storage: Storage) -> Self {
        Self { storage }
    }
}
impl<Storage> __BindgenBitfieldUnit<Storage>
where
    Storage: AsRef<[u8]> + AsMut<[u8]>,
{
    #[inline]
    pub fn get_bit(&self, index: usize) -> bool {
        debug_assert!(index / 8 < self.storage.as_ref().len());
        let byte_index = index / 8;
        let byte = self.storage.as_ref()[byte_index];
        let bit_index = if cfg!(target_endian = "big") {
            7 - (index % 8)
        } else {
            index % 8
        };
        let mask = 1 << bit_index;
        byte & mask == mask
    }
    #[inline]
    pub fn set_bit(&mut self, index: usize, val: bool) {
        debug_assert!(index / 8 < self.storage.as_ref().len());
        let byte_index = index / 8;
        let byte = &mut self.storage.as_mut()[byte_index];
        let bit_index = if cfg!(target_endian = "big") {
            7 - (index % 8)
        } else {
            index % 8
        };
        let mask = 1 << bit_index;
        if val {
            *byte |= mask;
        } else {
            *byte &= !mask;
        }
    }
    #[inline]
    pub fn get(&self, bit_offset: usize, bit_width: u8) -> u64 {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < self.storage.as_ref().len());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= self.storage.as_ref().len());
        let mut val = 0;
        for i in 0..(bit_width as usize) {
            if self.get_bit(i + bit_offset) {
                let index = if cfg!(target_endian = "big") {
                    bit_width as usize - 1 - i
                } else {
                    i
                };
                val |= 1 << index;
            }
        }
        val
    }
    #[inline]
    pub fn set(&mut self, bit_offset: usize, bit_width: u8, val: u64) {
        debug_assert!(bit_width <= 64);
        debug_assert!(bit_offset / 8 < self.storage.as_ref().len());
        debug_assert!((bit_offset + (bit_width as usize)) / 8 <= self.storage.as_ref().len());
        for i in 0..(bit_width as usize) {
            let mask = 1 << i;
            let val_bit_is_set = val & mask == mask;
            let index = if cfg!(target_endian = "big") {
                bit_width as usize - 1 - i
            } else {
                i
            };
            self.set_bit(index + bit_offset, val_bit_is_set);
        }
    }
}
pub const XED_VERSION: &[u8; 12] = b"v2023.12.19\0";
pub const XED_FMT_X: &[u8; 3] = b"%x\0";
pub const XED_FMT_08X: &[u8; 5] = b"%08x\0";
pub const XED_FMT_D: &[u8; 3] = b"%d\0";
pub const XED_FMT_U: &[u8; 3] = b"%u\0";
pub const XED_FMT_9U: &[u8; 4] = b"%9u\0";
pub const XED_FMT_SIZET: &[u8; 4] = b"%lu\0";
pub const XED_FMT_LX: &[u8; 4] = b"%lx\0";
pub const XED_FMT_LX_UPPER: &[u8; 4] = b"%lX\0";
pub const XED_FMT_LU: &[u8; 4] = b"%lu\0";
pub const XED_FMT_LU12: &[u8; 6] = b"%12lu\0";
pub const XED_FMT_LD: &[u8; 4] = b"%ld\0";
pub const XED_FMT_LX16: &[u8; 7] = b"%016lx\0";
pub const XED_FMT_LX16_UPPER: &[u8; 7] = b"%016lX\0";
pub const XED_64B: u32 = 1;
pub const XED_MAX_DISPLACEMENT_BYTES: u32 = 8;
pub const XED_MAX_IMMEDIATE_BYTES: u32 = 8;
pub const XED_MAX_INSTRUCTION_BYTES: u32 = 15;
pub const XED_EMIT_MESSAGES: u32 = 0;
pub const XED_INFO_VERBOSE: u32 = 0;
pub const XED_INFO2_VERBOSE: u32 = 0;
pub const XED_VERBOSE: u32 = 0;
pub const XED_MORE_VERBOSE: u32 = 0;
pub const XED_VERY_VERBOSE: u32 = 0;
pub const XED_ICLASS_NAME_STR_MAX: u32 = 142;
pub const XED_MAX_ATTRIBUTE_COUNT: u32 = 103;
pub const XED_MAX_INST_TABLE_NODES: u32 = 10190;
pub const XED_MAX_OPERAND_TABLE_NODES: u32 = 1669;
pub const XED_MAX_OPERAND_SEQUENCES: u32 = 10121;
pub const XED_MAX_REQUIRED_SIMPLE_FLAGS_ENTRIES: u32 = 101;
pub const XED_MAX_REQUIRED_COMPLEX_FLAGS_ENTRIES: u32 = 149;
pub const XED_MAX_GLOBAL_FLAG_ACTIONS: u32 = 492;
pub const XED_MAX_IFORMS_PER_ICLASS: u32 = 48;
pub const XED_MAX_REQUIRED_ATTRIBUTES: u32 = 262;
pub const XED_MAX_CONVERT_PATTERNS: u32 = 5;
pub const XED_MAX_DECORATIONS_PER_OPERAND: u32 = 3;
pub const XED_MAX_MAP_VEX: u32 = 7;
pub const XED_MAX_MAP_EVEX: u32 = 7;
pub const XED_ENCODE_ORDER_MAX_ENTRIES: u32 = 37;
pub const XED_ENCODE_ORDER_MAX_OPERANDS: u32 = 5;
pub const XED_ENCODE_MAX_FB_PATTERNS: u32 = 169;
pub const XED_ENCODE_MAX_EMIT_PATTERNS: u32 = 226;
pub const XED_ENCODE_FB_VALUES_TABLE_SIZE: u32 = 9624;
pub const XED_ENCODE_MAX_IFORMS: u32 = 10218;
pub const XED_ENC_GROUPS: u32 = 570;
pub const XED_FEATURE_VECTOR_MAX: u32 = 6;
pub const XED_ENCODER_OPERANDS_MAX: u32 = 8;
pub const XED_MAX_CPUID_GROUPS_PER_ISA_SET: u32 = 2;
pub const XED_MAX_CPUID_RECS_PER_GROUP: u32 = 4;
pub type xed_uint_t = ::core::ffi::c_uint;
pub type xed_int_t = ::core::ffi::c_int;
pub type xed_bits_t = ::core::ffi::c_uint;
pub type xed_bool_t = ::core::ffi::c_uint;
pub type xed_addr_t = u64;
#[repr(C)]
#[derive(Copy, Clone)]
pub union xed_union16_t {
    pub byte: [u8; 2usize],
    pub s_byte: [i8; 2usize],
    pub b: xed_union16_t__bindgen_ty_1,
    pub i16_: i16,
    pub u16_: u16,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_union16_t__bindgen_ty_1 {
    pub b0: u8,
    pub b1: u8,
}
#[test]
fn bindgen_test_layout_xed_union16_t__bindgen_ty_1() {
    const UNINIT: ::core::mem::MaybeUninit<xed_union16_t__bindgen_ty_1> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_union16_t__bindgen_ty_1>(),
        2usize,
        concat!("Size of: ", stringify!(xed_union16_t__bindgen_ty_1))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_union16_t__bindgen_ty_1>(),
        1usize,
        concat!("Alignment of ", stringify!(xed_union16_t__bindgen_ty_1))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b0) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union16_t__bindgen_ty_1),
            "::",
            stringify!(b0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b1) as usize - ptr as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union16_t__bindgen_ty_1),
            "::",
            stringify!(b1)
        )
    );
}
#[test]
fn bindgen_test_layout_xed_union16_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_union16_t> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_union16_t>(),
        2usize,
        concat!("Size of: ", stringify!(xed_union16_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_union16_t>(),
        2usize,
        concat!("Alignment of ", stringify!(xed_union16_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).byte) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union16_t),
            "::",
            stringify!(byte)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s_byte) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union16_t),
            "::",
            stringify!(s_byte)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union16_t),
            "::",
            stringify!(b)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).i16_) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union16_t),
            "::",
            stringify!(i16_)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).u16_) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union16_t),
            "::",
            stringify!(u16_)
        )
    );
}
impl ::core::fmt::Debug for xed_union16_t {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_union16_t {{ union }}")
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xed_union32_t {
    pub byte: [u8; 4usize],
    pub word: [u16; 2usize],
    pub s_byte: [i8; 4usize],
    pub s_word: [i16; 2usize],
    pub b: xed_union32_t__bindgen_ty_1,
    pub w: xed_union32_t__bindgen_ty_2,
    pub i32_: i32,
    pub u32_: u32,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_union32_t__bindgen_ty_1 {
    pub b0: u8,
    pub b1: u8,
    pub b2: u8,
    pub b3: u8,
}
#[test]
fn bindgen_test_layout_xed_union32_t__bindgen_ty_1() {
    const UNINIT: ::core::mem::MaybeUninit<xed_union32_t__bindgen_ty_1> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_union32_t__bindgen_ty_1>(),
        4usize,
        concat!("Size of: ", stringify!(xed_union32_t__bindgen_ty_1))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_union32_t__bindgen_ty_1>(),
        1usize,
        concat!("Alignment of ", stringify!(xed_union32_t__bindgen_ty_1))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b0) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t__bindgen_ty_1),
            "::",
            stringify!(b0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b1) as usize - ptr as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t__bindgen_ty_1),
            "::",
            stringify!(b1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b2) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t__bindgen_ty_1),
            "::",
            stringify!(b2)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b3) as usize - ptr as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t__bindgen_ty_1),
            "::",
            stringify!(b3)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_union32_t__bindgen_ty_2 {
    pub w0: u16,
    pub w1: u16,
}
#[test]
fn bindgen_test_layout_xed_union32_t__bindgen_ty_2() {
    const UNINIT: ::core::mem::MaybeUninit<xed_union32_t__bindgen_ty_2> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_union32_t__bindgen_ty_2>(),
        4usize,
        concat!("Size of: ", stringify!(xed_union32_t__bindgen_ty_2))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_union32_t__bindgen_ty_2>(),
        2usize,
        concat!("Alignment of ", stringify!(xed_union32_t__bindgen_ty_2))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).w0) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t__bindgen_ty_2),
            "::",
            stringify!(w0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).w1) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t__bindgen_ty_2),
            "::",
            stringify!(w1)
        )
    );
}
#[test]
fn bindgen_test_layout_xed_union32_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_union32_t> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_union32_t>(),
        4usize,
        concat!("Size of: ", stringify!(xed_union32_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_union32_t>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_union32_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).byte) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t),
            "::",
            stringify!(byte)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).word) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t),
            "::",
            stringify!(word)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s_byte) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t),
            "::",
            stringify!(s_byte)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s_word) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t),
            "::",
            stringify!(s_word)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t),
            "::",
            stringify!(b)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).w) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t),
            "::",
            stringify!(w)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).i32_) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t),
            "::",
            stringify!(i32_)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).u32_) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union32_t),
            "::",
            stringify!(u32_)
        )
    );
}
impl ::core::fmt::Debug for xed_union32_t {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_union32_t {{ union }}")
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xed_union64_t {
    pub byte: [u8; 8usize],
    pub word: [u16; 4usize],
    pub dword: [u32; 2usize],
    pub s_byte: [i8; 8usize],
    pub s_word: [i16; 4usize],
    pub s_dword: [i32; 2usize],
    pub b: xed_union64_t__bindgen_ty_1,
    pub w: xed_union64_t__bindgen_ty_2,
    pub s: xed_union64_t__bindgen_ty_3,
    pub u64_: u64,
    pub i64_: i64,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_union64_t__bindgen_ty_1 {
    pub b0: u8,
    pub b1: u8,
    pub b2: u8,
    pub b3: u8,
    pub b4: u8,
    pub b5: u8,
    pub b6: u8,
    pub b7: u8,
}
#[test]
fn bindgen_test_layout_xed_union64_t__bindgen_ty_1() {
    const UNINIT: ::core::mem::MaybeUninit<xed_union64_t__bindgen_ty_1> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_union64_t__bindgen_ty_1>(),
        8usize,
        concat!("Size of: ", stringify!(xed_union64_t__bindgen_ty_1))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_union64_t__bindgen_ty_1>(),
        1usize,
        concat!("Alignment of ", stringify!(xed_union64_t__bindgen_ty_1))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b0) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_1),
            "::",
            stringify!(b0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b1) as usize - ptr as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_1),
            "::",
            stringify!(b1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b2) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_1),
            "::",
            stringify!(b2)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b3) as usize - ptr as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_1),
            "::",
            stringify!(b3)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b4) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_1),
            "::",
            stringify!(b4)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b5) as usize - ptr as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_1),
            "::",
            stringify!(b5)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b6) as usize - ptr as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_1),
            "::",
            stringify!(b6)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b7) as usize - ptr as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_1),
            "::",
            stringify!(b7)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_union64_t__bindgen_ty_2 {
    pub w0: u16,
    pub w1: u16,
    pub w2: u16,
    pub w3: u16,
}
#[test]
fn bindgen_test_layout_xed_union64_t__bindgen_ty_2() {
    const UNINIT: ::core::mem::MaybeUninit<xed_union64_t__bindgen_ty_2> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_union64_t__bindgen_ty_2>(),
        8usize,
        concat!("Size of: ", stringify!(xed_union64_t__bindgen_ty_2))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_union64_t__bindgen_ty_2>(),
        2usize,
        concat!("Alignment of ", stringify!(xed_union64_t__bindgen_ty_2))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).w0) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_2),
            "::",
            stringify!(w0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).w1) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_2),
            "::",
            stringify!(w1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).w2) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_2),
            "::",
            stringify!(w2)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).w3) as usize - ptr as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_2),
            "::",
            stringify!(w3)
        )
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_union64_t__bindgen_ty_3 {
    pub lo32: u32,
    pub hi32: u32,
}
#[test]
fn bindgen_test_layout_xed_union64_t__bindgen_ty_3() {
    const UNINIT: ::core::mem::MaybeUninit<xed_union64_t__bindgen_ty_3> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_union64_t__bindgen_ty_3>(),
        8usize,
        concat!("Size of: ", stringify!(xed_union64_t__bindgen_ty_3))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_union64_t__bindgen_ty_3>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_union64_t__bindgen_ty_3))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).lo32) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_3),
            "::",
            stringify!(lo32)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).hi32) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t__bindgen_ty_3),
            "::",
            stringify!(hi32)
        )
    );
}
#[test]
fn bindgen_test_layout_xed_union64_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_union64_t> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_union64_t>(),
        8usize,
        concat!("Size of: ", stringify!(xed_union64_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_union64_t>(),
        8usize,
        concat!("Alignment of ", stringify!(xed_union64_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).byte) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t),
            "::",
            stringify!(byte)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).word) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t),
            "::",
            stringify!(word)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).dword) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t),
            "::",
            stringify!(dword)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s_byte) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t),
            "::",
            stringify!(s_byte)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s_word) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t),
            "::",
            stringify!(s_word)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s_dword) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t),
            "::",
            stringify!(s_dword)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).b) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t),
            "::",
            stringify!(b)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).w) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t),
            "::",
            stringify!(w)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t),
            "::",
            stringify!(s)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).u64_) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t),
            "::",
            stringify!(u64_)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).i64_) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_union64_t),
            "::",
            stringify!(i64_)
        )
    );
}
impl ::core::fmt::Debug for xed_union64_t {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_union64_t {{ union }}")
    }
}
extern "C" {
    pub fn xed_strlen(s: *const ::core::ffi::c_char) -> xed_uint_t;
}
extern "C" {
    pub fn xed_strcat(dst: *mut ::core::ffi::c_char, src: *const ::core::ffi::c_char);
}
extern "C" {
    pub fn xed_strcpy(dst: *mut ::core::ffi::c_char, src: *const ::core::ffi::c_char);
}
extern "C" {
    #[doc = " returns the number of bytes remaining for the next use of\n #xed_strncpy() or #xed_strncat() ."]
    pub fn xed_strncpy(
        dst: *mut ::core::ffi::c_char,
        src: *const ::core::ffi::c_char,
        len: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
extern "C" {
    #[doc = " returns the number of bytes remaining for the next use of\n #xed_strncpy() or #xed_strncat() ."]
    pub fn xed_strncat(
        dst: *mut ::core::ffi::c_char,
        src: *const ::core::ffi::c_char,
        len: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
pub const XED_OPERAND_INVALID: xed_operand_enum_t = 0;
pub const XED_OPERAND_ABSBR: xed_operand_enum_t = 1;
pub const XED_OPERAND_AGEN: xed_operand_enum_t = 2;
pub const XED_OPERAND_AMD3DNOW: xed_operand_enum_t = 3;
pub const XED_OPERAND_ASZ: xed_operand_enum_t = 4;
pub const XED_OPERAND_BASE0: xed_operand_enum_t = 5;
pub const XED_OPERAND_BASE1: xed_operand_enum_t = 6;
pub const XED_OPERAND_BCAST: xed_operand_enum_t = 7;
pub const XED_OPERAND_BCRC: xed_operand_enum_t = 8;
pub const XED_OPERAND_BRDISP_WIDTH: xed_operand_enum_t = 9;
pub const XED_OPERAND_CET: xed_operand_enum_t = 10;
pub const XED_OPERAND_CHIP: xed_operand_enum_t = 11;
pub const XED_OPERAND_CLDEMOTE: xed_operand_enum_t = 12;
pub const XED_OPERAND_DEFAULT_SEG: xed_operand_enum_t = 13;
pub const XED_OPERAND_DF32: xed_operand_enum_t = 14;
pub const XED_OPERAND_DF64: xed_operand_enum_t = 15;
pub const XED_OPERAND_DISP: xed_operand_enum_t = 16;
pub const XED_OPERAND_DISP_WIDTH: xed_operand_enum_t = 17;
pub const XED_OPERAND_DUMMY: xed_operand_enum_t = 18;
pub const XED_OPERAND_EASZ: xed_operand_enum_t = 19;
pub const XED_OPERAND_ELEMENT_SIZE: xed_operand_enum_t = 20;
pub const XED_OPERAND_ENCODER_PREFERRED: xed_operand_enum_t = 21;
pub const XED_OPERAND_ENCODE_FORCE: xed_operand_enum_t = 22;
pub const XED_OPERAND_EOSZ: xed_operand_enum_t = 23;
pub const XED_OPERAND_ERROR: xed_operand_enum_t = 24;
pub const XED_OPERAND_ESRC: xed_operand_enum_t = 25;
pub const XED_OPERAND_EVVSPACE: xed_operand_enum_t = 26;
pub const XED_OPERAND_FIRST_F2F3: xed_operand_enum_t = 27;
pub const XED_OPERAND_HAS_EGPR: xed_operand_enum_t = 28;
pub const XED_OPERAND_HAS_MODRM: xed_operand_enum_t = 29;
pub const XED_OPERAND_HAS_SIB: xed_operand_enum_t = 30;
pub const XED_OPERAND_HINT: xed_operand_enum_t = 31;
pub const XED_OPERAND_ICLASS: xed_operand_enum_t = 32;
pub const XED_OPERAND_ILD_F2: xed_operand_enum_t = 33;
pub const XED_OPERAND_ILD_F3: xed_operand_enum_t = 34;
pub const XED_OPERAND_ILD_SEG: xed_operand_enum_t = 35;
pub const XED_OPERAND_IMM0: xed_operand_enum_t = 36;
pub const XED_OPERAND_IMM0SIGNED: xed_operand_enum_t = 37;
pub const XED_OPERAND_IMM1: xed_operand_enum_t = 38;
pub const XED_OPERAND_IMM1_BYTES: xed_operand_enum_t = 39;
pub const XED_OPERAND_IMM_WIDTH: xed_operand_enum_t = 40;
pub const XED_OPERAND_INDEX: xed_operand_enum_t = 41;
pub const XED_OPERAND_LAST_F2F3: xed_operand_enum_t = 42;
pub const XED_OPERAND_LLRC: xed_operand_enum_t = 43;
pub const XED_OPERAND_LOCK: xed_operand_enum_t = 44;
pub const XED_OPERAND_LZCNT: xed_operand_enum_t = 45;
pub const XED_OPERAND_MAP: xed_operand_enum_t = 46;
pub const XED_OPERAND_MASK: xed_operand_enum_t = 47;
pub const XED_OPERAND_MAX_BYTES: xed_operand_enum_t = 48;
pub const XED_OPERAND_MEM0: xed_operand_enum_t = 49;
pub const XED_OPERAND_MEM1: xed_operand_enum_t = 50;
pub const XED_OPERAND_MEM_WIDTH: xed_operand_enum_t = 51;
pub const XED_OPERAND_MOD: xed_operand_enum_t = 52;
pub const XED_OPERAND_MODE: xed_operand_enum_t = 53;
pub const XED_OPERAND_MODEP5: xed_operand_enum_t = 54;
pub const XED_OPERAND_MODEP55C: xed_operand_enum_t = 55;
pub const XED_OPERAND_MODE_FIRST_PREFIX: xed_operand_enum_t = 56;
pub const XED_OPERAND_MODE_SHORT_UD0: xed_operand_enum_t = 57;
pub const XED_OPERAND_MODRM_BYTE: xed_operand_enum_t = 58;
pub const XED_OPERAND_MPXMODE: xed_operand_enum_t = 59;
pub const XED_OPERAND_MUST_USE_EVEX: xed_operand_enum_t = 60;
pub const XED_OPERAND_ND: xed_operand_enum_t = 61;
pub const XED_OPERAND_NEEDREX: xed_operand_enum_t = 62;
pub const XED_OPERAND_NEED_MEMDISP: xed_operand_enum_t = 63;
pub const XED_OPERAND_NEED_SIB: xed_operand_enum_t = 64;
pub const XED_OPERAND_NELEM: xed_operand_enum_t = 65;
pub const XED_OPERAND_NF: xed_operand_enum_t = 66;
pub const XED_OPERAND_NOMINAL_OPCODE: xed_operand_enum_t = 67;
pub const XED_OPERAND_NOREX: xed_operand_enum_t = 68;
pub const XED_OPERAND_NOREX2: xed_operand_enum_t = 69;
pub const XED_OPERAND_NO_APX: xed_operand_enum_t = 70;
pub const XED_OPERAND_NO_EVEX: xed_operand_enum_t = 71;
pub const XED_OPERAND_NO_VEX: xed_operand_enum_t = 72;
pub const XED_OPERAND_NPREFIXES: xed_operand_enum_t = 73;
pub const XED_OPERAND_NREXES: xed_operand_enum_t = 74;
pub const XED_OPERAND_NSEG_PREFIXES: xed_operand_enum_t = 75;
pub const XED_OPERAND_OSZ: xed_operand_enum_t = 76;
pub const XED_OPERAND_OUTREG: xed_operand_enum_t = 77;
pub const XED_OPERAND_OUT_OF_BYTES: xed_operand_enum_t = 78;
pub const XED_OPERAND_P4: xed_operand_enum_t = 79;
pub const XED_OPERAND_POS_DISP: xed_operand_enum_t = 80;
pub const XED_OPERAND_POS_IMM: xed_operand_enum_t = 81;
pub const XED_OPERAND_POS_IMM1: xed_operand_enum_t = 82;
pub const XED_OPERAND_POS_MODRM: xed_operand_enum_t = 83;
pub const XED_OPERAND_POS_NOMINAL_OPCODE: xed_operand_enum_t = 84;
pub const XED_OPERAND_POS_SIB: xed_operand_enum_t = 85;
pub const XED_OPERAND_PREFIX66: xed_operand_enum_t = 86;
pub const XED_OPERAND_PTR: xed_operand_enum_t = 87;
pub const XED_OPERAND_REALMODE: xed_operand_enum_t = 88;
pub const XED_OPERAND_REG: xed_operand_enum_t = 89;
pub const XED_OPERAND_REG0: xed_operand_enum_t = 90;
pub const XED_OPERAND_REG1: xed_operand_enum_t = 91;
pub const XED_OPERAND_REG2: xed_operand_enum_t = 92;
pub const XED_OPERAND_REG3: xed_operand_enum_t = 93;
pub const XED_OPERAND_REG4: xed_operand_enum_t = 94;
pub const XED_OPERAND_REG5: xed_operand_enum_t = 95;
pub const XED_OPERAND_REG6: xed_operand_enum_t = 96;
pub const XED_OPERAND_REG7: xed_operand_enum_t = 97;
pub const XED_OPERAND_REG8: xed_operand_enum_t = 98;
pub const XED_OPERAND_REG9: xed_operand_enum_t = 99;
pub const XED_OPERAND_RELBR: xed_operand_enum_t = 100;
pub const XED_OPERAND_REP: xed_operand_enum_t = 101;
pub const XED_OPERAND_REX: xed_operand_enum_t = 102;
pub const XED_OPERAND_REX2: xed_operand_enum_t = 103;
pub const XED_OPERAND_REXB: xed_operand_enum_t = 104;
pub const XED_OPERAND_REXB4: xed_operand_enum_t = 105;
pub const XED_OPERAND_REXR: xed_operand_enum_t = 106;
pub const XED_OPERAND_REXR4: xed_operand_enum_t = 107;
pub const XED_OPERAND_REXW: xed_operand_enum_t = 108;
pub const XED_OPERAND_REXX: xed_operand_enum_t = 109;
pub const XED_OPERAND_REXX4: xed_operand_enum_t = 110;
pub const XED_OPERAND_RM: xed_operand_enum_t = 111;
pub const XED_OPERAND_ROUNDC: xed_operand_enum_t = 112;
pub const XED_OPERAND_SAE: xed_operand_enum_t = 113;
pub const XED_OPERAND_SCALE: xed_operand_enum_t = 114;
pub const XED_OPERAND_SCC: xed_operand_enum_t = 115;
pub const XED_OPERAND_SEG0: xed_operand_enum_t = 116;
pub const XED_OPERAND_SEG1: xed_operand_enum_t = 117;
pub const XED_OPERAND_SEG_OVD: xed_operand_enum_t = 118;
pub const XED_OPERAND_SIBBASE: xed_operand_enum_t = 119;
pub const XED_OPERAND_SIBINDEX: xed_operand_enum_t = 120;
pub const XED_OPERAND_SIBSCALE: xed_operand_enum_t = 121;
pub const XED_OPERAND_SKIP_OSZ: xed_operand_enum_t = 122;
pub const XED_OPERAND_SMODE: xed_operand_enum_t = 123;
pub const XED_OPERAND_SRM: xed_operand_enum_t = 124;
pub const XED_OPERAND_TZCNT: xed_operand_enum_t = 125;
pub const XED_OPERAND_UBIT: xed_operand_enum_t = 126;
pub const XED_OPERAND_UIMM0: xed_operand_enum_t = 127;
pub const XED_OPERAND_UIMM1: xed_operand_enum_t = 128;
pub const XED_OPERAND_USING_DEFAULT_SEGMENT0: xed_operand_enum_t = 129;
pub const XED_OPERAND_USING_DEFAULT_SEGMENT1: xed_operand_enum_t = 130;
pub const XED_OPERAND_VEXDEST210: xed_operand_enum_t = 131;
pub const XED_OPERAND_VEXDEST3: xed_operand_enum_t = 132;
pub const XED_OPERAND_VEXDEST4: xed_operand_enum_t = 133;
pub const XED_OPERAND_VEXVALID: xed_operand_enum_t = 134;
pub const XED_OPERAND_VEX_C4: xed_operand_enum_t = 135;
pub const XED_OPERAND_VEX_PREFIX: xed_operand_enum_t = 136;
pub const XED_OPERAND_VL: xed_operand_enum_t = 137;
pub const XED_OPERAND_VL_IGN: xed_operand_enum_t = 138;
pub const XED_OPERAND_WBNOINVD: xed_operand_enum_t = 139;
pub const XED_OPERAND_ZEROING: xed_operand_enum_t = 140;
pub const XED_OPERAND_LAST: xed_operand_enum_t = 141;
pub type xed_operand_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_operand_enum_t types.\n @param s A C-string.\n @return #xed_operand_enum_t\n @ingroup ENUM"]
    pub fn str2xed_operand_enum_t(s: *const ::core::ffi::c_char) -> xed_operand_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_operand_enum_t types.\n @param p An enumeration element of type xed_operand_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_operand_enum_t2str(p: xed_operand_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_operand_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_operand_enum_t_last() -> xed_operand_enum_t;
}
extern "C" {
    #[doc = " @ingroup INIT\n   This is the call to initialize the XED encode and decode tables. It\n   must be called once before using XED."]
    pub fn xed_tables_init();
}
extern "C" {
    pub static mut xed_verbose: ::core::ffi::c_int;
}
extern "C" {
    pub fn xed_internal_assert(
        s: *const ::core::ffi::c_char,
        file: *const ::core::ffi::c_char,
        line: ::core::ffi::c_int,
    ) -> !;
}
pub type xed_user_abort_function_t = ::core::option::Option<
    unsafe extern "C" fn(
        msg: *const ::core::ffi::c_char,
        file: *const ::core::ffi::c_char,
        line: ::core::ffi::c_int,
        other: *mut ::core::ffi::c_void,
    ),
>;
extern "C" {
    #[doc = " @ingroup INIT\n This is for registering a function to be called during XED's assert\n processing. If you do not register an abort function, then the system's\n abort function will be called. If your supplied function returns, then\n abort() will still be called.\n\n @param fn This is a function pointer for a function that should handle the\n        assertion reporting. The function pointer points to  a function that\n        takes 4 arguments:\n                     (1) msg, the assertion message,\n                     (2) file, the file name,\n                     (3) line, the line number (as an integer), and\n                     (4) other, a void pointer that is supplied as thei\n                         2nd argument to this registration.\n @param other This is a void* that is passed back to your supplied function  fn\n        as its 4th argument. It can be zero if you don't need this\n        feature. You can used this to convey whatever additional context\n        to your assertion handler (like FILE* pointers etc.).\n"]
    pub fn xed_register_abort_function(
        fn_: xed_user_abort_function_t,
        other: *mut ::core::ffi::c_void,
    );
}
extern "C" {
    pub fn xed_itoa(
        buf: *mut ::core::ffi::c_char,
        f: u64,
        buflen: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
extern "C" {
    #[doc = " defaults to lowercase"]
    pub fn xed_itoa_hex_zeros(
        buf: *mut ::core::ffi::c_char,
        f: u64,
        bits_to_print: xed_uint_t,
        leading_zeros: xed_bool_t,
        buflen: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
extern "C" {
    #[doc = " defaults to lowercase"]
    pub fn xed_itoa_hex(
        buf: *mut ::core::ffi::c_char,
        f: u64,
        bits_to_print: xed_uint_t,
        buflen: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
extern "C" {
    pub fn xed_itoa_hex_ul(
        buf: *mut ::core::ffi::c_char,
        f: u64,
        bits_to_print: xed_uint_t,
        leading_zeros: xed_bool_t,
        buflen: ::core::ffi::c_int,
        lowercase: xed_bool_t,
    ) -> ::core::ffi::c_int;
}
extern "C" {
    #[doc = " Set the FILE* for XED's log msgs. This takes a FILE* as a void* because\n some software defines their own FILE* types creating conflicts."]
    pub fn xed_set_log_file(o: *mut ::core::ffi::c_void);
}
extern "C" {
    #[doc = " Set the verbosity level for XED"]
    pub fn xed_set_verbosity(v: ::core::ffi::c_int);
}
extern "C" {
    pub fn xed_sign_extend32_64(x: i32) -> i64;
}
extern "C" {
    pub fn xed_sign_extend16_64(x: i16) -> i64;
}
extern "C" {
    pub fn xed_sign_extend8_64(x: i8) -> i64;
}
extern "C" {
    pub fn xed_sign_extend16_32(x: i16) -> i32;
}
extern "C" {
    pub fn xed_sign_extend8_32(x: i8) -> i32;
}
extern "C" {
    pub fn xed_sign_extend8_16(x: i8) -> i16;
}
extern "C" {
    #[doc = "arbitrary sign extension from a qty of \"bits\" length to 32b"]
    pub fn xed_sign_extend_arbitrary_to_32(x: u32, bits: ::core::ffi::c_uint) -> i32;
}
extern "C" {
    #[doc = "arbitrary sign extension from a qty of \"bits\" length to 64b"]
    pub fn xed_sign_extend_arbitrary_to_64(x: u64, bits: ::core::ffi::c_uint) -> i64;
}
extern "C" {
    pub fn xed_zero_extend32_64(x: u32) -> u64;
}
extern "C" {
    pub fn xed_zero_extend16_64(x: u16) -> u64;
}
extern "C" {
    pub fn xed_zero_extend8_64(x: u8) -> u64;
}
extern "C" {
    pub fn xed_zero_extend16_32(x: u16) -> u32;
}
extern "C" {
    pub fn xed_zero_extend8_32(x: u8) -> u32;
}
extern "C" {
    pub fn xed_zero_extend8_16(x: u8) -> u16;
}
extern "C" {
    pub fn xed_get_byte(x: u64, i: ::core::ffi::c_uint, len: ::core::ffi::c_uint) -> u8;
}
extern "C" {
    #[link_name = "xed_make_uint64_xed_sys_inline"]
    pub fn xed_make_uint64(hi: u32, lo: u32) -> u64;
}
extern "C" {
    #[link_name = "xed_make_int64_xed_sys_inline"]
    pub fn xed_make_int64(hi: u32, lo: u32) -> i64;
}
extern "C" {
    #[doc = " returns the number of bytes required to store the UNSIGNED number x\n given a mask of legal lengths. For the legal_widths argument, bit 0\n implies 1 byte is a legal return width, bit 1 implies that 2 bytes is a\n legal return width, bit 2 implies that 4 bytes is a legal return width.\n This returns 8 (indicating 8B) if none of the provided legal widths\n applies."]
    pub fn xed_shortest_width_unsigned(x: u64, legal_widths: u8) -> xed_uint_t;
}
extern "C" {
    #[doc = " returns the number of bytes required to store the SIGNED number x\n given a mask of legal lengths. For the legal_widths argument, bit 0 implies 1\n byte is a legal return width, bit 1 implies that 2 bytes is a legal\n return width, bit 2 implies that 4 bytes is a legal return width.  This\n returns 8 (indicating 8B) if none of the provided legal widths applies."]
    pub fn xed_shortest_width_signed(x: i64, legal_widths: u8) -> xed_uint_t;
}
pub const XED_CATEGORY_INVALID: xed_category_enum_t = 0;
pub const XED_CATEGORY_3DNOW: xed_category_enum_t = 1;
pub const XED_CATEGORY_ADOX_ADCX: xed_category_enum_t = 2;
pub const XED_CATEGORY_AES: xed_category_enum_t = 3;
pub const XED_CATEGORY_AMX_TILE: xed_category_enum_t = 4;
pub const XED_CATEGORY_APX: xed_category_enum_t = 5;
pub const XED_CATEGORY_AVX: xed_category_enum_t = 6;
pub const XED_CATEGORY_AVX2: xed_category_enum_t = 7;
pub const XED_CATEGORY_AVX2GATHER: xed_category_enum_t = 8;
pub const XED_CATEGORY_AVX512: xed_category_enum_t = 9;
pub const XED_CATEGORY_AVX512_4FMAPS: xed_category_enum_t = 10;
pub const XED_CATEGORY_AVX512_4VNNIW: xed_category_enum_t = 11;
pub const XED_CATEGORY_AVX512_BITALG: xed_category_enum_t = 12;
pub const XED_CATEGORY_AVX512_VBMI: xed_category_enum_t = 13;
pub const XED_CATEGORY_AVX512_VP2INTERSECT: xed_category_enum_t = 14;
pub const XED_CATEGORY_AVX_IFMA: xed_category_enum_t = 15;
pub const XED_CATEGORY_BINARY: xed_category_enum_t = 16;
pub const XED_CATEGORY_BITBYTE: xed_category_enum_t = 17;
pub const XED_CATEGORY_BLEND: xed_category_enum_t = 18;
pub const XED_CATEGORY_BMI1: xed_category_enum_t = 19;
pub const XED_CATEGORY_BMI2: xed_category_enum_t = 20;
pub const XED_CATEGORY_BROADCAST: xed_category_enum_t = 21;
pub const XED_CATEGORY_CALL: xed_category_enum_t = 22;
pub const XED_CATEGORY_CET: xed_category_enum_t = 23;
pub const XED_CATEGORY_CLDEMOTE: xed_category_enum_t = 24;
pub const XED_CATEGORY_CLFLUSHOPT: xed_category_enum_t = 25;
pub const XED_CATEGORY_CLWB: xed_category_enum_t = 26;
pub const XED_CATEGORY_CLZERO: xed_category_enum_t = 27;
pub const XED_CATEGORY_CMOV: xed_category_enum_t = 28;
pub const XED_CATEGORY_COMPRESS: xed_category_enum_t = 29;
pub const XED_CATEGORY_COND_BR: xed_category_enum_t = 30;
pub const XED_CATEGORY_CONFLICT: xed_category_enum_t = 31;
pub const XED_CATEGORY_CONVERT: xed_category_enum_t = 32;
pub const XED_CATEGORY_DATAXFER: xed_category_enum_t = 33;
pub const XED_CATEGORY_DECIMAL: xed_category_enum_t = 34;
pub const XED_CATEGORY_ENQCMD: xed_category_enum_t = 35;
pub const XED_CATEGORY_EXPAND: xed_category_enum_t = 36;
pub const XED_CATEGORY_FCMOV: xed_category_enum_t = 37;
pub const XED_CATEGORY_FLAGOP: xed_category_enum_t = 38;
pub const XED_CATEGORY_FMA4: xed_category_enum_t = 39;
pub const XED_CATEGORY_FP16: xed_category_enum_t = 40;
pub const XED_CATEGORY_FRED: xed_category_enum_t = 41;
pub const XED_CATEGORY_GATHER: xed_category_enum_t = 42;
pub const XED_CATEGORY_GFNI: xed_category_enum_t = 43;
pub const XED_CATEGORY_HRESET: xed_category_enum_t = 44;
pub const XED_CATEGORY_IFMA: xed_category_enum_t = 45;
pub const XED_CATEGORY_INTERRUPT: xed_category_enum_t = 46;
pub const XED_CATEGORY_IO: xed_category_enum_t = 47;
pub const XED_CATEGORY_IOSTRINGOP: xed_category_enum_t = 48;
pub const XED_CATEGORY_KEYLOCKER: xed_category_enum_t = 49;
pub const XED_CATEGORY_KEYLOCKER_WIDE: xed_category_enum_t = 50;
pub const XED_CATEGORY_KMASK: xed_category_enum_t = 51;
pub const XED_CATEGORY_LEGACY: xed_category_enum_t = 52;
pub const XED_CATEGORY_LKGS: xed_category_enum_t = 53;
pub const XED_CATEGORY_LOGICAL: xed_category_enum_t = 54;
pub const XED_CATEGORY_LOGICAL_FP: xed_category_enum_t = 55;
pub const XED_CATEGORY_LZCNT: xed_category_enum_t = 56;
pub const XED_CATEGORY_MISC: xed_category_enum_t = 57;
pub const XED_CATEGORY_MMX: xed_category_enum_t = 58;
pub const XED_CATEGORY_MOVDIR: xed_category_enum_t = 59;
pub const XED_CATEGORY_MPX: xed_category_enum_t = 60;
pub const XED_CATEGORY_MSRLIST: xed_category_enum_t = 61;
pub const XED_CATEGORY_NOP: xed_category_enum_t = 62;
pub const XED_CATEGORY_PBNDKB: xed_category_enum_t = 63;
pub const XED_CATEGORY_PCLMULQDQ: xed_category_enum_t = 64;
pub const XED_CATEGORY_PCONFIG: xed_category_enum_t = 65;
pub const XED_CATEGORY_PKU: xed_category_enum_t = 66;
pub const XED_CATEGORY_POP: xed_category_enum_t = 67;
pub const XED_CATEGORY_PREFETCH: xed_category_enum_t = 68;
pub const XED_CATEGORY_PREFETCHWT1: xed_category_enum_t = 69;
pub const XED_CATEGORY_PTWRITE: xed_category_enum_t = 70;
pub const XED_CATEGORY_PUSH: xed_category_enum_t = 71;
pub const XED_CATEGORY_RDPID: xed_category_enum_t = 72;
pub const XED_CATEGORY_RDPRU: xed_category_enum_t = 73;
pub const XED_CATEGORY_RDRAND: xed_category_enum_t = 74;
pub const XED_CATEGORY_RDSEED: xed_category_enum_t = 75;
pub const XED_CATEGORY_RDWRFSGS: xed_category_enum_t = 76;
pub const XED_CATEGORY_RET: xed_category_enum_t = 77;
pub const XED_CATEGORY_ROTATE: xed_category_enum_t = 78;
pub const XED_CATEGORY_SCATTER: xed_category_enum_t = 79;
pub const XED_CATEGORY_SEGOP: xed_category_enum_t = 80;
pub const XED_CATEGORY_SEMAPHORE: xed_category_enum_t = 81;
pub const XED_CATEGORY_SERIALIZE: xed_category_enum_t = 82;
pub const XED_CATEGORY_SETCC: xed_category_enum_t = 83;
pub const XED_CATEGORY_SGX: xed_category_enum_t = 84;
pub const XED_CATEGORY_SHA: xed_category_enum_t = 85;
pub const XED_CATEGORY_SHA512: xed_category_enum_t = 86;
pub const XED_CATEGORY_SHIFT: xed_category_enum_t = 87;
pub const XED_CATEGORY_SMAP: xed_category_enum_t = 88;
pub const XED_CATEGORY_SSE: xed_category_enum_t = 89;
pub const XED_CATEGORY_STRINGOP: xed_category_enum_t = 90;
pub const XED_CATEGORY_STTNI: xed_category_enum_t = 91;
pub const XED_CATEGORY_SYSCALL: xed_category_enum_t = 92;
pub const XED_CATEGORY_SYSRET: xed_category_enum_t = 93;
pub const XED_CATEGORY_SYSTEM: xed_category_enum_t = 94;
pub const XED_CATEGORY_TBM: xed_category_enum_t = 95;
pub const XED_CATEGORY_TSX_LDTRK: xed_category_enum_t = 96;
pub const XED_CATEGORY_UINTR: xed_category_enum_t = 97;
pub const XED_CATEGORY_UNCOND_BR: xed_category_enum_t = 98;
pub const XED_CATEGORY_USER_MSR: xed_category_enum_t = 99;
pub const XED_CATEGORY_VAES: xed_category_enum_t = 100;
pub const XED_CATEGORY_VBMI2: xed_category_enum_t = 101;
pub const XED_CATEGORY_VEX: xed_category_enum_t = 102;
pub const XED_CATEGORY_VFMA: xed_category_enum_t = 103;
pub const XED_CATEGORY_VIA_PADLOCK: xed_category_enum_t = 104;
pub const XED_CATEGORY_VPCLMULQDQ: xed_category_enum_t = 105;
pub const XED_CATEGORY_VTX: xed_category_enum_t = 106;
pub const XED_CATEGORY_WAITPKG: xed_category_enum_t = 107;
pub const XED_CATEGORY_WIDENOP: xed_category_enum_t = 108;
pub const XED_CATEGORY_WRMSRNS: xed_category_enum_t = 109;
pub const XED_CATEGORY_X87_ALU: xed_category_enum_t = 110;
pub const XED_CATEGORY_XOP: xed_category_enum_t = 111;
pub const XED_CATEGORY_XSAVE: xed_category_enum_t = 112;
pub const XED_CATEGORY_XSAVEOPT: xed_category_enum_t = 113;
pub const XED_CATEGORY_LAST: xed_category_enum_t = 114;
pub type xed_category_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_category_enum_t types.\n @param s A C-string.\n @return #xed_category_enum_t\n @ingroup ENUM"]
    pub fn str2xed_category_enum_t(s: *const ::core::ffi::c_char) -> xed_category_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_category_enum_t types.\n @param p An enumeration element of type xed_category_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_category_enum_t2str(p: xed_category_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_category_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_category_enum_t_last() -> xed_category_enum_t;
}
pub const XED_EXTENSION_INVALID: xed_extension_enum_t = 0;
pub const XED_EXTENSION_3DNOW: xed_extension_enum_t = 1;
pub const XED_EXTENSION_3DNOW_PREFETCH: xed_extension_enum_t = 2;
pub const XED_EXTENSION_ADOX_ADCX: xed_extension_enum_t = 3;
pub const XED_EXTENSION_AES: xed_extension_enum_t = 4;
pub const XED_EXTENSION_AMD_INVLPGB: xed_extension_enum_t = 5;
pub const XED_EXTENSION_AMX_FP16: xed_extension_enum_t = 6;
pub const XED_EXTENSION_AMX_TILE: xed_extension_enum_t = 7;
pub const XED_EXTENSION_APXEVEX: xed_extension_enum_t = 8;
pub const XED_EXTENSION_APXLEGACY: xed_extension_enum_t = 9;
pub const XED_EXTENSION_AVX: xed_extension_enum_t = 10;
pub const XED_EXTENSION_AVX2: xed_extension_enum_t = 11;
pub const XED_EXTENSION_AVX2GATHER: xed_extension_enum_t = 12;
pub const XED_EXTENSION_AVX512EVEX: xed_extension_enum_t = 13;
pub const XED_EXTENSION_AVX512VEX: xed_extension_enum_t = 14;
pub const XED_EXTENSION_AVXAES: xed_extension_enum_t = 15;
pub const XED_EXTENSION_AVX_IFMA: xed_extension_enum_t = 16;
pub const XED_EXTENSION_AVX_NE_CONVERT: xed_extension_enum_t = 17;
pub const XED_EXTENSION_AVX_VNNI: xed_extension_enum_t = 18;
pub const XED_EXTENSION_AVX_VNNI_INT16: xed_extension_enum_t = 19;
pub const XED_EXTENSION_AVX_VNNI_INT8: xed_extension_enum_t = 20;
pub const XED_EXTENSION_BASE: xed_extension_enum_t = 21;
pub const XED_EXTENSION_BMI1: xed_extension_enum_t = 22;
pub const XED_EXTENSION_BMI2: xed_extension_enum_t = 23;
pub const XED_EXTENSION_CET: xed_extension_enum_t = 24;
pub const XED_EXTENSION_CLDEMOTE: xed_extension_enum_t = 25;
pub const XED_EXTENSION_CLFLUSHOPT: xed_extension_enum_t = 26;
pub const XED_EXTENSION_CLFSH: xed_extension_enum_t = 27;
pub const XED_EXTENSION_CLWB: xed_extension_enum_t = 28;
pub const XED_EXTENSION_CLZERO: xed_extension_enum_t = 29;
pub const XED_EXTENSION_CMPCCXADD: xed_extension_enum_t = 30;
pub const XED_EXTENSION_ENQCMD: xed_extension_enum_t = 31;
pub const XED_EXTENSION_F16C: xed_extension_enum_t = 32;
pub const XED_EXTENSION_FMA: xed_extension_enum_t = 33;
pub const XED_EXTENSION_FMA4: xed_extension_enum_t = 34;
pub const XED_EXTENSION_FRED: xed_extension_enum_t = 35;
pub const XED_EXTENSION_GFNI: xed_extension_enum_t = 36;
pub const XED_EXTENSION_HRESET: xed_extension_enum_t = 37;
pub const XED_EXTENSION_ICACHE_PREFETCH: xed_extension_enum_t = 38;
pub const XED_EXTENSION_INVPCID: xed_extension_enum_t = 39;
pub const XED_EXTENSION_KEYLOCKER: xed_extension_enum_t = 40;
pub const XED_EXTENSION_KEYLOCKER_WIDE: xed_extension_enum_t = 41;
pub const XED_EXTENSION_LKGS: xed_extension_enum_t = 42;
pub const XED_EXTENSION_LONGMODE: xed_extension_enum_t = 43;
pub const XED_EXTENSION_LZCNT: xed_extension_enum_t = 44;
pub const XED_EXTENSION_MCOMMIT: xed_extension_enum_t = 45;
pub const XED_EXTENSION_MMX: xed_extension_enum_t = 46;
pub const XED_EXTENSION_MONITOR: xed_extension_enum_t = 47;
pub const XED_EXTENSION_MONITORX: xed_extension_enum_t = 48;
pub const XED_EXTENSION_MOVBE: xed_extension_enum_t = 49;
pub const XED_EXTENSION_MOVDIR: xed_extension_enum_t = 50;
pub const XED_EXTENSION_MPX: xed_extension_enum_t = 51;
pub const XED_EXTENSION_MSRLIST: xed_extension_enum_t = 52;
pub const XED_EXTENSION_PAUSE: xed_extension_enum_t = 53;
pub const XED_EXTENSION_PBNDKB: xed_extension_enum_t = 54;
pub const XED_EXTENSION_PCLMULQDQ: xed_extension_enum_t = 55;
pub const XED_EXTENSION_PCONFIG: xed_extension_enum_t = 56;
pub const XED_EXTENSION_PKU: xed_extension_enum_t = 57;
pub const XED_EXTENSION_PREFETCHWT1: xed_extension_enum_t = 58;
pub const XED_EXTENSION_PTWRITE: xed_extension_enum_t = 59;
pub const XED_EXTENSION_RAO_INT: xed_extension_enum_t = 60;
pub const XED_EXTENSION_RDPID: xed_extension_enum_t = 61;
pub const XED_EXTENSION_RDPRU: xed_extension_enum_t = 62;
pub const XED_EXTENSION_RDRAND: xed_extension_enum_t = 63;
pub const XED_EXTENSION_RDSEED: xed_extension_enum_t = 64;
pub const XED_EXTENSION_RDTSCP: xed_extension_enum_t = 65;
pub const XED_EXTENSION_RDWRFSGS: xed_extension_enum_t = 66;
pub const XED_EXTENSION_RTM: xed_extension_enum_t = 67;
pub const XED_EXTENSION_SERIALIZE: xed_extension_enum_t = 68;
pub const XED_EXTENSION_SGX: xed_extension_enum_t = 69;
pub const XED_EXTENSION_SGX_ENCLV: xed_extension_enum_t = 70;
pub const XED_EXTENSION_SHA: xed_extension_enum_t = 71;
pub const XED_EXTENSION_SHA512: xed_extension_enum_t = 72;
pub const XED_EXTENSION_SM3: xed_extension_enum_t = 73;
pub const XED_EXTENSION_SM4: xed_extension_enum_t = 74;
pub const XED_EXTENSION_SMAP: xed_extension_enum_t = 75;
pub const XED_EXTENSION_SMX: xed_extension_enum_t = 76;
pub const XED_EXTENSION_SNP: xed_extension_enum_t = 77;
pub const XED_EXTENSION_SSE: xed_extension_enum_t = 78;
pub const XED_EXTENSION_SSE2: xed_extension_enum_t = 79;
pub const XED_EXTENSION_SSE3: xed_extension_enum_t = 80;
pub const XED_EXTENSION_SSE4: xed_extension_enum_t = 81;
pub const XED_EXTENSION_SSE4A: xed_extension_enum_t = 82;
pub const XED_EXTENSION_SSSE3: xed_extension_enum_t = 83;
pub const XED_EXTENSION_SVM: xed_extension_enum_t = 84;
pub const XED_EXTENSION_TBM: xed_extension_enum_t = 85;
pub const XED_EXTENSION_TDX: xed_extension_enum_t = 86;
pub const XED_EXTENSION_TSX_LDTRK: xed_extension_enum_t = 87;
pub const XED_EXTENSION_UINTR: xed_extension_enum_t = 88;
pub const XED_EXTENSION_USER_MSR: xed_extension_enum_t = 89;
pub const XED_EXTENSION_VAES: xed_extension_enum_t = 90;
pub const XED_EXTENSION_VIA_PADLOCK_AES: xed_extension_enum_t = 91;
pub const XED_EXTENSION_VIA_PADLOCK_MONTMUL: xed_extension_enum_t = 92;
pub const XED_EXTENSION_VIA_PADLOCK_RNG: xed_extension_enum_t = 93;
pub const XED_EXTENSION_VIA_PADLOCK_SHA: xed_extension_enum_t = 94;
pub const XED_EXTENSION_VMFUNC: xed_extension_enum_t = 95;
pub const XED_EXTENSION_VPCLMULQDQ: xed_extension_enum_t = 96;
pub const XED_EXTENSION_VTX: xed_extension_enum_t = 97;
pub const XED_EXTENSION_WAITPKG: xed_extension_enum_t = 98;
pub const XED_EXTENSION_WBNOINVD: xed_extension_enum_t = 99;
pub const XED_EXTENSION_WRMSRNS: xed_extension_enum_t = 100;
pub const XED_EXTENSION_X87: xed_extension_enum_t = 101;
pub const XED_EXTENSION_XOP: xed_extension_enum_t = 102;
pub const XED_EXTENSION_XSAVE: xed_extension_enum_t = 103;
pub const XED_EXTENSION_XSAVEC: xed_extension_enum_t = 104;
pub const XED_EXTENSION_XSAVEOPT: xed_extension_enum_t = 105;
pub const XED_EXTENSION_XSAVES: xed_extension_enum_t = 106;
pub const XED_EXTENSION_LAST: xed_extension_enum_t = 107;
pub type xed_extension_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_extension_enum_t types.\n @param s A C-string.\n @return #xed_extension_enum_t\n @ingroup ENUM"]
    pub fn str2xed_extension_enum_t(s: *const ::core::ffi::c_char) -> xed_extension_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_extension_enum_t types.\n @param p An enumeration element of type xed_extension_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_extension_enum_t2str(p: xed_extension_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_extension_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_extension_enum_t_last() -> xed_extension_enum_t;
}
pub const XED_ICLASS_INVALID: xed_iclass_enum_t = 0;
pub const XED_ICLASS_AAA: xed_iclass_enum_t = 1;
pub const XED_ICLASS_AAD: xed_iclass_enum_t = 2;
pub const XED_ICLASS_AADD: xed_iclass_enum_t = 3;
pub const XED_ICLASS_AAM: xed_iclass_enum_t = 4;
pub const XED_ICLASS_AAND: xed_iclass_enum_t = 5;
pub const XED_ICLASS_AAS: xed_iclass_enum_t = 6;
pub const XED_ICLASS_ADC: xed_iclass_enum_t = 7;
pub const XED_ICLASS_ADCX: xed_iclass_enum_t = 8;
pub const XED_ICLASS_ADC_LOCK: xed_iclass_enum_t = 9;
pub const XED_ICLASS_ADD: xed_iclass_enum_t = 10;
pub const XED_ICLASS_ADDPD: xed_iclass_enum_t = 11;
pub const XED_ICLASS_ADDPS: xed_iclass_enum_t = 12;
pub const XED_ICLASS_ADDSD: xed_iclass_enum_t = 13;
pub const XED_ICLASS_ADDSS: xed_iclass_enum_t = 14;
pub const XED_ICLASS_ADDSUBPD: xed_iclass_enum_t = 15;
pub const XED_ICLASS_ADDSUBPS: xed_iclass_enum_t = 16;
pub const XED_ICLASS_ADD_LOCK: xed_iclass_enum_t = 17;
pub const XED_ICLASS_ADOX: xed_iclass_enum_t = 18;
pub const XED_ICLASS_AESDEC: xed_iclass_enum_t = 19;
pub const XED_ICLASS_AESDEC128KL: xed_iclass_enum_t = 20;
pub const XED_ICLASS_AESDEC256KL: xed_iclass_enum_t = 21;
pub const XED_ICLASS_AESDECLAST: xed_iclass_enum_t = 22;
pub const XED_ICLASS_AESDECWIDE128KL: xed_iclass_enum_t = 23;
pub const XED_ICLASS_AESDECWIDE256KL: xed_iclass_enum_t = 24;
pub const XED_ICLASS_AESENC: xed_iclass_enum_t = 25;
pub const XED_ICLASS_AESENC128KL: xed_iclass_enum_t = 26;
pub const XED_ICLASS_AESENC256KL: xed_iclass_enum_t = 27;
pub const XED_ICLASS_AESENCLAST: xed_iclass_enum_t = 28;
pub const XED_ICLASS_AESENCWIDE128KL: xed_iclass_enum_t = 29;
pub const XED_ICLASS_AESENCWIDE256KL: xed_iclass_enum_t = 30;
pub const XED_ICLASS_AESIMC: xed_iclass_enum_t = 31;
pub const XED_ICLASS_AESKEYGENASSIST: xed_iclass_enum_t = 32;
pub const XED_ICLASS_AND: xed_iclass_enum_t = 33;
pub const XED_ICLASS_ANDN: xed_iclass_enum_t = 34;
pub const XED_ICLASS_ANDNPD: xed_iclass_enum_t = 35;
pub const XED_ICLASS_ANDNPS: xed_iclass_enum_t = 36;
pub const XED_ICLASS_ANDPD: xed_iclass_enum_t = 37;
pub const XED_ICLASS_ANDPS: xed_iclass_enum_t = 38;
pub const XED_ICLASS_AND_LOCK: xed_iclass_enum_t = 39;
pub const XED_ICLASS_AOR: xed_iclass_enum_t = 40;
pub const XED_ICLASS_ARPL: xed_iclass_enum_t = 41;
pub const XED_ICLASS_AXOR: xed_iclass_enum_t = 42;
pub const XED_ICLASS_BEXTR: xed_iclass_enum_t = 43;
pub const XED_ICLASS_BEXTR_XOP: xed_iclass_enum_t = 44;
pub const XED_ICLASS_BLCFILL: xed_iclass_enum_t = 45;
pub const XED_ICLASS_BLCI: xed_iclass_enum_t = 46;
pub const XED_ICLASS_BLCIC: xed_iclass_enum_t = 47;
pub const XED_ICLASS_BLCMSK: xed_iclass_enum_t = 48;
pub const XED_ICLASS_BLCS: xed_iclass_enum_t = 49;
pub const XED_ICLASS_BLENDPD: xed_iclass_enum_t = 50;
pub const XED_ICLASS_BLENDPS: xed_iclass_enum_t = 51;
pub const XED_ICLASS_BLENDVPD: xed_iclass_enum_t = 52;
pub const XED_ICLASS_BLENDVPS: xed_iclass_enum_t = 53;
pub const XED_ICLASS_BLSFILL: xed_iclass_enum_t = 54;
pub const XED_ICLASS_BLSI: xed_iclass_enum_t = 55;
pub const XED_ICLASS_BLSIC: xed_iclass_enum_t = 56;
pub const XED_ICLASS_BLSMSK: xed_iclass_enum_t = 57;
pub const XED_ICLASS_BLSR: xed_iclass_enum_t = 58;
pub const XED_ICLASS_BNDCL: xed_iclass_enum_t = 59;
pub const XED_ICLASS_BNDCN: xed_iclass_enum_t = 60;
pub const XED_ICLASS_BNDCU: xed_iclass_enum_t = 61;
pub const XED_ICLASS_BNDLDX: xed_iclass_enum_t = 62;
pub const XED_ICLASS_BNDMK: xed_iclass_enum_t = 63;
pub const XED_ICLASS_BNDMOV: xed_iclass_enum_t = 64;
pub const XED_ICLASS_BNDSTX: xed_iclass_enum_t = 65;
pub const XED_ICLASS_BOUND: xed_iclass_enum_t = 66;
pub const XED_ICLASS_BSF: xed_iclass_enum_t = 67;
pub const XED_ICLASS_BSR: xed_iclass_enum_t = 68;
pub const XED_ICLASS_BSWAP: xed_iclass_enum_t = 69;
pub const XED_ICLASS_BT: xed_iclass_enum_t = 70;
pub const XED_ICLASS_BTC: xed_iclass_enum_t = 71;
pub const XED_ICLASS_BTC_LOCK: xed_iclass_enum_t = 72;
pub const XED_ICLASS_BTR: xed_iclass_enum_t = 73;
pub const XED_ICLASS_BTR_LOCK: xed_iclass_enum_t = 74;
pub const XED_ICLASS_BTS: xed_iclass_enum_t = 75;
pub const XED_ICLASS_BTS_LOCK: xed_iclass_enum_t = 76;
pub const XED_ICLASS_BZHI: xed_iclass_enum_t = 77;
pub const XED_ICLASS_CALL_FAR: xed_iclass_enum_t = 78;
pub const XED_ICLASS_CALL_NEAR: xed_iclass_enum_t = 79;
pub const XED_ICLASS_CBW: xed_iclass_enum_t = 80;
pub const XED_ICLASS_CCMPB: xed_iclass_enum_t = 81;
pub const XED_ICLASS_CCMPBE: xed_iclass_enum_t = 82;
pub const XED_ICLASS_CCMPF: xed_iclass_enum_t = 83;
pub const XED_ICLASS_CCMPL: xed_iclass_enum_t = 84;
pub const XED_ICLASS_CCMPLE: xed_iclass_enum_t = 85;
pub const XED_ICLASS_CCMPNB: xed_iclass_enum_t = 86;
pub const XED_ICLASS_CCMPNBE: xed_iclass_enum_t = 87;
pub const XED_ICLASS_CCMPNL: xed_iclass_enum_t = 88;
pub const XED_ICLASS_CCMPNLE: xed_iclass_enum_t = 89;
pub const XED_ICLASS_CCMPNO: xed_iclass_enum_t = 90;
pub const XED_ICLASS_CCMPNS: xed_iclass_enum_t = 91;
pub const XED_ICLASS_CCMPNZ: xed_iclass_enum_t = 92;
pub const XED_ICLASS_CCMPO: xed_iclass_enum_t = 93;
pub const XED_ICLASS_CCMPS: xed_iclass_enum_t = 94;
pub const XED_ICLASS_CCMPT: xed_iclass_enum_t = 95;
pub const XED_ICLASS_CCMPZ: xed_iclass_enum_t = 96;
pub const XED_ICLASS_CDQ: xed_iclass_enum_t = 97;
pub const XED_ICLASS_CDQE: xed_iclass_enum_t = 98;
pub const XED_ICLASS_CFCMOVB: xed_iclass_enum_t = 99;
pub const XED_ICLASS_CFCMOVBE: xed_iclass_enum_t = 100;
pub const XED_ICLASS_CFCMOVL: xed_iclass_enum_t = 101;
pub const XED_ICLASS_CFCMOVLE: xed_iclass_enum_t = 102;
pub const XED_ICLASS_CFCMOVNB: xed_iclass_enum_t = 103;
pub const XED_ICLASS_CFCMOVNBE: xed_iclass_enum_t = 104;
pub const XED_ICLASS_CFCMOVNL: xed_iclass_enum_t = 105;
pub const XED_ICLASS_CFCMOVNLE: xed_iclass_enum_t = 106;
pub const XED_ICLASS_CFCMOVNO: xed_iclass_enum_t = 107;
pub const XED_ICLASS_CFCMOVNP: xed_iclass_enum_t = 108;
pub const XED_ICLASS_CFCMOVNS: xed_iclass_enum_t = 109;
pub const XED_ICLASS_CFCMOVNZ: xed_iclass_enum_t = 110;
pub const XED_ICLASS_CFCMOVO: xed_iclass_enum_t = 111;
pub const XED_ICLASS_CFCMOVP: xed_iclass_enum_t = 112;
pub const XED_ICLASS_CFCMOVS: xed_iclass_enum_t = 113;
pub const XED_ICLASS_CFCMOVZ: xed_iclass_enum_t = 114;
pub const XED_ICLASS_CLAC: xed_iclass_enum_t = 115;
pub const XED_ICLASS_CLC: xed_iclass_enum_t = 116;
pub const XED_ICLASS_CLD: xed_iclass_enum_t = 117;
pub const XED_ICLASS_CLDEMOTE: xed_iclass_enum_t = 118;
pub const XED_ICLASS_CLFLUSH: xed_iclass_enum_t = 119;
pub const XED_ICLASS_CLFLUSHOPT: xed_iclass_enum_t = 120;
pub const XED_ICLASS_CLGI: xed_iclass_enum_t = 121;
pub const XED_ICLASS_CLI: xed_iclass_enum_t = 122;
pub const XED_ICLASS_CLRSSBSY: xed_iclass_enum_t = 123;
pub const XED_ICLASS_CLTS: xed_iclass_enum_t = 124;
pub const XED_ICLASS_CLUI: xed_iclass_enum_t = 125;
pub const XED_ICLASS_CLWB: xed_iclass_enum_t = 126;
pub const XED_ICLASS_CLZERO: xed_iclass_enum_t = 127;
pub const XED_ICLASS_CMC: xed_iclass_enum_t = 128;
pub const XED_ICLASS_CMOVB: xed_iclass_enum_t = 129;
pub const XED_ICLASS_CMOVBE: xed_iclass_enum_t = 130;
pub const XED_ICLASS_CMOVL: xed_iclass_enum_t = 131;
pub const XED_ICLASS_CMOVLE: xed_iclass_enum_t = 132;
pub const XED_ICLASS_CMOVNB: xed_iclass_enum_t = 133;
pub const XED_ICLASS_CMOVNBE: xed_iclass_enum_t = 134;
pub const XED_ICLASS_CMOVNL: xed_iclass_enum_t = 135;
pub const XED_ICLASS_CMOVNLE: xed_iclass_enum_t = 136;
pub const XED_ICLASS_CMOVNO: xed_iclass_enum_t = 137;
pub const XED_ICLASS_CMOVNP: xed_iclass_enum_t = 138;
pub const XED_ICLASS_CMOVNS: xed_iclass_enum_t = 139;
pub const XED_ICLASS_CMOVNZ: xed_iclass_enum_t = 140;
pub const XED_ICLASS_CMOVO: xed_iclass_enum_t = 141;
pub const XED_ICLASS_CMOVP: xed_iclass_enum_t = 142;
pub const XED_ICLASS_CMOVS: xed_iclass_enum_t = 143;
pub const XED_ICLASS_CMOVZ: xed_iclass_enum_t = 144;
pub const XED_ICLASS_CMP: xed_iclass_enum_t = 145;
pub const XED_ICLASS_CMPBEXADD: xed_iclass_enum_t = 146;
pub const XED_ICLASS_CMPBXADD: xed_iclass_enum_t = 147;
pub const XED_ICLASS_CMPLEXADD: xed_iclass_enum_t = 148;
pub const XED_ICLASS_CMPLXADD: xed_iclass_enum_t = 149;
pub const XED_ICLASS_CMPNBEXADD: xed_iclass_enum_t = 150;
pub const XED_ICLASS_CMPNBXADD: xed_iclass_enum_t = 151;
pub const XED_ICLASS_CMPNLEXADD: xed_iclass_enum_t = 152;
pub const XED_ICLASS_CMPNLXADD: xed_iclass_enum_t = 153;
pub const XED_ICLASS_CMPNOXADD: xed_iclass_enum_t = 154;
pub const XED_ICLASS_CMPNPXADD: xed_iclass_enum_t = 155;
pub const XED_ICLASS_CMPNSXADD: xed_iclass_enum_t = 156;
pub const XED_ICLASS_CMPNZXADD: xed_iclass_enum_t = 157;
pub const XED_ICLASS_CMPOXADD: xed_iclass_enum_t = 158;
pub const XED_ICLASS_CMPPD: xed_iclass_enum_t = 159;
pub const XED_ICLASS_CMPPS: xed_iclass_enum_t = 160;
pub const XED_ICLASS_CMPPXADD: xed_iclass_enum_t = 161;
pub const XED_ICLASS_CMPSB: xed_iclass_enum_t = 162;
pub const XED_ICLASS_CMPSD: xed_iclass_enum_t = 163;
pub const XED_ICLASS_CMPSD_XMM: xed_iclass_enum_t = 164;
pub const XED_ICLASS_CMPSQ: xed_iclass_enum_t = 165;
pub const XED_ICLASS_CMPSS: xed_iclass_enum_t = 166;
pub const XED_ICLASS_CMPSW: xed_iclass_enum_t = 167;
pub const XED_ICLASS_CMPSXADD: xed_iclass_enum_t = 168;
pub const XED_ICLASS_CMPXCHG: xed_iclass_enum_t = 169;
pub const XED_ICLASS_CMPXCHG16B: xed_iclass_enum_t = 170;
pub const XED_ICLASS_CMPXCHG16B_LOCK: xed_iclass_enum_t = 171;
pub const XED_ICLASS_CMPXCHG8B: xed_iclass_enum_t = 172;
pub const XED_ICLASS_CMPXCHG8B_LOCK: xed_iclass_enum_t = 173;
pub const XED_ICLASS_CMPXCHG_LOCK: xed_iclass_enum_t = 174;
pub const XED_ICLASS_CMPZXADD: xed_iclass_enum_t = 175;
pub const XED_ICLASS_COMISD: xed_iclass_enum_t = 176;
pub const XED_ICLASS_COMISS: xed_iclass_enum_t = 177;
pub const XED_ICLASS_CPUID: xed_iclass_enum_t = 178;
pub const XED_ICLASS_CQO: xed_iclass_enum_t = 179;
pub const XED_ICLASS_CRC32: xed_iclass_enum_t = 180;
pub const XED_ICLASS_CTESTB: xed_iclass_enum_t = 181;
pub const XED_ICLASS_CTESTBE: xed_iclass_enum_t = 182;
pub const XED_ICLASS_CTESTF: xed_iclass_enum_t = 183;
pub const XED_ICLASS_CTESTL: xed_iclass_enum_t = 184;
pub const XED_ICLASS_CTESTLE: xed_iclass_enum_t = 185;
pub const XED_ICLASS_CTESTNB: xed_iclass_enum_t = 186;
pub const XED_ICLASS_CTESTNBE: xed_iclass_enum_t = 187;
pub const XED_ICLASS_CTESTNL: xed_iclass_enum_t = 188;
pub const XED_ICLASS_CTESTNLE: xed_iclass_enum_t = 189;
pub const XED_ICLASS_CTESTNO: xed_iclass_enum_t = 190;
pub const XED_ICLASS_CTESTNS: xed_iclass_enum_t = 191;
pub const XED_ICLASS_CTESTNZ: xed_iclass_enum_t = 192;
pub const XED_ICLASS_CTESTO: xed_iclass_enum_t = 193;
pub const XED_ICLASS_CTESTS: xed_iclass_enum_t = 194;
pub const XED_ICLASS_CTESTT: xed_iclass_enum_t = 195;
pub const XED_ICLASS_CTESTZ: xed_iclass_enum_t = 196;
pub const XED_ICLASS_CVTDQ2PD: xed_iclass_enum_t = 197;
pub const XED_ICLASS_CVTDQ2PS: xed_iclass_enum_t = 198;
pub const XED_ICLASS_CVTPD2DQ: xed_iclass_enum_t = 199;
pub const XED_ICLASS_CVTPD2PI: xed_iclass_enum_t = 200;
pub const XED_ICLASS_CVTPD2PS: xed_iclass_enum_t = 201;
pub const XED_ICLASS_CVTPI2PD: xed_iclass_enum_t = 202;
pub const XED_ICLASS_CVTPI2PS: xed_iclass_enum_t = 203;
pub const XED_ICLASS_CVTPS2DQ: xed_iclass_enum_t = 204;
pub const XED_ICLASS_CVTPS2PD: xed_iclass_enum_t = 205;
pub const XED_ICLASS_CVTPS2PI: xed_iclass_enum_t = 206;
pub const XED_ICLASS_CVTSD2SI: xed_iclass_enum_t = 207;
pub const XED_ICLASS_CVTSD2SS: xed_iclass_enum_t = 208;
pub const XED_ICLASS_CVTSI2SD: xed_iclass_enum_t = 209;
pub const XED_ICLASS_CVTSI2SS: xed_iclass_enum_t = 210;
pub const XED_ICLASS_CVTSS2SD: xed_iclass_enum_t = 211;
pub const XED_ICLASS_CVTSS2SI: xed_iclass_enum_t = 212;
pub const XED_ICLASS_CVTTPD2DQ: xed_iclass_enum_t = 213;
pub const XED_ICLASS_CVTTPD2PI: xed_iclass_enum_t = 214;
pub const XED_ICLASS_CVTTPS2DQ: xed_iclass_enum_t = 215;
pub const XED_ICLASS_CVTTPS2PI: xed_iclass_enum_t = 216;
pub const XED_ICLASS_CVTTSD2SI: xed_iclass_enum_t = 217;
pub const XED_ICLASS_CVTTSS2SI: xed_iclass_enum_t = 218;
pub const XED_ICLASS_CWD: xed_iclass_enum_t = 219;
pub const XED_ICLASS_CWDE: xed_iclass_enum_t = 220;
pub const XED_ICLASS_DAA: xed_iclass_enum_t = 221;
pub const XED_ICLASS_DAS: xed_iclass_enum_t = 222;
pub const XED_ICLASS_DEC: xed_iclass_enum_t = 223;
pub const XED_ICLASS_DEC_LOCK: xed_iclass_enum_t = 224;
pub const XED_ICLASS_DIV: xed_iclass_enum_t = 225;
pub const XED_ICLASS_DIVPD: xed_iclass_enum_t = 226;
pub const XED_ICLASS_DIVPS: xed_iclass_enum_t = 227;
pub const XED_ICLASS_DIVSD: xed_iclass_enum_t = 228;
pub const XED_ICLASS_DIVSS: xed_iclass_enum_t = 229;
pub const XED_ICLASS_DPPD: xed_iclass_enum_t = 230;
pub const XED_ICLASS_DPPS: xed_iclass_enum_t = 231;
pub const XED_ICLASS_EMMS: xed_iclass_enum_t = 232;
pub const XED_ICLASS_ENCLS: xed_iclass_enum_t = 233;
pub const XED_ICLASS_ENCLU: xed_iclass_enum_t = 234;
pub const XED_ICLASS_ENCLV: xed_iclass_enum_t = 235;
pub const XED_ICLASS_ENCODEKEY128: xed_iclass_enum_t = 236;
pub const XED_ICLASS_ENCODEKEY256: xed_iclass_enum_t = 237;
pub const XED_ICLASS_ENDBR32: xed_iclass_enum_t = 238;
pub const XED_ICLASS_ENDBR64: xed_iclass_enum_t = 239;
pub const XED_ICLASS_ENQCMD: xed_iclass_enum_t = 240;
pub const XED_ICLASS_ENQCMDS: xed_iclass_enum_t = 241;
pub const XED_ICLASS_ENTER: xed_iclass_enum_t = 242;
pub const XED_ICLASS_ERETS: xed_iclass_enum_t = 243;
pub const XED_ICLASS_ERETU: xed_iclass_enum_t = 244;
pub const XED_ICLASS_EXTRACTPS: xed_iclass_enum_t = 245;
pub const XED_ICLASS_EXTRQ: xed_iclass_enum_t = 246;
pub const XED_ICLASS_F2XM1: xed_iclass_enum_t = 247;
pub const XED_ICLASS_FABS: xed_iclass_enum_t = 248;
pub const XED_ICLASS_FADD: xed_iclass_enum_t = 249;
pub const XED_ICLASS_FADDP: xed_iclass_enum_t = 250;
pub const XED_ICLASS_FBLD: xed_iclass_enum_t = 251;
pub const XED_ICLASS_FBSTP: xed_iclass_enum_t = 252;
pub const XED_ICLASS_FCHS: xed_iclass_enum_t = 253;
pub const XED_ICLASS_FCMOVB: xed_iclass_enum_t = 254;
pub const XED_ICLASS_FCMOVBE: xed_iclass_enum_t = 255;
pub const XED_ICLASS_FCMOVE: xed_iclass_enum_t = 256;
pub const XED_ICLASS_FCMOVNB: xed_iclass_enum_t = 257;
pub const XED_ICLASS_FCMOVNBE: xed_iclass_enum_t = 258;
pub const XED_ICLASS_FCMOVNE: xed_iclass_enum_t = 259;
pub const XED_ICLASS_FCMOVNU: xed_iclass_enum_t = 260;
pub const XED_ICLASS_FCMOVU: xed_iclass_enum_t = 261;
pub const XED_ICLASS_FCOM: xed_iclass_enum_t = 262;
pub const XED_ICLASS_FCOMI: xed_iclass_enum_t = 263;
pub const XED_ICLASS_FCOMIP: xed_iclass_enum_t = 264;
pub const XED_ICLASS_FCOMP: xed_iclass_enum_t = 265;
pub const XED_ICLASS_FCOMPP: xed_iclass_enum_t = 266;
pub const XED_ICLASS_FCOS: xed_iclass_enum_t = 267;
pub const XED_ICLASS_FDECSTP: xed_iclass_enum_t = 268;
pub const XED_ICLASS_FDISI8087_NOP: xed_iclass_enum_t = 269;
pub const XED_ICLASS_FDIV: xed_iclass_enum_t = 270;
pub const XED_ICLASS_FDIVP: xed_iclass_enum_t = 271;
pub const XED_ICLASS_FDIVR: xed_iclass_enum_t = 272;
pub const XED_ICLASS_FDIVRP: xed_iclass_enum_t = 273;
pub const XED_ICLASS_FEMMS: xed_iclass_enum_t = 274;
pub const XED_ICLASS_FENI8087_NOP: xed_iclass_enum_t = 275;
pub const XED_ICLASS_FFREE: xed_iclass_enum_t = 276;
pub const XED_ICLASS_FFREEP: xed_iclass_enum_t = 277;
pub const XED_ICLASS_FIADD: xed_iclass_enum_t = 278;
pub const XED_ICLASS_FICOM: xed_iclass_enum_t = 279;
pub const XED_ICLASS_FICOMP: xed_iclass_enum_t = 280;
pub const XED_ICLASS_FIDIV: xed_iclass_enum_t = 281;
pub const XED_ICLASS_FIDIVR: xed_iclass_enum_t = 282;
pub const XED_ICLASS_FILD: xed_iclass_enum_t = 283;
pub const XED_ICLASS_FIMUL: xed_iclass_enum_t = 284;
pub const XED_ICLASS_FINCSTP: xed_iclass_enum_t = 285;
pub const XED_ICLASS_FIST: xed_iclass_enum_t = 286;
pub const XED_ICLASS_FISTP: xed_iclass_enum_t = 287;
pub const XED_ICLASS_FISTTP: xed_iclass_enum_t = 288;
pub const XED_ICLASS_FISUB: xed_iclass_enum_t = 289;
pub const XED_ICLASS_FISUBR: xed_iclass_enum_t = 290;
pub const XED_ICLASS_FLD: xed_iclass_enum_t = 291;
pub const XED_ICLASS_FLD1: xed_iclass_enum_t = 292;
pub const XED_ICLASS_FLDCW: xed_iclass_enum_t = 293;
pub const XED_ICLASS_FLDENV: xed_iclass_enum_t = 294;
pub const XED_ICLASS_FLDL2E: xed_iclass_enum_t = 295;
pub const XED_ICLASS_FLDL2T: xed_iclass_enum_t = 296;
pub const XED_ICLASS_FLDLG2: xed_iclass_enum_t = 297;
pub const XED_ICLASS_FLDLN2: xed_iclass_enum_t = 298;
pub const XED_ICLASS_FLDPI: xed_iclass_enum_t = 299;
pub const XED_ICLASS_FLDZ: xed_iclass_enum_t = 300;
pub const XED_ICLASS_FMUL: xed_iclass_enum_t = 301;
pub const XED_ICLASS_FMULP: xed_iclass_enum_t = 302;
pub const XED_ICLASS_FNCLEX: xed_iclass_enum_t = 303;
pub const XED_ICLASS_FNINIT: xed_iclass_enum_t = 304;
pub const XED_ICLASS_FNOP: xed_iclass_enum_t = 305;
pub const XED_ICLASS_FNSAVE: xed_iclass_enum_t = 306;
pub const XED_ICLASS_FNSTCW: xed_iclass_enum_t = 307;
pub const XED_ICLASS_FNSTENV: xed_iclass_enum_t = 308;
pub const XED_ICLASS_FNSTSW: xed_iclass_enum_t = 309;
pub const XED_ICLASS_FPATAN: xed_iclass_enum_t = 310;
pub const XED_ICLASS_FPREM: xed_iclass_enum_t = 311;
pub const XED_ICLASS_FPREM1: xed_iclass_enum_t = 312;
pub const XED_ICLASS_FPTAN: xed_iclass_enum_t = 313;
pub const XED_ICLASS_FRNDINT: xed_iclass_enum_t = 314;
pub const XED_ICLASS_FRSTOR: xed_iclass_enum_t = 315;
pub const XED_ICLASS_FSCALE: xed_iclass_enum_t = 316;
pub const XED_ICLASS_FSETPM287_NOP: xed_iclass_enum_t = 317;
pub const XED_ICLASS_FSIN: xed_iclass_enum_t = 318;
pub const XED_ICLASS_FSINCOS: xed_iclass_enum_t = 319;
pub const XED_ICLASS_FSQRT: xed_iclass_enum_t = 320;
pub const XED_ICLASS_FST: xed_iclass_enum_t = 321;
pub const XED_ICLASS_FSTP: xed_iclass_enum_t = 322;
pub const XED_ICLASS_FSTPNCE: xed_iclass_enum_t = 323;
pub const XED_ICLASS_FSUB: xed_iclass_enum_t = 324;
pub const XED_ICLASS_FSUBP: xed_iclass_enum_t = 325;
pub const XED_ICLASS_FSUBR: xed_iclass_enum_t = 326;
pub const XED_ICLASS_FSUBRP: xed_iclass_enum_t = 327;
pub const XED_ICLASS_FTST: xed_iclass_enum_t = 328;
pub const XED_ICLASS_FUCOM: xed_iclass_enum_t = 329;
pub const XED_ICLASS_FUCOMI: xed_iclass_enum_t = 330;
pub const XED_ICLASS_FUCOMIP: xed_iclass_enum_t = 331;
pub const XED_ICLASS_FUCOMP: xed_iclass_enum_t = 332;
pub const XED_ICLASS_FUCOMPP: xed_iclass_enum_t = 333;
pub const XED_ICLASS_FWAIT: xed_iclass_enum_t = 334;
pub const XED_ICLASS_FXAM: xed_iclass_enum_t = 335;
pub const XED_ICLASS_FXCH: xed_iclass_enum_t = 336;
pub const XED_ICLASS_FXRSTOR: xed_iclass_enum_t = 337;
pub const XED_ICLASS_FXRSTOR64: xed_iclass_enum_t = 338;
pub const XED_ICLASS_FXSAVE: xed_iclass_enum_t = 339;
pub const XED_ICLASS_FXSAVE64: xed_iclass_enum_t = 340;
pub const XED_ICLASS_FXTRACT: xed_iclass_enum_t = 341;
pub const XED_ICLASS_FYL2X: xed_iclass_enum_t = 342;
pub const XED_ICLASS_FYL2XP1: xed_iclass_enum_t = 343;
pub const XED_ICLASS_GETSEC: xed_iclass_enum_t = 344;
pub const XED_ICLASS_GF2P8AFFINEINVQB: xed_iclass_enum_t = 345;
pub const XED_ICLASS_GF2P8AFFINEQB: xed_iclass_enum_t = 346;
pub const XED_ICLASS_GF2P8MULB: xed_iclass_enum_t = 347;
pub const XED_ICLASS_HADDPD: xed_iclass_enum_t = 348;
pub const XED_ICLASS_HADDPS: xed_iclass_enum_t = 349;
pub const XED_ICLASS_HLT: xed_iclass_enum_t = 350;
pub const XED_ICLASS_HRESET: xed_iclass_enum_t = 351;
pub const XED_ICLASS_HSUBPD: xed_iclass_enum_t = 352;
pub const XED_ICLASS_HSUBPS: xed_iclass_enum_t = 353;
pub const XED_ICLASS_IDIV: xed_iclass_enum_t = 354;
pub const XED_ICLASS_IMUL: xed_iclass_enum_t = 355;
pub const XED_ICLASS_IN: xed_iclass_enum_t = 356;
pub const XED_ICLASS_INC: xed_iclass_enum_t = 357;
pub const XED_ICLASS_INCSSPD: xed_iclass_enum_t = 358;
pub const XED_ICLASS_INCSSPQ: xed_iclass_enum_t = 359;
pub const XED_ICLASS_INC_LOCK: xed_iclass_enum_t = 360;
pub const XED_ICLASS_INSB: xed_iclass_enum_t = 361;
pub const XED_ICLASS_INSD: xed_iclass_enum_t = 362;
pub const XED_ICLASS_INSERTPS: xed_iclass_enum_t = 363;
pub const XED_ICLASS_INSERTQ: xed_iclass_enum_t = 364;
pub const XED_ICLASS_INSW: xed_iclass_enum_t = 365;
pub const XED_ICLASS_INT: xed_iclass_enum_t = 366;
pub const XED_ICLASS_INT1: xed_iclass_enum_t = 367;
pub const XED_ICLASS_INT3: xed_iclass_enum_t = 368;
pub const XED_ICLASS_INTO: xed_iclass_enum_t = 369;
pub const XED_ICLASS_INVD: xed_iclass_enum_t = 370;
pub const XED_ICLASS_INVEPT: xed_iclass_enum_t = 371;
pub const XED_ICLASS_INVLPG: xed_iclass_enum_t = 372;
pub const XED_ICLASS_INVLPGA: xed_iclass_enum_t = 373;
pub const XED_ICLASS_INVLPGB: xed_iclass_enum_t = 374;
pub const XED_ICLASS_INVPCID: xed_iclass_enum_t = 375;
pub const XED_ICLASS_INVVPID: xed_iclass_enum_t = 376;
pub const XED_ICLASS_IRET: xed_iclass_enum_t = 377;
pub const XED_ICLASS_IRETD: xed_iclass_enum_t = 378;
pub const XED_ICLASS_IRETQ: xed_iclass_enum_t = 379;
pub const XED_ICLASS_JB: xed_iclass_enum_t = 380;
pub const XED_ICLASS_JBE: xed_iclass_enum_t = 381;
pub const XED_ICLASS_JCXZ: xed_iclass_enum_t = 382;
pub const XED_ICLASS_JECXZ: xed_iclass_enum_t = 383;
pub const XED_ICLASS_JL: xed_iclass_enum_t = 384;
pub const XED_ICLASS_JLE: xed_iclass_enum_t = 385;
pub const XED_ICLASS_JMP: xed_iclass_enum_t = 386;
pub const XED_ICLASS_JMPABS: xed_iclass_enum_t = 387;
pub const XED_ICLASS_JMP_FAR: xed_iclass_enum_t = 388;
pub const XED_ICLASS_JNB: xed_iclass_enum_t = 389;
pub const XED_ICLASS_JNBE: xed_iclass_enum_t = 390;
pub const XED_ICLASS_JNL: xed_iclass_enum_t = 391;
pub const XED_ICLASS_JNLE: xed_iclass_enum_t = 392;
pub const XED_ICLASS_JNO: xed_iclass_enum_t = 393;
pub const XED_ICLASS_JNP: xed_iclass_enum_t = 394;
pub const XED_ICLASS_JNS: xed_iclass_enum_t = 395;
pub const XED_ICLASS_JNZ: xed_iclass_enum_t = 396;
pub const XED_ICLASS_JO: xed_iclass_enum_t = 397;
pub const XED_ICLASS_JP: xed_iclass_enum_t = 398;
pub const XED_ICLASS_JRCXZ: xed_iclass_enum_t = 399;
pub const XED_ICLASS_JS: xed_iclass_enum_t = 400;
pub const XED_ICLASS_JZ: xed_iclass_enum_t = 401;
pub const XED_ICLASS_KADDB: xed_iclass_enum_t = 402;
pub const XED_ICLASS_KADDD: xed_iclass_enum_t = 403;
pub const XED_ICLASS_KADDQ: xed_iclass_enum_t = 404;
pub const XED_ICLASS_KADDW: xed_iclass_enum_t = 405;
pub const XED_ICLASS_KANDB: xed_iclass_enum_t = 406;
pub const XED_ICLASS_KANDD: xed_iclass_enum_t = 407;
pub const XED_ICLASS_KANDNB: xed_iclass_enum_t = 408;
pub const XED_ICLASS_KANDND: xed_iclass_enum_t = 409;
pub const XED_ICLASS_KANDNQ: xed_iclass_enum_t = 410;
pub const XED_ICLASS_KANDNW: xed_iclass_enum_t = 411;
pub const XED_ICLASS_KANDQ: xed_iclass_enum_t = 412;
pub const XED_ICLASS_KANDW: xed_iclass_enum_t = 413;
pub const XED_ICLASS_KMOVB: xed_iclass_enum_t = 414;
pub const XED_ICLASS_KMOVD: xed_iclass_enum_t = 415;
pub const XED_ICLASS_KMOVQ: xed_iclass_enum_t = 416;
pub const XED_ICLASS_KMOVW: xed_iclass_enum_t = 417;
pub const XED_ICLASS_KNOTB: xed_iclass_enum_t = 418;
pub const XED_ICLASS_KNOTD: xed_iclass_enum_t = 419;
pub const XED_ICLASS_KNOTQ: xed_iclass_enum_t = 420;
pub const XED_ICLASS_KNOTW: xed_iclass_enum_t = 421;
pub const XED_ICLASS_KORB: xed_iclass_enum_t = 422;
pub const XED_ICLASS_KORD: xed_iclass_enum_t = 423;
pub const XED_ICLASS_KORQ: xed_iclass_enum_t = 424;
pub const XED_ICLASS_KORTESTB: xed_iclass_enum_t = 425;
pub const XED_ICLASS_KORTESTD: xed_iclass_enum_t = 426;
pub const XED_ICLASS_KORTESTQ: xed_iclass_enum_t = 427;
pub const XED_ICLASS_KORTESTW: xed_iclass_enum_t = 428;
pub const XED_ICLASS_KORW: xed_iclass_enum_t = 429;
pub const XED_ICLASS_KSHIFTLB: xed_iclass_enum_t = 430;
pub const XED_ICLASS_KSHIFTLD: xed_iclass_enum_t = 431;
pub const XED_ICLASS_KSHIFTLQ: xed_iclass_enum_t = 432;
pub const XED_ICLASS_KSHIFTLW: xed_iclass_enum_t = 433;
pub const XED_ICLASS_KSHIFTRB: xed_iclass_enum_t = 434;
pub const XED_ICLASS_KSHIFTRD: xed_iclass_enum_t = 435;
pub const XED_ICLASS_KSHIFTRQ: xed_iclass_enum_t = 436;
pub const XED_ICLASS_KSHIFTRW: xed_iclass_enum_t = 437;
pub const XED_ICLASS_KTESTB: xed_iclass_enum_t = 438;
pub const XED_ICLASS_KTESTD: xed_iclass_enum_t = 439;
pub const XED_ICLASS_KTESTQ: xed_iclass_enum_t = 440;
pub const XED_ICLASS_KTESTW: xed_iclass_enum_t = 441;
pub const XED_ICLASS_KUNPCKBW: xed_iclass_enum_t = 442;
pub const XED_ICLASS_KUNPCKDQ: xed_iclass_enum_t = 443;
pub const XED_ICLASS_KUNPCKWD: xed_iclass_enum_t = 444;
pub const XED_ICLASS_KXNORB: xed_iclass_enum_t = 445;
pub const XED_ICLASS_KXNORD: xed_iclass_enum_t = 446;
pub const XED_ICLASS_KXNORQ: xed_iclass_enum_t = 447;
pub const XED_ICLASS_KXNORW: xed_iclass_enum_t = 448;
pub const XED_ICLASS_KXORB: xed_iclass_enum_t = 449;
pub const XED_ICLASS_KXORD: xed_iclass_enum_t = 450;
pub const XED_ICLASS_KXORQ: xed_iclass_enum_t = 451;
pub const XED_ICLASS_KXORW: xed_iclass_enum_t = 452;
pub const XED_ICLASS_LAHF: xed_iclass_enum_t = 453;
pub const XED_ICLASS_LAR: xed_iclass_enum_t = 454;
pub const XED_ICLASS_LDDQU: xed_iclass_enum_t = 455;
pub const XED_ICLASS_LDMXCSR: xed_iclass_enum_t = 456;
pub const XED_ICLASS_LDS: xed_iclass_enum_t = 457;
pub const XED_ICLASS_LDTILECFG: xed_iclass_enum_t = 458;
pub const XED_ICLASS_LEA: xed_iclass_enum_t = 459;
pub const XED_ICLASS_LEAVE: xed_iclass_enum_t = 460;
pub const XED_ICLASS_LES: xed_iclass_enum_t = 461;
pub const XED_ICLASS_LFENCE: xed_iclass_enum_t = 462;
pub const XED_ICLASS_LFS: xed_iclass_enum_t = 463;
pub const XED_ICLASS_LGDT: xed_iclass_enum_t = 464;
pub const XED_ICLASS_LGS: xed_iclass_enum_t = 465;
pub const XED_ICLASS_LIDT: xed_iclass_enum_t = 466;
pub const XED_ICLASS_LKGS: xed_iclass_enum_t = 467;
pub const XED_ICLASS_LLDT: xed_iclass_enum_t = 468;
pub const XED_ICLASS_LLWPCB: xed_iclass_enum_t = 469;
pub const XED_ICLASS_LMSW: xed_iclass_enum_t = 470;
pub const XED_ICLASS_LOADIWKEY: xed_iclass_enum_t = 471;
pub const XED_ICLASS_LODSB: xed_iclass_enum_t = 472;
pub const XED_ICLASS_LODSD: xed_iclass_enum_t = 473;
pub const XED_ICLASS_LODSQ: xed_iclass_enum_t = 474;
pub const XED_ICLASS_LODSW: xed_iclass_enum_t = 475;
pub const XED_ICLASS_LOOP: xed_iclass_enum_t = 476;
pub const XED_ICLASS_LOOPE: xed_iclass_enum_t = 477;
pub const XED_ICLASS_LOOPNE: xed_iclass_enum_t = 478;
pub const XED_ICLASS_LSL: xed_iclass_enum_t = 479;
pub const XED_ICLASS_LSS: xed_iclass_enum_t = 480;
pub const XED_ICLASS_LTR: xed_iclass_enum_t = 481;
pub const XED_ICLASS_LWPINS: xed_iclass_enum_t = 482;
pub const XED_ICLASS_LWPVAL: xed_iclass_enum_t = 483;
pub const XED_ICLASS_LZCNT: xed_iclass_enum_t = 484;
pub const XED_ICLASS_MASKMOVDQU: xed_iclass_enum_t = 485;
pub const XED_ICLASS_MASKMOVQ: xed_iclass_enum_t = 486;
pub const XED_ICLASS_MAXPD: xed_iclass_enum_t = 487;
pub const XED_ICLASS_MAXPS: xed_iclass_enum_t = 488;
pub const XED_ICLASS_MAXSD: xed_iclass_enum_t = 489;
pub const XED_ICLASS_MAXSS: xed_iclass_enum_t = 490;
pub const XED_ICLASS_MCOMMIT: xed_iclass_enum_t = 491;
pub const XED_ICLASS_MFENCE: xed_iclass_enum_t = 492;
pub const XED_ICLASS_MINPD: xed_iclass_enum_t = 493;
pub const XED_ICLASS_MINPS: xed_iclass_enum_t = 494;
pub const XED_ICLASS_MINSD: xed_iclass_enum_t = 495;
pub const XED_ICLASS_MINSS: xed_iclass_enum_t = 496;
pub const XED_ICLASS_MONITOR: xed_iclass_enum_t = 497;
pub const XED_ICLASS_MONITORX: xed_iclass_enum_t = 498;
pub const XED_ICLASS_MOV: xed_iclass_enum_t = 499;
pub const XED_ICLASS_MOVAPD: xed_iclass_enum_t = 500;
pub const XED_ICLASS_MOVAPS: xed_iclass_enum_t = 501;
pub const XED_ICLASS_MOVBE: xed_iclass_enum_t = 502;
pub const XED_ICLASS_MOVD: xed_iclass_enum_t = 503;
pub const XED_ICLASS_MOVDDUP: xed_iclass_enum_t = 504;
pub const XED_ICLASS_MOVDIR64B: xed_iclass_enum_t = 505;
pub const XED_ICLASS_MOVDIRI: xed_iclass_enum_t = 506;
pub const XED_ICLASS_MOVDQ2Q: xed_iclass_enum_t = 507;
pub const XED_ICLASS_MOVDQA: xed_iclass_enum_t = 508;
pub const XED_ICLASS_MOVDQU: xed_iclass_enum_t = 509;
pub const XED_ICLASS_MOVHLPS: xed_iclass_enum_t = 510;
pub const XED_ICLASS_MOVHPD: xed_iclass_enum_t = 511;
pub const XED_ICLASS_MOVHPS: xed_iclass_enum_t = 512;
pub const XED_ICLASS_MOVLHPS: xed_iclass_enum_t = 513;
pub const XED_ICLASS_MOVLPD: xed_iclass_enum_t = 514;
pub const XED_ICLASS_MOVLPS: xed_iclass_enum_t = 515;
pub const XED_ICLASS_MOVMSKPD: xed_iclass_enum_t = 516;
pub const XED_ICLASS_MOVMSKPS: xed_iclass_enum_t = 517;
pub const XED_ICLASS_MOVNTDQ: xed_iclass_enum_t = 518;
pub const XED_ICLASS_MOVNTDQA: xed_iclass_enum_t = 519;
pub const XED_ICLASS_MOVNTI: xed_iclass_enum_t = 520;
pub const XED_ICLASS_MOVNTPD: xed_iclass_enum_t = 521;
pub const XED_ICLASS_MOVNTPS: xed_iclass_enum_t = 522;
pub const XED_ICLASS_MOVNTQ: xed_iclass_enum_t = 523;
pub const XED_ICLASS_MOVNTSD: xed_iclass_enum_t = 524;
pub const XED_ICLASS_MOVNTSS: xed_iclass_enum_t = 525;
pub const XED_ICLASS_MOVQ: xed_iclass_enum_t = 526;
pub const XED_ICLASS_MOVQ2DQ: xed_iclass_enum_t = 527;
pub const XED_ICLASS_MOVSB: xed_iclass_enum_t = 528;
pub const XED_ICLASS_MOVSD: xed_iclass_enum_t = 529;
pub const XED_ICLASS_MOVSD_XMM: xed_iclass_enum_t = 530;
pub const XED_ICLASS_MOVSHDUP: xed_iclass_enum_t = 531;
pub const XED_ICLASS_MOVSLDUP: xed_iclass_enum_t = 532;
pub const XED_ICLASS_MOVSQ: xed_iclass_enum_t = 533;
pub const XED_ICLASS_MOVSS: xed_iclass_enum_t = 534;
pub const XED_ICLASS_MOVSW: xed_iclass_enum_t = 535;
pub const XED_ICLASS_MOVSX: xed_iclass_enum_t = 536;
pub const XED_ICLASS_MOVSXD: xed_iclass_enum_t = 537;
pub const XED_ICLASS_MOVUPD: xed_iclass_enum_t = 538;
pub const XED_ICLASS_MOVUPS: xed_iclass_enum_t = 539;
pub const XED_ICLASS_MOVZX: xed_iclass_enum_t = 540;
pub const XED_ICLASS_MOV_CR: xed_iclass_enum_t = 541;
pub const XED_ICLASS_MOV_DR: xed_iclass_enum_t = 542;
pub const XED_ICLASS_MPSADBW: xed_iclass_enum_t = 543;
pub const XED_ICLASS_MUL: xed_iclass_enum_t = 544;
pub const XED_ICLASS_MULPD: xed_iclass_enum_t = 545;
pub const XED_ICLASS_MULPS: xed_iclass_enum_t = 546;
pub const XED_ICLASS_MULSD: xed_iclass_enum_t = 547;
pub const XED_ICLASS_MULSS: xed_iclass_enum_t = 548;
pub const XED_ICLASS_MULX: xed_iclass_enum_t = 549;
pub const XED_ICLASS_MWAIT: xed_iclass_enum_t = 550;
pub const XED_ICLASS_MWAITX: xed_iclass_enum_t = 551;
pub const XED_ICLASS_NEG: xed_iclass_enum_t = 552;
pub const XED_ICLASS_NEG_LOCK: xed_iclass_enum_t = 553;
pub const XED_ICLASS_NOP: xed_iclass_enum_t = 554;
pub const XED_ICLASS_NOP2: xed_iclass_enum_t = 555;
pub const XED_ICLASS_NOP3: xed_iclass_enum_t = 556;
pub const XED_ICLASS_NOP4: xed_iclass_enum_t = 557;
pub const XED_ICLASS_NOP5: xed_iclass_enum_t = 558;
pub const XED_ICLASS_NOP6: xed_iclass_enum_t = 559;
pub const XED_ICLASS_NOP7: xed_iclass_enum_t = 560;
pub const XED_ICLASS_NOP8: xed_iclass_enum_t = 561;
pub const XED_ICLASS_NOP9: xed_iclass_enum_t = 562;
pub const XED_ICLASS_NOT: xed_iclass_enum_t = 563;
pub const XED_ICLASS_NOT_LOCK: xed_iclass_enum_t = 564;
pub const XED_ICLASS_OR: xed_iclass_enum_t = 565;
pub const XED_ICLASS_ORPD: xed_iclass_enum_t = 566;
pub const XED_ICLASS_ORPS: xed_iclass_enum_t = 567;
pub const XED_ICLASS_OR_LOCK: xed_iclass_enum_t = 568;
pub const XED_ICLASS_OUT: xed_iclass_enum_t = 569;
pub const XED_ICLASS_OUTSB: xed_iclass_enum_t = 570;
pub const XED_ICLASS_OUTSD: xed_iclass_enum_t = 571;
pub const XED_ICLASS_OUTSW: xed_iclass_enum_t = 572;
pub const XED_ICLASS_PABSB: xed_iclass_enum_t = 573;
pub const XED_ICLASS_PABSD: xed_iclass_enum_t = 574;
pub const XED_ICLASS_PABSW: xed_iclass_enum_t = 575;
pub const XED_ICLASS_PACKSSDW: xed_iclass_enum_t = 576;
pub const XED_ICLASS_PACKSSWB: xed_iclass_enum_t = 577;
pub const XED_ICLASS_PACKUSDW: xed_iclass_enum_t = 578;
pub const XED_ICLASS_PACKUSWB: xed_iclass_enum_t = 579;
pub const XED_ICLASS_PADDB: xed_iclass_enum_t = 580;
pub const XED_ICLASS_PADDD: xed_iclass_enum_t = 581;
pub const XED_ICLASS_PADDQ: xed_iclass_enum_t = 582;
pub const XED_ICLASS_PADDSB: xed_iclass_enum_t = 583;
pub const XED_ICLASS_PADDSW: xed_iclass_enum_t = 584;
pub const XED_ICLASS_PADDUSB: xed_iclass_enum_t = 585;
pub const XED_ICLASS_PADDUSW: xed_iclass_enum_t = 586;
pub const XED_ICLASS_PADDW: xed_iclass_enum_t = 587;
pub const XED_ICLASS_PALIGNR: xed_iclass_enum_t = 588;
pub const XED_ICLASS_PAND: xed_iclass_enum_t = 589;
pub const XED_ICLASS_PANDN: xed_iclass_enum_t = 590;
pub const XED_ICLASS_PAUSE: xed_iclass_enum_t = 591;
pub const XED_ICLASS_PAVGB: xed_iclass_enum_t = 592;
pub const XED_ICLASS_PAVGUSB: xed_iclass_enum_t = 593;
pub const XED_ICLASS_PAVGW: xed_iclass_enum_t = 594;
pub const XED_ICLASS_PBLENDVB: xed_iclass_enum_t = 595;
pub const XED_ICLASS_PBLENDW: xed_iclass_enum_t = 596;
pub const XED_ICLASS_PBNDKB: xed_iclass_enum_t = 597;
pub const XED_ICLASS_PCLMULQDQ: xed_iclass_enum_t = 598;
pub const XED_ICLASS_PCMPEQB: xed_iclass_enum_t = 599;
pub const XED_ICLASS_PCMPEQD: xed_iclass_enum_t = 600;
pub const XED_ICLASS_PCMPEQQ: xed_iclass_enum_t = 601;
pub const XED_ICLASS_PCMPEQW: xed_iclass_enum_t = 602;
pub const XED_ICLASS_PCMPESTRI: xed_iclass_enum_t = 603;
pub const XED_ICLASS_PCMPESTRI64: xed_iclass_enum_t = 604;
pub const XED_ICLASS_PCMPESTRM: xed_iclass_enum_t = 605;
pub const XED_ICLASS_PCMPESTRM64: xed_iclass_enum_t = 606;
pub const XED_ICLASS_PCMPGTB: xed_iclass_enum_t = 607;
pub const XED_ICLASS_PCMPGTD: xed_iclass_enum_t = 608;
pub const XED_ICLASS_PCMPGTQ: xed_iclass_enum_t = 609;
pub const XED_ICLASS_PCMPGTW: xed_iclass_enum_t = 610;
pub const XED_ICLASS_PCMPISTRI: xed_iclass_enum_t = 611;
pub const XED_ICLASS_PCMPISTRI64: xed_iclass_enum_t = 612;
pub const XED_ICLASS_PCMPISTRM: xed_iclass_enum_t = 613;
pub const XED_ICLASS_PCONFIG: xed_iclass_enum_t = 614;
pub const XED_ICLASS_PDEP: xed_iclass_enum_t = 615;
pub const XED_ICLASS_PEXT: xed_iclass_enum_t = 616;
pub const XED_ICLASS_PEXTRB: xed_iclass_enum_t = 617;
pub const XED_ICLASS_PEXTRD: xed_iclass_enum_t = 618;
pub const XED_ICLASS_PEXTRQ: xed_iclass_enum_t = 619;
pub const XED_ICLASS_PEXTRW: xed_iclass_enum_t = 620;
pub const XED_ICLASS_PEXTRW_SSE4: xed_iclass_enum_t = 621;
pub const XED_ICLASS_PF2ID: xed_iclass_enum_t = 622;
pub const XED_ICLASS_PF2IW: xed_iclass_enum_t = 623;
pub const XED_ICLASS_PFACC: xed_iclass_enum_t = 624;
pub const XED_ICLASS_PFADD: xed_iclass_enum_t = 625;
pub const XED_ICLASS_PFCMPEQ: xed_iclass_enum_t = 626;
pub const XED_ICLASS_PFCMPGE: xed_iclass_enum_t = 627;
pub const XED_ICLASS_PFCMPGT: xed_iclass_enum_t = 628;
pub const XED_ICLASS_PFMAX: xed_iclass_enum_t = 629;
pub const XED_ICLASS_PFMIN: xed_iclass_enum_t = 630;
pub const XED_ICLASS_PFMUL: xed_iclass_enum_t = 631;
pub const XED_ICLASS_PFNACC: xed_iclass_enum_t = 632;
pub const XED_ICLASS_PFPNACC: xed_iclass_enum_t = 633;
pub const XED_ICLASS_PFRCP: xed_iclass_enum_t = 634;
pub const XED_ICLASS_PFRCPIT1: xed_iclass_enum_t = 635;
pub const XED_ICLASS_PFRCPIT2: xed_iclass_enum_t = 636;
pub const XED_ICLASS_PFRSQIT1: xed_iclass_enum_t = 637;
pub const XED_ICLASS_PFRSQRT: xed_iclass_enum_t = 638;
pub const XED_ICLASS_PFSUB: xed_iclass_enum_t = 639;
pub const XED_ICLASS_PFSUBR: xed_iclass_enum_t = 640;
pub const XED_ICLASS_PHADDD: xed_iclass_enum_t = 641;
pub const XED_ICLASS_PHADDSW: xed_iclass_enum_t = 642;
pub const XED_ICLASS_PHADDW: xed_iclass_enum_t = 643;
pub const XED_ICLASS_PHMINPOSUW: xed_iclass_enum_t = 644;
pub const XED_ICLASS_PHSUBD: xed_iclass_enum_t = 645;
pub const XED_ICLASS_PHSUBSW: xed_iclass_enum_t = 646;
pub const XED_ICLASS_PHSUBW: xed_iclass_enum_t = 647;
pub const XED_ICLASS_PI2FD: xed_iclass_enum_t = 648;
pub const XED_ICLASS_PI2FW: xed_iclass_enum_t = 649;
pub const XED_ICLASS_PINSRB: xed_iclass_enum_t = 650;
pub const XED_ICLASS_PINSRD: xed_iclass_enum_t = 651;
pub const XED_ICLASS_PINSRQ: xed_iclass_enum_t = 652;
pub const XED_ICLASS_PINSRW: xed_iclass_enum_t = 653;
pub const XED_ICLASS_PMADDUBSW: xed_iclass_enum_t = 654;
pub const XED_ICLASS_PMADDWD: xed_iclass_enum_t = 655;
pub const XED_ICLASS_PMAXSB: xed_iclass_enum_t = 656;
pub const XED_ICLASS_PMAXSD: xed_iclass_enum_t = 657;
pub const XED_ICLASS_PMAXSW: xed_iclass_enum_t = 658;
pub const XED_ICLASS_PMAXUB: xed_iclass_enum_t = 659;
pub const XED_ICLASS_PMAXUD: xed_iclass_enum_t = 660;
pub const XED_ICLASS_PMAXUW: xed_iclass_enum_t = 661;
pub const XED_ICLASS_PMINSB: xed_iclass_enum_t = 662;
pub const XED_ICLASS_PMINSD: xed_iclass_enum_t = 663;
pub const XED_ICLASS_PMINSW: xed_iclass_enum_t = 664;
pub const XED_ICLASS_PMINUB: xed_iclass_enum_t = 665;
pub const XED_ICLASS_PMINUD: xed_iclass_enum_t = 666;
pub const XED_ICLASS_PMINUW: xed_iclass_enum_t = 667;
pub const XED_ICLASS_PMOVMSKB: xed_iclass_enum_t = 668;
pub const XED_ICLASS_PMOVSXBD: xed_iclass_enum_t = 669;
pub const XED_ICLASS_PMOVSXBQ: xed_iclass_enum_t = 670;
pub const XED_ICLASS_PMOVSXBW: xed_iclass_enum_t = 671;
pub const XED_ICLASS_PMOVSXDQ: xed_iclass_enum_t = 672;
pub const XED_ICLASS_PMOVSXWD: xed_iclass_enum_t = 673;
pub const XED_ICLASS_PMOVSXWQ: xed_iclass_enum_t = 674;
pub const XED_ICLASS_PMOVZXBD: xed_iclass_enum_t = 675;
pub const XED_ICLASS_PMOVZXBQ: xed_iclass_enum_t = 676;
pub const XED_ICLASS_PMOVZXBW: xed_iclass_enum_t = 677;
pub const XED_ICLASS_PMOVZXDQ: xed_iclass_enum_t = 678;
pub const XED_ICLASS_PMOVZXWD: xed_iclass_enum_t = 679;
pub const XED_ICLASS_PMOVZXWQ: xed_iclass_enum_t = 680;
pub const XED_ICLASS_PMULDQ: xed_iclass_enum_t = 681;
pub const XED_ICLASS_PMULHRSW: xed_iclass_enum_t = 682;
pub const XED_ICLASS_PMULHRW: xed_iclass_enum_t = 683;
pub const XED_ICLASS_PMULHUW: xed_iclass_enum_t = 684;
pub const XED_ICLASS_PMULHW: xed_iclass_enum_t = 685;
pub const XED_ICLASS_PMULLD: xed_iclass_enum_t = 686;
pub const XED_ICLASS_PMULLW: xed_iclass_enum_t = 687;
pub const XED_ICLASS_PMULUDQ: xed_iclass_enum_t = 688;
pub const XED_ICLASS_POP: xed_iclass_enum_t = 689;
pub const XED_ICLASS_POP2: xed_iclass_enum_t = 690;
pub const XED_ICLASS_POP2P: xed_iclass_enum_t = 691;
pub const XED_ICLASS_POPA: xed_iclass_enum_t = 692;
pub const XED_ICLASS_POPAD: xed_iclass_enum_t = 693;
pub const XED_ICLASS_POPCNT: xed_iclass_enum_t = 694;
pub const XED_ICLASS_POPF: xed_iclass_enum_t = 695;
pub const XED_ICLASS_POPFD: xed_iclass_enum_t = 696;
pub const XED_ICLASS_POPFQ: xed_iclass_enum_t = 697;
pub const XED_ICLASS_POPP: xed_iclass_enum_t = 698;
pub const XED_ICLASS_POR: xed_iclass_enum_t = 699;
pub const XED_ICLASS_PREFETCHIT0: xed_iclass_enum_t = 700;
pub const XED_ICLASS_PREFETCHIT1: xed_iclass_enum_t = 701;
pub const XED_ICLASS_PREFETCHNTA: xed_iclass_enum_t = 702;
pub const XED_ICLASS_PREFETCHT0: xed_iclass_enum_t = 703;
pub const XED_ICLASS_PREFETCHT1: xed_iclass_enum_t = 704;
pub const XED_ICLASS_PREFETCHT2: xed_iclass_enum_t = 705;
pub const XED_ICLASS_PREFETCHW: xed_iclass_enum_t = 706;
pub const XED_ICLASS_PREFETCHWT1: xed_iclass_enum_t = 707;
pub const XED_ICLASS_PREFETCH_EXCLUSIVE: xed_iclass_enum_t = 708;
pub const XED_ICLASS_PREFETCH_RESERVED: xed_iclass_enum_t = 709;
pub const XED_ICLASS_PSADBW: xed_iclass_enum_t = 710;
pub const XED_ICLASS_PSHUFB: xed_iclass_enum_t = 711;
pub const XED_ICLASS_PSHUFD: xed_iclass_enum_t = 712;
pub const XED_ICLASS_PSHUFHW: xed_iclass_enum_t = 713;
pub const XED_ICLASS_PSHUFLW: xed_iclass_enum_t = 714;
pub const XED_ICLASS_PSHUFW: xed_iclass_enum_t = 715;
pub const XED_ICLASS_PSIGNB: xed_iclass_enum_t = 716;
pub const XED_ICLASS_PSIGND: xed_iclass_enum_t = 717;
pub const XED_ICLASS_PSIGNW: xed_iclass_enum_t = 718;
pub const XED_ICLASS_PSLLD: xed_iclass_enum_t = 719;
pub const XED_ICLASS_PSLLDQ: xed_iclass_enum_t = 720;
pub const XED_ICLASS_PSLLQ: xed_iclass_enum_t = 721;
pub const XED_ICLASS_PSLLW: xed_iclass_enum_t = 722;
pub const XED_ICLASS_PSMASH: xed_iclass_enum_t = 723;
pub const XED_ICLASS_PSRAD: xed_iclass_enum_t = 724;
pub const XED_ICLASS_PSRAW: xed_iclass_enum_t = 725;
pub const XED_ICLASS_PSRLD: xed_iclass_enum_t = 726;
pub const XED_ICLASS_PSRLDQ: xed_iclass_enum_t = 727;
pub const XED_ICLASS_PSRLQ: xed_iclass_enum_t = 728;
pub const XED_ICLASS_PSRLW: xed_iclass_enum_t = 729;
pub const XED_ICLASS_PSUBB: xed_iclass_enum_t = 730;
pub const XED_ICLASS_PSUBD: xed_iclass_enum_t = 731;
pub const XED_ICLASS_PSUBQ: xed_iclass_enum_t = 732;
pub const XED_ICLASS_PSUBSB: xed_iclass_enum_t = 733;
pub const XED_ICLASS_PSUBSW: xed_iclass_enum_t = 734;
pub const XED_ICLASS_PSUBUSB: xed_iclass_enum_t = 735;
pub const XED_ICLASS_PSUBUSW: xed_iclass_enum_t = 736;
pub const XED_ICLASS_PSUBW: xed_iclass_enum_t = 737;
pub const XED_ICLASS_PSWAPD: xed_iclass_enum_t = 738;
pub const XED_ICLASS_PTEST: xed_iclass_enum_t = 739;
pub const XED_ICLASS_PTWRITE: xed_iclass_enum_t = 740;
pub const XED_ICLASS_PUNPCKHBW: xed_iclass_enum_t = 741;
pub const XED_ICLASS_PUNPCKHDQ: xed_iclass_enum_t = 742;
pub const XED_ICLASS_PUNPCKHQDQ: xed_iclass_enum_t = 743;
pub const XED_ICLASS_PUNPCKHWD: xed_iclass_enum_t = 744;
pub const XED_ICLASS_PUNPCKLBW: xed_iclass_enum_t = 745;
pub const XED_ICLASS_PUNPCKLDQ: xed_iclass_enum_t = 746;
pub const XED_ICLASS_PUNPCKLQDQ: xed_iclass_enum_t = 747;
pub const XED_ICLASS_PUNPCKLWD: xed_iclass_enum_t = 748;
pub const XED_ICLASS_PUSH: xed_iclass_enum_t = 749;
pub const XED_ICLASS_PUSH2: xed_iclass_enum_t = 750;
pub const XED_ICLASS_PUSH2P: xed_iclass_enum_t = 751;
pub const XED_ICLASS_PUSHA: xed_iclass_enum_t = 752;
pub const XED_ICLASS_PUSHAD: xed_iclass_enum_t = 753;
pub const XED_ICLASS_PUSHF: xed_iclass_enum_t = 754;
pub const XED_ICLASS_PUSHFD: xed_iclass_enum_t = 755;
pub const XED_ICLASS_PUSHFQ: xed_iclass_enum_t = 756;
pub const XED_ICLASS_PUSHP: xed_iclass_enum_t = 757;
pub const XED_ICLASS_PVALIDATE: xed_iclass_enum_t = 758;
pub const XED_ICLASS_PXOR: xed_iclass_enum_t = 759;
pub const XED_ICLASS_RCL: xed_iclass_enum_t = 760;
pub const XED_ICLASS_RCPPS: xed_iclass_enum_t = 761;
pub const XED_ICLASS_RCPSS: xed_iclass_enum_t = 762;
pub const XED_ICLASS_RCR: xed_iclass_enum_t = 763;
pub const XED_ICLASS_RDFSBASE: xed_iclass_enum_t = 764;
pub const XED_ICLASS_RDGSBASE: xed_iclass_enum_t = 765;
pub const XED_ICLASS_RDMSR: xed_iclass_enum_t = 766;
pub const XED_ICLASS_RDMSRLIST: xed_iclass_enum_t = 767;
pub const XED_ICLASS_RDPID: xed_iclass_enum_t = 768;
pub const XED_ICLASS_RDPKRU: xed_iclass_enum_t = 769;
pub const XED_ICLASS_RDPMC: xed_iclass_enum_t = 770;
pub const XED_ICLASS_RDPRU: xed_iclass_enum_t = 771;
pub const XED_ICLASS_RDRAND: xed_iclass_enum_t = 772;
pub const XED_ICLASS_RDSEED: xed_iclass_enum_t = 773;
pub const XED_ICLASS_RDSSPD: xed_iclass_enum_t = 774;
pub const XED_ICLASS_RDSSPQ: xed_iclass_enum_t = 775;
pub const XED_ICLASS_RDTSC: xed_iclass_enum_t = 776;
pub const XED_ICLASS_RDTSCP: xed_iclass_enum_t = 777;
pub const XED_ICLASS_REPE_CMPSB: xed_iclass_enum_t = 778;
pub const XED_ICLASS_REPE_CMPSD: xed_iclass_enum_t = 779;
pub const XED_ICLASS_REPE_CMPSQ: xed_iclass_enum_t = 780;
pub const XED_ICLASS_REPE_CMPSW: xed_iclass_enum_t = 781;
pub const XED_ICLASS_REPE_SCASB: xed_iclass_enum_t = 782;
pub const XED_ICLASS_REPE_SCASD: xed_iclass_enum_t = 783;
pub const XED_ICLASS_REPE_SCASQ: xed_iclass_enum_t = 784;
pub const XED_ICLASS_REPE_SCASW: xed_iclass_enum_t = 785;
pub const XED_ICLASS_REPNE_CMPSB: xed_iclass_enum_t = 786;
pub const XED_ICLASS_REPNE_CMPSD: xed_iclass_enum_t = 787;
pub const XED_ICLASS_REPNE_CMPSQ: xed_iclass_enum_t = 788;
pub const XED_ICLASS_REPNE_CMPSW: xed_iclass_enum_t = 789;
pub const XED_ICLASS_REPNE_SCASB: xed_iclass_enum_t = 790;
pub const XED_ICLASS_REPNE_SCASD: xed_iclass_enum_t = 791;
pub const XED_ICLASS_REPNE_SCASQ: xed_iclass_enum_t = 792;
pub const XED_ICLASS_REPNE_SCASW: xed_iclass_enum_t = 793;
pub const XED_ICLASS_REP_INSB: xed_iclass_enum_t = 794;
pub const XED_ICLASS_REP_INSD: xed_iclass_enum_t = 795;
pub const XED_ICLASS_REP_INSW: xed_iclass_enum_t = 796;
pub const XED_ICLASS_REP_LODSB: xed_iclass_enum_t = 797;
pub const XED_ICLASS_REP_LODSD: xed_iclass_enum_t = 798;
pub const XED_ICLASS_REP_LODSQ: xed_iclass_enum_t = 799;
pub const XED_ICLASS_REP_LODSW: xed_iclass_enum_t = 800;
pub const XED_ICLASS_REP_MONTMUL: xed_iclass_enum_t = 801;
pub const XED_ICLASS_REP_MOVSB: xed_iclass_enum_t = 802;
pub const XED_ICLASS_REP_MOVSD: xed_iclass_enum_t = 803;
pub const XED_ICLASS_REP_MOVSQ: xed_iclass_enum_t = 804;
pub const XED_ICLASS_REP_MOVSW: xed_iclass_enum_t = 805;
pub const XED_ICLASS_REP_OUTSB: xed_iclass_enum_t = 806;
pub const XED_ICLASS_REP_OUTSD: xed_iclass_enum_t = 807;
pub const XED_ICLASS_REP_OUTSW: xed_iclass_enum_t = 808;
pub const XED_ICLASS_REP_STOSB: xed_iclass_enum_t = 809;
pub const XED_ICLASS_REP_STOSD: xed_iclass_enum_t = 810;
pub const XED_ICLASS_REP_STOSQ: xed_iclass_enum_t = 811;
pub const XED_ICLASS_REP_STOSW: xed_iclass_enum_t = 812;
pub const XED_ICLASS_REP_XCRYPTCBC: xed_iclass_enum_t = 813;
pub const XED_ICLASS_REP_XCRYPTCFB: xed_iclass_enum_t = 814;
pub const XED_ICLASS_REP_XCRYPTCTR: xed_iclass_enum_t = 815;
pub const XED_ICLASS_REP_XCRYPTECB: xed_iclass_enum_t = 816;
pub const XED_ICLASS_REP_XCRYPTOFB: xed_iclass_enum_t = 817;
pub const XED_ICLASS_REP_XSHA1: xed_iclass_enum_t = 818;
pub const XED_ICLASS_REP_XSHA256: xed_iclass_enum_t = 819;
pub const XED_ICLASS_REP_XSTORE: xed_iclass_enum_t = 820;
pub const XED_ICLASS_RET_FAR: xed_iclass_enum_t = 821;
pub const XED_ICLASS_RET_NEAR: xed_iclass_enum_t = 822;
pub const XED_ICLASS_RMPADJUST: xed_iclass_enum_t = 823;
pub const XED_ICLASS_RMPUPDATE: xed_iclass_enum_t = 824;
pub const XED_ICLASS_ROL: xed_iclass_enum_t = 825;
pub const XED_ICLASS_ROR: xed_iclass_enum_t = 826;
pub const XED_ICLASS_RORX: xed_iclass_enum_t = 827;
pub const XED_ICLASS_ROUNDPD: xed_iclass_enum_t = 828;
pub const XED_ICLASS_ROUNDPS: xed_iclass_enum_t = 829;
pub const XED_ICLASS_ROUNDSD: xed_iclass_enum_t = 830;
pub const XED_ICLASS_ROUNDSS: xed_iclass_enum_t = 831;
pub const XED_ICLASS_RSM: xed_iclass_enum_t = 832;
pub const XED_ICLASS_RSQRTPS: xed_iclass_enum_t = 833;
pub const XED_ICLASS_RSQRTSS: xed_iclass_enum_t = 834;
pub const XED_ICLASS_RSTORSSP: xed_iclass_enum_t = 835;
pub const XED_ICLASS_SAHF: xed_iclass_enum_t = 836;
pub const XED_ICLASS_SALC: xed_iclass_enum_t = 837;
pub const XED_ICLASS_SAR: xed_iclass_enum_t = 838;
pub const XED_ICLASS_SARX: xed_iclass_enum_t = 839;
pub const XED_ICLASS_SAVEPREVSSP: xed_iclass_enum_t = 840;
pub const XED_ICLASS_SBB: xed_iclass_enum_t = 841;
pub const XED_ICLASS_SBB_LOCK: xed_iclass_enum_t = 842;
pub const XED_ICLASS_SCASB: xed_iclass_enum_t = 843;
pub const XED_ICLASS_SCASD: xed_iclass_enum_t = 844;
pub const XED_ICLASS_SCASQ: xed_iclass_enum_t = 845;
pub const XED_ICLASS_SCASW: xed_iclass_enum_t = 846;
pub const XED_ICLASS_SEAMCALL: xed_iclass_enum_t = 847;
pub const XED_ICLASS_SEAMOPS: xed_iclass_enum_t = 848;
pub const XED_ICLASS_SEAMRET: xed_iclass_enum_t = 849;
pub const XED_ICLASS_SENDUIPI: xed_iclass_enum_t = 850;
pub const XED_ICLASS_SERIALIZE: xed_iclass_enum_t = 851;
pub const XED_ICLASS_SETB: xed_iclass_enum_t = 852;
pub const XED_ICLASS_SETBE: xed_iclass_enum_t = 853;
pub const XED_ICLASS_SETL: xed_iclass_enum_t = 854;
pub const XED_ICLASS_SETLE: xed_iclass_enum_t = 855;
pub const XED_ICLASS_SETNB: xed_iclass_enum_t = 856;
pub const XED_ICLASS_SETNBE: xed_iclass_enum_t = 857;
pub const XED_ICLASS_SETNL: xed_iclass_enum_t = 858;
pub const XED_ICLASS_SETNLE: xed_iclass_enum_t = 859;
pub const XED_ICLASS_SETNO: xed_iclass_enum_t = 860;
pub const XED_ICLASS_SETNP: xed_iclass_enum_t = 861;
pub const XED_ICLASS_SETNS: xed_iclass_enum_t = 862;
pub const XED_ICLASS_SETNZ: xed_iclass_enum_t = 863;
pub const XED_ICLASS_SETO: xed_iclass_enum_t = 864;
pub const XED_ICLASS_SETP: xed_iclass_enum_t = 865;
pub const XED_ICLASS_SETS: xed_iclass_enum_t = 866;
pub const XED_ICLASS_SETSSBSY: xed_iclass_enum_t = 867;
pub const XED_ICLASS_SETZ: xed_iclass_enum_t = 868;
pub const XED_ICLASS_SFENCE: xed_iclass_enum_t = 869;
pub const XED_ICLASS_SGDT: xed_iclass_enum_t = 870;
pub const XED_ICLASS_SHA1MSG1: xed_iclass_enum_t = 871;
pub const XED_ICLASS_SHA1MSG2: xed_iclass_enum_t = 872;
pub const XED_ICLASS_SHA1NEXTE: xed_iclass_enum_t = 873;
pub const XED_ICLASS_SHA1RNDS4: xed_iclass_enum_t = 874;
pub const XED_ICLASS_SHA256MSG1: xed_iclass_enum_t = 875;
pub const XED_ICLASS_SHA256MSG2: xed_iclass_enum_t = 876;
pub const XED_ICLASS_SHA256RNDS2: xed_iclass_enum_t = 877;
pub const XED_ICLASS_SHL: xed_iclass_enum_t = 878;
pub const XED_ICLASS_SHLD: xed_iclass_enum_t = 879;
pub const XED_ICLASS_SHLX: xed_iclass_enum_t = 880;
pub const XED_ICLASS_SHR: xed_iclass_enum_t = 881;
pub const XED_ICLASS_SHRD: xed_iclass_enum_t = 882;
pub const XED_ICLASS_SHRX: xed_iclass_enum_t = 883;
pub const XED_ICLASS_SHUFPD: xed_iclass_enum_t = 884;
pub const XED_ICLASS_SHUFPS: xed_iclass_enum_t = 885;
pub const XED_ICLASS_SIDT: xed_iclass_enum_t = 886;
pub const XED_ICLASS_SKINIT: xed_iclass_enum_t = 887;
pub const XED_ICLASS_SLDT: xed_iclass_enum_t = 888;
pub const XED_ICLASS_SLWPCB: xed_iclass_enum_t = 889;
pub const XED_ICLASS_SMSW: xed_iclass_enum_t = 890;
pub const XED_ICLASS_SQRTPD: xed_iclass_enum_t = 891;
pub const XED_ICLASS_SQRTPS: xed_iclass_enum_t = 892;
pub const XED_ICLASS_SQRTSD: xed_iclass_enum_t = 893;
pub const XED_ICLASS_SQRTSS: xed_iclass_enum_t = 894;
pub const XED_ICLASS_STAC: xed_iclass_enum_t = 895;
pub const XED_ICLASS_STC: xed_iclass_enum_t = 896;
pub const XED_ICLASS_STD: xed_iclass_enum_t = 897;
pub const XED_ICLASS_STGI: xed_iclass_enum_t = 898;
pub const XED_ICLASS_STI: xed_iclass_enum_t = 899;
pub const XED_ICLASS_STMXCSR: xed_iclass_enum_t = 900;
pub const XED_ICLASS_STOSB: xed_iclass_enum_t = 901;
pub const XED_ICLASS_STOSD: xed_iclass_enum_t = 902;
pub const XED_ICLASS_STOSQ: xed_iclass_enum_t = 903;
pub const XED_ICLASS_STOSW: xed_iclass_enum_t = 904;
pub const XED_ICLASS_STR: xed_iclass_enum_t = 905;
pub const XED_ICLASS_STTILECFG: xed_iclass_enum_t = 906;
pub const XED_ICLASS_STUI: xed_iclass_enum_t = 907;
pub const XED_ICLASS_SUB: xed_iclass_enum_t = 908;
pub const XED_ICLASS_SUBPD: xed_iclass_enum_t = 909;
pub const XED_ICLASS_SUBPS: xed_iclass_enum_t = 910;
pub const XED_ICLASS_SUBSD: xed_iclass_enum_t = 911;
pub const XED_ICLASS_SUBSS: xed_iclass_enum_t = 912;
pub const XED_ICLASS_SUB_LOCK: xed_iclass_enum_t = 913;
pub const XED_ICLASS_SWAPGS: xed_iclass_enum_t = 914;
pub const XED_ICLASS_SYSCALL: xed_iclass_enum_t = 915;
pub const XED_ICLASS_SYSCALL_32: xed_iclass_enum_t = 916;
pub const XED_ICLASS_SYSENTER: xed_iclass_enum_t = 917;
pub const XED_ICLASS_SYSEXIT: xed_iclass_enum_t = 918;
pub const XED_ICLASS_SYSRET: xed_iclass_enum_t = 919;
pub const XED_ICLASS_SYSRET64: xed_iclass_enum_t = 920;
pub const XED_ICLASS_SYSRET_AMD: xed_iclass_enum_t = 921;
pub const XED_ICLASS_T1MSKC: xed_iclass_enum_t = 922;
pub const XED_ICLASS_TCMMIMFP16PS: xed_iclass_enum_t = 923;
pub const XED_ICLASS_TCMMRLFP16PS: xed_iclass_enum_t = 924;
pub const XED_ICLASS_TDCALL: xed_iclass_enum_t = 925;
pub const XED_ICLASS_TDPBF16PS: xed_iclass_enum_t = 926;
pub const XED_ICLASS_TDPBSSD: xed_iclass_enum_t = 927;
pub const XED_ICLASS_TDPBSUD: xed_iclass_enum_t = 928;
pub const XED_ICLASS_TDPBUSD: xed_iclass_enum_t = 929;
pub const XED_ICLASS_TDPBUUD: xed_iclass_enum_t = 930;
pub const XED_ICLASS_TDPFP16PS: xed_iclass_enum_t = 931;
pub const XED_ICLASS_TEST: xed_iclass_enum_t = 932;
pub const XED_ICLASS_TESTUI: xed_iclass_enum_t = 933;
pub const XED_ICLASS_TILELOADD: xed_iclass_enum_t = 934;
pub const XED_ICLASS_TILELOADDT1: xed_iclass_enum_t = 935;
pub const XED_ICLASS_TILERELEASE: xed_iclass_enum_t = 936;
pub const XED_ICLASS_TILESTORED: xed_iclass_enum_t = 937;
pub const XED_ICLASS_TILEZERO: xed_iclass_enum_t = 938;
pub const XED_ICLASS_TLBSYNC: xed_iclass_enum_t = 939;
pub const XED_ICLASS_TPAUSE: xed_iclass_enum_t = 940;
pub const XED_ICLASS_TZCNT: xed_iclass_enum_t = 941;
pub const XED_ICLASS_TZMSK: xed_iclass_enum_t = 942;
pub const XED_ICLASS_UCOMISD: xed_iclass_enum_t = 943;
pub const XED_ICLASS_UCOMISS: xed_iclass_enum_t = 944;
pub const XED_ICLASS_UD0: xed_iclass_enum_t = 945;
pub const XED_ICLASS_UD1: xed_iclass_enum_t = 946;
pub const XED_ICLASS_UD2: xed_iclass_enum_t = 947;
pub const XED_ICLASS_UIRET: xed_iclass_enum_t = 948;
pub const XED_ICLASS_UMONITOR: xed_iclass_enum_t = 949;
pub const XED_ICLASS_UMWAIT: xed_iclass_enum_t = 950;
pub const XED_ICLASS_UNPCKHPD: xed_iclass_enum_t = 951;
pub const XED_ICLASS_UNPCKHPS: xed_iclass_enum_t = 952;
pub const XED_ICLASS_UNPCKLPD: xed_iclass_enum_t = 953;
pub const XED_ICLASS_UNPCKLPS: xed_iclass_enum_t = 954;
pub const XED_ICLASS_URDMSR: xed_iclass_enum_t = 955;
pub const XED_ICLASS_UWRMSR: xed_iclass_enum_t = 956;
pub const XED_ICLASS_V4FMADDPS: xed_iclass_enum_t = 957;
pub const XED_ICLASS_V4FMADDSS: xed_iclass_enum_t = 958;
pub const XED_ICLASS_V4FNMADDPS: xed_iclass_enum_t = 959;
pub const XED_ICLASS_V4FNMADDSS: xed_iclass_enum_t = 960;
pub const XED_ICLASS_VADDPD: xed_iclass_enum_t = 961;
pub const XED_ICLASS_VADDPH: xed_iclass_enum_t = 962;
pub const XED_ICLASS_VADDPS: xed_iclass_enum_t = 963;
pub const XED_ICLASS_VADDSD: xed_iclass_enum_t = 964;
pub const XED_ICLASS_VADDSH: xed_iclass_enum_t = 965;
pub const XED_ICLASS_VADDSS: xed_iclass_enum_t = 966;
pub const XED_ICLASS_VADDSUBPD: xed_iclass_enum_t = 967;
pub const XED_ICLASS_VADDSUBPS: xed_iclass_enum_t = 968;
pub const XED_ICLASS_VAESDEC: xed_iclass_enum_t = 969;
pub const XED_ICLASS_VAESDECLAST: xed_iclass_enum_t = 970;
pub const XED_ICLASS_VAESENC: xed_iclass_enum_t = 971;
pub const XED_ICLASS_VAESENCLAST: xed_iclass_enum_t = 972;
pub const XED_ICLASS_VAESIMC: xed_iclass_enum_t = 973;
pub const XED_ICLASS_VAESKEYGENASSIST: xed_iclass_enum_t = 974;
pub const XED_ICLASS_VALIGND: xed_iclass_enum_t = 975;
pub const XED_ICLASS_VALIGNQ: xed_iclass_enum_t = 976;
pub const XED_ICLASS_VANDNPD: xed_iclass_enum_t = 977;
pub const XED_ICLASS_VANDNPS: xed_iclass_enum_t = 978;
pub const XED_ICLASS_VANDPD: xed_iclass_enum_t = 979;
pub const XED_ICLASS_VANDPS: xed_iclass_enum_t = 980;
pub const XED_ICLASS_VBCSTNEBF162PS: xed_iclass_enum_t = 981;
pub const XED_ICLASS_VBCSTNESH2PS: xed_iclass_enum_t = 982;
pub const XED_ICLASS_VBLENDMPD: xed_iclass_enum_t = 983;
pub const XED_ICLASS_VBLENDMPS: xed_iclass_enum_t = 984;
pub const XED_ICLASS_VBLENDPD: xed_iclass_enum_t = 985;
pub const XED_ICLASS_VBLENDPS: xed_iclass_enum_t = 986;
pub const XED_ICLASS_VBLENDVPD: xed_iclass_enum_t = 987;
pub const XED_ICLASS_VBLENDVPS: xed_iclass_enum_t = 988;
pub const XED_ICLASS_VBROADCASTF128: xed_iclass_enum_t = 989;
pub const XED_ICLASS_VBROADCASTF32X2: xed_iclass_enum_t = 990;
pub const XED_ICLASS_VBROADCASTF32X4: xed_iclass_enum_t = 991;
pub const XED_ICLASS_VBROADCASTF32X8: xed_iclass_enum_t = 992;
pub const XED_ICLASS_VBROADCASTF64X2: xed_iclass_enum_t = 993;
pub const XED_ICLASS_VBROADCASTF64X4: xed_iclass_enum_t = 994;
pub const XED_ICLASS_VBROADCASTI128: xed_iclass_enum_t = 995;
pub const XED_ICLASS_VBROADCASTI32X2: xed_iclass_enum_t = 996;
pub const XED_ICLASS_VBROADCASTI32X4: xed_iclass_enum_t = 997;
pub const XED_ICLASS_VBROADCASTI32X8: xed_iclass_enum_t = 998;
pub const XED_ICLASS_VBROADCASTI64X2: xed_iclass_enum_t = 999;
pub const XED_ICLASS_VBROADCASTI64X4: xed_iclass_enum_t = 1000;
pub const XED_ICLASS_VBROADCASTSD: xed_iclass_enum_t = 1001;
pub const XED_ICLASS_VBROADCASTSS: xed_iclass_enum_t = 1002;
pub const XED_ICLASS_VCMPPD: xed_iclass_enum_t = 1003;
pub const XED_ICLASS_VCMPPH: xed_iclass_enum_t = 1004;
pub const XED_ICLASS_VCMPPS: xed_iclass_enum_t = 1005;
pub const XED_ICLASS_VCMPSD: xed_iclass_enum_t = 1006;
pub const XED_ICLASS_VCMPSH: xed_iclass_enum_t = 1007;
pub const XED_ICLASS_VCMPSS: xed_iclass_enum_t = 1008;
pub const XED_ICLASS_VCOMISD: xed_iclass_enum_t = 1009;
pub const XED_ICLASS_VCOMISH: xed_iclass_enum_t = 1010;
pub const XED_ICLASS_VCOMISS: xed_iclass_enum_t = 1011;
pub const XED_ICLASS_VCOMPRESSPD: xed_iclass_enum_t = 1012;
pub const XED_ICLASS_VCOMPRESSPS: xed_iclass_enum_t = 1013;
pub const XED_ICLASS_VCVTDQ2PD: xed_iclass_enum_t = 1014;
pub const XED_ICLASS_VCVTDQ2PH: xed_iclass_enum_t = 1015;
pub const XED_ICLASS_VCVTDQ2PS: xed_iclass_enum_t = 1016;
pub const XED_ICLASS_VCVTNE2PS2BF16: xed_iclass_enum_t = 1017;
pub const XED_ICLASS_VCVTNEEBF162PS: xed_iclass_enum_t = 1018;
pub const XED_ICLASS_VCVTNEEPH2PS: xed_iclass_enum_t = 1019;
pub const XED_ICLASS_VCVTNEOBF162PS: xed_iclass_enum_t = 1020;
pub const XED_ICLASS_VCVTNEOPH2PS: xed_iclass_enum_t = 1021;
pub const XED_ICLASS_VCVTNEPS2BF16: xed_iclass_enum_t = 1022;
pub const XED_ICLASS_VCVTPD2DQ: xed_iclass_enum_t = 1023;
pub const XED_ICLASS_VCVTPD2PH: xed_iclass_enum_t = 1024;
pub const XED_ICLASS_VCVTPD2PS: xed_iclass_enum_t = 1025;
pub const XED_ICLASS_VCVTPD2QQ: xed_iclass_enum_t = 1026;
pub const XED_ICLASS_VCVTPD2UDQ: xed_iclass_enum_t = 1027;
pub const XED_ICLASS_VCVTPD2UQQ: xed_iclass_enum_t = 1028;
pub const XED_ICLASS_VCVTPH2DQ: xed_iclass_enum_t = 1029;
pub const XED_ICLASS_VCVTPH2PD: xed_iclass_enum_t = 1030;
pub const XED_ICLASS_VCVTPH2PS: xed_iclass_enum_t = 1031;
pub const XED_ICLASS_VCVTPH2PSX: xed_iclass_enum_t = 1032;
pub const XED_ICLASS_VCVTPH2QQ: xed_iclass_enum_t = 1033;
pub const XED_ICLASS_VCVTPH2UDQ: xed_iclass_enum_t = 1034;
pub const XED_ICLASS_VCVTPH2UQQ: xed_iclass_enum_t = 1035;
pub const XED_ICLASS_VCVTPH2UW: xed_iclass_enum_t = 1036;
pub const XED_ICLASS_VCVTPH2W: xed_iclass_enum_t = 1037;
pub const XED_ICLASS_VCVTPS2DQ: xed_iclass_enum_t = 1038;
pub const XED_ICLASS_VCVTPS2PD: xed_iclass_enum_t = 1039;
pub const XED_ICLASS_VCVTPS2PH: xed_iclass_enum_t = 1040;
pub const XED_ICLASS_VCVTPS2PHX: xed_iclass_enum_t = 1041;
pub const XED_ICLASS_VCVTPS2QQ: xed_iclass_enum_t = 1042;
pub const XED_ICLASS_VCVTPS2UDQ: xed_iclass_enum_t = 1043;
pub const XED_ICLASS_VCVTPS2UQQ: xed_iclass_enum_t = 1044;
pub const XED_ICLASS_VCVTQQ2PD: xed_iclass_enum_t = 1045;
pub const XED_ICLASS_VCVTQQ2PH: xed_iclass_enum_t = 1046;
pub const XED_ICLASS_VCVTQQ2PS: xed_iclass_enum_t = 1047;
pub const XED_ICLASS_VCVTSD2SH: xed_iclass_enum_t = 1048;
pub const XED_ICLASS_VCVTSD2SI: xed_iclass_enum_t = 1049;
pub const XED_ICLASS_VCVTSD2SS: xed_iclass_enum_t = 1050;
pub const XED_ICLASS_VCVTSD2USI: xed_iclass_enum_t = 1051;
pub const XED_ICLASS_VCVTSH2SD: xed_iclass_enum_t = 1052;
pub const XED_ICLASS_VCVTSH2SI: xed_iclass_enum_t = 1053;
pub const XED_ICLASS_VCVTSH2SS: xed_iclass_enum_t = 1054;
pub const XED_ICLASS_VCVTSH2USI: xed_iclass_enum_t = 1055;
pub const XED_ICLASS_VCVTSI2SD: xed_iclass_enum_t = 1056;
pub const XED_ICLASS_VCVTSI2SH: xed_iclass_enum_t = 1057;
pub const XED_ICLASS_VCVTSI2SS: xed_iclass_enum_t = 1058;
pub const XED_ICLASS_VCVTSS2SD: xed_iclass_enum_t = 1059;
pub const XED_ICLASS_VCVTSS2SH: xed_iclass_enum_t = 1060;
pub const XED_ICLASS_VCVTSS2SI: xed_iclass_enum_t = 1061;
pub const XED_ICLASS_VCVTSS2USI: xed_iclass_enum_t = 1062;
pub const XED_ICLASS_VCVTTPD2DQ: xed_iclass_enum_t = 1063;
pub const XED_ICLASS_VCVTTPD2QQ: xed_iclass_enum_t = 1064;
pub const XED_ICLASS_VCVTTPD2UDQ: xed_iclass_enum_t = 1065;
pub const XED_ICLASS_VCVTTPD2UQQ: xed_iclass_enum_t = 1066;
pub const XED_ICLASS_VCVTTPH2DQ: xed_iclass_enum_t = 1067;
pub const XED_ICLASS_VCVTTPH2QQ: xed_iclass_enum_t = 1068;
pub const XED_ICLASS_VCVTTPH2UDQ: xed_iclass_enum_t = 1069;
pub const XED_ICLASS_VCVTTPH2UQQ: xed_iclass_enum_t = 1070;
pub const XED_ICLASS_VCVTTPH2UW: xed_iclass_enum_t = 1071;
pub const XED_ICLASS_VCVTTPH2W: xed_iclass_enum_t = 1072;
pub const XED_ICLASS_VCVTTPS2DQ: xed_iclass_enum_t = 1073;
pub const XED_ICLASS_VCVTTPS2QQ: xed_iclass_enum_t = 1074;
pub const XED_ICLASS_VCVTTPS2UDQ: xed_iclass_enum_t = 1075;
pub const XED_ICLASS_VCVTTPS2UQQ: xed_iclass_enum_t = 1076;
pub const XED_ICLASS_VCVTTSD2SI: xed_iclass_enum_t = 1077;
pub const XED_ICLASS_VCVTTSD2USI: xed_iclass_enum_t = 1078;
pub const XED_ICLASS_VCVTTSH2SI: xed_iclass_enum_t = 1079;
pub const XED_ICLASS_VCVTTSH2USI: xed_iclass_enum_t = 1080;
pub const XED_ICLASS_VCVTTSS2SI: xed_iclass_enum_t = 1081;
pub const XED_ICLASS_VCVTTSS2USI: xed_iclass_enum_t = 1082;
pub const XED_ICLASS_VCVTUDQ2PD: xed_iclass_enum_t = 1083;
pub const XED_ICLASS_VCVTUDQ2PH: xed_iclass_enum_t = 1084;
pub const XED_ICLASS_VCVTUDQ2PS: xed_iclass_enum_t = 1085;
pub const XED_ICLASS_VCVTUQQ2PD: xed_iclass_enum_t = 1086;
pub const XED_ICLASS_VCVTUQQ2PH: xed_iclass_enum_t = 1087;
pub const XED_ICLASS_VCVTUQQ2PS: xed_iclass_enum_t = 1088;
pub const XED_ICLASS_VCVTUSI2SD: xed_iclass_enum_t = 1089;
pub const XED_ICLASS_VCVTUSI2SH: xed_iclass_enum_t = 1090;
pub const XED_ICLASS_VCVTUSI2SS: xed_iclass_enum_t = 1091;
pub const XED_ICLASS_VCVTUW2PH: xed_iclass_enum_t = 1092;
pub const XED_ICLASS_VCVTW2PH: xed_iclass_enum_t = 1093;
pub const XED_ICLASS_VDBPSADBW: xed_iclass_enum_t = 1094;
pub const XED_ICLASS_VDIVPD: xed_iclass_enum_t = 1095;
pub const XED_ICLASS_VDIVPH: xed_iclass_enum_t = 1096;
pub const XED_ICLASS_VDIVPS: xed_iclass_enum_t = 1097;
pub const XED_ICLASS_VDIVSD: xed_iclass_enum_t = 1098;
pub const XED_ICLASS_VDIVSH: xed_iclass_enum_t = 1099;
pub const XED_ICLASS_VDIVSS: xed_iclass_enum_t = 1100;
pub const XED_ICLASS_VDPBF16PS: xed_iclass_enum_t = 1101;
pub const XED_ICLASS_VDPPD: xed_iclass_enum_t = 1102;
pub const XED_ICLASS_VDPPS: xed_iclass_enum_t = 1103;
pub const XED_ICLASS_VERR: xed_iclass_enum_t = 1104;
pub const XED_ICLASS_VERW: xed_iclass_enum_t = 1105;
pub const XED_ICLASS_VEXP2PD: xed_iclass_enum_t = 1106;
pub const XED_ICLASS_VEXP2PS: xed_iclass_enum_t = 1107;
pub const XED_ICLASS_VEXPANDPD: xed_iclass_enum_t = 1108;
pub const XED_ICLASS_VEXPANDPS: xed_iclass_enum_t = 1109;
pub const XED_ICLASS_VEXTRACTF128: xed_iclass_enum_t = 1110;
pub const XED_ICLASS_VEXTRACTF32X4: xed_iclass_enum_t = 1111;
pub const XED_ICLASS_VEXTRACTF32X8: xed_iclass_enum_t = 1112;
pub const XED_ICLASS_VEXTRACTF64X2: xed_iclass_enum_t = 1113;
pub const XED_ICLASS_VEXTRACTF64X4: xed_iclass_enum_t = 1114;
pub const XED_ICLASS_VEXTRACTI128: xed_iclass_enum_t = 1115;
pub const XED_ICLASS_VEXTRACTI32X4: xed_iclass_enum_t = 1116;
pub const XED_ICLASS_VEXTRACTI32X8: xed_iclass_enum_t = 1117;
pub const XED_ICLASS_VEXTRACTI64X2: xed_iclass_enum_t = 1118;
pub const XED_ICLASS_VEXTRACTI64X4: xed_iclass_enum_t = 1119;
pub const XED_ICLASS_VEXTRACTPS: xed_iclass_enum_t = 1120;
pub const XED_ICLASS_VFCMADDCPH: xed_iclass_enum_t = 1121;
pub const XED_ICLASS_VFCMADDCSH: xed_iclass_enum_t = 1122;
pub const XED_ICLASS_VFCMULCPH: xed_iclass_enum_t = 1123;
pub const XED_ICLASS_VFCMULCSH: xed_iclass_enum_t = 1124;
pub const XED_ICLASS_VFIXUPIMMPD: xed_iclass_enum_t = 1125;
pub const XED_ICLASS_VFIXUPIMMPS: xed_iclass_enum_t = 1126;
pub const XED_ICLASS_VFIXUPIMMSD: xed_iclass_enum_t = 1127;
pub const XED_ICLASS_VFIXUPIMMSS: xed_iclass_enum_t = 1128;
pub const XED_ICLASS_VFMADD132PD: xed_iclass_enum_t = 1129;
pub const XED_ICLASS_VFMADD132PH: xed_iclass_enum_t = 1130;
pub const XED_ICLASS_VFMADD132PS: xed_iclass_enum_t = 1131;
pub const XED_ICLASS_VFMADD132SD: xed_iclass_enum_t = 1132;
pub const XED_ICLASS_VFMADD132SH: xed_iclass_enum_t = 1133;
pub const XED_ICLASS_VFMADD132SS: xed_iclass_enum_t = 1134;
pub const XED_ICLASS_VFMADD213PD: xed_iclass_enum_t = 1135;
pub const XED_ICLASS_VFMADD213PH: xed_iclass_enum_t = 1136;
pub const XED_ICLASS_VFMADD213PS: xed_iclass_enum_t = 1137;
pub const XED_ICLASS_VFMADD213SD: xed_iclass_enum_t = 1138;
pub const XED_ICLASS_VFMADD213SH: xed_iclass_enum_t = 1139;
pub const XED_ICLASS_VFMADD213SS: xed_iclass_enum_t = 1140;
pub const XED_ICLASS_VFMADD231PD: xed_iclass_enum_t = 1141;
pub const XED_ICLASS_VFMADD231PH: xed_iclass_enum_t = 1142;
pub const XED_ICLASS_VFMADD231PS: xed_iclass_enum_t = 1143;
pub const XED_ICLASS_VFMADD231SD: xed_iclass_enum_t = 1144;
pub const XED_ICLASS_VFMADD231SH: xed_iclass_enum_t = 1145;
pub const XED_ICLASS_VFMADD231SS: xed_iclass_enum_t = 1146;
pub const XED_ICLASS_VFMADDCPH: xed_iclass_enum_t = 1147;
pub const XED_ICLASS_VFMADDCSH: xed_iclass_enum_t = 1148;
pub const XED_ICLASS_VFMADDPD: xed_iclass_enum_t = 1149;
pub const XED_ICLASS_VFMADDPS: xed_iclass_enum_t = 1150;
pub const XED_ICLASS_VFMADDSD: xed_iclass_enum_t = 1151;
pub const XED_ICLASS_VFMADDSS: xed_iclass_enum_t = 1152;
pub const XED_ICLASS_VFMADDSUB132PD: xed_iclass_enum_t = 1153;
pub const XED_ICLASS_VFMADDSUB132PH: xed_iclass_enum_t = 1154;
pub const XED_ICLASS_VFMADDSUB132PS: xed_iclass_enum_t = 1155;
pub const XED_ICLASS_VFMADDSUB213PD: xed_iclass_enum_t = 1156;
pub const XED_ICLASS_VFMADDSUB213PH: xed_iclass_enum_t = 1157;
pub const XED_ICLASS_VFMADDSUB213PS: xed_iclass_enum_t = 1158;
pub const XED_ICLASS_VFMADDSUB231PD: xed_iclass_enum_t = 1159;
pub const XED_ICLASS_VFMADDSUB231PH: xed_iclass_enum_t = 1160;
pub const XED_ICLASS_VFMADDSUB231PS: xed_iclass_enum_t = 1161;
pub const XED_ICLASS_VFMADDSUBPD: xed_iclass_enum_t = 1162;
pub const XED_ICLASS_VFMADDSUBPS: xed_iclass_enum_t = 1163;
pub const XED_ICLASS_VFMSUB132PD: xed_iclass_enum_t = 1164;
pub const XED_ICLASS_VFMSUB132PH: xed_iclass_enum_t = 1165;
pub const XED_ICLASS_VFMSUB132PS: xed_iclass_enum_t = 1166;
pub const XED_ICLASS_VFMSUB132SD: xed_iclass_enum_t = 1167;
pub const XED_ICLASS_VFMSUB132SH: xed_iclass_enum_t = 1168;
pub const XED_ICLASS_VFMSUB132SS: xed_iclass_enum_t = 1169;
pub const XED_ICLASS_VFMSUB213PD: xed_iclass_enum_t = 1170;
pub const XED_ICLASS_VFMSUB213PH: xed_iclass_enum_t = 1171;
pub const XED_ICLASS_VFMSUB213PS: xed_iclass_enum_t = 1172;
pub const XED_ICLASS_VFMSUB213SD: xed_iclass_enum_t = 1173;
pub const XED_ICLASS_VFMSUB213SH: xed_iclass_enum_t = 1174;
pub const XED_ICLASS_VFMSUB213SS: xed_iclass_enum_t = 1175;
pub const XED_ICLASS_VFMSUB231PD: xed_iclass_enum_t = 1176;
pub const XED_ICLASS_VFMSUB231PH: xed_iclass_enum_t = 1177;
pub const XED_ICLASS_VFMSUB231PS: xed_iclass_enum_t = 1178;
pub const XED_ICLASS_VFMSUB231SD: xed_iclass_enum_t = 1179;
pub const XED_ICLASS_VFMSUB231SH: xed_iclass_enum_t = 1180;
pub const XED_ICLASS_VFMSUB231SS: xed_iclass_enum_t = 1181;
pub const XED_ICLASS_VFMSUBADD132PD: xed_iclass_enum_t = 1182;
pub const XED_ICLASS_VFMSUBADD132PH: xed_iclass_enum_t = 1183;
pub const XED_ICLASS_VFMSUBADD132PS: xed_iclass_enum_t = 1184;
pub const XED_ICLASS_VFMSUBADD213PD: xed_iclass_enum_t = 1185;
pub const XED_ICLASS_VFMSUBADD213PH: xed_iclass_enum_t = 1186;
pub const XED_ICLASS_VFMSUBADD213PS: xed_iclass_enum_t = 1187;
pub const XED_ICLASS_VFMSUBADD231PD: xed_iclass_enum_t = 1188;
pub const XED_ICLASS_VFMSUBADD231PH: xed_iclass_enum_t = 1189;
pub const XED_ICLASS_VFMSUBADD231PS: xed_iclass_enum_t = 1190;
pub const XED_ICLASS_VFMSUBADDPD: xed_iclass_enum_t = 1191;
pub const XED_ICLASS_VFMSUBADDPS: xed_iclass_enum_t = 1192;
pub const XED_ICLASS_VFMSUBPD: xed_iclass_enum_t = 1193;
pub const XED_ICLASS_VFMSUBPS: xed_iclass_enum_t = 1194;
pub const XED_ICLASS_VFMSUBSD: xed_iclass_enum_t = 1195;
pub const XED_ICLASS_VFMSUBSS: xed_iclass_enum_t = 1196;
pub const XED_ICLASS_VFMULCPH: xed_iclass_enum_t = 1197;
pub const XED_ICLASS_VFMULCSH: xed_iclass_enum_t = 1198;
pub const XED_ICLASS_VFNMADD132PD: xed_iclass_enum_t = 1199;
pub const XED_ICLASS_VFNMADD132PH: xed_iclass_enum_t = 1200;
pub const XED_ICLASS_VFNMADD132PS: xed_iclass_enum_t = 1201;
pub const XED_ICLASS_VFNMADD132SD: xed_iclass_enum_t = 1202;
pub const XED_ICLASS_VFNMADD132SH: xed_iclass_enum_t = 1203;
pub const XED_ICLASS_VFNMADD132SS: xed_iclass_enum_t = 1204;
pub const XED_ICLASS_VFNMADD213PD: xed_iclass_enum_t = 1205;
pub const XED_ICLASS_VFNMADD213PH: xed_iclass_enum_t = 1206;
pub const XED_ICLASS_VFNMADD213PS: xed_iclass_enum_t = 1207;
pub const XED_ICLASS_VFNMADD213SD: xed_iclass_enum_t = 1208;
pub const XED_ICLASS_VFNMADD213SH: xed_iclass_enum_t = 1209;
pub const XED_ICLASS_VFNMADD213SS: xed_iclass_enum_t = 1210;
pub const XED_ICLASS_VFNMADD231PD: xed_iclass_enum_t = 1211;
pub const XED_ICLASS_VFNMADD231PH: xed_iclass_enum_t = 1212;
pub const XED_ICLASS_VFNMADD231PS: xed_iclass_enum_t = 1213;
pub const XED_ICLASS_VFNMADD231SD: xed_iclass_enum_t = 1214;
pub const XED_ICLASS_VFNMADD231SH: xed_iclass_enum_t = 1215;
pub const XED_ICLASS_VFNMADD231SS: xed_iclass_enum_t = 1216;
pub const XED_ICLASS_VFNMADDPD: xed_iclass_enum_t = 1217;
pub const XED_ICLASS_VFNMADDPS: xed_iclass_enum_t = 1218;
pub const XED_ICLASS_VFNMADDSD: xed_iclass_enum_t = 1219;
pub const XED_ICLASS_VFNMADDSS: xed_iclass_enum_t = 1220;
pub const XED_ICLASS_VFNMSUB132PD: xed_iclass_enum_t = 1221;
pub const XED_ICLASS_VFNMSUB132PH: xed_iclass_enum_t = 1222;
pub const XED_ICLASS_VFNMSUB132PS: xed_iclass_enum_t = 1223;
pub const XED_ICLASS_VFNMSUB132SD: xed_iclass_enum_t = 1224;
pub const XED_ICLASS_VFNMSUB132SH: xed_iclass_enum_t = 1225;
pub const XED_ICLASS_VFNMSUB132SS: xed_iclass_enum_t = 1226;
pub const XED_ICLASS_VFNMSUB213PD: xed_iclass_enum_t = 1227;
pub const XED_ICLASS_VFNMSUB213PH: xed_iclass_enum_t = 1228;
pub const XED_ICLASS_VFNMSUB213PS: xed_iclass_enum_t = 1229;
pub const XED_ICLASS_VFNMSUB213SD: xed_iclass_enum_t = 1230;
pub const XED_ICLASS_VFNMSUB213SH: xed_iclass_enum_t = 1231;
pub const XED_ICLASS_VFNMSUB213SS: xed_iclass_enum_t = 1232;
pub const XED_ICLASS_VFNMSUB231PD: xed_iclass_enum_t = 1233;
pub const XED_ICLASS_VFNMSUB231PH: xed_iclass_enum_t = 1234;
pub const XED_ICLASS_VFNMSUB231PS: xed_iclass_enum_t = 1235;
pub const XED_ICLASS_VFNMSUB231SD: xed_iclass_enum_t = 1236;
pub const XED_ICLASS_VFNMSUB231SH: xed_iclass_enum_t = 1237;
pub const XED_ICLASS_VFNMSUB231SS: xed_iclass_enum_t = 1238;
pub const XED_ICLASS_VFNMSUBPD: xed_iclass_enum_t = 1239;
pub const XED_ICLASS_VFNMSUBPS: xed_iclass_enum_t = 1240;
pub const XED_ICLASS_VFNMSUBSD: xed_iclass_enum_t = 1241;
pub const XED_ICLASS_VFNMSUBSS: xed_iclass_enum_t = 1242;
pub const XED_ICLASS_VFPCLASSPD: xed_iclass_enum_t = 1243;
pub const XED_ICLASS_VFPCLASSPH: xed_iclass_enum_t = 1244;
pub const XED_ICLASS_VFPCLASSPS: xed_iclass_enum_t = 1245;
pub const XED_ICLASS_VFPCLASSSD: xed_iclass_enum_t = 1246;
pub const XED_ICLASS_VFPCLASSSH: xed_iclass_enum_t = 1247;
pub const XED_ICLASS_VFPCLASSSS: xed_iclass_enum_t = 1248;
pub const XED_ICLASS_VFRCZPD: xed_iclass_enum_t = 1249;
pub const XED_ICLASS_VFRCZPS: xed_iclass_enum_t = 1250;
pub const XED_ICLASS_VFRCZSD: xed_iclass_enum_t = 1251;
pub const XED_ICLASS_VFRCZSS: xed_iclass_enum_t = 1252;
pub const XED_ICLASS_VGATHERDPD: xed_iclass_enum_t = 1253;
pub const XED_ICLASS_VGATHERDPS: xed_iclass_enum_t = 1254;
pub const XED_ICLASS_VGATHERPF0DPD: xed_iclass_enum_t = 1255;
pub const XED_ICLASS_VGATHERPF0DPS: xed_iclass_enum_t = 1256;
pub const XED_ICLASS_VGATHERPF0QPD: xed_iclass_enum_t = 1257;
pub const XED_ICLASS_VGATHERPF0QPS: xed_iclass_enum_t = 1258;
pub const XED_ICLASS_VGATHERPF1DPD: xed_iclass_enum_t = 1259;
pub const XED_ICLASS_VGATHERPF1DPS: xed_iclass_enum_t = 1260;
pub const XED_ICLASS_VGATHERPF1QPD: xed_iclass_enum_t = 1261;
pub const XED_ICLASS_VGATHERPF1QPS: xed_iclass_enum_t = 1262;
pub const XED_ICLASS_VGATHERQPD: xed_iclass_enum_t = 1263;
pub const XED_ICLASS_VGATHERQPS: xed_iclass_enum_t = 1264;
pub const XED_ICLASS_VGETEXPPD: xed_iclass_enum_t = 1265;
pub const XED_ICLASS_VGETEXPPH: xed_iclass_enum_t = 1266;
pub const XED_ICLASS_VGETEXPPS: xed_iclass_enum_t = 1267;
pub const XED_ICLASS_VGETEXPSD: xed_iclass_enum_t = 1268;
pub const XED_ICLASS_VGETEXPSH: xed_iclass_enum_t = 1269;
pub const XED_ICLASS_VGETEXPSS: xed_iclass_enum_t = 1270;
pub const XED_ICLASS_VGETMANTPD: xed_iclass_enum_t = 1271;
pub const XED_ICLASS_VGETMANTPH: xed_iclass_enum_t = 1272;
pub const XED_ICLASS_VGETMANTPS: xed_iclass_enum_t = 1273;
pub const XED_ICLASS_VGETMANTSD: xed_iclass_enum_t = 1274;
pub const XED_ICLASS_VGETMANTSH: xed_iclass_enum_t = 1275;
pub const XED_ICLASS_VGETMANTSS: xed_iclass_enum_t = 1276;
pub const XED_ICLASS_VGF2P8AFFINEINVQB: xed_iclass_enum_t = 1277;
pub const XED_ICLASS_VGF2P8AFFINEQB: xed_iclass_enum_t = 1278;
pub const XED_ICLASS_VGF2P8MULB: xed_iclass_enum_t = 1279;
pub const XED_ICLASS_VHADDPD: xed_iclass_enum_t = 1280;
pub const XED_ICLASS_VHADDPS: xed_iclass_enum_t = 1281;
pub const XED_ICLASS_VHSUBPD: xed_iclass_enum_t = 1282;
pub const XED_ICLASS_VHSUBPS: xed_iclass_enum_t = 1283;
pub const XED_ICLASS_VINSERTF128: xed_iclass_enum_t = 1284;
pub const XED_ICLASS_VINSERTF32X4: xed_iclass_enum_t = 1285;
pub const XED_ICLASS_VINSERTF32X8: xed_iclass_enum_t = 1286;
pub const XED_ICLASS_VINSERTF64X2: xed_iclass_enum_t = 1287;
pub const XED_ICLASS_VINSERTF64X4: xed_iclass_enum_t = 1288;
pub const XED_ICLASS_VINSERTI128: xed_iclass_enum_t = 1289;
pub const XED_ICLASS_VINSERTI32X4: xed_iclass_enum_t = 1290;
pub const XED_ICLASS_VINSERTI32X8: xed_iclass_enum_t = 1291;
pub const XED_ICLASS_VINSERTI64X2: xed_iclass_enum_t = 1292;
pub const XED_ICLASS_VINSERTI64X4: xed_iclass_enum_t = 1293;
pub const XED_ICLASS_VINSERTPS: xed_iclass_enum_t = 1294;
pub const XED_ICLASS_VLDDQU: xed_iclass_enum_t = 1295;
pub const XED_ICLASS_VLDMXCSR: xed_iclass_enum_t = 1296;
pub const XED_ICLASS_VMASKMOVDQU: xed_iclass_enum_t = 1297;
pub const XED_ICLASS_VMASKMOVPD: xed_iclass_enum_t = 1298;
pub const XED_ICLASS_VMASKMOVPS: xed_iclass_enum_t = 1299;
pub const XED_ICLASS_VMAXPD: xed_iclass_enum_t = 1300;
pub const XED_ICLASS_VMAXPH: xed_iclass_enum_t = 1301;
pub const XED_ICLASS_VMAXPS: xed_iclass_enum_t = 1302;
pub const XED_ICLASS_VMAXSD: xed_iclass_enum_t = 1303;
pub const XED_ICLASS_VMAXSH: xed_iclass_enum_t = 1304;
pub const XED_ICLASS_VMAXSS: xed_iclass_enum_t = 1305;
pub const XED_ICLASS_VMCALL: xed_iclass_enum_t = 1306;
pub const XED_ICLASS_VMCLEAR: xed_iclass_enum_t = 1307;
pub const XED_ICLASS_VMFUNC: xed_iclass_enum_t = 1308;
pub const XED_ICLASS_VMINPD: xed_iclass_enum_t = 1309;
pub const XED_ICLASS_VMINPH: xed_iclass_enum_t = 1310;
pub const XED_ICLASS_VMINPS: xed_iclass_enum_t = 1311;
pub const XED_ICLASS_VMINSD: xed_iclass_enum_t = 1312;
pub const XED_ICLASS_VMINSH: xed_iclass_enum_t = 1313;
pub const XED_ICLASS_VMINSS: xed_iclass_enum_t = 1314;
pub const XED_ICLASS_VMLAUNCH: xed_iclass_enum_t = 1315;
pub const XED_ICLASS_VMLOAD: xed_iclass_enum_t = 1316;
pub const XED_ICLASS_VMMCALL: xed_iclass_enum_t = 1317;
pub const XED_ICLASS_VMOVAPD: xed_iclass_enum_t = 1318;
pub const XED_ICLASS_VMOVAPS: xed_iclass_enum_t = 1319;
pub const XED_ICLASS_VMOVD: xed_iclass_enum_t = 1320;
pub const XED_ICLASS_VMOVDDUP: xed_iclass_enum_t = 1321;
pub const XED_ICLASS_VMOVDQA: xed_iclass_enum_t = 1322;
pub const XED_ICLASS_VMOVDQA32: xed_iclass_enum_t = 1323;
pub const XED_ICLASS_VMOVDQA64: xed_iclass_enum_t = 1324;
pub const XED_ICLASS_VMOVDQU: xed_iclass_enum_t = 1325;
pub const XED_ICLASS_VMOVDQU16: xed_iclass_enum_t = 1326;
pub const XED_ICLASS_VMOVDQU32: xed_iclass_enum_t = 1327;
pub const XED_ICLASS_VMOVDQU64: xed_iclass_enum_t = 1328;
pub const XED_ICLASS_VMOVDQU8: xed_iclass_enum_t = 1329;
pub const XED_ICLASS_VMOVHLPS: xed_iclass_enum_t = 1330;
pub const XED_ICLASS_VMOVHPD: xed_iclass_enum_t = 1331;
pub const XED_ICLASS_VMOVHPS: xed_iclass_enum_t = 1332;
pub const XED_ICLASS_VMOVLHPS: xed_iclass_enum_t = 1333;
pub const XED_ICLASS_VMOVLPD: xed_iclass_enum_t = 1334;
pub const XED_ICLASS_VMOVLPS: xed_iclass_enum_t = 1335;
pub const XED_ICLASS_VMOVMSKPD: xed_iclass_enum_t = 1336;
pub const XED_ICLASS_VMOVMSKPS: xed_iclass_enum_t = 1337;
pub const XED_ICLASS_VMOVNTDQ: xed_iclass_enum_t = 1338;
pub const XED_ICLASS_VMOVNTDQA: xed_iclass_enum_t = 1339;
pub const XED_ICLASS_VMOVNTPD: xed_iclass_enum_t = 1340;
pub const XED_ICLASS_VMOVNTPS: xed_iclass_enum_t = 1341;
pub const XED_ICLASS_VMOVQ: xed_iclass_enum_t = 1342;
pub const XED_ICLASS_VMOVSD: xed_iclass_enum_t = 1343;
pub const XED_ICLASS_VMOVSH: xed_iclass_enum_t = 1344;
pub const XED_ICLASS_VMOVSHDUP: xed_iclass_enum_t = 1345;
pub const XED_ICLASS_VMOVSLDUP: xed_iclass_enum_t = 1346;
pub const XED_ICLASS_VMOVSS: xed_iclass_enum_t = 1347;
pub const XED_ICLASS_VMOVUPD: xed_iclass_enum_t = 1348;
pub const XED_ICLASS_VMOVUPS: xed_iclass_enum_t = 1349;
pub const XED_ICLASS_VMOVW: xed_iclass_enum_t = 1350;
pub const XED_ICLASS_VMPSADBW: xed_iclass_enum_t = 1351;
pub const XED_ICLASS_VMPTRLD: xed_iclass_enum_t = 1352;
pub const XED_ICLASS_VMPTRST: xed_iclass_enum_t = 1353;
pub const XED_ICLASS_VMREAD: xed_iclass_enum_t = 1354;
pub const XED_ICLASS_VMRESUME: xed_iclass_enum_t = 1355;
pub const XED_ICLASS_VMRUN: xed_iclass_enum_t = 1356;
pub const XED_ICLASS_VMSAVE: xed_iclass_enum_t = 1357;
pub const XED_ICLASS_VMULPD: xed_iclass_enum_t = 1358;
pub const XED_ICLASS_VMULPH: xed_iclass_enum_t = 1359;
pub const XED_ICLASS_VMULPS: xed_iclass_enum_t = 1360;
pub const XED_ICLASS_VMULSD: xed_iclass_enum_t = 1361;
pub const XED_ICLASS_VMULSH: xed_iclass_enum_t = 1362;
pub const XED_ICLASS_VMULSS: xed_iclass_enum_t = 1363;
pub const XED_ICLASS_VMWRITE: xed_iclass_enum_t = 1364;
pub const XED_ICLASS_VMXOFF: xed_iclass_enum_t = 1365;
pub const XED_ICLASS_VMXON: xed_iclass_enum_t = 1366;
pub const XED_ICLASS_VORPD: xed_iclass_enum_t = 1367;
pub const XED_ICLASS_VORPS: xed_iclass_enum_t = 1368;
pub const XED_ICLASS_VP2INTERSECTD: xed_iclass_enum_t = 1369;
pub const XED_ICLASS_VP2INTERSECTQ: xed_iclass_enum_t = 1370;
pub const XED_ICLASS_VP4DPWSSD: xed_iclass_enum_t = 1371;
pub const XED_ICLASS_VP4DPWSSDS: xed_iclass_enum_t = 1372;
pub const XED_ICLASS_VPABSB: xed_iclass_enum_t = 1373;
pub const XED_ICLASS_VPABSD: xed_iclass_enum_t = 1374;
pub const XED_ICLASS_VPABSQ: xed_iclass_enum_t = 1375;
pub const XED_ICLASS_VPABSW: xed_iclass_enum_t = 1376;
pub const XED_ICLASS_VPACKSSDW: xed_iclass_enum_t = 1377;
pub const XED_ICLASS_VPACKSSWB: xed_iclass_enum_t = 1378;
pub const XED_ICLASS_VPACKUSDW: xed_iclass_enum_t = 1379;
pub const XED_ICLASS_VPACKUSWB: xed_iclass_enum_t = 1380;
pub const XED_ICLASS_VPADDB: xed_iclass_enum_t = 1381;
pub const XED_ICLASS_VPADDD: xed_iclass_enum_t = 1382;
pub const XED_ICLASS_VPADDQ: xed_iclass_enum_t = 1383;
pub const XED_ICLASS_VPADDSB: xed_iclass_enum_t = 1384;
pub const XED_ICLASS_VPADDSW: xed_iclass_enum_t = 1385;
pub const XED_ICLASS_VPADDUSB: xed_iclass_enum_t = 1386;
pub const XED_ICLASS_VPADDUSW: xed_iclass_enum_t = 1387;
pub const XED_ICLASS_VPADDW: xed_iclass_enum_t = 1388;
pub const XED_ICLASS_VPALIGNR: xed_iclass_enum_t = 1389;
pub const XED_ICLASS_VPAND: xed_iclass_enum_t = 1390;
pub const XED_ICLASS_VPANDD: xed_iclass_enum_t = 1391;
pub const XED_ICLASS_VPANDN: xed_iclass_enum_t = 1392;
pub const XED_ICLASS_VPANDND: xed_iclass_enum_t = 1393;
pub const XED_ICLASS_VPANDNQ: xed_iclass_enum_t = 1394;
pub const XED_ICLASS_VPANDQ: xed_iclass_enum_t = 1395;
pub const XED_ICLASS_VPAVGB: xed_iclass_enum_t = 1396;
pub const XED_ICLASS_VPAVGW: xed_iclass_enum_t = 1397;
pub const XED_ICLASS_VPBLENDD: xed_iclass_enum_t = 1398;
pub const XED_ICLASS_VPBLENDMB: xed_iclass_enum_t = 1399;
pub const XED_ICLASS_VPBLENDMD: xed_iclass_enum_t = 1400;
pub const XED_ICLASS_VPBLENDMQ: xed_iclass_enum_t = 1401;
pub const XED_ICLASS_VPBLENDMW: xed_iclass_enum_t = 1402;
pub const XED_ICLASS_VPBLENDVB: xed_iclass_enum_t = 1403;
pub const XED_ICLASS_VPBLENDW: xed_iclass_enum_t = 1404;
pub const XED_ICLASS_VPBROADCASTB: xed_iclass_enum_t = 1405;
pub const XED_ICLASS_VPBROADCASTD: xed_iclass_enum_t = 1406;
pub const XED_ICLASS_VPBROADCASTMB2Q: xed_iclass_enum_t = 1407;
pub const XED_ICLASS_VPBROADCASTMW2D: xed_iclass_enum_t = 1408;
pub const XED_ICLASS_VPBROADCASTQ: xed_iclass_enum_t = 1409;
pub const XED_ICLASS_VPBROADCASTW: xed_iclass_enum_t = 1410;
pub const XED_ICLASS_VPCLMULQDQ: xed_iclass_enum_t = 1411;
pub const XED_ICLASS_VPCMOV: xed_iclass_enum_t = 1412;
pub const XED_ICLASS_VPCMPB: xed_iclass_enum_t = 1413;
pub const XED_ICLASS_VPCMPD: xed_iclass_enum_t = 1414;
pub const XED_ICLASS_VPCMPEQB: xed_iclass_enum_t = 1415;
pub const XED_ICLASS_VPCMPEQD: xed_iclass_enum_t = 1416;
pub const XED_ICLASS_VPCMPEQQ: xed_iclass_enum_t = 1417;
pub const XED_ICLASS_VPCMPEQW: xed_iclass_enum_t = 1418;
pub const XED_ICLASS_VPCMPESTRI: xed_iclass_enum_t = 1419;
pub const XED_ICLASS_VPCMPESTRI64: xed_iclass_enum_t = 1420;
pub const XED_ICLASS_VPCMPESTRM: xed_iclass_enum_t = 1421;
pub const XED_ICLASS_VPCMPESTRM64: xed_iclass_enum_t = 1422;
pub const XED_ICLASS_VPCMPGTB: xed_iclass_enum_t = 1423;
pub const XED_ICLASS_VPCMPGTD: xed_iclass_enum_t = 1424;
pub const XED_ICLASS_VPCMPGTQ: xed_iclass_enum_t = 1425;
pub const XED_ICLASS_VPCMPGTW: xed_iclass_enum_t = 1426;
pub const XED_ICLASS_VPCMPISTRI: xed_iclass_enum_t = 1427;
pub const XED_ICLASS_VPCMPISTRI64: xed_iclass_enum_t = 1428;
pub const XED_ICLASS_VPCMPISTRM: xed_iclass_enum_t = 1429;
pub const XED_ICLASS_VPCMPQ: xed_iclass_enum_t = 1430;
pub const XED_ICLASS_VPCMPUB: xed_iclass_enum_t = 1431;
pub const XED_ICLASS_VPCMPUD: xed_iclass_enum_t = 1432;
pub const XED_ICLASS_VPCMPUQ: xed_iclass_enum_t = 1433;
pub const XED_ICLASS_VPCMPUW: xed_iclass_enum_t = 1434;
pub const XED_ICLASS_VPCMPW: xed_iclass_enum_t = 1435;
pub const XED_ICLASS_VPCOMB: xed_iclass_enum_t = 1436;
pub const XED_ICLASS_VPCOMD: xed_iclass_enum_t = 1437;
pub const XED_ICLASS_VPCOMPRESSB: xed_iclass_enum_t = 1438;
pub const XED_ICLASS_VPCOMPRESSD: xed_iclass_enum_t = 1439;
pub const XED_ICLASS_VPCOMPRESSQ: xed_iclass_enum_t = 1440;
pub const XED_ICLASS_VPCOMPRESSW: xed_iclass_enum_t = 1441;
pub const XED_ICLASS_VPCOMQ: xed_iclass_enum_t = 1442;
pub const XED_ICLASS_VPCOMUB: xed_iclass_enum_t = 1443;
pub const XED_ICLASS_VPCOMUD: xed_iclass_enum_t = 1444;
pub const XED_ICLASS_VPCOMUQ: xed_iclass_enum_t = 1445;
pub const XED_ICLASS_VPCOMUW: xed_iclass_enum_t = 1446;
pub const XED_ICLASS_VPCOMW: xed_iclass_enum_t = 1447;
pub const XED_ICLASS_VPCONFLICTD: xed_iclass_enum_t = 1448;
pub const XED_ICLASS_VPCONFLICTQ: xed_iclass_enum_t = 1449;
pub const XED_ICLASS_VPDPBSSD: xed_iclass_enum_t = 1450;
pub const XED_ICLASS_VPDPBSSDS: xed_iclass_enum_t = 1451;
pub const XED_ICLASS_VPDPBSUD: xed_iclass_enum_t = 1452;
pub const XED_ICLASS_VPDPBSUDS: xed_iclass_enum_t = 1453;
pub const XED_ICLASS_VPDPBUSD: xed_iclass_enum_t = 1454;
pub const XED_ICLASS_VPDPBUSDS: xed_iclass_enum_t = 1455;
pub const XED_ICLASS_VPDPBUUD: xed_iclass_enum_t = 1456;
pub const XED_ICLASS_VPDPBUUDS: xed_iclass_enum_t = 1457;
pub const XED_ICLASS_VPDPWSSD: xed_iclass_enum_t = 1458;
pub const XED_ICLASS_VPDPWSSDS: xed_iclass_enum_t = 1459;
pub const XED_ICLASS_VPDPWSUD: xed_iclass_enum_t = 1460;
pub const XED_ICLASS_VPDPWSUDS: xed_iclass_enum_t = 1461;
pub const XED_ICLASS_VPDPWUSD: xed_iclass_enum_t = 1462;
pub const XED_ICLASS_VPDPWUSDS: xed_iclass_enum_t = 1463;
pub const XED_ICLASS_VPDPWUUD: xed_iclass_enum_t = 1464;
pub const XED_ICLASS_VPDPWUUDS: xed_iclass_enum_t = 1465;
pub const XED_ICLASS_VPERM2F128: xed_iclass_enum_t = 1466;
pub const XED_ICLASS_VPERM2I128: xed_iclass_enum_t = 1467;
pub const XED_ICLASS_VPERMB: xed_iclass_enum_t = 1468;
pub const XED_ICLASS_VPERMD: xed_iclass_enum_t = 1469;
pub const XED_ICLASS_VPERMI2B: xed_iclass_enum_t = 1470;
pub const XED_ICLASS_VPERMI2D: xed_iclass_enum_t = 1471;
pub const XED_ICLASS_VPERMI2PD: xed_iclass_enum_t = 1472;
pub const XED_ICLASS_VPERMI2PS: xed_iclass_enum_t = 1473;
pub const XED_ICLASS_VPERMI2Q: xed_iclass_enum_t = 1474;
pub const XED_ICLASS_VPERMI2W: xed_iclass_enum_t = 1475;
pub const XED_ICLASS_VPERMIL2PD: xed_iclass_enum_t = 1476;
pub const XED_ICLASS_VPERMIL2PS: xed_iclass_enum_t = 1477;
pub const XED_ICLASS_VPERMILPD: xed_iclass_enum_t = 1478;
pub const XED_ICLASS_VPERMILPS: xed_iclass_enum_t = 1479;
pub const XED_ICLASS_VPERMPD: xed_iclass_enum_t = 1480;
pub const XED_ICLASS_VPERMPS: xed_iclass_enum_t = 1481;
pub const XED_ICLASS_VPERMQ: xed_iclass_enum_t = 1482;
pub const XED_ICLASS_VPERMT2B: xed_iclass_enum_t = 1483;
pub const XED_ICLASS_VPERMT2D: xed_iclass_enum_t = 1484;
pub const XED_ICLASS_VPERMT2PD: xed_iclass_enum_t = 1485;
pub const XED_ICLASS_VPERMT2PS: xed_iclass_enum_t = 1486;
pub const XED_ICLASS_VPERMT2Q: xed_iclass_enum_t = 1487;
pub const XED_ICLASS_VPERMT2W: xed_iclass_enum_t = 1488;
pub const XED_ICLASS_VPERMW: xed_iclass_enum_t = 1489;
pub const XED_ICLASS_VPEXPANDB: xed_iclass_enum_t = 1490;
pub const XED_ICLASS_VPEXPANDD: xed_iclass_enum_t = 1491;
pub const XED_ICLASS_VPEXPANDQ: xed_iclass_enum_t = 1492;
pub const XED_ICLASS_VPEXPANDW: xed_iclass_enum_t = 1493;
pub const XED_ICLASS_VPEXTRB: xed_iclass_enum_t = 1494;
pub const XED_ICLASS_VPEXTRD: xed_iclass_enum_t = 1495;
pub const XED_ICLASS_VPEXTRQ: xed_iclass_enum_t = 1496;
pub const XED_ICLASS_VPEXTRW: xed_iclass_enum_t = 1497;
pub const XED_ICLASS_VPEXTRW_C5: xed_iclass_enum_t = 1498;
pub const XED_ICLASS_VPGATHERDD: xed_iclass_enum_t = 1499;
pub const XED_ICLASS_VPGATHERDQ: xed_iclass_enum_t = 1500;
pub const XED_ICLASS_VPGATHERQD: xed_iclass_enum_t = 1501;
pub const XED_ICLASS_VPGATHERQQ: xed_iclass_enum_t = 1502;
pub const XED_ICLASS_VPHADDBD: xed_iclass_enum_t = 1503;
pub const XED_ICLASS_VPHADDBQ: xed_iclass_enum_t = 1504;
pub const XED_ICLASS_VPHADDBW: xed_iclass_enum_t = 1505;
pub const XED_ICLASS_VPHADDD: xed_iclass_enum_t = 1506;
pub const XED_ICLASS_VPHADDDQ: xed_iclass_enum_t = 1507;
pub const XED_ICLASS_VPHADDSW: xed_iclass_enum_t = 1508;
pub const XED_ICLASS_VPHADDUBD: xed_iclass_enum_t = 1509;
pub const XED_ICLASS_VPHADDUBQ: xed_iclass_enum_t = 1510;
pub const XED_ICLASS_VPHADDUBW: xed_iclass_enum_t = 1511;
pub const XED_ICLASS_VPHADDUDQ: xed_iclass_enum_t = 1512;
pub const XED_ICLASS_VPHADDUWD: xed_iclass_enum_t = 1513;
pub const XED_ICLASS_VPHADDUWQ: xed_iclass_enum_t = 1514;
pub const XED_ICLASS_VPHADDW: xed_iclass_enum_t = 1515;
pub const XED_ICLASS_VPHADDWD: xed_iclass_enum_t = 1516;
pub const XED_ICLASS_VPHADDWQ: xed_iclass_enum_t = 1517;
pub const XED_ICLASS_VPHMINPOSUW: xed_iclass_enum_t = 1518;
pub const XED_ICLASS_VPHSUBBW: xed_iclass_enum_t = 1519;
pub const XED_ICLASS_VPHSUBD: xed_iclass_enum_t = 1520;
pub const XED_ICLASS_VPHSUBDQ: xed_iclass_enum_t = 1521;
pub const XED_ICLASS_VPHSUBSW: xed_iclass_enum_t = 1522;
pub const XED_ICLASS_VPHSUBW: xed_iclass_enum_t = 1523;
pub const XED_ICLASS_VPHSUBWD: xed_iclass_enum_t = 1524;
pub const XED_ICLASS_VPINSRB: xed_iclass_enum_t = 1525;
pub const XED_ICLASS_VPINSRD: xed_iclass_enum_t = 1526;
pub const XED_ICLASS_VPINSRQ: xed_iclass_enum_t = 1527;
pub const XED_ICLASS_VPINSRW: xed_iclass_enum_t = 1528;
pub const XED_ICLASS_VPLZCNTD: xed_iclass_enum_t = 1529;
pub const XED_ICLASS_VPLZCNTQ: xed_iclass_enum_t = 1530;
pub const XED_ICLASS_VPMACSDD: xed_iclass_enum_t = 1531;
pub const XED_ICLASS_VPMACSDQH: xed_iclass_enum_t = 1532;
pub const XED_ICLASS_VPMACSDQL: xed_iclass_enum_t = 1533;
pub const XED_ICLASS_VPMACSSDD: xed_iclass_enum_t = 1534;
pub const XED_ICLASS_VPMACSSDQH: xed_iclass_enum_t = 1535;
pub const XED_ICLASS_VPMACSSDQL: xed_iclass_enum_t = 1536;
pub const XED_ICLASS_VPMACSSWD: xed_iclass_enum_t = 1537;
pub const XED_ICLASS_VPMACSSWW: xed_iclass_enum_t = 1538;
pub const XED_ICLASS_VPMACSWD: xed_iclass_enum_t = 1539;
pub const XED_ICLASS_VPMACSWW: xed_iclass_enum_t = 1540;
pub const XED_ICLASS_VPMADCSSWD: xed_iclass_enum_t = 1541;
pub const XED_ICLASS_VPMADCSWD: xed_iclass_enum_t = 1542;
pub const XED_ICLASS_VPMADD52HUQ: xed_iclass_enum_t = 1543;
pub const XED_ICLASS_VPMADD52LUQ: xed_iclass_enum_t = 1544;
pub const XED_ICLASS_VPMADDUBSW: xed_iclass_enum_t = 1545;
pub const XED_ICLASS_VPMADDWD: xed_iclass_enum_t = 1546;
pub const XED_ICLASS_VPMASKMOVD: xed_iclass_enum_t = 1547;
pub const XED_ICLASS_VPMASKMOVQ: xed_iclass_enum_t = 1548;
pub const XED_ICLASS_VPMAXSB: xed_iclass_enum_t = 1549;
pub const XED_ICLASS_VPMAXSD: xed_iclass_enum_t = 1550;
pub const XED_ICLASS_VPMAXSQ: xed_iclass_enum_t = 1551;
pub const XED_ICLASS_VPMAXSW: xed_iclass_enum_t = 1552;
pub const XED_ICLASS_VPMAXUB: xed_iclass_enum_t = 1553;
pub const XED_ICLASS_VPMAXUD: xed_iclass_enum_t = 1554;
pub const XED_ICLASS_VPMAXUQ: xed_iclass_enum_t = 1555;
pub const XED_ICLASS_VPMAXUW: xed_iclass_enum_t = 1556;
pub const XED_ICLASS_VPMINSB: xed_iclass_enum_t = 1557;
pub const XED_ICLASS_VPMINSD: xed_iclass_enum_t = 1558;
pub const XED_ICLASS_VPMINSQ: xed_iclass_enum_t = 1559;
pub const XED_ICLASS_VPMINSW: xed_iclass_enum_t = 1560;
pub const XED_ICLASS_VPMINUB: xed_iclass_enum_t = 1561;
pub const XED_ICLASS_VPMINUD: xed_iclass_enum_t = 1562;
pub const XED_ICLASS_VPMINUQ: xed_iclass_enum_t = 1563;
pub const XED_ICLASS_VPMINUW: xed_iclass_enum_t = 1564;
pub const XED_ICLASS_VPMOVB2M: xed_iclass_enum_t = 1565;
pub const XED_ICLASS_VPMOVD2M: xed_iclass_enum_t = 1566;
pub const XED_ICLASS_VPMOVDB: xed_iclass_enum_t = 1567;
pub const XED_ICLASS_VPMOVDW: xed_iclass_enum_t = 1568;
pub const XED_ICLASS_VPMOVM2B: xed_iclass_enum_t = 1569;
pub const XED_ICLASS_VPMOVM2D: xed_iclass_enum_t = 1570;
pub const XED_ICLASS_VPMOVM2Q: xed_iclass_enum_t = 1571;
pub const XED_ICLASS_VPMOVM2W: xed_iclass_enum_t = 1572;
pub const XED_ICLASS_VPMOVMSKB: xed_iclass_enum_t = 1573;
pub const XED_ICLASS_VPMOVQ2M: xed_iclass_enum_t = 1574;
pub const XED_ICLASS_VPMOVQB: xed_iclass_enum_t = 1575;
pub const XED_ICLASS_VPMOVQD: xed_iclass_enum_t = 1576;
pub const XED_ICLASS_VPMOVQW: xed_iclass_enum_t = 1577;
pub const XED_ICLASS_VPMOVSDB: xed_iclass_enum_t = 1578;
pub const XED_ICLASS_VPMOVSDW: xed_iclass_enum_t = 1579;
pub const XED_ICLASS_VPMOVSQB: xed_iclass_enum_t = 1580;
pub const XED_ICLASS_VPMOVSQD: xed_iclass_enum_t = 1581;
pub const XED_ICLASS_VPMOVSQW: xed_iclass_enum_t = 1582;
pub const XED_ICLASS_VPMOVSWB: xed_iclass_enum_t = 1583;
pub const XED_ICLASS_VPMOVSXBD: xed_iclass_enum_t = 1584;
pub const XED_ICLASS_VPMOVSXBQ: xed_iclass_enum_t = 1585;
pub const XED_ICLASS_VPMOVSXBW: xed_iclass_enum_t = 1586;
pub const XED_ICLASS_VPMOVSXDQ: xed_iclass_enum_t = 1587;
pub const XED_ICLASS_VPMOVSXWD: xed_iclass_enum_t = 1588;
pub const XED_ICLASS_VPMOVSXWQ: xed_iclass_enum_t = 1589;
pub const XED_ICLASS_VPMOVUSDB: xed_iclass_enum_t = 1590;
pub const XED_ICLASS_VPMOVUSDW: xed_iclass_enum_t = 1591;
pub const XED_ICLASS_VPMOVUSQB: xed_iclass_enum_t = 1592;
pub const XED_ICLASS_VPMOVUSQD: xed_iclass_enum_t = 1593;
pub const XED_ICLASS_VPMOVUSQW: xed_iclass_enum_t = 1594;
pub const XED_ICLASS_VPMOVUSWB: xed_iclass_enum_t = 1595;
pub const XED_ICLASS_VPMOVW2M: xed_iclass_enum_t = 1596;
pub const XED_ICLASS_VPMOVWB: xed_iclass_enum_t = 1597;
pub const XED_ICLASS_VPMOVZXBD: xed_iclass_enum_t = 1598;
pub const XED_ICLASS_VPMOVZXBQ: xed_iclass_enum_t = 1599;
pub const XED_ICLASS_VPMOVZXBW: xed_iclass_enum_t = 1600;
pub const XED_ICLASS_VPMOVZXDQ: xed_iclass_enum_t = 1601;
pub const XED_ICLASS_VPMOVZXWD: xed_iclass_enum_t = 1602;
pub const XED_ICLASS_VPMOVZXWQ: xed_iclass_enum_t = 1603;
pub const XED_ICLASS_VPMULDQ: xed_iclass_enum_t = 1604;
pub const XED_ICLASS_VPMULHRSW: xed_iclass_enum_t = 1605;
pub const XED_ICLASS_VPMULHUW: xed_iclass_enum_t = 1606;
pub const XED_ICLASS_VPMULHW: xed_iclass_enum_t = 1607;
pub const XED_ICLASS_VPMULLD: xed_iclass_enum_t = 1608;
pub const XED_ICLASS_VPMULLQ: xed_iclass_enum_t = 1609;
pub const XED_ICLASS_VPMULLW: xed_iclass_enum_t = 1610;
pub const XED_ICLASS_VPMULTISHIFTQB: xed_iclass_enum_t = 1611;
pub const XED_ICLASS_VPMULUDQ: xed_iclass_enum_t = 1612;
pub const XED_ICLASS_VPOPCNTB: xed_iclass_enum_t = 1613;
pub const XED_ICLASS_VPOPCNTD: xed_iclass_enum_t = 1614;
pub const XED_ICLASS_VPOPCNTQ: xed_iclass_enum_t = 1615;
pub const XED_ICLASS_VPOPCNTW: xed_iclass_enum_t = 1616;
pub const XED_ICLASS_VPOR: xed_iclass_enum_t = 1617;
pub const XED_ICLASS_VPORD: xed_iclass_enum_t = 1618;
pub const XED_ICLASS_VPORQ: xed_iclass_enum_t = 1619;
pub const XED_ICLASS_VPPERM: xed_iclass_enum_t = 1620;
pub const XED_ICLASS_VPROLD: xed_iclass_enum_t = 1621;
pub const XED_ICLASS_VPROLQ: xed_iclass_enum_t = 1622;
pub const XED_ICLASS_VPROLVD: xed_iclass_enum_t = 1623;
pub const XED_ICLASS_VPROLVQ: xed_iclass_enum_t = 1624;
pub const XED_ICLASS_VPRORD: xed_iclass_enum_t = 1625;
pub const XED_ICLASS_VPRORQ: xed_iclass_enum_t = 1626;
pub const XED_ICLASS_VPRORVD: xed_iclass_enum_t = 1627;
pub const XED_ICLASS_VPRORVQ: xed_iclass_enum_t = 1628;
pub const XED_ICLASS_VPROTB: xed_iclass_enum_t = 1629;
pub const XED_ICLASS_VPROTD: xed_iclass_enum_t = 1630;
pub const XED_ICLASS_VPROTQ: xed_iclass_enum_t = 1631;
pub const XED_ICLASS_VPROTW: xed_iclass_enum_t = 1632;
pub const XED_ICLASS_VPSADBW: xed_iclass_enum_t = 1633;
pub const XED_ICLASS_VPSCATTERDD: xed_iclass_enum_t = 1634;
pub const XED_ICLASS_VPSCATTERDQ: xed_iclass_enum_t = 1635;
pub const XED_ICLASS_VPSCATTERQD: xed_iclass_enum_t = 1636;
pub const XED_ICLASS_VPSCATTERQQ: xed_iclass_enum_t = 1637;
pub const XED_ICLASS_VPSHAB: xed_iclass_enum_t = 1638;
pub const XED_ICLASS_VPSHAD: xed_iclass_enum_t = 1639;
pub const XED_ICLASS_VPSHAQ: xed_iclass_enum_t = 1640;
pub const XED_ICLASS_VPSHAW: xed_iclass_enum_t = 1641;
pub const XED_ICLASS_VPSHLB: xed_iclass_enum_t = 1642;
pub const XED_ICLASS_VPSHLD: xed_iclass_enum_t = 1643;
pub const XED_ICLASS_VPSHLDD: xed_iclass_enum_t = 1644;
pub const XED_ICLASS_VPSHLDQ: xed_iclass_enum_t = 1645;
pub const XED_ICLASS_VPSHLDVD: xed_iclass_enum_t = 1646;
pub const XED_ICLASS_VPSHLDVQ: xed_iclass_enum_t = 1647;
pub const XED_ICLASS_VPSHLDVW: xed_iclass_enum_t = 1648;
pub const XED_ICLASS_VPSHLDW: xed_iclass_enum_t = 1649;
pub const XED_ICLASS_VPSHLQ: xed_iclass_enum_t = 1650;
pub const XED_ICLASS_VPSHLW: xed_iclass_enum_t = 1651;
pub const XED_ICLASS_VPSHRDD: xed_iclass_enum_t = 1652;
pub const XED_ICLASS_VPSHRDQ: xed_iclass_enum_t = 1653;
pub const XED_ICLASS_VPSHRDVD: xed_iclass_enum_t = 1654;
pub const XED_ICLASS_VPSHRDVQ: xed_iclass_enum_t = 1655;
pub const XED_ICLASS_VPSHRDVW: xed_iclass_enum_t = 1656;
pub const XED_ICLASS_VPSHRDW: xed_iclass_enum_t = 1657;
pub const XED_ICLASS_VPSHUFB: xed_iclass_enum_t = 1658;
pub const XED_ICLASS_VPSHUFBITQMB: xed_iclass_enum_t = 1659;
pub const XED_ICLASS_VPSHUFD: xed_iclass_enum_t = 1660;
pub const XED_ICLASS_VPSHUFHW: xed_iclass_enum_t = 1661;
pub const XED_ICLASS_VPSHUFLW: xed_iclass_enum_t = 1662;
pub const XED_ICLASS_VPSIGNB: xed_iclass_enum_t = 1663;
pub const XED_ICLASS_VPSIGND: xed_iclass_enum_t = 1664;
pub const XED_ICLASS_VPSIGNW: xed_iclass_enum_t = 1665;
pub const XED_ICLASS_VPSLLD: xed_iclass_enum_t = 1666;
pub const XED_ICLASS_VPSLLDQ: xed_iclass_enum_t = 1667;
pub const XED_ICLASS_VPSLLQ: xed_iclass_enum_t = 1668;
pub const XED_ICLASS_VPSLLVD: xed_iclass_enum_t = 1669;
pub const XED_ICLASS_VPSLLVQ: xed_iclass_enum_t = 1670;
pub const XED_ICLASS_VPSLLVW: xed_iclass_enum_t = 1671;
pub const XED_ICLASS_VPSLLW: xed_iclass_enum_t = 1672;
pub const XED_ICLASS_VPSRAD: xed_iclass_enum_t = 1673;
pub const XED_ICLASS_VPSRAQ: xed_iclass_enum_t = 1674;
pub const XED_ICLASS_VPSRAVD: xed_iclass_enum_t = 1675;
pub const XED_ICLASS_VPSRAVQ: xed_iclass_enum_t = 1676;
pub const XED_ICLASS_VPSRAVW: xed_iclass_enum_t = 1677;
pub const XED_ICLASS_VPSRAW: xed_iclass_enum_t = 1678;
pub const XED_ICLASS_VPSRLD: xed_iclass_enum_t = 1679;
pub const XED_ICLASS_VPSRLDQ: xed_iclass_enum_t = 1680;
pub const XED_ICLASS_VPSRLQ: xed_iclass_enum_t = 1681;
pub const XED_ICLASS_VPSRLVD: xed_iclass_enum_t = 1682;
pub const XED_ICLASS_VPSRLVQ: xed_iclass_enum_t = 1683;
pub const XED_ICLASS_VPSRLVW: xed_iclass_enum_t = 1684;
pub const XED_ICLASS_VPSRLW: xed_iclass_enum_t = 1685;
pub const XED_ICLASS_VPSUBB: xed_iclass_enum_t = 1686;
pub const XED_ICLASS_VPSUBD: xed_iclass_enum_t = 1687;
pub const XED_ICLASS_VPSUBQ: xed_iclass_enum_t = 1688;
pub const XED_ICLASS_VPSUBSB: xed_iclass_enum_t = 1689;
pub const XED_ICLASS_VPSUBSW: xed_iclass_enum_t = 1690;
pub const XED_ICLASS_VPSUBUSB: xed_iclass_enum_t = 1691;
pub const XED_ICLASS_VPSUBUSW: xed_iclass_enum_t = 1692;
pub const XED_ICLASS_VPSUBW: xed_iclass_enum_t = 1693;
pub const XED_ICLASS_VPTERNLOGD: xed_iclass_enum_t = 1694;
pub const XED_ICLASS_VPTERNLOGQ: xed_iclass_enum_t = 1695;
pub const XED_ICLASS_VPTEST: xed_iclass_enum_t = 1696;
pub const XED_ICLASS_VPTESTMB: xed_iclass_enum_t = 1697;
pub const XED_ICLASS_VPTESTMD: xed_iclass_enum_t = 1698;
pub const XED_ICLASS_VPTESTMQ: xed_iclass_enum_t = 1699;
pub const XED_ICLASS_VPTESTMW: xed_iclass_enum_t = 1700;
pub const XED_ICLASS_VPTESTNMB: xed_iclass_enum_t = 1701;
pub const XED_ICLASS_VPTESTNMD: xed_iclass_enum_t = 1702;
pub const XED_ICLASS_VPTESTNMQ: xed_iclass_enum_t = 1703;
pub const XED_ICLASS_VPTESTNMW: xed_iclass_enum_t = 1704;
pub const XED_ICLASS_VPUNPCKHBW: xed_iclass_enum_t = 1705;
pub const XED_ICLASS_VPUNPCKHDQ: xed_iclass_enum_t = 1706;
pub const XED_ICLASS_VPUNPCKHQDQ: xed_iclass_enum_t = 1707;
pub const XED_ICLASS_VPUNPCKHWD: xed_iclass_enum_t = 1708;
pub const XED_ICLASS_VPUNPCKLBW: xed_iclass_enum_t = 1709;
pub const XED_ICLASS_VPUNPCKLDQ: xed_iclass_enum_t = 1710;
pub const XED_ICLASS_VPUNPCKLQDQ: xed_iclass_enum_t = 1711;
pub const XED_ICLASS_VPUNPCKLWD: xed_iclass_enum_t = 1712;
pub const XED_ICLASS_VPXOR: xed_iclass_enum_t = 1713;
pub const XED_ICLASS_VPXORD: xed_iclass_enum_t = 1714;
pub const XED_ICLASS_VPXORQ: xed_iclass_enum_t = 1715;
pub const XED_ICLASS_VRANGEPD: xed_iclass_enum_t = 1716;
pub const XED_ICLASS_VRANGEPS: xed_iclass_enum_t = 1717;
pub const XED_ICLASS_VRANGESD: xed_iclass_enum_t = 1718;
pub const XED_ICLASS_VRANGESS: xed_iclass_enum_t = 1719;
pub const XED_ICLASS_VRCP14PD: xed_iclass_enum_t = 1720;
pub const XED_ICLASS_VRCP14PS: xed_iclass_enum_t = 1721;
pub const XED_ICLASS_VRCP14SD: xed_iclass_enum_t = 1722;
pub const XED_ICLASS_VRCP14SS: xed_iclass_enum_t = 1723;
pub const XED_ICLASS_VRCP28PD: xed_iclass_enum_t = 1724;
pub const XED_ICLASS_VRCP28PS: xed_iclass_enum_t = 1725;
pub const XED_ICLASS_VRCP28SD: xed_iclass_enum_t = 1726;
pub const XED_ICLASS_VRCP28SS: xed_iclass_enum_t = 1727;
pub const XED_ICLASS_VRCPPH: xed_iclass_enum_t = 1728;
pub const XED_ICLASS_VRCPPS: xed_iclass_enum_t = 1729;
pub const XED_ICLASS_VRCPSH: xed_iclass_enum_t = 1730;
pub const XED_ICLASS_VRCPSS: xed_iclass_enum_t = 1731;
pub const XED_ICLASS_VREDUCEPD: xed_iclass_enum_t = 1732;
pub const XED_ICLASS_VREDUCEPH: xed_iclass_enum_t = 1733;
pub const XED_ICLASS_VREDUCEPS: xed_iclass_enum_t = 1734;
pub const XED_ICLASS_VREDUCESD: xed_iclass_enum_t = 1735;
pub const XED_ICLASS_VREDUCESH: xed_iclass_enum_t = 1736;
pub const XED_ICLASS_VREDUCESS: xed_iclass_enum_t = 1737;
pub const XED_ICLASS_VRNDSCALEPD: xed_iclass_enum_t = 1738;
pub const XED_ICLASS_VRNDSCALEPH: xed_iclass_enum_t = 1739;
pub const XED_ICLASS_VRNDSCALEPS: xed_iclass_enum_t = 1740;
pub const XED_ICLASS_VRNDSCALESD: xed_iclass_enum_t = 1741;
pub const XED_ICLASS_VRNDSCALESH: xed_iclass_enum_t = 1742;
pub const XED_ICLASS_VRNDSCALESS: xed_iclass_enum_t = 1743;
pub const XED_ICLASS_VROUNDPD: xed_iclass_enum_t = 1744;
pub const XED_ICLASS_VROUNDPS: xed_iclass_enum_t = 1745;
pub const XED_ICLASS_VROUNDSD: xed_iclass_enum_t = 1746;
pub const XED_ICLASS_VROUNDSS: xed_iclass_enum_t = 1747;
pub const XED_ICLASS_VRSQRT14PD: xed_iclass_enum_t = 1748;
pub const XED_ICLASS_VRSQRT14PS: xed_iclass_enum_t = 1749;
pub const XED_ICLASS_VRSQRT14SD: xed_iclass_enum_t = 1750;
pub const XED_ICLASS_VRSQRT14SS: xed_iclass_enum_t = 1751;
pub const XED_ICLASS_VRSQRT28PD: xed_iclass_enum_t = 1752;
pub const XED_ICLASS_VRSQRT28PS: xed_iclass_enum_t = 1753;
pub const XED_ICLASS_VRSQRT28SD: xed_iclass_enum_t = 1754;
pub const XED_ICLASS_VRSQRT28SS: xed_iclass_enum_t = 1755;
pub const XED_ICLASS_VRSQRTPH: xed_iclass_enum_t = 1756;
pub const XED_ICLASS_VRSQRTPS: xed_iclass_enum_t = 1757;
pub const XED_ICLASS_VRSQRTSH: xed_iclass_enum_t = 1758;
pub const XED_ICLASS_VRSQRTSS: xed_iclass_enum_t = 1759;
pub const XED_ICLASS_VSCALEFPD: xed_iclass_enum_t = 1760;
pub const XED_ICLASS_VSCALEFPH: xed_iclass_enum_t = 1761;
pub const XED_ICLASS_VSCALEFPS: xed_iclass_enum_t = 1762;
pub const XED_ICLASS_VSCALEFSD: xed_iclass_enum_t = 1763;
pub const XED_ICLASS_VSCALEFSH: xed_iclass_enum_t = 1764;
pub const XED_ICLASS_VSCALEFSS: xed_iclass_enum_t = 1765;
pub const XED_ICLASS_VSCATTERDPD: xed_iclass_enum_t = 1766;
pub const XED_ICLASS_VSCATTERDPS: xed_iclass_enum_t = 1767;
pub const XED_ICLASS_VSCATTERPF0DPD: xed_iclass_enum_t = 1768;
pub const XED_ICLASS_VSCATTERPF0DPS: xed_iclass_enum_t = 1769;
pub const XED_ICLASS_VSCATTERPF0QPD: xed_iclass_enum_t = 1770;
pub const XED_ICLASS_VSCATTERPF0QPS: xed_iclass_enum_t = 1771;
pub const XED_ICLASS_VSCATTERPF1DPD: xed_iclass_enum_t = 1772;
pub const XED_ICLASS_VSCATTERPF1DPS: xed_iclass_enum_t = 1773;
pub const XED_ICLASS_VSCATTERPF1QPD: xed_iclass_enum_t = 1774;
pub const XED_ICLASS_VSCATTERPF1QPS: xed_iclass_enum_t = 1775;
pub const XED_ICLASS_VSCATTERQPD: xed_iclass_enum_t = 1776;
pub const XED_ICLASS_VSCATTERQPS: xed_iclass_enum_t = 1777;
pub const XED_ICLASS_VSHA512MSG1: xed_iclass_enum_t = 1778;
pub const XED_ICLASS_VSHA512MSG2: xed_iclass_enum_t = 1779;
pub const XED_ICLASS_VSHA512RNDS2: xed_iclass_enum_t = 1780;
pub const XED_ICLASS_VSHUFF32X4: xed_iclass_enum_t = 1781;
pub const XED_ICLASS_VSHUFF64X2: xed_iclass_enum_t = 1782;
pub const XED_ICLASS_VSHUFI32X4: xed_iclass_enum_t = 1783;
pub const XED_ICLASS_VSHUFI64X2: xed_iclass_enum_t = 1784;
pub const XED_ICLASS_VSHUFPD: xed_iclass_enum_t = 1785;
pub const XED_ICLASS_VSHUFPS: xed_iclass_enum_t = 1786;
pub const XED_ICLASS_VSM3MSG1: xed_iclass_enum_t = 1787;
pub const XED_ICLASS_VSM3MSG2: xed_iclass_enum_t = 1788;
pub const XED_ICLASS_VSM3RNDS2: xed_iclass_enum_t = 1789;
pub const XED_ICLASS_VSM4KEY4: xed_iclass_enum_t = 1790;
pub const XED_ICLASS_VSM4RNDS4: xed_iclass_enum_t = 1791;
pub const XED_ICLASS_VSQRTPD: xed_iclass_enum_t = 1792;
pub const XED_ICLASS_VSQRTPH: xed_iclass_enum_t = 1793;
pub const XED_ICLASS_VSQRTPS: xed_iclass_enum_t = 1794;
pub const XED_ICLASS_VSQRTSD: xed_iclass_enum_t = 1795;
pub const XED_ICLASS_VSQRTSH: xed_iclass_enum_t = 1796;
pub const XED_ICLASS_VSQRTSS: xed_iclass_enum_t = 1797;
pub const XED_ICLASS_VSTMXCSR: xed_iclass_enum_t = 1798;
pub const XED_ICLASS_VSUBPD: xed_iclass_enum_t = 1799;
pub const XED_ICLASS_VSUBPH: xed_iclass_enum_t = 1800;
pub const XED_ICLASS_VSUBPS: xed_iclass_enum_t = 1801;
pub const XED_ICLASS_VSUBSD: xed_iclass_enum_t = 1802;
pub const XED_ICLASS_VSUBSH: xed_iclass_enum_t = 1803;
pub const XED_ICLASS_VSUBSS: xed_iclass_enum_t = 1804;
pub const XED_ICLASS_VTESTPD: xed_iclass_enum_t = 1805;
pub const XED_ICLASS_VTESTPS: xed_iclass_enum_t = 1806;
pub const XED_ICLASS_VUCOMISD: xed_iclass_enum_t = 1807;
pub const XED_ICLASS_VUCOMISH: xed_iclass_enum_t = 1808;
pub const XED_ICLASS_VUCOMISS: xed_iclass_enum_t = 1809;
pub const XED_ICLASS_VUNPCKHPD: xed_iclass_enum_t = 1810;
pub const XED_ICLASS_VUNPCKHPS: xed_iclass_enum_t = 1811;
pub const XED_ICLASS_VUNPCKLPD: xed_iclass_enum_t = 1812;
pub const XED_ICLASS_VUNPCKLPS: xed_iclass_enum_t = 1813;
pub const XED_ICLASS_VXORPD: xed_iclass_enum_t = 1814;
pub const XED_ICLASS_VXORPS: xed_iclass_enum_t = 1815;
pub const XED_ICLASS_VZEROALL: xed_iclass_enum_t = 1816;
pub const XED_ICLASS_VZEROUPPER: xed_iclass_enum_t = 1817;
pub const XED_ICLASS_WBINVD: xed_iclass_enum_t = 1818;
pub const XED_ICLASS_WBNOINVD: xed_iclass_enum_t = 1819;
pub const XED_ICLASS_WRFSBASE: xed_iclass_enum_t = 1820;
pub const XED_ICLASS_WRGSBASE: xed_iclass_enum_t = 1821;
pub const XED_ICLASS_WRMSR: xed_iclass_enum_t = 1822;
pub const XED_ICLASS_WRMSRLIST: xed_iclass_enum_t = 1823;
pub const XED_ICLASS_WRMSRNS: xed_iclass_enum_t = 1824;
pub const XED_ICLASS_WRPKRU: xed_iclass_enum_t = 1825;
pub const XED_ICLASS_WRSSD: xed_iclass_enum_t = 1826;
pub const XED_ICLASS_WRSSQ: xed_iclass_enum_t = 1827;
pub const XED_ICLASS_WRUSSD: xed_iclass_enum_t = 1828;
pub const XED_ICLASS_WRUSSQ: xed_iclass_enum_t = 1829;
pub const XED_ICLASS_XABORT: xed_iclass_enum_t = 1830;
pub const XED_ICLASS_XADD: xed_iclass_enum_t = 1831;
pub const XED_ICLASS_XADD_LOCK: xed_iclass_enum_t = 1832;
pub const XED_ICLASS_XBEGIN: xed_iclass_enum_t = 1833;
pub const XED_ICLASS_XCHG: xed_iclass_enum_t = 1834;
pub const XED_ICLASS_XEND: xed_iclass_enum_t = 1835;
pub const XED_ICLASS_XGETBV: xed_iclass_enum_t = 1836;
pub const XED_ICLASS_XLAT: xed_iclass_enum_t = 1837;
pub const XED_ICLASS_XOR: xed_iclass_enum_t = 1838;
pub const XED_ICLASS_XORPD: xed_iclass_enum_t = 1839;
pub const XED_ICLASS_XORPS: xed_iclass_enum_t = 1840;
pub const XED_ICLASS_XOR_LOCK: xed_iclass_enum_t = 1841;
pub const XED_ICLASS_XRESLDTRK: xed_iclass_enum_t = 1842;
pub const XED_ICLASS_XRSTOR: xed_iclass_enum_t = 1843;
pub const XED_ICLASS_XRSTOR64: xed_iclass_enum_t = 1844;
pub const XED_ICLASS_XRSTORS: xed_iclass_enum_t = 1845;
pub const XED_ICLASS_XRSTORS64: xed_iclass_enum_t = 1846;
pub const XED_ICLASS_XSAVE: xed_iclass_enum_t = 1847;
pub const XED_ICLASS_XSAVE64: xed_iclass_enum_t = 1848;
pub const XED_ICLASS_XSAVEC: xed_iclass_enum_t = 1849;
pub const XED_ICLASS_XSAVEC64: xed_iclass_enum_t = 1850;
pub const XED_ICLASS_XSAVEOPT: xed_iclass_enum_t = 1851;
pub const XED_ICLASS_XSAVEOPT64: xed_iclass_enum_t = 1852;
pub const XED_ICLASS_XSAVES: xed_iclass_enum_t = 1853;
pub const XED_ICLASS_XSAVES64: xed_iclass_enum_t = 1854;
pub const XED_ICLASS_XSETBV: xed_iclass_enum_t = 1855;
pub const XED_ICLASS_XSTORE: xed_iclass_enum_t = 1856;
pub const XED_ICLASS_XSUSLDTRK: xed_iclass_enum_t = 1857;
pub const XED_ICLASS_XTEST: xed_iclass_enum_t = 1858;
pub const XED_ICLASS_LAST: xed_iclass_enum_t = 1859;
pub type xed_iclass_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_iclass_enum_t types.\n @param s A C-string.\n @return #xed_iclass_enum_t\n @ingroup ENUM"]
    pub fn str2xed_iclass_enum_t(s: *const ::core::ffi::c_char) -> xed_iclass_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_iclass_enum_t types.\n @param p An enumeration element of type xed_iclass_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_iclass_enum_t2str(p: xed_iclass_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_iclass_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_iclass_enum_t_last() -> xed_iclass_enum_t;
}
pub const XED_OPVIS_INVALID: xed_operand_visibility_enum_t = 0;
#[doc = "< Shows up in operand encoding"]
pub const XED_OPVIS_EXPLICIT: xed_operand_visibility_enum_t = 1;
#[doc = "< Part of the opcode, but listed as an operand"]
pub const XED_OPVIS_IMPLICIT: xed_operand_visibility_enum_t = 2;
#[doc = "< Part of the opcode, but not typically listed as an operand"]
pub const XED_OPVIS_SUPPRESSED: xed_operand_visibility_enum_t = 3;
pub const XED_OPVIS_LAST: xed_operand_visibility_enum_t = 4;
pub type xed_operand_visibility_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_operand_visibility_enum_t types.\n @param s A C-string.\n @return #xed_operand_visibility_enum_t\n @ingroup ENUM"]
    pub fn str2xed_operand_visibility_enum_t(
        s: *const ::core::ffi::c_char,
    ) -> xed_operand_visibility_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_operand_visibility_enum_t types.\n @param p An enumeration element of type xed_operand_visibility_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_operand_visibility_enum_t2str(
        p: xed_operand_visibility_enum_t,
    ) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_operand_visibility_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_operand_visibility_enum_t_last() -> xed_operand_visibility_enum_t;
}
pub const XED_OPERAND_ACTION_INVALID: xed_operand_action_enum_t = 0;
#[doc = "< Read and written (must write)"]
pub const XED_OPERAND_ACTION_RW: xed_operand_action_enum_t = 1;
#[doc = "< Read-only"]
pub const XED_OPERAND_ACTION_R: xed_operand_action_enum_t = 2;
#[doc = "< Write-only (must write)"]
pub const XED_OPERAND_ACTION_W: xed_operand_action_enum_t = 3;
#[doc = "< Read and conditionlly written (may write)"]
pub const XED_OPERAND_ACTION_RCW: xed_operand_action_enum_t = 4;
#[doc = "< Conditionlly written (may write)"]
pub const XED_OPERAND_ACTION_CW: xed_operand_action_enum_t = 5;
#[doc = "< Conditionlly read, always written (must write)"]
pub const XED_OPERAND_ACTION_CRW: xed_operand_action_enum_t = 6;
#[doc = "< Conditional read"]
pub const XED_OPERAND_ACTION_CR: xed_operand_action_enum_t = 7;
pub const XED_OPERAND_ACTION_LAST: xed_operand_action_enum_t = 8;
pub type xed_operand_action_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_operand_action_enum_t types.\n @param s A C-string.\n @return #xed_operand_action_enum_t\n @ingroup ENUM"]
    pub fn str2xed_operand_action_enum_t(
        s: *const ::core::ffi::c_char,
    ) -> xed_operand_action_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_operand_action_enum_t types.\n @param p An enumeration element of type xed_operand_action_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_operand_action_enum_t2str(
        p: xed_operand_action_enum_t,
    ) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_operand_action_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_operand_action_enum_t_last() -> xed_operand_action_enum_t;
}
pub const XED_OPERAND_CONVERT_INVALID: xed_operand_convert_enum_t = 0;
pub const XED_OPERAND_CONVERT_ZEROSTR: xed_operand_convert_enum_t = 1;
pub const XED_OPERAND_CONVERT_SAESTR: xed_operand_convert_enum_t = 2;
pub const XED_OPERAND_CONVERT_ROUNDC: xed_operand_convert_enum_t = 3;
pub const XED_OPERAND_CONVERT_BCASTSTR: xed_operand_convert_enum_t = 4;
pub const XED_OPERAND_CONVERT_LAST: xed_operand_convert_enum_t = 5;
pub type xed_operand_convert_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_operand_convert_enum_t types.\n @param s A C-string.\n @return #xed_operand_convert_enum_t\n @ingroup ENUM"]
    pub fn str2xed_operand_convert_enum_t(
        s: *const ::core::ffi::c_char,
    ) -> xed_operand_convert_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_operand_convert_enum_t types.\n @param p An enumeration element of type xed_operand_convert_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_operand_convert_enum_t2str(
        p: xed_operand_convert_enum_t,
    ) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_operand_convert_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_operand_convert_enum_t_last() -> xed_operand_convert_enum_t;
}
pub const XED_OPERAND_TYPE_INVALID: xed_operand_type_enum_t = 0;
pub const XED_OPERAND_TYPE_ERROR: xed_operand_type_enum_t = 1;
pub const XED_OPERAND_TYPE_IMM: xed_operand_type_enum_t = 2;
pub const XED_OPERAND_TYPE_IMM_CONST: xed_operand_type_enum_t = 3;
pub const XED_OPERAND_TYPE_NT_LOOKUP_FN: xed_operand_type_enum_t = 4;
pub const XED_OPERAND_TYPE_NT_LOOKUP_FN2: xed_operand_type_enum_t = 5;
pub const XED_OPERAND_TYPE_NT_LOOKUP_FN4: xed_operand_type_enum_t = 6;
pub const XED_OPERAND_TYPE_REG: xed_operand_type_enum_t = 7;
pub const XED_OPERAND_TYPE_LAST: xed_operand_type_enum_t = 8;
pub type xed_operand_type_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_operand_type_enum_t types.\n @param s A C-string.\n @return #xed_operand_type_enum_t\n @ingroup ENUM"]
    pub fn str2xed_operand_type_enum_t(s: *const ::core::ffi::c_char) -> xed_operand_type_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_operand_type_enum_t types.\n @param p An enumeration element of type xed_operand_type_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_operand_type_enum_t2str(p: xed_operand_type_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_operand_type_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_operand_type_enum_t_last() -> xed_operand_type_enum_t;
}
pub const XED_NONTERMINAL_INVALID: xed_nonterminal_enum_t = 0;
pub const XED_NONTERMINAL_AR10: xed_nonterminal_enum_t = 1;
pub const XED_NONTERMINAL_AR11: xed_nonterminal_enum_t = 2;
pub const XED_NONTERMINAL_AR12: xed_nonterminal_enum_t = 3;
pub const XED_NONTERMINAL_AR13: xed_nonterminal_enum_t = 4;
pub const XED_NONTERMINAL_AR14: xed_nonterminal_enum_t = 5;
pub const XED_NONTERMINAL_AR15: xed_nonterminal_enum_t = 6;
pub const XED_NONTERMINAL_AR16: xed_nonterminal_enum_t = 7;
pub const XED_NONTERMINAL_AR17: xed_nonterminal_enum_t = 8;
pub const XED_NONTERMINAL_AR18: xed_nonterminal_enum_t = 9;
pub const XED_NONTERMINAL_AR19: xed_nonterminal_enum_t = 10;
pub const XED_NONTERMINAL_AR20: xed_nonterminal_enum_t = 11;
pub const XED_NONTERMINAL_AR21: xed_nonterminal_enum_t = 12;
pub const XED_NONTERMINAL_AR22: xed_nonterminal_enum_t = 13;
pub const XED_NONTERMINAL_AR23: xed_nonterminal_enum_t = 14;
pub const XED_NONTERMINAL_AR24: xed_nonterminal_enum_t = 15;
pub const XED_NONTERMINAL_AR25: xed_nonterminal_enum_t = 16;
pub const XED_NONTERMINAL_AR26: xed_nonterminal_enum_t = 17;
pub const XED_NONTERMINAL_AR27: xed_nonterminal_enum_t = 18;
pub const XED_NONTERMINAL_AR28: xed_nonterminal_enum_t = 19;
pub const XED_NONTERMINAL_AR29: xed_nonterminal_enum_t = 20;
pub const XED_NONTERMINAL_AR30: xed_nonterminal_enum_t = 21;
pub const XED_NONTERMINAL_AR31: xed_nonterminal_enum_t = 22;
pub const XED_NONTERMINAL_AR8: xed_nonterminal_enum_t = 23;
pub const XED_NONTERMINAL_AR9: xed_nonterminal_enum_t = 24;
pub const XED_NONTERMINAL_ARAX: xed_nonterminal_enum_t = 25;
pub const XED_NONTERMINAL_ARBP: xed_nonterminal_enum_t = 26;
pub const XED_NONTERMINAL_ARBX: xed_nonterminal_enum_t = 27;
pub const XED_NONTERMINAL_ARCX: xed_nonterminal_enum_t = 28;
pub const XED_NONTERMINAL_ARDI: xed_nonterminal_enum_t = 29;
pub const XED_NONTERMINAL_ARDX: xed_nonterminal_enum_t = 30;
pub const XED_NONTERMINAL_ARSI: xed_nonterminal_enum_t = 31;
pub const XED_NONTERMINAL_ARSP: xed_nonterminal_enum_t = 32;
pub const XED_NONTERMINAL_ASZ_NONTERM: xed_nonterminal_enum_t = 33;
pub const XED_NONTERMINAL_AVX512_ROUND: xed_nonterminal_enum_t = 34;
pub const XED_NONTERMINAL_AVX_INSTRUCTIONS: xed_nonterminal_enum_t = 35;
pub const XED_NONTERMINAL_AVX_SPLITTER: xed_nonterminal_enum_t = 36;
pub const XED_NONTERMINAL_A_GPR_B: xed_nonterminal_enum_t = 37;
pub const XED_NONTERMINAL_A_GPR_R: xed_nonterminal_enum_t = 38;
pub const XED_NONTERMINAL_BND_B: xed_nonterminal_enum_t = 39;
pub const XED_NONTERMINAL_BND_B_CHECK: xed_nonterminal_enum_t = 40;
pub const XED_NONTERMINAL_BND_R: xed_nonterminal_enum_t = 41;
pub const XED_NONTERMINAL_BND_R_CHECK: xed_nonterminal_enum_t = 42;
pub const XED_NONTERMINAL_BRANCH_HINT: xed_nonterminal_enum_t = 43;
pub const XED_NONTERMINAL_BRDISP32: xed_nonterminal_enum_t = 44;
pub const XED_NONTERMINAL_BRDISP64: xed_nonterminal_enum_t = 45;
pub const XED_NONTERMINAL_BRDISP8: xed_nonterminal_enum_t = 46;
pub const XED_NONTERMINAL_BRDISPZ: xed_nonterminal_enum_t = 47;
pub const XED_NONTERMINAL_CET_NO_TRACK: xed_nonterminal_enum_t = 48;
pub const XED_NONTERMINAL_CR_B: xed_nonterminal_enum_t = 49;
pub const XED_NONTERMINAL_CR_R: xed_nonterminal_enum_t = 50;
pub const XED_NONTERMINAL_CR_WIDTH: xed_nonterminal_enum_t = 51;
pub const XED_NONTERMINAL_DF64: xed_nonterminal_enum_t = 52;
pub const XED_NONTERMINAL_DFV: xed_nonterminal_enum_t = 53;
pub const XED_NONTERMINAL_DR_R: xed_nonterminal_enum_t = 54;
pub const XED_NONTERMINAL_ESIZE_128_BITS: xed_nonterminal_enum_t = 55;
pub const XED_NONTERMINAL_ESIZE_16_BITS: xed_nonterminal_enum_t = 56;
pub const XED_NONTERMINAL_ESIZE_1_BITS: xed_nonterminal_enum_t = 57;
pub const XED_NONTERMINAL_ESIZE_2_BITS: xed_nonterminal_enum_t = 58;
pub const XED_NONTERMINAL_ESIZE_32_BITS: xed_nonterminal_enum_t = 59;
pub const XED_NONTERMINAL_ESIZE_4_BITS: xed_nonterminal_enum_t = 60;
pub const XED_NONTERMINAL_ESIZE_64_BITS: xed_nonterminal_enum_t = 61;
pub const XED_NONTERMINAL_ESIZE_8_BITS: xed_nonterminal_enum_t = 62;
pub const XED_NONTERMINAL_EVAPX: xed_nonterminal_enum_t = 63;
pub const XED_NONTERMINAL_EVAPX_SCC: xed_nonterminal_enum_t = 64;
pub const XED_NONTERMINAL_EVEXR4_ONE: xed_nonterminal_enum_t = 65;
pub const XED_NONTERMINAL_EVEX_INSTRUCTIONS: xed_nonterminal_enum_t = 66;
pub const XED_NONTERMINAL_EVEX_SPLITTER: xed_nonterminal_enum_t = 67;
pub const XED_NONTERMINAL_FINAL_DSEG: xed_nonterminal_enum_t = 68;
pub const XED_NONTERMINAL_FINAL_DSEG1: xed_nonterminal_enum_t = 69;
pub const XED_NONTERMINAL_FINAL_DSEG1_MODE64: xed_nonterminal_enum_t = 70;
pub const XED_NONTERMINAL_FINAL_DSEG1_NOT64: xed_nonterminal_enum_t = 71;
pub const XED_NONTERMINAL_FINAL_DSEG_MODE64: xed_nonterminal_enum_t = 72;
pub const XED_NONTERMINAL_FINAL_DSEG_NOT64: xed_nonterminal_enum_t = 73;
pub const XED_NONTERMINAL_FINAL_ESEG: xed_nonterminal_enum_t = 74;
pub const XED_NONTERMINAL_FINAL_ESEG1: xed_nonterminal_enum_t = 75;
pub const XED_NONTERMINAL_FINAL_SSEG: xed_nonterminal_enum_t = 76;
pub const XED_NONTERMINAL_FINAL_SSEG0: xed_nonterminal_enum_t = 77;
pub const XED_NONTERMINAL_FINAL_SSEG1: xed_nonterminal_enum_t = 78;
pub const XED_NONTERMINAL_FINAL_SSEG_MODE64: xed_nonterminal_enum_t = 79;
pub const XED_NONTERMINAL_FINAL_SSEG_NOT64: xed_nonterminal_enum_t = 80;
pub const XED_NONTERMINAL_FIX_ROUND_LEN128: xed_nonterminal_enum_t = 81;
pub const XED_NONTERMINAL_FIX_ROUND_LEN512: xed_nonterminal_enum_t = 82;
pub const XED_NONTERMINAL_FORCE64: xed_nonterminal_enum_t = 83;
pub const XED_NONTERMINAL_GPR16_B: xed_nonterminal_enum_t = 84;
pub const XED_NONTERMINAL_GPR16_N: xed_nonterminal_enum_t = 85;
pub const XED_NONTERMINAL_GPR16_R: xed_nonterminal_enum_t = 86;
pub const XED_NONTERMINAL_GPR16_SB: xed_nonterminal_enum_t = 87;
pub const XED_NONTERMINAL_GPR32_B: xed_nonterminal_enum_t = 88;
pub const XED_NONTERMINAL_GPR32_N: xed_nonterminal_enum_t = 89;
pub const XED_NONTERMINAL_GPR32_R: xed_nonterminal_enum_t = 90;
pub const XED_NONTERMINAL_GPR32_SB: xed_nonterminal_enum_t = 91;
pub const XED_NONTERMINAL_GPR64_B: xed_nonterminal_enum_t = 92;
pub const XED_NONTERMINAL_GPR64_B_NORSP: xed_nonterminal_enum_t = 93;
pub const XED_NONTERMINAL_GPR64_N: xed_nonterminal_enum_t = 94;
pub const XED_NONTERMINAL_GPR64_N_NORSP: xed_nonterminal_enum_t = 95;
pub const XED_NONTERMINAL_GPR64_R: xed_nonterminal_enum_t = 96;
pub const XED_NONTERMINAL_GPR64_SB: xed_nonterminal_enum_t = 97;
pub const XED_NONTERMINAL_GPR8_B: xed_nonterminal_enum_t = 98;
pub const XED_NONTERMINAL_GPR8_N: xed_nonterminal_enum_t = 99;
pub const XED_NONTERMINAL_GPR8_R: xed_nonterminal_enum_t = 100;
pub const XED_NONTERMINAL_GPR8_SB: xed_nonterminal_enum_t = 101;
pub const XED_NONTERMINAL_GPRV_B: xed_nonterminal_enum_t = 102;
pub const XED_NONTERMINAL_GPRV_N: xed_nonterminal_enum_t = 103;
pub const XED_NONTERMINAL_GPRV_R: xed_nonterminal_enum_t = 104;
pub const XED_NONTERMINAL_GPRV_SB: xed_nonterminal_enum_t = 105;
pub const XED_NONTERMINAL_GPRY_B: xed_nonterminal_enum_t = 106;
pub const XED_NONTERMINAL_GPRY_R: xed_nonterminal_enum_t = 107;
pub const XED_NONTERMINAL_GPRZ_B: xed_nonterminal_enum_t = 108;
pub const XED_NONTERMINAL_GPRZ_R: xed_nonterminal_enum_t = 109;
pub const XED_NONTERMINAL_IGNORE66: xed_nonterminal_enum_t = 110;
pub const XED_NONTERMINAL_IMMUNE66: xed_nonterminal_enum_t = 111;
pub const XED_NONTERMINAL_IMMUNE66_LOOP64: xed_nonterminal_enum_t = 112;
pub const XED_NONTERMINAL_IMMUNE_REXW: xed_nonterminal_enum_t = 113;
pub const XED_NONTERMINAL_INSTRUCTIONS: xed_nonterminal_enum_t = 114;
pub const XED_NONTERMINAL_ISA: xed_nonterminal_enum_t = 115;
pub const XED_NONTERMINAL_MASK1: xed_nonterminal_enum_t = 116;
pub const XED_NONTERMINAL_MASKNOT0: xed_nonterminal_enum_t = 117;
pub const XED_NONTERMINAL_MASK_B: xed_nonterminal_enum_t = 118;
pub const XED_NONTERMINAL_MASK_N: xed_nonterminal_enum_t = 119;
pub const XED_NONTERMINAL_MASK_N32: xed_nonterminal_enum_t = 120;
pub const XED_NONTERMINAL_MASK_N64: xed_nonterminal_enum_t = 121;
pub const XED_NONTERMINAL_MASK_R: xed_nonterminal_enum_t = 122;
pub const XED_NONTERMINAL_MEMDISP: xed_nonterminal_enum_t = 123;
pub const XED_NONTERMINAL_MEMDISP16: xed_nonterminal_enum_t = 124;
pub const XED_NONTERMINAL_MEMDISP32: xed_nonterminal_enum_t = 125;
pub const XED_NONTERMINAL_MEMDISP8: xed_nonterminal_enum_t = 126;
pub const XED_NONTERMINAL_MEMDISPV: xed_nonterminal_enum_t = 127;
pub const XED_NONTERMINAL_MMX_B: xed_nonterminal_enum_t = 128;
pub const XED_NONTERMINAL_MMX_R: xed_nonterminal_enum_t = 129;
pub const XED_NONTERMINAL_MODRM: xed_nonterminal_enum_t = 130;
pub const XED_NONTERMINAL_MODRM16: xed_nonterminal_enum_t = 131;
pub const XED_NONTERMINAL_MODRM32: xed_nonterminal_enum_t = 132;
pub const XED_NONTERMINAL_MODRM64ALT32: xed_nonterminal_enum_t = 133;
pub const XED_NONTERMINAL_NELEM_EIGHTHMEM: xed_nonterminal_enum_t = 134;
pub const XED_NONTERMINAL_NELEM_FULL: xed_nonterminal_enum_t = 135;
pub const XED_NONTERMINAL_NELEM_FULLMEM: xed_nonterminal_enum_t = 136;
pub const XED_NONTERMINAL_NELEM_GPR_READER: xed_nonterminal_enum_t = 137;
pub const XED_NONTERMINAL_NELEM_GPR_READER_BYTE: xed_nonterminal_enum_t = 138;
pub const XED_NONTERMINAL_NELEM_GPR_READER_SUBDWORD: xed_nonterminal_enum_t = 139;
pub const XED_NONTERMINAL_NELEM_GPR_READER_WORD: xed_nonterminal_enum_t = 140;
pub const XED_NONTERMINAL_NELEM_GPR_WRITER_LDOP: xed_nonterminal_enum_t = 141;
pub const XED_NONTERMINAL_NELEM_GPR_WRITER_LDOP_D: xed_nonterminal_enum_t = 142;
pub const XED_NONTERMINAL_NELEM_GPR_WRITER_LDOP_Q: xed_nonterminal_enum_t = 143;
pub const XED_NONTERMINAL_NELEM_GPR_WRITER_STORE: xed_nonterminal_enum_t = 144;
pub const XED_NONTERMINAL_NELEM_GPR_WRITER_STORE_BYTE: xed_nonterminal_enum_t = 145;
pub const XED_NONTERMINAL_NELEM_GPR_WRITER_STORE_SUBDWORD: xed_nonterminal_enum_t = 146;
pub const XED_NONTERMINAL_NELEM_GPR_WRITER_STORE_WORD: xed_nonterminal_enum_t = 147;
pub const XED_NONTERMINAL_NELEM_GSCAT: xed_nonterminal_enum_t = 148;
pub const XED_NONTERMINAL_NELEM_HALF: xed_nonterminal_enum_t = 149;
pub const XED_NONTERMINAL_NELEM_HALFMEM: xed_nonterminal_enum_t = 150;
pub const XED_NONTERMINAL_NELEM_MEM128: xed_nonterminal_enum_t = 151;
pub const XED_NONTERMINAL_NELEM_MOVDDUP: xed_nonterminal_enum_t = 152;
pub const XED_NONTERMINAL_NELEM_QUARTER: xed_nonterminal_enum_t = 153;
pub const XED_NONTERMINAL_NELEM_QUARTERMEM: xed_nonterminal_enum_t = 154;
pub const XED_NONTERMINAL_NELEM_SCALAR: xed_nonterminal_enum_t = 155;
pub const XED_NONTERMINAL_NELEM_TUPLE1: xed_nonterminal_enum_t = 156;
pub const XED_NONTERMINAL_NELEM_TUPLE1_4X: xed_nonterminal_enum_t = 157;
pub const XED_NONTERMINAL_NELEM_TUPLE1_BYTE: xed_nonterminal_enum_t = 158;
pub const XED_NONTERMINAL_NELEM_TUPLE1_SUBDWORD: xed_nonterminal_enum_t = 159;
pub const XED_NONTERMINAL_NELEM_TUPLE1_WORD: xed_nonterminal_enum_t = 160;
pub const XED_NONTERMINAL_NELEM_TUPLE2: xed_nonterminal_enum_t = 161;
pub const XED_NONTERMINAL_NELEM_TUPLE4: xed_nonterminal_enum_t = 162;
pub const XED_NONTERMINAL_NELEM_TUPLE8: xed_nonterminal_enum_t = 163;
pub const XED_NONTERMINAL_OEAX: xed_nonterminal_enum_t = 164;
pub const XED_NONTERMINAL_ONE: xed_nonterminal_enum_t = 165;
pub const XED_NONTERMINAL_ORAX: xed_nonterminal_enum_t = 166;
pub const XED_NONTERMINAL_ORBP: xed_nonterminal_enum_t = 167;
pub const XED_NONTERMINAL_ORBX: xed_nonterminal_enum_t = 168;
pub const XED_NONTERMINAL_ORCX: xed_nonterminal_enum_t = 169;
pub const XED_NONTERMINAL_ORDX: xed_nonterminal_enum_t = 170;
pub const XED_NONTERMINAL_ORSP: xed_nonterminal_enum_t = 171;
pub const XED_NONTERMINAL_OSZ_NONTERM: xed_nonterminal_enum_t = 172;
pub const XED_NONTERMINAL_OVERRIDE_SEG0: xed_nonterminal_enum_t = 173;
pub const XED_NONTERMINAL_OVERRIDE_SEG1: xed_nonterminal_enum_t = 174;
pub const XED_NONTERMINAL_PREFIXES: xed_nonterminal_enum_t = 175;
pub const XED_NONTERMINAL_REFINING66: xed_nonterminal_enum_t = 176;
pub const XED_NONTERMINAL_REMOVE_SEGMENT: xed_nonterminal_enum_t = 177;
pub const XED_NONTERMINAL_RFLAGS: xed_nonterminal_enum_t = 178;
pub const XED_NONTERMINAL_RIP: xed_nonterminal_enum_t = 179;
pub const XED_NONTERMINAL_RIPA: xed_nonterminal_enum_t = 180;
pub const XED_NONTERMINAL_SAE: xed_nonterminal_enum_t = 181;
pub const XED_NONTERMINAL_SEG: xed_nonterminal_enum_t = 182;
pub const XED_NONTERMINAL_SEG_MOV: xed_nonterminal_enum_t = 183;
pub const XED_NONTERMINAL_SE_IMM8: xed_nonterminal_enum_t = 184;
pub const XED_NONTERMINAL_SIB: xed_nonterminal_enum_t = 185;
pub const XED_NONTERMINAL_SIB_BASE0: xed_nonterminal_enum_t = 186;
pub const XED_NONTERMINAL_SIMM8: xed_nonterminal_enum_t = 187;
pub const XED_NONTERMINAL_SIMMZ: xed_nonterminal_enum_t = 188;
pub const XED_NONTERMINAL_SRBP: xed_nonterminal_enum_t = 189;
pub const XED_NONTERMINAL_SRSP: xed_nonterminal_enum_t = 190;
pub const XED_NONTERMINAL_TMM_B: xed_nonterminal_enum_t = 191;
pub const XED_NONTERMINAL_TMM_N: xed_nonterminal_enum_t = 192;
pub const XED_NONTERMINAL_TMM_R: xed_nonterminal_enum_t = 193;
pub const XED_NONTERMINAL_TMM_R3: xed_nonterminal_enum_t = 194;
pub const XED_NONTERMINAL_UIMM16: xed_nonterminal_enum_t = 195;
pub const XED_NONTERMINAL_UIMM32: xed_nonterminal_enum_t = 196;
pub const XED_NONTERMINAL_UIMM8: xed_nonterminal_enum_t = 197;
pub const XED_NONTERMINAL_UIMM8_1: xed_nonterminal_enum_t = 198;
pub const XED_NONTERMINAL_UIMMV: xed_nonterminal_enum_t = 199;
pub const XED_NONTERMINAL_UISA_VMODRM_XMM: xed_nonterminal_enum_t = 200;
pub const XED_NONTERMINAL_UISA_VMODRM_YMM: xed_nonterminal_enum_t = 201;
pub const XED_NONTERMINAL_UISA_VMODRM_ZMM: xed_nonterminal_enum_t = 202;
pub const XED_NONTERMINAL_UISA_VSIB_BASE: xed_nonterminal_enum_t = 203;
pub const XED_NONTERMINAL_UISA_VSIB_INDEX_XMM: xed_nonterminal_enum_t = 204;
pub const XED_NONTERMINAL_UISA_VSIB_INDEX_YMM: xed_nonterminal_enum_t = 205;
pub const XED_NONTERMINAL_UISA_VSIB_INDEX_ZMM: xed_nonterminal_enum_t = 206;
pub const XED_NONTERMINAL_UISA_VSIB_XMM: xed_nonterminal_enum_t = 207;
pub const XED_NONTERMINAL_UISA_VSIB_YMM: xed_nonterminal_enum_t = 208;
pub const XED_NONTERMINAL_UISA_VSIB_ZMM: xed_nonterminal_enum_t = 209;
pub const XED_NONTERMINAL_VGPR32_B: xed_nonterminal_enum_t = 210;
pub const XED_NONTERMINAL_VGPR32_B_32: xed_nonterminal_enum_t = 211;
pub const XED_NONTERMINAL_VGPR32_B_64: xed_nonterminal_enum_t = 212;
pub const XED_NONTERMINAL_VGPR32_N: xed_nonterminal_enum_t = 213;
pub const XED_NONTERMINAL_VGPR32_N_32: xed_nonterminal_enum_t = 214;
pub const XED_NONTERMINAL_VGPR32_N_64: xed_nonterminal_enum_t = 215;
pub const XED_NONTERMINAL_VGPR32_R: xed_nonterminal_enum_t = 216;
pub const XED_NONTERMINAL_VGPR32_R_32: xed_nonterminal_enum_t = 217;
pub const XED_NONTERMINAL_VGPR32_R_64: xed_nonterminal_enum_t = 218;
pub const XED_NONTERMINAL_VGPR64_B: xed_nonterminal_enum_t = 219;
pub const XED_NONTERMINAL_VGPR64_N: xed_nonterminal_enum_t = 220;
pub const XED_NONTERMINAL_VGPR64_R: xed_nonterminal_enum_t = 221;
pub const XED_NONTERMINAL_VGPRY_B: xed_nonterminal_enum_t = 222;
pub const XED_NONTERMINAL_VGPRY_N: xed_nonterminal_enum_t = 223;
pub const XED_NONTERMINAL_VGPRY_R: xed_nonterminal_enum_t = 224;
pub const XED_NONTERMINAL_VMODRM_XMM: xed_nonterminal_enum_t = 225;
pub const XED_NONTERMINAL_VMODRM_YMM: xed_nonterminal_enum_t = 226;
pub const XED_NONTERMINAL_VSIB_BASE: xed_nonterminal_enum_t = 227;
pub const XED_NONTERMINAL_VSIB_INDEX_XMM: xed_nonterminal_enum_t = 228;
pub const XED_NONTERMINAL_VSIB_INDEX_YMM: xed_nonterminal_enum_t = 229;
pub const XED_NONTERMINAL_VSIB_XMM: xed_nonterminal_enum_t = 230;
pub const XED_NONTERMINAL_VSIB_YMM: xed_nonterminal_enum_t = 231;
pub const XED_NONTERMINAL_X87: xed_nonterminal_enum_t = 232;
pub const XED_NONTERMINAL_XMM_B: xed_nonterminal_enum_t = 233;
pub const XED_NONTERMINAL_XMM_B3: xed_nonterminal_enum_t = 234;
pub const XED_NONTERMINAL_XMM_B3_32: xed_nonterminal_enum_t = 235;
pub const XED_NONTERMINAL_XMM_B3_64: xed_nonterminal_enum_t = 236;
pub const XED_NONTERMINAL_XMM_B_32: xed_nonterminal_enum_t = 237;
pub const XED_NONTERMINAL_XMM_B_64: xed_nonterminal_enum_t = 238;
pub const XED_NONTERMINAL_XMM_L_B3: xed_nonterminal_enum_t = 239;
pub const XED_NONTERMINAL_XMM_L_B3_64: xed_nonterminal_enum_t = 240;
pub const XED_NONTERMINAL_XMM_L_R3: xed_nonterminal_enum_t = 241;
pub const XED_NONTERMINAL_XMM_L_R3_64: xed_nonterminal_enum_t = 242;
pub const XED_NONTERMINAL_XMM_N: xed_nonterminal_enum_t = 243;
pub const XED_NONTERMINAL_XMM_N3: xed_nonterminal_enum_t = 244;
pub const XED_NONTERMINAL_XMM_N3_32: xed_nonterminal_enum_t = 245;
pub const XED_NONTERMINAL_XMM_N3_64: xed_nonterminal_enum_t = 246;
pub const XED_NONTERMINAL_XMM_N_32: xed_nonterminal_enum_t = 247;
pub const XED_NONTERMINAL_XMM_N_64: xed_nonterminal_enum_t = 248;
pub const XED_NONTERMINAL_XMM_R: xed_nonterminal_enum_t = 249;
pub const XED_NONTERMINAL_XMM_R3: xed_nonterminal_enum_t = 250;
pub const XED_NONTERMINAL_XMM_R3_32: xed_nonterminal_enum_t = 251;
pub const XED_NONTERMINAL_XMM_R3_64: xed_nonterminal_enum_t = 252;
pub const XED_NONTERMINAL_XMM_R_32: xed_nonterminal_enum_t = 253;
pub const XED_NONTERMINAL_XMM_R_64: xed_nonterminal_enum_t = 254;
pub const XED_NONTERMINAL_XMM_SE: xed_nonterminal_enum_t = 255;
pub const XED_NONTERMINAL_XMM_SE32: xed_nonterminal_enum_t = 256;
pub const XED_NONTERMINAL_XMM_SE64: xed_nonterminal_enum_t = 257;
pub const XED_NONTERMINAL_XOP_INSTRUCTIONS: xed_nonterminal_enum_t = 258;
pub const XED_NONTERMINAL_YMM_B: xed_nonterminal_enum_t = 259;
pub const XED_NONTERMINAL_YMM_B3: xed_nonterminal_enum_t = 260;
pub const XED_NONTERMINAL_YMM_B3_32: xed_nonterminal_enum_t = 261;
pub const XED_NONTERMINAL_YMM_B3_64: xed_nonterminal_enum_t = 262;
pub const XED_NONTERMINAL_YMM_B_32: xed_nonterminal_enum_t = 263;
pub const XED_NONTERMINAL_YMM_B_64: xed_nonterminal_enum_t = 264;
pub const XED_NONTERMINAL_YMM_N: xed_nonterminal_enum_t = 265;
pub const XED_NONTERMINAL_YMM_N3: xed_nonterminal_enum_t = 266;
pub const XED_NONTERMINAL_YMM_N3_32: xed_nonterminal_enum_t = 267;
pub const XED_NONTERMINAL_YMM_N3_64: xed_nonterminal_enum_t = 268;
pub const XED_NONTERMINAL_YMM_N_32: xed_nonterminal_enum_t = 269;
pub const XED_NONTERMINAL_YMM_N_64: xed_nonterminal_enum_t = 270;
pub const XED_NONTERMINAL_YMM_R: xed_nonterminal_enum_t = 271;
pub const XED_NONTERMINAL_YMM_R3: xed_nonterminal_enum_t = 272;
pub const XED_NONTERMINAL_YMM_R3_32: xed_nonterminal_enum_t = 273;
pub const XED_NONTERMINAL_YMM_R3_64: xed_nonterminal_enum_t = 274;
pub const XED_NONTERMINAL_YMM_R_32: xed_nonterminal_enum_t = 275;
pub const XED_NONTERMINAL_YMM_R_64: xed_nonterminal_enum_t = 276;
pub const XED_NONTERMINAL_YMM_SE: xed_nonterminal_enum_t = 277;
pub const XED_NONTERMINAL_YMM_SE32: xed_nonterminal_enum_t = 278;
pub const XED_NONTERMINAL_YMM_SE64: xed_nonterminal_enum_t = 279;
pub const XED_NONTERMINAL_ZMM_B3: xed_nonterminal_enum_t = 280;
pub const XED_NONTERMINAL_ZMM_B3_32: xed_nonterminal_enum_t = 281;
pub const XED_NONTERMINAL_ZMM_B3_64: xed_nonterminal_enum_t = 282;
pub const XED_NONTERMINAL_ZMM_N3: xed_nonterminal_enum_t = 283;
pub const XED_NONTERMINAL_ZMM_N3_32: xed_nonterminal_enum_t = 284;
pub const XED_NONTERMINAL_ZMM_N3_64: xed_nonterminal_enum_t = 285;
pub const XED_NONTERMINAL_ZMM_R3: xed_nonterminal_enum_t = 286;
pub const XED_NONTERMINAL_ZMM_R3_32: xed_nonterminal_enum_t = 287;
pub const XED_NONTERMINAL_ZMM_R3_64: xed_nonterminal_enum_t = 288;
pub const XED_NONTERMINAL_LAST: xed_nonterminal_enum_t = 289;
pub type xed_nonterminal_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_nonterminal_enum_t types.\n @param s A C-string.\n @return #xed_nonterminal_enum_t\n @ingroup ENUM"]
    pub fn str2xed_nonterminal_enum_t(s: *const ::core::ffi::c_char) -> xed_nonterminal_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_nonterminal_enum_t types.\n @param p An enumeration element of type xed_nonterminal_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_nonterminal_enum_t2str(p: xed_nonterminal_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_nonterminal_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_nonterminal_enum_t_last() -> xed_nonterminal_enum_t;
}
pub const XED_OPERAND_WIDTH_INVALID: xed_operand_width_enum_t = 0;
pub const XED_OPERAND_WIDTH_ASZ: xed_operand_width_enum_t = 1;
pub const XED_OPERAND_WIDTH_SSZ: xed_operand_width_enum_t = 2;
pub const XED_OPERAND_WIDTH_PSEUDO: xed_operand_width_enum_t = 3;
pub const XED_OPERAND_WIDTH_PSEUDOX87: xed_operand_width_enum_t = 4;
pub const XED_OPERAND_WIDTH_A16: xed_operand_width_enum_t = 5;
pub const XED_OPERAND_WIDTH_A32: xed_operand_width_enum_t = 6;
pub const XED_OPERAND_WIDTH_B: xed_operand_width_enum_t = 7;
pub const XED_OPERAND_WIDTH_D: xed_operand_width_enum_t = 8;
pub const XED_OPERAND_WIDTH_I8: xed_operand_width_enum_t = 9;
pub const XED_OPERAND_WIDTH_U8: xed_operand_width_enum_t = 10;
pub const XED_OPERAND_WIDTH_I16: xed_operand_width_enum_t = 11;
pub const XED_OPERAND_WIDTH_U16: xed_operand_width_enum_t = 12;
pub const XED_OPERAND_WIDTH_I32: xed_operand_width_enum_t = 13;
pub const XED_OPERAND_WIDTH_U32: xed_operand_width_enum_t = 14;
pub const XED_OPERAND_WIDTH_I64: xed_operand_width_enum_t = 15;
pub const XED_OPERAND_WIDTH_U64: xed_operand_width_enum_t = 16;
pub const XED_OPERAND_WIDTH_F16: xed_operand_width_enum_t = 17;
pub const XED_OPERAND_WIDTH_F32: xed_operand_width_enum_t = 18;
pub const XED_OPERAND_WIDTH_F64: xed_operand_width_enum_t = 19;
pub const XED_OPERAND_WIDTH_DQ: xed_operand_width_enum_t = 20;
pub const XED_OPERAND_WIDTH_XUB: xed_operand_width_enum_t = 21;
pub const XED_OPERAND_WIDTH_XUW: xed_operand_width_enum_t = 22;
pub const XED_OPERAND_WIDTH_XUD: xed_operand_width_enum_t = 23;
pub const XED_OPERAND_WIDTH_XUQ: xed_operand_width_enum_t = 24;
pub const XED_OPERAND_WIDTH_X128: xed_operand_width_enum_t = 25;
pub const XED_OPERAND_WIDTH_XB: xed_operand_width_enum_t = 26;
pub const XED_OPERAND_WIDTH_XW: xed_operand_width_enum_t = 27;
pub const XED_OPERAND_WIDTH_XD: xed_operand_width_enum_t = 28;
pub const XED_OPERAND_WIDTH_XQ: xed_operand_width_enum_t = 29;
pub const XED_OPERAND_WIDTH_ZB: xed_operand_width_enum_t = 30;
pub const XED_OPERAND_WIDTH_ZW: xed_operand_width_enum_t = 31;
pub const XED_OPERAND_WIDTH_ZD: xed_operand_width_enum_t = 32;
pub const XED_OPERAND_WIDTH_ZQ: xed_operand_width_enum_t = 33;
pub const XED_OPERAND_WIDTH_MB: xed_operand_width_enum_t = 34;
pub const XED_OPERAND_WIDTH_MW: xed_operand_width_enum_t = 35;
pub const XED_OPERAND_WIDTH_MD: xed_operand_width_enum_t = 36;
pub const XED_OPERAND_WIDTH_MQ: xed_operand_width_enum_t = 37;
pub const XED_OPERAND_WIDTH_M64INT: xed_operand_width_enum_t = 38;
pub const XED_OPERAND_WIDTH_M64REAL: xed_operand_width_enum_t = 39;
pub const XED_OPERAND_WIDTH_MEM108: xed_operand_width_enum_t = 40;
pub const XED_OPERAND_WIDTH_MEM14: xed_operand_width_enum_t = 41;
pub const XED_OPERAND_WIDTH_MEM16: xed_operand_width_enum_t = 42;
pub const XED_OPERAND_WIDTH_MEM16INT: xed_operand_width_enum_t = 43;
pub const XED_OPERAND_WIDTH_MEM28: xed_operand_width_enum_t = 44;
pub const XED_OPERAND_WIDTH_MEM32INT: xed_operand_width_enum_t = 45;
pub const XED_OPERAND_WIDTH_MEM32REAL: xed_operand_width_enum_t = 46;
pub const XED_OPERAND_WIDTH_MEM80DEC: xed_operand_width_enum_t = 47;
pub const XED_OPERAND_WIDTH_MEM80REAL: xed_operand_width_enum_t = 48;
pub const XED_OPERAND_WIDTH_F80: xed_operand_width_enum_t = 49;
pub const XED_OPERAND_WIDTH_MEM94: xed_operand_width_enum_t = 50;
pub const XED_OPERAND_WIDTH_MFPXENV: xed_operand_width_enum_t = 51;
pub const XED_OPERAND_WIDTH_MXSAVE: xed_operand_width_enum_t = 52;
pub const XED_OPERAND_WIDTH_MPREFETCH: xed_operand_width_enum_t = 53;
pub const XED_OPERAND_WIDTH_P: xed_operand_width_enum_t = 54;
pub const XED_OPERAND_WIDTH_P2: xed_operand_width_enum_t = 55;
pub const XED_OPERAND_WIDTH_PD: xed_operand_width_enum_t = 56;
pub const XED_OPERAND_WIDTH_PS: xed_operand_width_enum_t = 57;
pub const XED_OPERAND_WIDTH_PI: xed_operand_width_enum_t = 58;
pub const XED_OPERAND_WIDTH_Q: xed_operand_width_enum_t = 59;
pub const XED_OPERAND_WIDTH_S: xed_operand_width_enum_t = 60;
pub const XED_OPERAND_WIDTH_S64: xed_operand_width_enum_t = 61;
pub const XED_OPERAND_WIDTH_SD: xed_operand_width_enum_t = 62;
pub const XED_OPERAND_WIDTH_SI: xed_operand_width_enum_t = 63;
pub const XED_OPERAND_WIDTH_SS: xed_operand_width_enum_t = 64;
pub const XED_OPERAND_WIDTH_V: xed_operand_width_enum_t = 65;
pub const XED_OPERAND_WIDTH_Y: xed_operand_width_enum_t = 66;
pub const XED_OPERAND_WIDTH_W: xed_operand_width_enum_t = 67;
pub const XED_OPERAND_WIDTH_Z: xed_operand_width_enum_t = 68;
pub const XED_OPERAND_WIDTH_SPW8: xed_operand_width_enum_t = 69;
pub const XED_OPERAND_WIDTH_SPW: xed_operand_width_enum_t = 70;
pub const XED_OPERAND_WIDTH_SPW5: xed_operand_width_enum_t = 71;
pub const XED_OPERAND_WIDTH_SPW3: xed_operand_width_enum_t = 72;
pub const XED_OPERAND_WIDTH_SPW2: xed_operand_width_enum_t = 73;
pub const XED_OPERAND_WIDTH_I1: xed_operand_width_enum_t = 74;
pub const XED_OPERAND_WIDTH_I2: xed_operand_width_enum_t = 75;
pub const XED_OPERAND_WIDTH_I3: xed_operand_width_enum_t = 76;
pub const XED_OPERAND_WIDTH_I4: xed_operand_width_enum_t = 77;
pub const XED_OPERAND_WIDTH_I5: xed_operand_width_enum_t = 78;
pub const XED_OPERAND_WIDTH_I6: xed_operand_width_enum_t = 79;
pub const XED_OPERAND_WIDTH_I7: xed_operand_width_enum_t = 80;
pub const XED_OPERAND_WIDTH_VAR: xed_operand_width_enum_t = 81;
pub const XED_OPERAND_WIDTH_BND32: xed_operand_width_enum_t = 82;
pub const XED_OPERAND_WIDTH_BND64: xed_operand_width_enum_t = 83;
pub const XED_OPERAND_WIDTH_PMMSZ16: xed_operand_width_enum_t = 84;
pub const XED_OPERAND_WIDTH_PMMSZ32: xed_operand_width_enum_t = 85;
pub const XED_OPERAND_WIDTH_QQ: xed_operand_width_enum_t = 86;
pub const XED_OPERAND_WIDTH_YUB: xed_operand_width_enum_t = 87;
pub const XED_OPERAND_WIDTH_YUW: xed_operand_width_enum_t = 88;
pub const XED_OPERAND_WIDTH_YUD: xed_operand_width_enum_t = 89;
pub const XED_OPERAND_WIDTH_YUQ: xed_operand_width_enum_t = 90;
pub const XED_OPERAND_WIDTH_Y128: xed_operand_width_enum_t = 91;
pub const XED_OPERAND_WIDTH_YB: xed_operand_width_enum_t = 92;
pub const XED_OPERAND_WIDTH_YW: xed_operand_width_enum_t = 93;
pub const XED_OPERAND_WIDTH_YD: xed_operand_width_enum_t = 94;
pub const XED_OPERAND_WIDTH_YQ: xed_operand_width_enum_t = 95;
pub const XED_OPERAND_WIDTH_YPS: xed_operand_width_enum_t = 96;
pub const XED_OPERAND_WIDTH_YPD: xed_operand_width_enum_t = 97;
pub const XED_OPERAND_WIDTH_ZBF16: xed_operand_width_enum_t = 98;
pub const XED_OPERAND_WIDTH_VV: xed_operand_width_enum_t = 99;
pub const XED_OPERAND_WIDTH_ZV: xed_operand_width_enum_t = 100;
pub const XED_OPERAND_WIDTH_WRD: xed_operand_width_enum_t = 101;
pub const XED_OPERAND_WIDTH_MSKW: xed_operand_width_enum_t = 102;
pub const XED_OPERAND_WIDTH_ZMSKW: xed_operand_width_enum_t = 103;
pub const XED_OPERAND_WIDTH_ZF32: xed_operand_width_enum_t = 104;
pub const XED_OPERAND_WIDTH_ZF64: xed_operand_width_enum_t = 105;
pub const XED_OPERAND_WIDTH_ZUB: xed_operand_width_enum_t = 106;
pub const XED_OPERAND_WIDTH_ZUW: xed_operand_width_enum_t = 107;
pub const XED_OPERAND_WIDTH_ZUD: xed_operand_width_enum_t = 108;
pub const XED_OPERAND_WIDTH_ZUQ: xed_operand_width_enum_t = 109;
pub const XED_OPERAND_WIDTH_ZI8: xed_operand_width_enum_t = 110;
pub const XED_OPERAND_WIDTH_ZI16: xed_operand_width_enum_t = 111;
pub const XED_OPERAND_WIDTH_ZI32: xed_operand_width_enum_t = 112;
pub const XED_OPERAND_WIDTH_ZI64: xed_operand_width_enum_t = 113;
pub const XED_OPERAND_WIDTH_ZU8: xed_operand_width_enum_t = 114;
pub const XED_OPERAND_WIDTH_ZU16: xed_operand_width_enum_t = 115;
pub const XED_OPERAND_WIDTH_ZU32: xed_operand_width_enum_t = 116;
pub const XED_OPERAND_WIDTH_ZU64: xed_operand_width_enum_t = 117;
pub const XED_OPERAND_WIDTH_ZU128: xed_operand_width_enum_t = 118;
pub const XED_OPERAND_WIDTH_M384: xed_operand_width_enum_t = 119;
pub const XED_OPERAND_WIDTH_PTR: xed_operand_width_enum_t = 120;
pub const XED_OPERAND_WIDTH_TMEMROW: xed_operand_width_enum_t = 121;
pub const XED_OPERAND_WIDTH_TMEMCOL: xed_operand_width_enum_t = 122;
pub const XED_OPERAND_WIDTH_M512: xed_operand_width_enum_t = 123;
pub const XED_OPERAND_WIDTH_TV: xed_operand_width_enum_t = 124;
pub const XED_OPERAND_WIDTH_ZF16: xed_operand_width_enum_t = 125;
pub const XED_OPERAND_WIDTH_Z2F16: xed_operand_width_enum_t = 126;
pub const XED_OPERAND_WIDTH_YU: xed_operand_width_enum_t = 127;
pub const XED_OPERAND_WIDTH_ZD0: xed_operand_width_enum_t = 128;
pub const XED_OPERAND_WIDTH_LAST: xed_operand_width_enum_t = 129;
pub type xed_operand_width_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_operand_width_enum_t types.\n @param s A C-string.\n @return #xed_operand_width_enum_t\n @ingroup ENUM"]
    pub fn str2xed_operand_width_enum_t(s: *const ::core::ffi::c_char) -> xed_operand_width_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_operand_width_enum_t types.\n @param p An enumeration element of type xed_operand_width_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_operand_width_enum_t2str(p: xed_operand_width_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_operand_width_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_operand_width_enum_t_last() -> xed_operand_width_enum_t;
}
pub const XED_OPERAND_XTYPE_INVALID: xed_operand_element_xtype_enum_t = 0;
pub const XED_OPERAND_XTYPE_2BF16: xed_operand_element_xtype_enum_t = 1;
pub const XED_OPERAND_XTYPE_2F16: xed_operand_element_xtype_enum_t = 2;
pub const XED_OPERAND_XTYPE_2I16: xed_operand_element_xtype_enum_t = 3;
pub const XED_OPERAND_XTYPE_2U16: xed_operand_element_xtype_enum_t = 4;
pub const XED_OPERAND_XTYPE_4I8: xed_operand_element_xtype_enum_t = 5;
pub const XED_OPERAND_XTYPE_4U8: xed_operand_element_xtype_enum_t = 6;
pub const XED_OPERAND_XTYPE_B80: xed_operand_element_xtype_enum_t = 7;
pub const XED_OPERAND_XTYPE_BF16: xed_operand_element_xtype_enum_t = 8;
pub const XED_OPERAND_XTYPE_F16: xed_operand_element_xtype_enum_t = 9;
pub const XED_OPERAND_XTYPE_F32: xed_operand_element_xtype_enum_t = 10;
pub const XED_OPERAND_XTYPE_F64: xed_operand_element_xtype_enum_t = 11;
pub const XED_OPERAND_XTYPE_F80: xed_operand_element_xtype_enum_t = 12;
pub const XED_OPERAND_XTYPE_I1: xed_operand_element_xtype_enum_t = 13;
pub const XED_OPERAND_XTYPE_I128: xed_operand_element_xtype_enum_t = 14;
pub const XED_OPERAND_XTYPE_I16: xed_operand_element_xtype_enum_t = 15;
pub const XED_OPERAND_XTYPE_I32: xed_operand_element_xtype_enum_t = 16;
pub const XED_OPERAND_XTYPE_I64: xed_operand_element_xtype_enum_t = 17;
pub const XED_OPERAND_XTYPE_I8: xed_operand_element_xtype_enum_t = 18;
pub const XED_OPERAND_XTYPE_INT: xed_operand_element_xtype_enum_t = 19;
pub const XED_OPERAND_XTYPE_STRUCT: xed_operand_element_xtype_enum_t = 20;
pub const XED_OPERAND_XTYPE_U128: xed_operand_element_xtype_enum_t = 21;
pub const XED_OPERAND_XTYPE_U16: xed_operand_element_xtype_enum_t = 22;
pub const XED_OPERAND_XTYPE_U256: xed_operand_element_xtype_enum_t = 23;
pub const XED_OPERAND_XTYPE_U32: xed_operand_element_xtype_enum_t = 24;
pub const XED_OPERAND_XTYPE_U64: xed_operand_element_xtype_enum_t = 25;
pub const XED_OPERAND_XTYPE_U8: xed_operand_element_xtype_enum_t = 26;
pub const XED_OPERAND_XTYPE_UINT: xed_operand_element_xtype_enum_t = 27;
pub const XED_OPERAND_XTYPE_VAR: xed_operand_element_xtype_enum_t = 28;
pub const XED_OPERAND_XTYPE_LAST: xed_operand_element_xtype_enum_t = 29;
pub type xed_operand_element_xtype_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_operand_element_xtype_enum_t types.\n @param s A C-string.\n @return #xed_operand_element_xtype_enum_t\n @ingroup ENUM"]
    pub fn str2xed_operand_element_xtype_enum_t(
        s: *const ::core::ffi::c_char,
    ) -> xed_operand_element_xtype_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_operand_element_xtype_enum_t types.\n @param p An enumeration element of type xed_operand_element_xtype_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_operand_element_xtype_enum_t2str(
        p: xed_operand_element_xtype_enum_t,
    ) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_operand_element_xtype_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_operand_element_xtype_enum_t_last() -> xed_operand_element_xtype_enum_t;
}
pub const XED_REG_INVALID: xed_reg_enum_t = 0;
pub const XED_REG_BNDCFGU: xed_reg_enum_t = 1;
pub const XED_REG_BNDSTATUS: xed_reg_enum_t = 2;
pub const XED_REG_BND0: xed_reg_enum_t = 3;
pub const XED_REG_BND1: xed_reg_enum_t = 4;
pub const XED_REG_BND2: xed_reg_enum_t = 5;
pub const XED_REG_BND3: xed_reg_enum_t = 6;
pub const XED_REG_CR0: xed_reg_enum_t = 7;
pub const XED_REG_CR1: xed_reg_enum_t = 8;
pub const XED_REG_CR2: xed_reg_enum_t = 9;
pub const XED_REG_CR3: xed_reg_enum_t = 10;
pub const XED_REG_CR4: xed_reg_enum_t = 11;
pub const XED_REG_CR5: xed_reg_enum_t = 12;
pub const XED_REG_CR6: xed_reg_enum_t = 13;
pub const XED_REG_CR7: xed_reg_enum_t = 14;
pub const XED_REG_CR8: xed_reg_enum_t = 15;
pub const XED_REG_CR9: xed_reg_enum_t = 16;
pub const XED_REG_CR10: xed_reg_enum_t = 17;
pub const XED_REG_CR11: xed_reg_enum_t = 18;
pub const XED_REG_CR12: xed_reg_enum_t = 19;
pub const XED_REG_CR13: xed_reg_enum_t = 20;
pub const XED_REG_CR14: xed_reg_enum_t = 21;
pub const XED_REG_CR15: xed_reg_enum_t = 22;
pub const XED_REG_DR0: xed_reg_enum_t = 23;
pub const XED_REG_DR1: xed_reg_enum_t = 24;
pub const XED_REG_DR2: xed_reg_enum_t = 25;
pub const XED_REG_DR3: xed_reg_enum_t = 26;
pub const XED_REG_DR4: xed_reg_enum_t = 27;
pub const XED_REG_DR5: xed_reg_enum_t = 28;
pub const XED_REG_DR6: xed_reg_enum_t = 29;
pub const XED_REG_DR7: xed_reg_enum_t = 30;
pub const XED_REG_FLAGS: xed_reg_enum_t = 31;
pub const XED_REG_EFLAGS: xed_reg_enum_t = 32;
pub const XED_REG_RFLAGS: xed_reg_enum_t = 33;
pub const XED_REG_AX: xed_reg_enum_t = 34;
pub const XED_REG_CX: xed_reg_enum_t = 35;
pub const XED_REG_DX: xed_reg_enum_t = 36;
pub const XED_REG_BX: xed_reg_enum_t = 37;
pub const XED_REG_SP: xed_reg_enum_t = 38;
pub const XED_REG_BP: xed_reg_enum_t = 39;
pub const XED_REG_SI: xed_reg_enum_t = 40;
pub const XED_REG_DI: xed_reg_enum_t = 41;
pub const XED_REG_R8W: xed_reg_enum_t = 42;
pub const XED_REG_R9W: xed_reg_enum_t = 43;
pub const XED_REG_R10W: xed_reg_enum_t = 44;
pub const XED_REG_R11W: xed_reg_enum_t = 45;
pub const XED_REG_R12W: xed_reg_enum_t = 46;
pub const XED_REG_R13W: xed_reg_enum_t = 47;
pub const XED_REG_R14W: xed_reg_enum_t = 48;
pub const XED_REG_R15W: xed_reg_enum_t = 49;
pub const XED_REG_R16W: xed_reg_enum_t = 50;
pub const XED_REG_R17W: xed_reg_enum_t = 51;
pub const XED_REG_R18W: xed_reg_enum_t = 52;
pub const XED_REG_R19W: xed_reg_enum_t = 53;
pub const XED_REG_R20W: xed_reg_enum_t = 54;
pub const XED_REG_R21W: xed_reg_enum_t = 55;
pub const XED_REG_R22W: xed_reg_enum_t = 56;
pub const XED_REG_R23W: xed_reg_enum_t = 57;
pub const XED_REG_R24W: xed_reg_enum_t = 58;
pub const XED_REG_R25W: xed_reg_enum_t = 59;
pub const XED_REG_R26W: xed_reg_enum_t = 60;
pub const XED_REG_R27W: xed_reg_enum_t = 61;
pub const XED_REG_R28W: xed_reg_enum_t = 62;
pub const XED_REG_R29W: xed_reg_enum_t = 63;
pub const XED_REG_R30W: xed_reg_enum_t = 64;
pub const XED_REG_R31W: xed_reg_enum_t = 65;
pub const XED_REG_EAX: xed_reg_enum_t = 66;
pub const XED_REG_ECX: xed_reg_enum_t = 67;
pub const XED_REG_EDX: xed_reg_enum_t = 68;
pub const XED_REG_EBX: xed_reg_enum_t = 69;
pub const XED_REG_ESP: xed_reg_enum_t = 70;
pub const XED_REG_EBP: xed_reg_enum_t = 71;
pub const XED_REG_ESI: xed_reg_enum_t = 72;
pub const XED_REG_EDI: xed_reg_enum_t = 73;
pub const XED_REG_R8D: xed_reg_enum_t = 74;
pub const XED_REG_R9D: xed_reg_enum_t = 75;
pub const XED_REG_R10D: xed_reg_enum_t = 76;
pub const XED_REG_R11D: xed_reg_enum_t = 77;
pub const XED_REG_R12D: xed_reg_enum_t = 78;
pub const XED_REG_R13D: xed_reg_enum_t = 79;
pub const XED_REG_R14D: xed_reg_enum_t = 80;
pub const XED_REG_R15D: xed_reg_enum_t = 81;
pub const XED_REG_R16D: xed_reg_enum_t = 82;
pub const XED_REG_R17D: xed_reg_enum_t = 83;
pub const XED_REG_R18D: xed_reg_enum_t = 84;
pub const XED_REG_R19D: xed_reg_enum_t = 85;
pub const XED_REG_R20D: xed_reg_enum_t = 86;
pub const XED_REG_R21D: xed_reg_enum_t = 87;
pub const XED_REG_R22D: xed_reg_enum_t = 88;
pub const XED_REG_R23D: xed_reg_enum_t = 89;
pub const XED_REG_R24D: xed_reg_enum_t = 90;
pub const XED_REG_R25D: xed_reg_enum_t = 91;
pub const XED_REG_R26D: xed_reg_enum_t = 92;
pub const XED_REG_R27D: xed_reg_enum_t = 93;
pub const XED_REG_R28D: xed_reg_enum_t = 94;
pub const XED_REG_R29D: xed_reg_enum_t = 95;
pub const XED_REG_R30D: xed_reg_enum_t = 96;
pub const XED_REG_R31D: xed_reg_enum_t = 97;
pub const XED_REG_RAX: xed_reg_enum_t = 98;
pub const XED_REG_RCX: xed_reg_enum_t = 99;
pub const XED_REG_RDX: xed_reg_enum_t = 100;
pub const XED_REG_RBX: xed_reg_enum_t = 101;
pub const XED_REG_RSP: xed_reg_enum_t = 102;
pub const XED_REG_RBP: xed_reg_enum_t = 103;
pub const XED_REG_RSI: xed_reg_enum_t = 104;
pub const XED_REG_RDI: xed_reg_enum_t = 105;
pub const XED_REG_R8: xed_reg_enum_t = 106;
pub const XED_REG_R9: xed_reg_enum_t = 107;
pub const XED_REG_R10: xed_reg_enum_t = 108;
pub const XED_REG_R11: xed_reg_enum_t = 109;
pub const XED_REG_R12: xed_reg_enum_t = 110;
pub const XED_REG_R13: xed_reg_enum_t = 111;
pub const XED_REG_R14: xed_reg_enum_t = 112;
pub const XED_REG_R15: xed_reg_enum_t = 113;
pub const XED_REG_R16: xed_reg_enum_t = 114;
pub const XED_REG_R17: xed_reg_enum_t = 115;
pub const XED_REG_R18: xed_reg_enum_t = 116;
pub const XED_REG_R19: xed_reg_enum_t = 117;
pub const XED_REG_R20: xed_reg_enum_t = 118;
pub const XED_REG_R21: xed_reg_enum_t = 119;
pub const XED_REG_R22: xed_reg_enum_t = 120;
pub const XED_REG_R23: xed_reg_enum_t = 121;
pub const XED_REG_R24: xed_reg_enum_t = 122;
pub const XED_REG_R25: xed_reg_enum_t = 123;
pub const XED_REG_R26: xed_reg_enum_t = 124;
pub const XED_REG_R27: xed_reg_enum_t = 125;
pub const XED_REG_R28: xed_reg_enum_t = 126;
pub const XED_REG_R29: xed_reg_enum_t = 127;
pub const XED_REG_R30: xed_reg_enum_t = 128;
pub const XED_REG_R31: xed_reg_enum_t = 129;
pub const XED_REG_AL: xed_reg_enum_t = 130;
pub const XED_REG_CL: xed_reg_enum_t = 131;
pub const XED_REG_DL: xed_reg_enum_t = 132;
pub const XED_REG_BL: xed_reg_enum_t = 133;
pub const XED_REG_SPL: xed_reg_enum_t = 134;
pub const XED_REG_BPL: xed_reg_enum_t = 135;
pub const XED_REG_SIL: xed_reg_enum_t = 136;
pub const XED_REG_DIL: xed_reg_enum_t = 137;
pub const XED_REG_R8B: xed_reg_enum_t = 138;
pub const XED_REG_R9B: xed_reg_enum_t = 139;
pub const XED_REG_R10B: xed_reg_enum_t = 140;
pub const XED_REG_R11B: xed_reg_enum_t = 141;
pub const XED_REG_R12B: xed_reg_enum_t = 142;
pub const XED_REG_R13B: xed_reg_enum_t = 143;
pub const XED_REG_R14B: xed_reg_enum_t = 144;
pub const XED_REG_R15B: xed_reg_enum_t = 145;
pub const XED_REG_R16B: xed_reg_enum_t = 146;
pub const XED_REG_R17B: xed_reg_enum_t = 147;
pub const XED_REG_R18B: xed_reg_enum_t = 148;
pub const XED_REG_R19B: xed_reg_enum_t = 149;
pub const XED_REG_R20B: xed_reg_enum_t = 150;
pub const XED_REG_R21B: xed_reg_enum_t = 151;
pub const XED_REG_R22B: xed_reg_enum_t = 152;
pub const XED_REG_R23B: xed_reg_enum_t = 153;
pub const XED_REG_R24B: xed_reg_enum_t = 154;
pub const XED_REG_R25B: xed_reg_enum_t = 155;
pub const XED_REG_R26B: xed_reg_enum_t = 156;
pub const XED_REG_R27B: xed_reg_enum_t = 157;
pub const XED_REG_R28B: xed_reg_enum_t = 158;
pub const XED_REG_R29B: xed_reg_enum_t = 159;
pub const XED_REG_R30B: xed_reg_enum_t = 160;
pub const XED_REG_R31B: xed_reg_enum_t = 161;
pub const XED_REG_AH: xed_reg_enum_t = 162;
pub const XED_REG_CH: xed_reg_enum_t = 163;
pub const XED_REG_DH: xed_reg_enum_t = 164;
pub const XED_REG_BH: xed_reg_enum_t = 165;
pub const XED_REG_ERROR: xed_reg_enum_t = 166;
pub const XED_REG_RIP: xed_reg_enum_t = 167;
pub const XED_REG_EIP: xed_reg_enum_t = 168;
pub const XED_REG_IP: xed_reg_enum_t = 169;
pub const XED_REG_K0: xed_reg_enum_t = 170;
pub const XED_REG_K1: xed_reg_enum_t = 171;
pub const XED_REG_K2: xed_reg_enum_t = 172;
pub const XED_REG_K3: xed_reg_enum_t = 173;
pub const XED_REG_K4: xed_reg_enum_t = 174;
pub const XED_REG_K5: xed_reg_enum_t = 175;
pub const XED_REG_K6: xed_reg_enum_t = 176;
pub const XED_REG_K7: xed_reg_enum_t = 177;
pub const XED_REG_MMX0: xed_reg_enum_t = 178;
pub const XED_REG_MMX1: xed_reg_enum_t = 179;
pub const XED_REG_MMX2: xed_reg_enum_t = 180;
pub const XED_REG_MMX3: xed_reg_enum_t = 181;
pub const XED_REG_MMX4: xed_reg_enum_t = 182;
pub const XED_REG_MMX5: xed_reg_enum_t = 183;
pub const XED_REG_MMX6: xed_reg_enum_t = 184;
pub const XED_REG_MMX7: xed_reg_enum_t = 185;
pub const XED_REG_SSP: xed_reg_enum_t = 186;
pub const XED_REG_IA32_U_CET: xed_reg_enum_t = 187;
pub const XED_REG_MXCSR: xed_reg_enum_t = 188;
pub const XED_REG_STACKPUSH: xed_reg_enum_t = 189;
pub const XED_REG_STACKPOP: xed_reg_enum_t = 190;
pub const XED_REG_GDTR: xed_reg_enum_t = 191;
pub const XED_REG_LDTR: xed_reg_enum_t = 192;
pub const XED_REG_IDTR: xed_reg_enum_t = 193;
pub const XED_REG_TR: xed_reg_enum_t = 194;
pub const XED_REG_TSC: xed_reg_enum_t = 195;
pub const XED_REG_TSCAUX: xed_reg_enum_t = 196;
pub const XED_REG_MSRS: xed_reg_enum_t = 197;
pub const XED_REG_FSBASE: xed_reg_enum_t = 198;
pub const XED_REG_GSBASE: xed_reg_enum_t = 199;
pub const XED_REG_TILECONFIG: xed_reg_enum_t = 200;
pub const XED_REG_IA32_KERNEL_GS_BASE: xed_reg_enum_t = 201;
pub const XED_REG_DFV0: xed_reg_enum_t = 202;
pub const XED_REG_DFV1: xed_reg_enum_t = 203;
pub const XED_REG_DFV2: xed_reg_enum_t = 204;
pub const XED_REG_DFV3: xed_reg_enum_t = 205;
pub const XED_REG_DFV4: xed_reg_enum_t = 206;
pub const XED_REG_DFV5: xed_reg_enum_t = 207;
pub const XED_REG_DFV6: xed_reg_enum_t = 208;
pub const XED_REG_DFV7: xed_reg_enum_t = 209;
pub const XED_REG_DFV8: xed_reg_enum_t = 210;
pub const XED_REG_DFV9: xed_reg_enum_t = 211;
pub const XED_REG_DFV10: xed_reg_enum_t = 212;
pub const XED_REG_DFV11: xed_reg_enum_t = 213;
pub const XED_REG_DFV12: xed_reg_enum_t = 214;
pub const XED_REG_DFV13: xed_reg_enum_t = 215;
pub const XED_REG_DFV14: xed_reg_enum_t = 216;
pub const XED_REG_DFV15: xed_reg_enum_t = 217;
pub const XED_REG_X87CONTROL: xed_reg_enum_t = 218;
pub const XED_REG_X87STATUS: xed_reg_enum_t = 219;
pub const XED_REG_X87TAG: xed_reg_enum_t = 220;
pub const XED_REG_X87PUSH: xed_reg_enum_t = 221;
pub const XED_REG_X87POP: xed_reg_enum_t = 222;
pub const XED_REG_X87POP2: xed_reg_enum_t = 223;
pub const XED_REG_X87OPCODE: xed_reg_enum_t = 224;
pub const XED_REG_X87LASTCS: xed_reg_enum_t = 225;
pub const XED_REG_X87LASTIP: xed_reg_enum_t = 226;
pub const XED_REG_X87LASTDS: xed_reg_enum_t = 227;
pub const XED_REG_X87LASTDP: xed_reg_enum_t = 228;
pub const XED_REG_ES: xed_reg_enum_t = 229;
pub const XED_REG_CS: xed_reg_enum_t = 230;
pub const XED_REG_SS: xed_reg_enum_t = 231;
pub const XED_REG_DS: xed_reg_enum_t = 232;
pub const XED_REG_FS: xed_reg_enum_t = 233;
pub const XED_REG_GS: xed_reg_enum_t = 234;
pub const XED_REG_TMP0: xed_reg_enum_t = 235;
pub const XED_REG_TMP1: xed_reg_enum_t = 236;
pub const XED_REG_TMP2: xed_reg_enum_t = 237;
pub const XED_REG_TMP3: xed_reg_enum_t = 238;
pub const XED_REG_TMP4: xed_reg_enum_t = 239;
pub const XED_REG_TMP5: xed_reg_enum_t = 240;
pub const XED_REG_TMP6: xed_reg_enum_t = 241;
pub const XED_REG_TMP7: xed_reg_enum_t = 242;
pub const XED_REG_TMP8: xed_reg_enum_t = 243;
pub const XED_REG_TMP9: xed_reg_enum_t = 244;
pub const XED_REG_TMP10: xed_reg_enum_t = 245;
pub const XED_REG_TMP11: xed_reg_enum_t = 246;
pub const XED_REG_TMP12: xed_reg_enum_t = 247;
pub const XED_REG_TMP13: xed_reg_enum_t = 248;
pub const XED_REG_TMP14: xed_reg_enum_t = 249;
pub const XED_REG_TMP15: xed_reg_enum_t = 250;
pub const XED_REG_TMM0: xed_reg_enum_t = 251;
pub const XED_REG_TMM1: xed_reg_enum_t = 252;
pub const XED_REG_TMM2: xed_reg_enum_t = 253;
pub const XED_REG_TMM3: xed_reg_enum_t = 254;
pub const XED_REG_TMM4: xed_reg_enum_t = 255;
pub const XED_REG_TMM5: xed_reg_enum_t = 256;
pub const XED_REG_TMM6: xed_reg_enum_t = 257;
pub const XED_REG_TMM7: xed_reg_enum_t = 258;
pub const XED_REG_UIF: xed_reg_enum_t = 259;
pub const XED_REG_ST0: xed_reg_enum_t = 260;
pub const XED_REG_ST1: xed_reg_enum_t = 261;
pub const XED_REG_ST2: xed_reg_enum_t = 262;
pub const XED_REG_ST3: xed_reg_enum_t = 263;
pub const XED_REG_ST4: xed_reg_enum_t = 264;
pub const XED_REG_ST5: xed_reg_enum_t = 265;
pub const XED_REG_ST6: xed_reg_enum_t = 266;
pub const XED_REG_ST7: xed_reg_enum_t = 267;
pub const XED_REG_XCR0: xed_reg_enum_t = 268;
pub const XED_REG_XMM0: xed_reg_enum_t = 269;
pub const XED_REG_XMM1: xed_reg_enum_t = 270;
pub const XED_REG_XMM2: xed_reg_enum_t = 271;
pub const XED_REG_XMM3: xed_reg_enum_t = 272;
pub const XED_REG_XMM4: xed_reg_enum_t = 273;
pub const XED_REG_XMM5: xed_reg_enum_t = 274;
pub const XED_REG_XMM6: xed_reg_enum_t = 275;
pub const XED_REG_XMM7: xed_reg_enum_t = 276;
pub const XED_REG_XMM8: xed_reg_enum_t = 277;
pub const XED_REG_XMM9: xed_reg_enum_t = 278;
pub const XED_REG_XMM10: xed_reg_enum_t = 279;
pub const XED_REG_XMM11: xed_reg_enum_t = 280;
pub const XED_REG_XMM12: xed_reg_enum_t = 281;
pub const XED_REG_XMM13: xed_reg_enum_t = 282;
pub const XED_REG_XMM14: xed_reg_enum_t = 283;
pub const XED_REG_XMM15: xed_reg_enum_t = 284;
pub const XED_REG_XMM16: xed_reg_enum_t = 285;
pub const XED_REG_XMM17: xed_reg_enum_t = 286;
pub const XED_REG_XMM18: xed_reg_enum_t = 287;
pub const XED_REG_XMM19: xed_reg_enum_t = 288;
pub const XED_REG_XMM20: xed_reg_enum_t = 289;
pub const XED_REG_XMM21: xed_reg_enum_t = 290;
pub const XED_REG_XMM22: xed_reg_enum_t = 291;
pub const XED_REG_XMM23: xed_reg_enum_t = 292;
pub const XED_REG_XMM24: xed_reg_enum_t = 293;
pub const XED_REG_XMM25: xed_reg_enum_t = 294;
pub const XED_REG_XMM26: xed_reg_enum_t = 295;
pub const XED_REG_XMM27: xed_reg_enum_t = 296;
pub const XED_REG_XMM28: xed_reg_enum_t = 297;
pub const XED_REG_XMM29: xed_reg_enum_t = 298;
pub const XED_REG_XMM30: xed_reg_enum_t = 299;
pub const XED_REG_XMM31: xed_reg_enum_t = 300;
pub const XED_REG_YMM0: xed_reg_enum_t = 301;
pub const XED_REG_YMM1: xed_reg_enum_t = 302;
pub const XED_REG_YMM2: xed_reg_enum_t = 303;
pub const XED_REG_YMM3: xed_reg_enum_t = 304;
pub const XED_REG_YMM4: xed_reg_enum_t = 305;
pub const XED_REG_YMM5: xed_reg_enum_t = 306;
pub const XED_REG_YMM6: xed_reg_enum_t = 307;
pub const XED_REG_YMM7: xed_reg_enum_t = 308;
pub const XED_REG_YMM8: xed_reg_enum_t = 309;
pub const XED_REG_YMM9: xed_reg_enum_t = 310;
pub const XED_REG_YMM10: xed_reg_enum_t = 311;
pub const XED_REG_YMM11: xed_reg_enum_t = 312;
pub const XED_REG_YMM12: xed_reg_enum_t = 313;
pub const XED_REG_YMM13: xed_reg_enum_t = 314;
pub const XED_REG_YMM14: xed_reg_enum_t = 315;
pub const XED_REG_YMM15: xed_reg_enum_t = 316;
pub const XED_REG_YMM16: xed_reg_enum_t = 317;
pub const XED_REG_YMM17: xed_reg_enum_t = 318;
pub const XED_REG_YMM18: xed_reg_enum_t = 319;
pub const XED_REG_YMM19: xed_reg_enum_t = 320;
pub const XED_REG_YMM20: xed_reg_enum_t = 321;
pub const XED_REG_YMM21: xed_reg_enum_t = 322;
pub const XED_REG_YMM22: xed_reg_enum_t = 323;
pub const XED_REG_YMM23: xed_reg_enum_t = 324;
pub const XED_REG_YMM24: xed_reg_enum_t = 325;
pub const XED_REG_YMM25: xed_reg_enum_t = 326;
pub const XED_REG_YMM26: xed_reg_enum_t = 327;
pub const XED_REG_YMM27: xed_reg_enum_t = 328;
pub const XED_REG_YMM28: xed_reg_enum_t = 329;
pub const XED_REG_YMM29: xed_reg_enum_t = 330;
pub const XED_REG_YMM30: xed_reg_enum_t = 331;
pub const XED_REG_YMM31: xed_reg_enum_t = 332;
pub const XED_REG_ZMM0: xed_reg_enum_t = 333;
pub const XED_REG_ZMM1: xed_reg_enum_t = 334;
pub const XED_REG_ZMM2: xed_reg_enum_t = 335;
pub const XED_REG_ZMM3: xed_reg_enum_t = 336;
pub const XED_REG_ZMM4: xed_reg_enum_t = 337;
pub const XED_REG_ZMM5: xed_reg_enum_t = 338;
pub const XED_REG_ZMM6: xed_reg_enum_t = 339;
pub const XED_REG_ZMM7: xed_reg_enum_t = 340;
pub const XED_REG_ZMM8: xed_reg_enum_t = 341;
pub const XED_REG_ZMM9: xed_reg_enum_t = 342;
pub const XED_REG_ZMM10: xed_reg_enum_t = 343;
pub const XED_REG_ZMM11: xed_reg_enum_t = 344;
pub const XED_REG_ZMM12: xed_reg_enum_t = 345;
pub const XED_REG_ZMM13: xed_reg_enum_t = 346;
pub const XED_REG_ZMM14: xed_reg_enum_t = 347;
pub const XED_REG_ZMM15: xed_reg_enum_t = 348;
pub const XED_REG_ZMM16: xed_reg_enum_t = 349;
pub const XED_REG_ZMM17: xed_reg_enum_t = 350;
pub const XED_REG_ZMM18: xed_reg_enum_t = 351;
pub const XED_REG_ZMM19: xed_reg_enum_t = 352;
pub const XED_REG_ZMM20: xed_reg_enum_t = 353;
pub const XED_REG_ZMM21: xed_reg_enum_t = 354;
pub const XED_REG_ZMM22: xed_reg_enum_t = 355;
pub const XED_REG_ZMM23: xed_reg_enum_t = 356;
pub const XED_REG_ZMM24: xed_reg_enum_t = 357;
pub const XED_REG_ZMM25: xed_reg_enum_t = 358;
pub const XED_REG_ZMM26: xed_reg_enum_t = 359;
pub const XED_REG_ZMM27: xed_reg_enum_t = 360;
pub const XED_REG_ZMM28: xed_reg_enum_t = 361;
pub const XED_REG_ZMM29: xed_reg_enum_t = 362;
pub const XED_REG_ZMM30: xed_reg_enum_t = 363;
pub const XED_REG_ZMM31: xed_reg_enum_t = 364;
pub const XED_REG_LAST: xed_reg_enum_t = 365;
pub const XED_REG_BNDCFG_FIRST: xed_reg_enum_t = 1;
pub const XED_REG_BNDCFG_LAST: xed_reg_enum_t = 1;
pub const XED_REG_BNDSTAT_FIRST: xed_reg_enum_t = 2;
pub const XED_REG_BNDSTAT_LAST: xed_reg_enum_t = 2;
pub const XED_REG_BOUND_FIRST: xed_reg_enum_t = 3;
pub const XED_REG_BOUND_LAST: xed_reg_enum_t = 6;
pub const XED_REG_CR_FIRST: xed_reg_enum_t = 7;
pub const XED_REG_CR_LAST: xed_reg_enum_t = 22;
pub const XED_REG_DR_FIRST: xed_reg_enum_t = 23;
pub const XED_REG_DR_LAST: xed_reg_enum_t = 30;
pub const XED_REG_FLAGS_FIRST: xed_reg_enum_t = 31;
pub const XED_REG_FLAGS_LAST: xed_reg_enum_t = 33;
pub const XED_REG_GPR16_FIRST: xed_reg_enum_t = 34;
pub const XED_REG_GPR16_LAST: xed_reg_enum_t = 65;
pub const XED_REG_GPR32_FIRST: xed_reg_enum_t = 66;
pub const XED_REG_GPR32_LAST: xed_reg_enum_t = 97;
pub const XED_REG_GPR64_FIRST: xed_reg_enum_t = 98;
pub const XED_REG_GPR64_LAST: xed_reg_enum_t = 129;
pub const XED_REG_GPR8_FIRST: xed_reg_enum_t = 130;
pub const XED_REG_GPR8_LAST: xed_reg_enum_t = 161;
pub const XED_REG_GPR8h_FIRST: xed_reg_enum_t = 162;
pub const XED_REG_GPR8h_LAST: xed_reg_enum_t = 165;
pub const XED_REG_INVALID_FIRST: xed_reg_enum_t = 0;
pub const XED_REG_INVALID_LAST: xed_reg_enum_t = 166;
pub const XED_REG_IP_FIRST: xed_reg_enum_t = 167;
pub const XED_REG_IP_LAST: xed_reg_enum_t = 169;
pub const XED_REG_MASK_FIRST: xed_reg_enum_t = 170;
pub const XED_REG_MASK_LAST: xed_reg_enum_t = 177;
pub const XED_REG_MMX_FIRST: xed_reg_enum_t = 178;
pub const XED_REG_MMX_LAST: xed_reg_enum_t = 185;
pub const XED_REG_MSR_FIRST: xed_reg_enum_t = 186;
pub const XED_REG_MSR_LAST: xed_reg_enum_t = 187;
pub const XED_REG_MXCSR_FIRST: xed_reg_enum_t = 188;
pub const XED_REG_MXCSR_LAST: xed_reg_enum_t = 188;
pub const XED_REG_PSEUDO_FIRST: xed_reg_enum_t = 189;
pub const XED_REG_PSEUDO_LAST: xed_reg_enum_t = 217;
pub const XED_REG_PSEUDOX87_FIRST: xed_reg_enum_t = 218;
pub const XED_REG_PSEUDOX87_LAST: xed_reg_enum_t = 228;
pub const XED_REG_SR_FIRST: xed_reg_enum_t = 229;
pub const XED_REG_SR_LAST: xed_reg_enum_t = 234;
pub const XED_REG_TMP_FIRST: xed_reg_enum_t = 235;
pub const XED_REG_TMP_LAST: xed_reg_enum_t = 250;
pub const XED_REG_TREG_FIRST: xed_reg_enum_t = 251;
pub const XED_REG_TREG_LAST: xed_reg_enum_t = 258;
pub const XED_REG_UIF_FIRST: xed_reg_enum_t = 259;
pub const XED_REG_UIF_LAST: xed_reg_enum_t = 259;
pub const XED_REG_X87_FIRST: xed_reg_enum_t = 260;
pub const XED_REG_X87_LAST: xed_reg_enum_t = 267;
pub const XED_REG_XCR_FIRST: xed_reg_enum_t = 268;
pub const XED_REG_XCR_LAST: xed_reg_enum_t = 268;
pub const XED_REG_XMM_FIRST: xed_reg_enum_t = 269;
pub const XED_REG_XMM_LAST: xed_reg_enum_t = 300;
pub const XED_REG_YMM_FIRST: xed_reg_enum_t = 301;
pub const XED_REG_YMM_LAST: xed_reg_enum_t = 332;
pub const XED_REG_ZMM_FIRST: xed_reg_enum_t = 333;
pub const XED_REG_ZMM_LAST: xed_reg_enum_t = 364;
pub type xed_reg_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_reg_enum_t types.\n @param s A C-string.\n @return #xed_reg_enum_t\n @ingroup ENUM"]
    pub fn str2xed_reg_enum_t(s: *const ::core::ffi::c_char) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_reg_enum_t types.\n @param p An enumeration element of type xed_reg_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_reg_enum_t2str(p: xed_reg_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_reg_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_reg_enum_t_last() -> xed_reg_enum_t;
}
pub const XED_ATTRIBUTE_INVALID: xed_attribute_enum_t = 0;
pub const XED_ATTRIBUTE_AMDONLY: xed_attribute_enum_t = 1;
pub const XED_ATTRIBUTE_APX_NDD: xed_attribute_enum_t = 2;
pub const XED_ATTRIBUTE_APX_NF: xed_attribute_enum_t = 3;
pub const XED_ATTRIBUTE_ATOMIC: xed_attribute_enum_t = 4;
pub const XED_ATTRIBUTE_ATT_OPERAND_ORDER_EXCEPTION: xed_attribute_enum_t = 5;
pub const XED_ATTRIBUTE_BROADCAST_ENABLED: xed_attribute_enum_t = 6;
pub const XED_ATTRIBUTE_BYTEOP: xed_attribute_enum_t = 7;
pub const XED_ATTRIBUTE_DISP8_EIGHTHMEM: xed_attribute_enum_t = 8;
pub const XED_ATTRIBUTE_DISP8_FULL: xed_attribute_enum_t = 9;
pub const XED_ATTRIBUTE_DISP8_FULLMEM: xed_attribute_enum_t = 10;
pub const XED_ATTRIBUTE_DISP8_GPR_READER: xed_attribute_enum_t = 11;
pub const XED_ATTRIBUTE_DISP8_GPR_READER_BYTE: xed_attribute_enum_t = 12;
pub const XED_ATTRIBUTE_DISP8_GPR_READER_WORD: xed_attribute_enum_t = 13;
pub const XED_ATTRIBUTE_DISP8_GPR_WRITER_LDOP_D: xed_attribute_enum_t = 14;
pub const XED_ATTRIBUTE_DISP8_GPR_WRITER_LDOP_Q: xed_attribute_enum_t = 15;
pub const XED_ATTRIBUTE_DISP8_GPR_WRITER_STORE: xed_attribute_enum_t = 16;
pub const XED_ATTRIBUTE_DISP8_GPR_WRITER_STORE_BYTE: xed_attribute_enum_t = 17;
pub const XED_ATTRIBUTE_DISP8_GPR_WRITER_STORE_WORD: xed_attribute_enum_t = 18;
pub const XED_ATTRIBUTE_DISP8_GSCAT: xed_attribute_enum_t = 19;
pub const XED_ATTRIBUTE_DISP8_HALF: xed_attribute_enum_t = 20;
pub const XED_ATTRIBUTE_DISP8_HALFMEM: xed_attribute_enum_t = 21;
pub const XED_ATTRIBUTE_DISP8_MEM128: xed_attribute_enum_t = 22;
pub const XED_ATTRIBUTE_DISP8_MOVDDUP: xed_attribute_enum_t = 23;
pub const XED_ATTRIBUTE_DISP8_NO_SCALE: xed_attribute_enum_t = 24;
pub const XED_ATTRIBUTE_DISP8_QUARTER: xed_attribute_enum_t = 25;
pub const XED_ATTRIBUTE_DISP8_QUARTERMEM: xed_attribute_enum_t = 26;
pub const XED_ATTRIBUTE_DISP8_SCALAR: xed_attribute_enum_t = 27;
pub const XED_ATTRIBUTE_DISP8_TUPLE1: xed_attribute_enum_t = 28;
pub const XED_ATTRIBUTE_DISP8_TUPLE1_4X: xed_attribute_enum_t = 29;
pub const XED_ATTRIBUTE_DISP8_TUPLE1_BYTE: xed_attribute_enum_t = 30;
pub const XED_ATTRIBUTE_DISP8_TUPLE1_WORD: xed_attribute_enum_t = 31;
pub const XED_ATTRIBUTE_DISP8_TUPLE2: xed_attribute_enum_t = 32;
pub const XED_ATTRIBUTE_DISP8_TUPLE4: xed_attribute_enum_t = 33;
pub const XED_ATTRIBUTE_DISP8_TUPLE8: xed_attribute_enum_t = 34;
pub const XED_ATTRIBUTE_DOUBLE_WIDE_MEMOP: xed_attribute_enum_t = 35;
pub const XED_ATTRIBUTE_DOUBLE_WIDE_OUTPUT: xed_attribute_enum_t = 36;
pub const XED_ATTRIBUTE_DWORD_INDICES: xed_attribute_enum_t = 37;
pub const XED_ATTRIBUTE_ELEMENT_SIZE_D: xed_attribute_enum_t = 38;
pub const XED_ATTRIBUTE_ELEMENT_SIZE_Q: xed_attribute_enum_t = 39;
pub const XED_ATTRIBUTE_EXCEPTION_BR: xed_attribute_enum_t = 40;
pub const XED_ATTRIBUTE_FAR_XFER: xed_attribute_enum_t = 41;
pub const XED_ATTRIBUTE_FIXED_BASE0: xed_attribute_enum_t = 42;
pub const XED_ATTRIBUTE_FIXED_BASE1: xed_attribute_enum_t = 43;
pub const XED_ATTRIBUTE_FIXED_ROUNDING_RNE: xed_attribute_enum_t = 44;
pub const XED_ATTRIBUTE_FLUSH_INPUT_DENORM: xed_attribute_enum_t = 45;
pub const XED_ATTRIBUTE_FLUSH_OUTPUT_DENORM: xed_attribute_enum_t = 46;
pub const XED_ATTRIBUTE_GATHER: xed_attribute_enum_t = 47;
pub const XED_ATTRIBUTE_HALF_WIDE_OUTPUT: xed_attribute_enum_t = 48;
pub const XED_ATTRIBUTE_HLE_ACQ_ABLE: xed_attribute_enum_t = 49;
pub const XED_ATTRIBUTE_HLE_REL_ABLE: xed_attribute_enum_t = 50;
pub const XED_ATTRIBUTE_IGNORES_OSFXSR: xed_attribute_enum_t = 51;
pub const XED_ATTRIBUTE_IMPLICIT_ONE: xed_attribute_enum_t = 52;
pub const XED_ATTRIBUTE_INDEX_REG_IS_POINTER: xed_attribute_enum_t = 53;
pub const XED_ATTRIBUTE_INDIRECT_BRANCH: xed_attribute_enum_t = 54;
pub const XED_ATTRIBUTE_KMASK: xed_attribute_enum_t = 55;
pub const XED_ATTRIBUTE_LOCKABLE: xed_attribute_enum_t = 56;
pub const XED_ATTRIBUTE_LOCKED: xed_attribute_enum_t = 57;
pub const XED_ATTRIBUTE_MASKOP: xed_attribute_enum_t = 58;
pub const XED_ATTRIBUTE_MASKOP_EVEX: xed_attribute_enum_t = 59;
pub const XED_ATTRIBUTE_MASK_AS_CONTROL: xed_attribute_enum_t = 60;
pub const XED_ATTRIBUTE_MASK_VARIABLE_MEMOP: xed_attribute_enum_t = 61;
pub const XED_ATTRIBUTE_MEMORY_FAULT_SUPPRESSION: xed_attribute_enum_t = 62;
pub const XED_ATTRIBUTE_MMX_EXCEPT: xed_attribute_enum_t = 63;
pub const XED_ATTRIBUTE_MPX_PREFIX_ABLE: xed_attribute_enum_t = 64;
pub const XED_ATTRIBUTE_MULTIDEST2: xed_attribute_enum_t = 65;
pub const XED_ATTRIBUTE_MULTISOURCE4: xed_attribute_enum_t = 66;
pub const XED_ATTRIBUTE_MXCSR: xed_attribute_enum_t = 67;
pub const XED_ATTRIBUTE_MXCSR_RD: xed_attribute_enum_t = 68;
pub const XED_ATTRIBUTE_NONTEMPORAL: xed_attribute_enum_t = 69;
pub const XED_ATTRIBUTE_NOP: xed_attribute_enum_t = 70;
pub const XED_ATTRIBUTE_NOTSX: xed_attribute_enum_t = 71;
pub const XED_ATTRIBUTE_NOTSX_COND: xed_attribute_enum_t = 72;
pub const XED_ATTRIBUTE_NO_RIP_REL: xed_attribute_enum_t = 73;
pub const XED_ATTRIBUTE_NO_SRC_DEST_MATCH: xed_attribute_enum_t = 74;
pub const XED_ATTRIBUTE_PREFETCH: xed_attribute_enum_t = 75;
pub const XED_ATTRIBUTE_PROTECTED_MODE: xed_attribute_enum_t = 76;
pub const XED_ATTRIBUTE_QWORD_INDICES: xed_attribute_enum_t = 77;
pub const XED_ATTRIBUTE_REP: xed_attribute_enum_t = 78;
pub const XED_ATTRIBUTE_REQUIRES_ALIGNMENT: xed_attribute_enum_t = 79;
pub const XED_ATTRIBUTE_REQUIRES_ALIGNMENT_4B: xed_attribute_enum_t = 80;
pub const XED_ATTRIBUTE_REQUIRES_ALIGNMENT_8B: xed_attribute_enum_t = 81;
pub const XED_ATTRIBUTE_RING0: xed_attribute_enum_t = 82;
pub const XED_ATTRIBUTE_SCALABLE: xed_attribute_enum_t = 83;
pub const XED_ATTRIBUTE_SCATTER: xed_attribute_enum_t = 84;
pub const XED_ATTRIBUTE_SIMD_SCALAR: xed_attribute_enum_t = 85;
pub const XED_ATTRIBUTE_SKIPLOW32: xed_attribute_enum_t = 86;
pub const XED_ATTRIBUTE_SKIPLOW64: xed_attribute_enum_t = 87;
pub const XED_ATTRIBUTE_SPECIAL_AGEN_REQUIRED: xed_attribute_enum_t = 88;
pub const XED_ATTRIBUTE_STACKPOP0: xed_attribute_enum_t = 89;
pub const XED_ATTRIBUTE_STACKPOP1: xed_attribute_enum_t = 90;
pub const XED_ATTRIBUTE_STACKPUSH0: xed_attribute_enum_t = 91;
pub const XED_ATTRIBUTE_STACKPUSH1: xed_attribute_enum_t = 92;
pub const XED_ATTRIBUTE_UNDOCUMENTED: xed_attribute_enum_t = 93;
pub const XED_ATTRIBUTE_USES_DAZ: xed_attribute_enum_t = 94;
pub const XED_ATTRIBUTE_USES_FTZ: xed_attribute_enum_t = 95;
pub const XED_ATTRIBUTE_X87_CONTROL: xed_attribute_enum_t = 96;
pub const XED_ATTRIBUTE_X87_MMX_STATE_CW: xed_attribute_enum_t = 97;
pub const XED_ATTRIBUTE_X87_MMX_STATE_R: xed_attribute_enum_t = 98;
pub const XED_ATTRIBUTE_X87_MMX_STATE_W: xed_attribute_enum_t = 99;
pub const XED_ATTRIBUTE_X87_NOWAIT: xed_attribute_enum_t = 100;
pub const XED_ATTRIBUTE_XMM_STATE_CW: xed_attribute_enum_t = 101;
pub const XED_ATTRIBUTE_XMM_STATE_R: xed_attribute_enum_t = 102;
pub const XED_ATTRIBUTE_XMM_STATE_W: xed_attribute_enum_t = 103;
pub const XED_ATTRIBUTE_LAST: xed_attribute_enum_t = 104;
pub type xed_attribute_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_attribute_enum_t types.\n @param s A C-string.\n @return #xed_attribute_enum_t\n @ingroup ENUM"]
    pub fn str2xed_attribute_enum_t(s: *const ::core::ffi::c_char) -> xed_attribute_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_attribute_enum_t types.\n @param p An enumeration element of type xed_attribute_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_attribute_enum_t2str(p: xed_attribute_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_attribute_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_attribute_enum_t_last() -> xed_attribute_enum_t;
}
pub const XED_EXCEPTION_INVALID: xed_exception_enum_t = 0;
pub const XED_EXCEPTION_AMX_E1: xed_exception_enum_t = 1;
pub const XED_EXCEPTION_AMX_E1_EVEX: xed_exception_enum_t = 2;
pub const XED_EXCEPTION_AMX_E2: xed_exception_enum_t = 3;
pub const XED_EXCEPTION_AMX_E2_EVEX: xed_exception_enum_t = 4;
pub const XED_EXCEPTION_AMX_E3: xed_exception_enum_t = 5;
pub const XED_EXCEPTION_AMX_E3_EVEX: xed_exception_enum_t = 6;
pub const XED_EXCEPTION_AMX_E4: xed_exception_enum_t = 7;
pub const XED_EXCEPTION_AMX_E5: xed_exception_enum_t = 8;
pub const XED_EXCEPTION_AMX_E6: xed_exception_enum_t = 9;
pub const XED_EXCEPTION_APX_EVEX_BMI: xed_exception_enum_t = 10;
pub const XED_EXCEPTION_APX_EVEX_CCMP: xed_exception_enum_t = 11;
pub const XED_EXCEPTION_APX_EVEX_CET_WRSS: xed_exception_enum_t = 12;
pub const XED_EXCEPTION_APX_EVEX_CET_WRUSS: xed_exception_enum_t = 13;
pub const XED_EXCEPTION_APX_EVEX_CFCMOV: xed_exception_enum_t = 14;
pub const XED_EXCEPTION_APX_EVEX_CMPCCXADD: xed_exception_enum_t = 15;
pub const XED_EXCEPTION_APX_EVEX_ENQCMD: xed_exception_enum_t = 16;
pub const XED_EXCEPTION_APX_EVEX_INT: xed_exception_enum_t = 17;
pub const XED_EXCEPTION_APX_EVEX_INVEPT: xed_exception_enum_t = 18;
pub const XED_EXCEPTION_APX_EVEX_INVPCID: xed_exception_enum_t = 19;
pub const XED_EXCEPTION_APX_EVEX_INVVPID: xed_exception_enum_t = 20;
pub const XED_EXCEPTION_APX_EVEX_KEYLOCKER: xed_exception_enum_t = 21;
pub const XED_EXCEPTION_APX_EVEX_KMOV: xed_exception_enum_t = 22;
pub const XED_EXCEPTION_APX_EVEX_PP2: xed_exception_enum_t = 23;
pub const XED_EXCEPTION_APX_EVEX_RAO_INT: xed_exception_enum_t = 24;
pub const XED_EXCEPTION_APX_EVEX_SHA: xed_exception_enum_t = 25;
pub const XED_EXCEPTION_APX_LEGACY_JMPABS: xed_exception_enum_t = 26;
pub const XED_EXCEPTION_AVX512_E1: xed_exception_enum_t = 27;
pub const XED_EXCEPTION_AVX512_E10: xed_exception_enum_t = 28;
pub const XED_EXCEPTION_AVX512_E10NF: xed_exception_enum_t = 29;
pub const XED_EXCEPTION_AVX512_E11: xed_exception_enum_t = 30;
pub const XED_EXCEPTION_AVX512_E12: xed_exception_enum_t = 31;
pub const XED_EXCEPTION_AVX512_E12NP: xed_exception_enum_t = 32;
pub const XED_EXCEPTION_AVX512_E1NF: xed_exception_enum_t = 33;
pub const XED_EXCEPTION_AVX512_E2: xed_exception_enum_t = 34;
pub const XED_EXCEPTION_AVX512_E3: xed_exception_enum_t = 35;
pub const XED_EXCEPTION_AVX512_E3NF: xed_exception_enum_t = 36;
pub const XED_EXCEPTION_AVX512_E4: xed_exception_enum_t = 37;
pub const XED_EXCEPTION_AVX512_E4NF: xed_exception_enum_t = 38;
pub const XED_EXCEPTION_AVX512_E5: xed_exception_enum_t = 39;
pub const XED_EXCEPTION_AVX512_E5NF: xed_exception_enum_t = 40;
pub const XED_EXCEPTION_AVX512_E6: xed_exception_enum_t = 41;
pub const XED_EXCEPTION_AVX512_E6NF: xed_exception_enum_t = 42;
pub const XED_EXCEPTION_AVX512_E7NM: xed_exception_enum_t = 43;
pub const XED_EXCEPTION_AVX512_E7NM128: xed_exception_enum_t = 44;
pub const XED_EXCEPTION_AVX512_E9NF: xed_exception_enum_t = 45;
pub const XED_EXCEPTION_AVX512_K20: xed_exception_enum_t = 46;
pub const XED_EXCEPTION_AVX512_K21: xed_exception_enum_t = 47;
pub const XED_EXCEPTION_AVX_TYPE_1: xed_exception_enum_t = 48;
pub const XED_EXCEPTION_AVX_TYPE_11: xed_exception_enum_t = 49;
pub const XED_EXCEPTION_AVX_TYPE_12: xed_exception_enum_t = 50;
pub const XED_EXCEPTION_AVX_TYPE_14: xed_exception_enum_t = 51;
pub const XED_EXCEPTION_AVX_TYPE_2: xed_exception_enum_t = 52;
pub const XED_EXCEPTION_AVX_TYPE_2D: xed_exception_enum_t = 53;
pub const XED_EXCEPTION_AVX_TYPE_3: xed_exception_enum_t = 54;
pub const XED_EXCEPTION_AVX_TYPE_4: xed_exception_enum_t = 55;
pub const XED_EXCEPTION_AVX_TYPE_4M: xed_exception_enum_t = 56;
pub const XED_EXCEPTION_AVX_TYPE_5: xed_exception_enum_t = 57;
pub const XED_EXCEPTION_AVX_TYPE_5L: xed_exception_enum_t = 58;
pub const XED_EXCEPTION_AVX_TYPE_6: xed_exception_enum_t = 59;
pub const XED_EXCEPTION_AVX_TYPE_7: xed_exception_enum_t = 60;
pub const XED_EXCEPTION_AVX_TYPE_8: xed_exception_enum_t = 61;
pub const XED_EXCEPTION_LEGACY_RAO_INT: xed_exception_enum_t = 62;
pub const XED_EXCEPTION_MMX_FP: xed_exception_enum_t = 63;
pub const XED_EXCEPTION_MMX_FP_16ALIGN: xed_exception_enum_t = 64;
pub const XED_EXCEPTION_MMX_MEM: xed_exception_enum_t = 65;
pub const XED_EXCEPTION_MMX_NOFP: xed_exception_enum_t = 66;
pub const XED_EXCEPTION_MMX_NOFP2: xed_exception_enum_t = 67;
pub const XED_EXCEPTION_MMX_NOMEM: xed_exception_enum_t = 68;
pub const XED_EXCEPTION_SSE_TYPE_1: xed_exception_enum_t = 69;
pub const XED_EXCEPTION_SSE_TYPE_2: xed_exception_enum_t = 70;
pub const XED_EXCEPTION_SSE_TYPE_2D: xed_exception_enum_t = 71;
pub const XED_EXCEPTION_SSE_TYPE_3: xed_exception_enum_t = 72;
pub const XED_EXCEPTION_SSE_TYPE_4: xed_exception_enum_t = 73;
pub const XED_EXCEPTION_SSE_TYPE_4M: xed_exception_enum_t = 74;
pub const XED_EXCEPTION_SSE_TYPE_5: xed_exception_enum_t = 75;
pub const XED_EXCEPTION_SSE_TYPE_7: xed_exception_enum_t = 76;
pub const XED_EXCEPTION_USER_MSR_EVEX: xed_exception_enum_t = 77;
pub const XED_EXCEPTION_USER_MSR_LEGACY: xed_exception_enum_t = 78;
pub const XED_EXCEPTION_USER_MSR_VEX: xed_exception_enum_t = 79;
pub const XED_EXCEPTION_LAST: xed_exception_enum_t = 80;
pub type xed_exception_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_exception_enum_t types.\n @param s A C-string.\n @return #xed_exception_enum_t\n @ingroup ENUM"]
    pub fn str2xed_exception_enum_t(s: *const ::core::ffi::c_char) -> xed_exception_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_exception_enum_t types.\n @param p An enumeration element of type xed_exception_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_exception_enum_t2str(p: xed_exception_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_exception_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_exception_enum_t_last() -> xed_exception_enum_t;
}
pub const XED_IFORM_INVALID: xed_iform_enum_t = 0;
pub const XED_IFORM_AAA: xed_iform_enum_t = 1;
pub const XED_IFORM_AAD_IMMb: xed_iform_enum_t = 2;
pub const XED_IFORM_AADD_MEM32_GPR32: xed_iform_enum_t = 3;
pub const XED_IFORM_AADD_MEM64_GPR64: xed_iform_enum_t = 4;
pub const XED_IFORM_AADD_MEMi32_GPR32i32_APX: xed_iform_enum_t = 5;
pub const XED_IFORM_AADD_MEMi64_GPR64i64_APX: xed_iform_enum_t = 6;
pub const XED_IFORM_AAM_IMMb: xed_iform_enum_t = 7;
pub const XED_IFORM_AAND_MEM32_GPR32: xed_iform_enum_t = 8;
pub const XED_IFORM_AAND_MEM64_GPR64: xed_iform_enum_t = 9;
pub const XED_IFORM_AAND_MEMi32_GPR32i32_APX: xed_iform_enum_t = 10;
pub const XED_IFORM_AAND_MEMi64_GPR64i64_APX: xed_iform_enum_t = 11;
pub const XED_IFORM_AAS: xed_iform_enum_t = 12;
pub const XED_IFORM_ADC_AL_IMMb: xed_iform_enum_t = 13;
pub const XED_IFORM_ADC_GPR8_GPR8_10: xed_iform_enum_t = 14;
pub const XED_IFORM_ADC_GPR8_GPR8_12: xed_iform_enum_t = 15;
pub const XED_IFORM_ADC_GPR8_IMMb_80r2: xed_iform_enum_t = 16;
pub const XED_IFORM_ADC_GPR8_IMMb_82r2: xed_iform_enum_t = 17;
pub const XED_IFORM_ADC_GPR8_MEMb: xed_iform_enum_t = 18;
pub const XED_IFORM_ADC_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 19;
pub const XED_IFORM_ADC_GPR8i8_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 20;
pub const XED_IFORM_ADC_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 21;
pub const XED_IFORM_ADC_GPR8i8_GPR8i8_MEMi8_APX: xed_iform_enum_t = 22;
pub const XED_IFORM_ADC_GPR8i8_IMM8_APX: xed_iform_enum_t = 23;
pub const XED_IFORM_ADC_GPR8i8_MEMi8_APX: xed_iform_enum_t = 24;
pub const XED_IFORM_ADC_GPR8i8_MEMi8_GPR8i8_APX: xed_iform_enum_t = 25;
pub const XED_IFORM_ADC_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 26;
pub const XED_IFORM_ADC_GPRv_GPRv_11: xed_iform_enum_t = 27;
pub const XED_IFORM_ADC_GPRv_GPRv_13: xed_iform_enum_t = 28;
pub const XED_IFORM_ADC_GPRv_GPRv_APX: xed_iform_enum_t = 29;
pub const XED_IFORM_ADC_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 30;
pub const XED_IFORM_ADC_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 31;
pub const XED_IFORM_ADC_GPRv_GPRv_IMMz_APX: xed_iform_enum_t = 32;
pub const XED_IFORM_ADC_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 33;
pub const XED_IFORM_ADC_GPRv_IMM8_APX: xed_iform_enum_t = 34;
pub const XED_IFORM_ADC_GPRv_IMMb: xed_iform_enum_t = 35;
pub const XED_IFORM_ADC_GPRv_IMMz: xed_iform_enum_t = 36;
pub const XED_IFORM_ADC_GPRv_IMMz_APX: xed_iform_enum_t = 37;
pub const XED_IFORM_ADC_GPRv_MEMv: xed_iform_enum_t = 38;
pub const XED_IFORM_ADC_GPRv_MEMv_APX: xed_iform_enum_t = 39;
pub const XED_IFORM_ADC_GPRv_MEMv_GPRv_APX: xed_iform_enum_t = 40;
pub const XED_IFORM_ADC_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 41;
pub const XED_IFORM_ADC_GPRv_MEMv_IMMz_APX: xed_iform_enum_t = 42;
pub const XED_IFORM_ADC_MEMb_GPR8: xed_iform_enum_t = 43;
pub const XED_IFORM_ADC_MEMb_IMMb_80r2: xed_iform_enum_t = 44;
pub const XED_IFORM_ADC_MEMb_IMMb_82r2: xed_iform_enum_t = 45;
pub const XED_IFORM_ADC_MEMi8_GPR8i8_APX: xed_iform_enum_t = 46;
pub const XED_IFORM_ADC_MEMi8_IMM8_APX: xed_iform_enum_t = 47;
pub const XED_IFORM_ADC_MEMv_GPRv: xed_iform_enum_t = 48;
pub const XED_IFORM_ADC_MEMv_GPRv_APX: xed_iform_enum_t = 49;
pub const XED_IFORM_ADC_MEMv_IMM8_APX: xed_iform_enum_t = 50;
pub const XED_IFORM_ADC_MEMv_IMMb: xed_iform_enum_t = 51;
pub const XED_IFORM_ADC_MEMv_IMMz: xed_iform_enum_t = 52;
pub const XED_IFORM_ADC_MEMv_IMMz_APX: xed_iform_enum_t = 53;
pub const XED_IFORM_ADC_OrAX_IMMz: xed_iform_enum_t = 54;
pub const XED_IFORM_ADCX_GPR32d_GPR32d: xed_iform_enum_t = 55;
pub const XED_IFORM_ADCX_GPR32d_MEMd: xed_iform_enum_t = 56;
pub const XED_IFORM_ADCX_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 57;
pub const XED_IFORM_ADCX_GPR32i32_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 58;
pub const XED_IFORM_ADCX_GPR32i32_GPR32i32_MEMi32_APX: xed_iform_enum_t = 59;
pub const XED_IFORM_ADCX_GPR32i32_MEMi32_APX: xed_iform_enum_t = 60;
pub const XED_IFORM_ADCX_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 61;
pub const XED_IFORM_ADCX_GPR64i64_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 62;
pub const XED_IFORM_ADCX_GPR64i64_GPR64i64_MEMi64_APX: xed_iform_enum_t = 63;
pub const XED_IFORM_ADCX_GPR64i64_MEMi64_APX: xed_iform_enum_t = 64;
pub const XED_IFORM_ADCX_GPR64q_GPR64q: xed_iform_enum_t = 65;
pub const XED_IFORM_ADCX_GPR64q_MEMq: xed_iform_enum_t = 66;
pub const XED_IFORM_ADC_LOCK_MEMb_GPR8: xed_iform_enum_t = 67;
pub const XED_IFORM_ADC_LOCK_MEMb_IMMb_80r2: xed_iform_enum_t = 68;
pub const XED_IFORM_ADC_LOCK_MEMb_IMMb_82r2: xed_iform_enum_t = 69;
pub const XED_IFORM_ADC_LOCK_MEMv_GPRv: xed_iform_enum_t = 70;
pub const XED_IFORM_ADC_LOCK_MEMv_IMMb: xed_iform_enum_t = 71;
pub const XED_IFORM_ADC_LOCK_MEMv_IMMz: xed_iform_enum_t = 72;
pub const XED_IFORM_ADD_AL_IMMb: xed_iform_enum_t = 73;
pub const XED_IFORM_ADD_GPR8_GPR8_00: xed_iform_enum_t = 74;
pub const XED_IFORM_ADD_GPR8_GPR8_02: xed_iform_enum_t = 75;
pub const XED_IFORM_ADD_GPR8_IMMb_80r0: xed_iform_enum_t = 76;
pub const XED_IFORM_ADD_GPR8_IMMb_82r0: xed_iform_enum_t = 77;
pub const XED_IFORM_ADD_GPR8_MEMb: xed_iform_enum_t = 78;
pub const XED_IFORM_ADD_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 79;
pub const XED_IFORM_ADD_GPR8i8_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 80;
pub const XED_IFORM_ADD_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 81;
pub const XED_IFORM_ADD_GPR8i8_GPR8i8_MEMi8_APX: xed_iform_enum_t = 82;
pub const XED_IFORM_ADD_GPR8i8_IMM8_APX: xed_iform_enum_t = 83;
pub const XED_IFORM_ADD_GPR8i8_MEMi8_APX: xed_iform_enum_t = 84;
pub const XED_IFORM_ADD_GPR8i8_MEMi8_GPR8i8_APX: xed_iform_enum_t = 85;
pub const XED_IFORM_ADD_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 86;
pub const XED_IFORM_ADD_GPRv_GPRv_01: xed_iform_enum_t = 87;
pub const XED_IFORM_ADD_GPRv_GPRv_03: xed_iform_enum_t = 88;
pub const XED_IFORM_ADD_GPRv_GPRv_APX: xed_iform_enum_t = 89;
pub const XED_IFORM_ADD_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 90;
pub const XED_IFORM_ADD_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 91;
pub const XED_IFORM_ADD_GPRv_GPRv_IMMz_APX: xed_iform_enum_t = 92;
pub const XED_IFORM_ADD_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 93;
pub const XED_IFORM_ADD_GPRv_IMM8_APX: xed_iform_enum_t = 94;
pub const XED_IFORM_ADD_GPRv_IMMb: xed_iform_enum_t = 95;
pub const XED_IFORM_ADD_GPRv_IMMz: xed_iform_enum_t = 96;
pub const XED_IFORM_ADD_GPRv_IMMz_APX: xed_iform_enum_t = 97;
pub const XED_IFORM_ADD_GPRv_MEMv: xed_iform_enum_t = 98;
pub const XED_IFORM_ADD_GPRv_MEMv_APX: xed_iform_enum_t = 99;
pub const XED_IFORM_ADD_GPRv_MEMv_GPRv_APX: xed_iform_enum_t = 100;
pub const XED_IFORM_ADD_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 101;
pub const XED_IFORM_ADD_GPRv_MEMv_IMMz_APX: xed_iform_enum_t = 102;
pub const XED_IFORM_ADD_MEMb_GPR8: xed_iform_enum_t = 103;
pub const XED_IFORM_ADD_MEMb_IMMb_80r0: xed_iform_enum_t = 104;
pub const XED_IFORM_ADD_MEMb_IMMb_82r0: xed_iform_enum_t = 105;
pub const XED_IFORM_ADD_MEMi8_GPR8i8_APX: xed_iform_enum_t = 106;
pub const XED_IFORM_ADD_MEMi8_IMM8_APX: xed_iform_enum_t = 107;
pub const XED_IFORM_ADD_MEMv_GPRv: xed_iform_enum_t = 108;
pub const XED_IFORM_ADD_MEMv_GPRv_APX: xed_iform_enum_t = 109;
pub const XED_IFORM_ADD_MEMv_IMM8_APX: xed_iform_enum_t = 110;
pub const XED_IFORM_ADD_MEMv_IMMb: xed_iform_enum_t = 111;
pub const XED_IFORM_ADD_MEMv_IMMz: xed_iform_enum_t = 112;
pub const XED_IFORM_ADD_MEMv_IMMz_APX: xed_iform_enum_t = 113;
pub const XED_IFORM_ADD_OrAX_IMMz: xed_iform_enum_t = 114;
pub const XED_IFORM_ADDPD_XMMpd_MEMpd: xed_iform_enum_t = 115;
pub const XED_IFORM_ADDPD_XMMpd_XMMpd: xed_iform_enum_t = 116;
pub const XED_IFORM_ADDPS_XMMps_MEMps: xed_iform_enum_t = 117;
pub const XED_IFORM_ADDPS_XMMps_XMMps: xed_iform_enum_t = 118;
pub const XED_IFORM_ADDSD_XMMsd_MEMsd: xed_iform_enum_t = 119;
pub const XED_IFORM_ADDSD_XMMsd_XMMsd: xed_iform_enum_t = 120;
pub const XED_IFORM_ADDSS_XMMss_MEMss: xed_iform_enum_t = 121;
pub const XED_IFORM_ADDSS_XMMss_XMMss: xed_iform_enum_t = 122;
pub const XED_IFORM_ADDSUBPD_XMMpd_MEMpd: xed_iform_enum_t = 123;
pub const XED_IFORM_ADDSUBPD_XMMpd_XMMpd: xed_iform_enum_t = 124;
pub const XED_IFORM_ADDSUBPS_XMMps_MEMps: xed_iform_enum_t = 125;
pub const XED_IFORM_ADDSUBPS_XMMps_XMMps: xed_iform_enum_t = 126;
pub const XED_IFORM_ADD_LOCK_MEMb_GPR8: xed_iform_enum_t = 127;
pub const XED_IFORM_ADD_LOCK_MEMb_IMMb_80r0: xed_iform_enum_t = 128;
pub const XED_IFORM_ADD_LOCK_MEMb_IMMb_82r0: xed_iform_enum_t = 129;
pub const XED_IFORM_ADD_LOCK_MEMv_GPRv: xed_iform_enum_t = 130;
pub const XED_IFORM_ADD_LOCK_MEMv_IMMb: xed_iform_enum_t = 131;
pub const XED_IFORM_ADD_LOCK_MEMv_IMMz: xed_iform_enum_t = 132;
pub const XED_IFORM_ADOX_GPR32d_GPR32d: xed_iform_enum_t = 133;
pub const XED_IFORM_ADOX_GPR32d_MEMd: xed_iform_enum_t = 134;
pub const XED_IFORM_ADOX_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 135;
pub const XED_IFORM_ADOX_GPR32i32_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 136;
pub const XED_IFORM_ADOX_GPR32i32_GPR32i32_MEMi32_APX: xed_iform_enum_t = 137;
pub const XED_IFORM_ADOX_GPR32i32_MEMi32_APX: xed_iform_enum_t = 138;
pub const XED_IFORM_ADOX_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 139;
pub const XED_IFORM_ADOX_GPR64i64_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 140;
pub const XED_IFORM_ADOX_GPR64i64_GPR64i64_MEMi64_APX: xed_iform_enum_t = 141;
pub const XED_IFORM_ADOX_GPR64i64_MEMi64_APX: xed_iform_enum_t = 142;
pub const XED_IFORM_ADOX_GPR64q_GPR64q: xed_iform_enum_t = 143;
pub const XED_IFORM_ADOX_GPR64q_MEMq: xed_iform_enum_t = 144;
pub const XED_IFORM_AESDEC_XMMdq_MEMdq: xed_iform_enum_t = 145;
pub const XED_IFORM_AESDEC_XMMdq_XMMdq: xed_iform_enum_t = 146;
pub const XED_IFORM_AESDEC128KL_XMMu8_MEMu8: xed_iform_enum_t = 147;
pub const XED_IFORM_AESDEC128KL_XMMu8_MEMu8_APX: xed_iform_enum_t = 148;
pub const XED_IFORM_AESDEC256KL_XMMu8_MEMu8: xed_iform_enum_t = 149;
pub const XED_IFORM_AESDEC256KL_XMMu8_MEMu8_APX: xed_iform_enum_t = 150;
pub const XED_IFORM_AESDECLAST_XMMdq_MEMdq: xed_iform_enum_t = 151;
pub const XED_IFORM_AESDECLAST_XMMdq_XMMdq: xed_iform_enum_t = 152;
pub const XED_IFORM_AESDECWIDE128KL_MEMu8: xed_iform_enum_t = 153;
pub const XED_IFORM_AESDECWIDE128KL_MEMu8_APX: xed_iform_enum_t = 154;
pub const XED_IFORM_AESDECWIDE256KL_MEMu8: xed_iform_enum_t = 155;
pub const XED_IFORM_AESDECWIDE256KL_MEMu8_APX: xed_iform_enum_t = 156;
pub const XED_IFORM_AESENC_XMMdq_MEMdq: xed_iform_enum_t = 157;
pub const XED_IFORM_AESENC_XMMdq_XMMdq: xed_iform_enum_t = 158;
pub const XED_IFORM_AESENC128KL_XMMu8_MEMu8: xed_iform_enum_t = 159;
pub const XED_IFORM_AESENC128KL_XMMu8_MEMu8_APX: xed_iform_enum_t = 160;
pub const XED_IFORM_AESENC256KL_XMMu8_MEMu8: xed_iform_enum_t = 161;
pub const XED_IFORM_AESENC256KL_XMMu8_MEMu8_APX: xed_iform_enum_t = 162;
pub const XED_IFORM_AESENCLAST_XMMdq_MEMdq: xed_iform_enum_t = 163;
pub const XED_IFORM_AESENCLAST_XMMdq_XMMdq: xed_iform_enum_t = 164;
pub const XED_IFORM_AESENCWIDE128KL_MEMu8: xed_iform_enum_t = 165;
pub const XED_IFORM_AESENCWIDE128KL_MEMu8_APX: xed_iform_enum_t = 166;
pub const XED_IFORM_AESENCWIDE256KL_MEMu8: xed_iform_enum_t = 167;
pub const XED_IFORM_AESENCWIDE256KL_MEMu8_APX: xed_iform_enum_t = 168;
pub const XED_IFORM_AESIMC_XMMdq_MEMdq: xed_iform_enum_t = 169;
pub const XED_IFORM_AESIMC_XMMdq_XMMdq: xed_iform_enum_t = 170;
pub const XED_IFORM_AESKEYGENASSIST_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 171;
pub const XED_IFORM_AESKEYGENASSIST_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 172;
pub const XED_IFORM_AND_AL_IMMb: xed_iform_enum_t = 173;
pub const XED_IFORM_AND_GPR8_GPR8_20: xed_iform_enum_t = 174;
pub const XED_IFORM_AND_GPR8_GPR8_22: xed_iform_enum_t = 175;
pub const XED_IFORM_AND_GPR8_IMMb_80r4: xed_iform_enum_t = 176;
pub const XED_IFORM_AND_GPR8_IMMb_82r4: xed_iform_enum_t = 177;
pub const XED_IFORM_AND_GPR8_MEMb: xed_iform_enum_t = 178;
pub const XED_IFORM_AND_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 179;
pub const XED_IFORM_AND_GPR8i8_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 180;
pub const XED_IFORM_AND_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 181;
pub const XED_IFORM_AND_GPR8i8_GPR8i8_MEMi8_APX: xed_iform_enum_t = 182;
pub const XED_IFORM_AND_GPR8i8_IMM8_APX: xed_iform_enum_t = 183;
pub const XED_IFORM_AND_GPR8i8_MEMi8_APX: xed_iform_enum_t = 184;
pub const XED_IFORM_AND_GPR8i8_MEMi8_GPR8i8_APX: xed_iform_enum_t = 185;
pub const XED_IFORM_AND_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 186;
pub const XED_IFORM_AND_GPRv_GPRv_21: xed_iform_enum_t = 187;
pub const XED_IFORM_AND_GPRv_GPRv_23: xed_iform_enum_t = 188;
pub const XED_IFORM_AND_GPRv_GPRv_APX: xed_iform_enum_t = 189;
pub const XED_IFORM_AND_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 190;
pub const XED_IFORM_AND_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 191;
pub const XED_IFORM_AND_GPRv_GPRv_IMMz_APX: xed_iform_enum_t = 192;
pub const XED_IFORM_AND_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 193;
pub const XED_IFORM_AND_GPRv_IMM8_APX: xed_iform_enum_t = 194;
pub const XED_IFORM_AND_GPRv_IMMb: xed_iform_enum_t = 195;
pub const XED_IFORM_AND_GPRv_IMMz: xed_iform_enum_t = 196;
pub const XED_IFORM_AND_GPRv_IMMz_APX: xed_iform_enum_t = 197;
pub const XED_IFORM_AND_GPRv_MEMv: xed_iform_enum_t = 198;
pub const XED_IFORM_AND_GPRv_MEMv_APX: xed_iform_enum_t = 199;
pub const XED_IFORM_AND_GPRv_MEMv_GPRv_APX: xed_iform_enum_t = 200;
pub const XED_IFORM_AND_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 201;
pub const XED_IFORM_AND_GPRv_MEMv_IMMz_APX: xed_iform_enum_t = 202;
pub const XED_IFORM_AND_MEMb_GPR8: xed_iform_enum_t = 203;
pub const XED_IFORM_AND_MEMb_IMMb_80r4: xed_iform_enum_t = 204;
pub const XED_IFORM_AND_MEMb_IMMb_82r4: xed_iform_enum_t = 205;
pub const XED_IFORM_AND_MEMi8_GPR8i8_APX: xed_iform_enum_t = 206;
pub const XED_IFORM_AND_MEMi8_IMM8_APX: xed_iform_enum_t = 207;
pub const XED_IFORM_AND_MEMv_GPRv: xed_iform_enum_t = 208;
pub const XED_IFORM_AND_MEMv_GPRv_APX: xed_iform_enum_t = 209;
pub const XED_IFORM_AND_MEMv_IMM8_APX: xed_iform_enum_t = 210;
pub const XED_IFORM_AND_MEMv_IMMb: xed_iform_enum_t = 211;
pub const XED_IFORM_AND_MEMv_IMMz: xed_iform_enum_t = 212;
pub const XED_IFORM_AND_MEMv_IMMz_APX: xed_iform_enum_t = 213;
pub const XED_IFORM_AND_OrAX_IMMz: xed_iform_enum_t = 214;
pub const XED_IFORM_ANDN_GPR32d_GPR32d_GPR32d: xed_iform_enum_t = 215;
pub const XED_IFORM_ANDN_GPR32d_GPR32d_MEMd: xed_iform_enum_t = 216;
pub const XED_IFORM_ANDN_GPR32i32_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 217;
pub const XED_IFORM_ANDN_GPR32i32_GPR32i32_MEMi32_APX: xed_iform_enum_t = 218;
pub const XED_IFORM_ANDN_GPR64i64_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 219;
pub const XED_IFORM_ANDN_GPR64i64_GPR64i64_MEMi64_APX: xed_iform_enum_t = 220;
pub const XED_IFORM_ANDN_GPR64q_GPR64q_GPR64q: xed_iform_enum_t = 221;
pub const XED_IFORM_ANDN_GPR64q_GPR64q_MEMq: xed_iform_enum_t = 222;
pub const XED_IFORM_ANDNPD_XMMxuq_MEMxuq: xed_iform_enum_t = 223;
pub const XED_IFORM_ANDNPD_XMMxuq_XMMxuq: xed_iform_enum_t = 224;
pub const XED_IFORM_ANDNPS_XMMxud_MEMxud: xed_iform_enum_t = 225;
pub const XED_IFORM_ANDNPS_XMMxud_XMMxud: xed_iform_enum_t = 226;
pub const XED_IFORM_ANDPD_XMMxuq_MEMxuq: xed_iform_enum_t = 227;
pub const XED_IFORM_ANDPD_XMMxuq_XMMxuq: xed_iform_enum_t = 228;
pub const XED_IFORM_ANDPS_XMMxud_MEMxud: xed_iform_enum_t = 229;
pub const XED_IFORM_ANDPS_XMMxud_XMMxud: xed_iform_enum_t = 230;
pub const XED_IFORM_AND_LOCK_MEMb_GPR8: xed_iform_enum_t = 231;
pub const XED_IFORM_AND_LOCK_MEMb_IMMb_80r4: xed_iform_enum_t = 232;
pub const XED_IFORM_AND_LOCK_MEMb_IMMb_82r4: xed_iform_enum_t = 233;
pub const XED_IFORM_AND_LOCK_MEMv_GPRv: xed_iform_enum_t = 234;
pub const XED_IFORM_AND_LOCK_MEMv_IMMb: xed_iform_enum_t = 235;
pub const XED_IFORM_AND_LOCK_MEMv_IMMz: xed_iform_enum_t = 236;
pub const XED_IFORM_AOR_MEM32_GPR32: xed_iform_enum_t = 237;
pub const XED_IFORM_AOR_MEM64_GPR64: xed_iform_enum_t = 238;
pub const XED_IFORM_AOR_MEMi32_GPR32i32_APX: xed_iform_enum_t = 239;
pub const XED_IFORM_AOR_MEMi64_GPR64i64_APX: xed_iform_enum_t = 240;
pub const XED_IFORM_ARPL_GPR16_GPR16: xed_iform_enum_t = 241;
pub const XED_IFORM_ARPL_MEMw_GPR16: xed_iform_enum_t = 242;
pub const XED_IFORM_AXOR_MEM32_GPR32: xed_iform_enum_t = 243;
pub const XED_IFORM_AXOR_MEM64_GPR64: xed_iform_enum_t = 244;
pub const XED_IFORM_AXOR_MEMi32_GPR32i32_APX: xed_iform_enum_t = 245;
pub const XED_IFORM_AXOR_MEMi64_GPR64i64_APX: xed_iform_enum_t = 246;
pub const XED_IFORM_BEXTR_GPR32d_GPR32d_GPR32d: xed_iform_enum_t = 247;
pub const XED_IFORM_BEXTR_GPR32d_MEMd_GPR32d: xed_iform_enum_t = 248;
pub const XED_IFORM_BEXTR_GPR32i32_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 249;
pub const XED_IFORM_BEXTR_GPR32i32_MEMi32_GPR32i32_APX: xed_iform_enum_t = 250;
pub const XED_IFORM_BEXTR_GPR64i64_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 251;
pub const XED_IFORM_BEXTR_GPR64i64_MEMi64_GPR64i64_APX: xed_iform_enum_t = 252;
pub const XED_IFORM_BEXTR_GPR64q_GPR64q_GPR64q: xed_iform_enum_t = 253;
pub const XED_IFORM_BEXTR_GPR64q_MEMq_GPR64q: xed_iform_enum_t = 254;
pub const XED_IFORM_BEXTR_XOP_GPR32d_GPR32d_IMMd: xed_iform_enum_t = 255;
pub const XED_IFORM_BEXTR_XOP_GPR32d_MEMd_IMMd: xed_iform_enum_t = 256;
pub const XED_IFORM_BEXTR_XOP_GPRyy_GPRyy_IMMd: xed_iform_enum_t = 257;
pub const XED_IFORM_BEXTR_XOP_GPRyy_MEMy_IMMd: xed_iform_enum_t = 258;
pub const XED_IFORM_BLCFILL_GPR32d_GPR32d: xed_iform_enum_t = 259;
pub const XED_IFORM_BLCFILL_GPR32d_MEMd: xed_iform_enum_t = 260;
pub const XED_IFORM_BLCFILL_GPRyy_GPRyy: xed_iform_enum_t = 261;
pub const XED_IFORM_BLCFILL_GPRyy_MEMy: xed_iform_enum_t = 262;
pub const XED_IFORM_BLCI_GPR32d_GPR32d: xed_iform_enum_t = 263;
pub const XED_IFORM_BLCI_GPR32d_MEMd: xed_iform_enum_t = 264;
pub const XED_IFORM_BLCI_GPRyy_GPRyy: xed_iform_enum_t = 265;
pub const XED_IFORM_BLCI_GPRyy_MEMy: xed_iform_enum_t = 266;
pub const XED_IFORM_BLCIC_GPR32d_GPR32d: xed_iform_enum_t = 267;
pub const XED_IFORM_BLCIC_GPR32d_MEMd: xed_iform_enum_t = 268;
pub const XED_IFORM_BLCIC_GPRyy_GPRyy: xed_iform_enum_t = 269;
pub const XED_IFORM_BLCIC_GPRyy_MEMy: xed_iform_enum_t = 270;
pub const XED_IFORM_BLCMSK_GPR32d_GPR32d: xed_iform_enum_t = 271;
pub const XED_IFORM_BLCMSK_GPR32d_MEMd: xed_iform_enum_t = 272;
pub const XED_IFORM_BLCMSK_GPRyy_GPRyy: xed_iform_enum_t = 273;
pub const XED_IFORM_BLCMSK_GPRyy_MEMy: xed_iform_enum_t = 274;
pub const XED_IFORM_BLCS_GPR32d_GPR32d: xed_iform_enum_t = 275;
pub const XED_IFORM_BLCS_GPR32d_MEMd: xed_iform_enum_t = 276;
pub const XED_IFORM_BLCS_GPRyy_GPRyy: xed_iform_enum_t = 277;
pub const XED_IFORM_BLCS_GPRyy_MEMy: xed_iform_enum_t = 278;
pub const XED_IFORM_BLENDPD_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 279;
pub const XED_IFORM_BLENDPD_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 280;
pub const XED_IFORM_BLENDPS_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 281;
pub const XED_IFORM_BLENDPS_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 282;
pub const XED_IFORM_BLENDVPD_XMMdq_MEMdq: xed_iform_enum_t = 283;
pub const XED_IFORM_BLENDVPD_XMMdq_XMMdq: xed_iform_enum_t = 284;
pub const XED_IFORM_BLENDVPS_XMMdq_MEMdq: xed_iform_enum_t = 285;
pub const XED_IFORM_BLENDVPS_XMMdq_XMMdq: xed_iform_enum_t = 286;
pub const XED_IFORM_BLSFILL_GPR32d_GPR32d: xed_iform_enum_t = 287;
pub const XED_IFORM_BLSFILL_GPR32d_MEMd: xed_iform_enum_t = 288;
pub const XED_IFORM_BLSFILL_GPRyy_GPRyy: xed_iform_enum_t = 289;
pub const XED_IFORM_BLSFILL_GPRyy_MEMy: xed_iform_enum_t = 290;
pub const XED_IFORM_BLSI_GPR32d_GPR32d: xed_iform_enum_t = 291;
pub const XED_IFORM_BLSI_GPR32d_MEMd: xed_iform_enum_t = 292;
pub const XED_IFORM_BLSI_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 293;
pub const XED_IFORM_BLSI_GPR32i32_MEMi32_APX: xed_iform_enum_t = 294;
pub const XED_IFORM_BLSI_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 295;
pub const XED_IFORM_BLSI_GPR64i64_MEMi64_APX: xed_iform_enum_t = 296;
pub const XED_IFORM_BLSI_GPR64q_GPR64q: xed_iform_enum_t = 297;
pub const XED_IFORM_BLSI_GPR64q_MEMq: xed_iform_enum_t = 298;
pub const XED_IFORM_BLSIC_GPR32d_GPR32d: xed_iform_enum_t = 299;
pub const XED_IFORM_BLSIC_GPR32d_MEMd: xed_iform_enum_t = 300;
pub const XED_IFORM_BLSIC_GPRyy_GPRyy: xed_iform_enum_t = 301;
pub const XED_IFORM_BLSIC_GPRyy_MEMy: xed_iform_enum_t = 302;
pub const XED_IFORM_BLSMSK_GPR32d_GPR32d: xed_iform_enum_t = 303;
pub const XED_IFORM_BLSMSK_GPR32d_MEMd: xed_iform_enum_t = 304;
pub const XED_IFORM_BLSMSK_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 305;
pub const XED_IFORM_BLSMSK_GPR32i32_MEMi32_APX: xed_iform_enum_t = 306;
pub const XED_IFORM_BLSMSK_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 307;
pub const XED_IFORM_BLSMSK_GPR64i64_MEMi64_APX: xed_iform_enum_t = 308;
pub const XED_IFORM_BLSMSK_GPR64q_GPR64q: xed_iform_enum_t = 309;
pub const XED_IFORM_BLSMSK_GPR64q_MEMq: xed_iform_enum_t = 310;
pub const XED_IFORM_BLSR_GPR32d_GPR32d: xed_iform_enum_t = 311;
pub const XED_IFORM_BLSR_GPR32d_MEMd: xed_iform_enum_t = 312;
pub const XED_IFORM_BLSR_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 313;
pub const XED_IFORM_BLSR_GPR32i32_MEMi32_APX: xed_iform_enum_t = 314;
pub const XED_IFORM_BLSR_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 315;
pub const XED_IFORM_BLSR_GPR64i64_MEMi64_APX: xed_iform_enum_t = 316;
pub const XED_IFORM_BLSR_GPR64q_GPR64q: xed_iform_enum_t = 317;
pub const XED_IFORM_BLSR_GPR64q_MEMq: xed_iform_enum_t = 318;
pub const XED_IFORM_BNDCL_BND_AGEN: xed_iform_enum_t = 319;
pub const XED_IFORM_BNDCL_BND_GPR32: xed_iform_enum_t = 320;
pub const XED_IFORM_BNDCL_BND_GPR64: xed_iform_enum_t = 321;
pub const XED_IFORM_BNDCN_BND_AGEN: xed_iform_enum_t = 322;
pub const XED_IFORM_BNDCN_BND_GPR32: xed_iform_enum_t = 323;
pub const XED_IFORM_BNDCN_BND_GPR64: xed_iform_enum_t = 324;
pub const XED_IFORM_BNDCU_BND_AGEN: xed_iform_enum_t = 325;
pub const XED_IFORM_BNDCU_BND_GPR32: xed_iform_enum_t = 326;
pub const XED_IFORM_BNDCU_BND_GPR64: xed_iform_enum_t = 327;
pub const XED_IFORM_BNDLDX_BND_MEMbnd32: xed_iform_enum_t = 328;
pub const XED_IFORM_BNDLDX_BND_MEMbnd64: xed_iform_enum_t = 329;
pub const XED_IFORM_BNDMK_BND_AGEN: xed_iform_enum_t = 330;
pub const XED_IFORM_BNDMOV_BND_BND: xed_iform_enum_t = 331;
pub const XED_IFORM_BNDMOV_BND_MEMdq: xed_iform_enum_t = 332;
pub const XED_IFORM_BNDMOV_BND_MEMq: xed_iform_enum_t = 333;
pub const XED_IFORM_BNDMOV_MEMdq_BND: xed_iform_enum_t = 334;
pub const XED_IFORM_BNDMOV_MEMq_BND: xed_iform_enum_t = 335;
pub const XED_IFORM_BNDSTX_MEMbnd32_BND: xed_iform_enum_t = 336;
pub const XED_IFORM_BNDSTX_MEMbnd64_BND: xed_iform_enum_t = 337;
pub const XED_IFORM_BOUND_GPRv_MEMa16: xed_iform_enum_t = 338;
pub const XED_IFORM_BOUND_GPRv_MEMa32: xed_iform_enum_t = 339;
pub const XED_IFORM_BSF_GPRv_GPRv: xed_iform_enum_t = 340;
pub const XED_IFORM_BSF_GPRv_MEMv: xed_iform_enum_t = 341;
pub const XED_IFORM_BSR_GPRv_GPRv: xed_iform_enum_t = 342;
pub const XED_IFORM_BSR_GPRv_MEMv: xed_iform_enum_t = 343;
pub const XED_IFORM_BSWAP_GPRv: xed_iform_enum_t = 344;
pub const XED_IFORM_BT_GPRv_GPRv: xed_iform_enum_t = 345;
pub const XED_IFORM_BT_GPRv_IMMb: xed_iform_enum_t = 346;
pub const XED_IFORM_BT_MEMv_GPRv: xed_iform_enum_t = 347;
pub const XED_IFORM_BT_MEMv_IMMb: xed_iform_enum_t = 348;
pub const XED_IFORM_BTC_GPRv_GPRv: xed_iform_enum_t = 349;
pub const XED_IFORM_BTC_GPRv_IMMb: xed_iform_enum_t = 350;
pub const XED_IFORM_BTC_MEMv_GPRv: xed_iform_enum_t = 351;
pub const XED_IFORM_BTC_MEMv_IMMb: xed_iform_enum_t = 352;
pub const XED_IFORM_BTC_LOCK_MEMv_GPRv: xed_iform_enum_t = 353;
pub const XED_IFORM_BTC_LOCK_MEMv_IMMb: xed_iform_enum_t = 354;
pub const XED_IFORM_BTR_GPRv_GPRv: xed_iform_enum_t = 355;
pub const XED_IFORM_BTR_GPRv_IMMb: xed_iform_enum_t = 356;
pub const XED_IFORM_BTR_MEMv_GPRv: xed_iform_enum_t = 357;
pub const XED_IFORM_BTR_MEMv_IMMb: xed_iform_enum_t = 358;
pub const XED_IFORM_BTR_LOCK_MEMv_GPRv: xed_iform_enum_t = 359;
pub const XED_IFORM_BTR_LOCK_MEMv_IMMb: xed_iform_enum_t = 360;
pub const XED_IFORM_BTS_GPRv_GPRv: xed_iform_enum_t = 361;
pub const XED_IFORM_BTS_GPRv_IMMb: xed_iform_enum_t = 362;
pub const XED_IFORM_BTS_MEMv_GPRv: xed_iform_enum_t = 363;
pub const XED_IFORM_BTS_MEMv_IMMb: xed_iform_enum_t = 364;
pub const XED_IFORM_BTS_LOCK_MEMv_GPRv: xed_iform_enum_t = 365;
pub const XED_IFORM_BTS_LOCK_MEMv_IMMb: xed_iform_enum_t = 366;
pub const XED_IFORM_BZHI_GPR32d_GPR32d_GPR32d: xed_iform_enum_t = 367;
pub const XED_IFORM_BZHI_GPR32d_MEMd_GPR32d: xed_iform_enum_t = 368;
pub const XED_IFORM_BZHI_GPR32i32_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 369;
pub const XED_IFORM_BZHI_GPR32i32_MEMi32_GPR32i32_APX: xed_iform_enum_t = 370;
pub const XED_IFORM_BZHI_GPR64i64_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 371;
pub const XED_IFORM_BZHI_GPR64i64_MEMi64_GPR64i64_APX: xed_iform_enum_t = 372;
pub const XED_IFORM_BZHI_GPR64q_GPR64q_GPR64q: xed_iform_enum_t = 373;
pub const XED_IFORM_BZHI_GPR64q_MEMq_GPR64q: xed_iform_enum_t = 374;
pub const XED_IFORM_CALL_FAR_MEMp2: xed_iform_enum_t = 375;
pub const XED_IFORM_CALL_FAR_PTRp_IMMw: xed_iform_enum_t = 376;
pub const XED_IFORM_CALL_NEAR_GPRv: xed_iform_enum_t = 377;
pub const XED_IFORM_CALL_NEAR_MEMv: xed_iform_enum_t = 378;
pub const XED_IFORM_CALL_NEAR_RELBRd: xed_iform_enum_t = 379;
pub const XED_IFORM_CALL_NEAR_RELBRz: xed_iform_enum_t = 380;
pub const XED_IFORM_CBW: xed_iform_enum_t = 381;
pub const XED_IFORM_CCMPB_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 382;
pub const XED_IFORM_CCMPB_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 383;
pub const XED_IFORM_CCMPB_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 384;
pub const XED_IFORM_CCMPB_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 385;
pub const XED_IFORM_CCMPB_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 386;
pub const XED_IFORM_CCMPB_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 387;
pub const XED_IFORM_CCMPB_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 388;
pub const XED_IFORM_CCMPB_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 389;
pub const XED_IFORM_CCMPB_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 390;
pub const XED_IFORM_CCMPB_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 391;
pub const XED_IFORM_CCMPB_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 392;
pub const XED_IFORM_CCMPB_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 393;
pub const XED_IFORM_CCMPBE_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 394;
pub const XED_IFORM_CCMPBE_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 395;
pub const XED_IFORM_CCMPBE_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 396;
pub const XED_IFORM_CCMPBE_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 397;
pub const XED_IFORM_CCMPBE_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 398;
pub const XED_IFORM_CCMPBE_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 399;
pub const XED_IFORM_CCMPBE_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 400;
pub const XED_IFORM_CCMPBE_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 401;
pub const XED_IFORM_CCMPBE_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 402;
pub const XED_IFORM_CCMPBE_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 403;
pub const XED_IFORM_CCMPBE_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 404;
pub const XED_IFORM_CCMPBE_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 405;
pub const XED_IFORM_CCMPF_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 406;
pub const XED_IFORM_CCMPF_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 407;
pub const XED_IFORM_CCMPF_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 408;
pub const XED_IFORM_CCMPF_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 409;
pub const XED_IFORM_CCMPF_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 410;
pub const XED_IFORM_CCMPF_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 411;
pub const XED_IFORM_CCMPF_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 412;
pub const XED_IFORM_CCMPF_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 413;
pub const XED_IFORM_CCMPF_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 414;
pub const XED_IFORM_CCMPF_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 415;
pub const XED_IFORM_CCMPF_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 416;
pub const XED_IFORM_CCMPF_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 417;
pub const XED_IFORM_CCMPL_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 418;
pub const XED_IFORM_CCMPL_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 419;
pub const XED_IFORM_CCMPL_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 420;
pub const XED_IFORM_CCMPL_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 421;
pub const XED_IFORM_CCMPL_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 422;
pub const XED_IFORM_CCMPL_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 423;
pub const XED_IFORM_CCMPL_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 424;
pub const XED_IFORM_CCMPL_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 425;
pub const XED_IFORM_CCMPL_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 426;
pub const XED_IFORM_CCMPL_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 427;
pub const XED_IFORM_CCMPL_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 428;
pub const XED_IFORM_CCMPL_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 429;
pub const XED_IFORM_CCMPLE_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 430;
pub const XED_IFORM_CCMPLE_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 431;
pub const XED_IFORM_CCMPLE_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 432;
pub const XED_IFORM_CCMPLE_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 433;
pub const XED_IFORM_CCMPLE_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 434;
pub const XED_IFORM_CCMPLE_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 435;
pub const XED_IFORM_CCMPLE_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 436;
pub const XED_IFORM_CCMPLE_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 437;
pub const XED_IFORM_CCMPLE_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 438;
pub const XED_IFORM_CCMPLE_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 439;
pub const XED_IFORM_CCMPLE_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 440;
pub const XED_IFORM_CCMPLE_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 441;
pub const XED_IFORM_CCMPNB_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 442;
pub const XED_IFORM_CCMPNB_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 443;
pub const XED_IFORM_CCMPNB_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 444;
pub const XED_IFORM_CCMPNB_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 445;
pub const XED_IFORM_CCMPNB_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 446;
pub const XED_IFORM_CCMPNB_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 447;
pub const XED_IFORM_CCMPNB_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 448;
pub const XED_IFORM_CCMPNB_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 449;
pub const XED_IFORM_CCMPNB_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 450;
pub const XED_IFORM_CCMPNB_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 451;
pub const XED_IFORM_CCMPNB_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 452;
pub const XED_IFORM_CCMPNB_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 453;
pub const XED_IFORM_CCMPNBE_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 454;
pub const XED_IFORM_CCMPNBE_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 455;
pub const XED_IFORM_CCMPNBE_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 456;
pub const XED_IFORM_CCMPNBE_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 457;
pub const XED_IFORM_CCMPNBE_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 458;
pub const XED_IFORM_CCMPNBE_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 459;
pub const XED_IFORM_CCMPNBE_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 460;
pub const XED_IFORM_CCMPNBE_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 461;
pub const XED_IFORM_CCMPNBE_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 462;
pub const XED_IFORM_CCMPNBE_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 463;
pub const XED_IFORM_CCMPNBE_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 464;
pub const XED_IFORM_CCMPNBE_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 465;
pub const XED_IFORM_CCMPNL_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 466;
pub const XED_IFORM_CCMPNL_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 467;
pub const XED_IFORM_CCMPNL_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 468;
pub const XED_IFORM_CCMPNL_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 469;
pub const XED_IFORM_CCMPNL_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 470;
pub const XED_IFORM_CCMPNL_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 471;
pub const XED_IFORM_CCMPNL_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 472;
pub const XED_IFORM_CCMPNL_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 473;
pub const XED_IFORM_CCMPNL_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 474;
pub const XED_IFORM_CCMPNL_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 475;
pub const XED_IFORM_CCMPNL_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 476;
pub const XED_IFORM_CCMPNL_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 477;
pub const XED_IFORM_CCMPNLE_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 478;
pub const XED_IFORM_CCMPNLE_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 479;
pub const XED_IFORM_CCMPNLE_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 480;
pub const XED_IFORM_CCMPNLE_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 481;
pub const XED_IFORM_CCMPNLE_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 482;
pub const XED_IFORM_CCMPNLE_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 483;
pub const XED_IFORM_CCMPNLE_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 484;
pub const XED_IFORM_CCMPNLE_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 485;
pub const XED_IFORM_CCMPNLE_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 486;
pub const XED_IFORM_CCMPNLE_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 487;
pub const XED_IFORM_CCMPNLE_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 488;
pub const XED_IFORM_CCMPNLE_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 489;
pub const XED_IFORM_CCMPNO_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 490;
pub const XED_IFORM_CCMPNO_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 491;
pub const XED_IFORM_CCMPNO_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 492;
pub const XED_IFORM_CCMPNO_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 493;
pub const XED_IFORM_CCMPNO_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 494;
pub const XED_IFORM_CCMPNO_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 495;
pub const XED_IFORM_CCMPNO_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 496;
pub const XED_IFORM_CCMPNO_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 497;
pub const XED_IFORM_CCMPNO_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 498;
pub const XED_IFORM_CCMPNO_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 499;
pub const XED_IFORM_CCMPNO_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 500;
pub const XED_IFORM_CCMPNO_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 501;
pub const XED_IFORM_CCMPNS_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 502;
pub const XED_IFORM_CCMPNS_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 503;
pub const XED_IFORM_CCMPNS_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 504;
pub const XED_IFORM_CCMPNS_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 505;
pub const XED_IFORM_CCMPNS_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 506;
pub const XED_IFORM_CCMPNS_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 507;
pub const XED_IFORM_CCMPNS_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 508;
pub const XED_IFORM_CCMPNS_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 509;
pub const XED_IFORM_CCMPNS_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 510;
pub const XED_IFORM_CCMPNS_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 511;
pub const XED_IFORM_CCMPNS_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 512;
pub const XED_IFORM_CCMPNS_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 513;
pub const XED_IFORM_CCMPNZ_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 514;
pub const XED_IFORM_CCMPNZ_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 515;
pub const XED_IFORM_CCMPNZ_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 516;
pub const XED_IFORM_CCMPNZ_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 517;
pub const XED_IFORM_CCMPNZ_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 518;
pub const XED_IFORM_CCMPNZ_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 519;
pub const XED_IFORM_CCMPNZ_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 520;
pub const XED_IFORM_CCMPNZ_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 521;
pub const XED_IFORM_CCMPNZ_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 522;
pub const XED_IFORM_CCMPNZ_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 523;
pub const XED_IFORM_CCMPNZ_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 524;
pub const XED_IFORM_CCMPNZ_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 525;
pub const XED_IFORM_CCMPO_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 526;
pub const XED_IFORM_CCMPO_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 527;
pub const XED_IFORM_CCMPO_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 528;
pub const XED_IFORM_CCMPO_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 529;
pub const XED_IFORM_CCMPO_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 530;
pub const XED_IFORM_CCMPO_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 531;
pub const XED_IFORM_CCMPO_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 532;
pub const XED_IFORM_CCMPO_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 533;
pub const XED_IFORM_CCMPO_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 534;
pub const XED_IFORM_CCMPO_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 535;
pub const XED_IFORM_CCMPO_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 536;
pub const XED_IFORM_CCMPO_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 537;
pub const XED_IFORM_CCMPS_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 538;
pub const XED_IFORM_CCMPS_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 539;
pub const XED_IFORM_CCMPS_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 540;
pub const XED_IFORM_CCMPS_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 541;
pub const XED_IFORM_CCMPS_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 542;
pub const XED_IFORM_CCMPS_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 543;
pub const XED_IFORM_CCMPS_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 544;
pub const XED_IFORM_CCMPS_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 545;
pub const XED_IFORM_CCMPS_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 546;
pub const XED_IFORM_CCMPS_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 547;
pub const XED_IFORM_CCMPS_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 548;
pub const XED_IFORM_CCMPS_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 549;
pub const XED_IFORM_CCMPT_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 550;
pub const XED_IFORM_CCMPT_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 551;
pub const XED_IFORM_CCMPT_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 552;
pub const XED_IFORM_CCMPT_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 553;
pub const XED_IFORM_CCMPT_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 554;
pub const XED_IFORM_CCMPT_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 555;
pub const XED_IFORM_CCMPT_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 556;
pub const XED_IFORM_CCMPT_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 557;
pub const XED_IFORM_CCMPT_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 558;
pub const XED_IFORM_CCMPT_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 559;
pub const XED_IFORM_CCMPT_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 560;
pub const XED_IFORM_CCMPT_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 561;
pub const XED_IFORM_CCMPZ_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 562;
pub const XED_IFORM_CCMPZ_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 563;
pub const XED_IFORM_CCMPZ_GPR8i8_MEMi8_DFV_APX: xed_iform_enum_t = 564;
pub const XED_IFORM_CCMPZ_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 565;
pub const XED_IFORM_CCMPZ_GPRv_IMM8_DFV_APX: xed_iform_enum_t = 566;
pub const XED_IFORM_CCMPZ_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 567;
pub const XED_IFORM_CCMPZ_GPRv_MEMv_DFV_APX: xed_iform_enum_t = 568;
pub const XED_IFORM_CCMPZ_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 569;
pub const XED_IFORM_CCMPZ_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 570;
pub const XED_IFORM_CCMPZ_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 571;
pub const XED_IFORM_CCMPZ_MEMv_IMM8_DFV_APX: xed_iform_enum_t = 572;
pub const XED_IFORM_CCMPZ_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 573;
pub const XED_IFORM_CDQ: xed_iform_enum_t = 574;
pub const XED_IFORM_CDQE: xed_iform_enum_t = 575;
pub const XED_IFORM_CFCMOVB_GPRv_GPRv_APX: xed_iform_enum_t = 576;
pub const XED_IFORM_CFCMOVB_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 577;
pub const XED_IFORM_CFCMOVB_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 578;
pub const XED_IFORM_CFCMOVB_GPRv_MEMv_APX: xed_iform_enum_t = 579;
pub const XED_IFORM_CFCMOVB_MEMv_GPRv_APX: xed_iform_enum_t = 580;
pub const XED_IFORM_CFCMOVBE_GPRv_GPRv_APX: xed_iform_enum_t = 581;
pub const XED_IFORM_CFCMOVBE_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 582;
pub const XED_IFORM_CFCMOVBE_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 583;
pub const XED_IFORM_CFCMOVBE_GPRv_MEMv_APX: xed_iform_enum_t = 584;
pub const XED_IFORM_CFCMOVBE_MEMv_GPRv_APX: xed_iform_enum_t = 585;
pub const XED_IFORM_CFCMOVL_GPRv_GPRv_APX: xed_iform_enum_t = 586;
pub const XED_IFORM_CFCMOVL_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 587;
pub const XED_IFORM_CFCMOVL_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 588;
pub const XED_IFORM_CFCMOVL_GPRv_MEMv_APX: xed_iform_enum_t = 589;
pub const XED_IFORM_CFCMOVL_MEMv_GPRv_APX: xed_iform_enum_t = 590;
pub const XED_IFORM_CFCMOVLE_GPRv_GPRv_APX: xed_iform_enum_t = 591;
pub const XED_IFORM_CFCMOVLE_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 592;
pub const XED_IFORM_CFCMOVLE_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 593;
pub const XED_IFORM_CFCMOVLE_GPRv_MEMv_APX: xed_iform_enum_t = 594;
pub const XED_IFORM_CFCMOVLE_MEMv_GPRv_APX: xed_iform_enum_t = 595;
pub const XED_IFORM_CFCMOVNB_GPRv_GPRv_APX: xed_iform_enum_t = 596;
pub const XED_IFORM_CFCMOVNB_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 597;
pub const XED_IFORM_CFCMOVNB_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 598;
pub const XED_IFORM_CFCMOVNB_GPRv_MEMv_APX: xed_iform_enum_t = 599;
pub const XED_IFORM_CFCMOVNB_MEMv_GPRv_APX: xed_iform_enum_t = 600;
pub const XED_IFORM_CFCMOVNBE_GPRv_GPRv_APX: xed_iform_enum_t = 601;
pub const XED_IFORM_CFCMOVNBE_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 602;
pub const XED_IFORM_CFCMOVNBE_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 603;
pub const XED_IFORM_CFCMOVNBE_GPRv_MEMv_APX: xed_iform_enum_t = 604;
pub const XED_IFORM_CFCMOVNBE_MEMv_GPRv_APX: xed_iform_enum_t = 605;
pub const XED_IFORM_CFCMOVNL_GPRv_GPRv_APX: xed_iform_enum_t = 606;
pub const XED_IFORM_CFCMOVNL_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 607;
pub const XED_IFORM_CFCMOVNL_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 608;
pub const XED_IFORM_CFCMOVNL_GPRv_MEMv_APX: xed_iform_enum_t = 609;
pub const XED_IFORM_CFCMOVNL_MEMv_GPRv_APX: xed_iform_enum_t = 610;
pub const XED_IFORM_CFCMOVNLE_GPRv_GPRv_APX: xed_iform_enum_t = 611;
pub const XED_IFORM_CFCMOVNLE_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 612;
pub const XED_IFORM_CFCMOVNLE_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 613;
pub const XED_IFORM_CFCMOVNLE_GPRv_MEMv_APX: xed_iform_enum_t = 614;
pub const XED_IFORM_CFCMOVNLE_MEMv_GPRv_APX: xed_iform_enum_t = 615;
pub const XED_IFORM_CFCMOVNO_GPRv_GPRv_APX: xed_iform_enum_t = 616;
pub const XED_IFORM_CFCMOVNO_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 617;
pub const XED_IFORM_CFCMOVNO_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 618;
pub const XED_IFORM_CFCMOVNO_GPRv_MEMv_APX: xed_iform_enum_t = 619;
pub const XED_IFORM_CFCMOVNO_MEMv_GPRv_APX: xed_iform_enum_t = 620;
pub const XED_IFORM_CFCMOVNP_GPRv_GPRv_APX: xed_iform_enum_t = 621;
pub const XED_IFORM_CFCMOVNP_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 622;
pub const XED_IFORM_CFCMOVNP_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 623;
pub const XED_IFORM_CFCMOVNP_GPRv_MEMv_APX: xed_iform_enum_t = 624;
pub const XED_IFORM_CFCMOVNP_MEMv_GPRv_APX: xed_iform_enum_t = 625;
pub const XED_IFORM_CFCMOVNS_GPRv_GPRv_APX: xed_iform_enum_t = 626;
pub const XED_IFORM_CFCMOVNS_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 627;
pub const XED_IFORM_CFCMOVNS_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 628;
pub const XED_IFORM_CFCMOVNS_GPRv_MEMv_APX: xed_iform_enum_t = 629;
pub const XED_IFORM_CFCMOVNS_MEMv_GPRv_APX: xed_iform_enum_t = 630;
pub const XED_IFORM_CFCMOVNZ_GPRv_GPRv_APX: xed_iform_enum_t = 631;
pub const XED_IFORM_CFCMOVNZ_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 632;
pub const XED_IFORM_CFCMOVNZ_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 633;
pub const XED_IFORM_CFCMOVNZ_GPRv_MEMv_APX: xed_iform_enum_t = 634;
pub const XED_IFORM_CFCMOVNZ_MEMv_GPRv_APX: xed_iform_enum_t = 635;
pub const XED_IFORM_CFCMOVO_GPRv_GPRv_APX: xed_iform_enum_t = 636;
pub const XED_IFORM_CFCMOVO_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 637;
pub const XED_IFORM_CFCMOVO_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 638;
pub const XED_IFORM_CFCMOVO_GPRv_MEMv_APX: xed_iform_enum_t = 639;
pub const XED_IFORM_CFCMOVO_MEMv_GPRv_APX: xed_iform_enum_t = 640;
pub const XED_IFORM_CFCMOVP_GPRv_GPRv_APX: xed_iform_enum_t = 641;
pub const XED_IFORM_CFCMOVP_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 642;
pub const XED_IFORM_CFCMOVP_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 643;
pub const XED_IFORM_CFCMOVP_GPRv_MEMv_APX: xed_iform_enum_t = 644;
pub const XED_IFORM_CFCMOVP_MEMv_GPRv_APX: xed_iform_enum_t = 645;
pub const XED_IFORM_CFCMOVS_GPRv_GPRv_APX: xed_iform_enum_t = 646;
pub const XED_IFORM_CFCMOVS_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 647;
pub const XED_IFORM_CFCMOVS_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 648;
pub const XED_IFORM_CFCMOVS_GPRv_MEMv_APX: xed_iform_enum_t = 649;
pub const XED_IFORM_CFCMOVS_MEMv_GPRv_APX: xed_iform_enum_t = 650;
pub const XED_IFORM_CFCMOVZ_GPRv_GPRv_APX: xed_iform_enum_t = 651;
pub const XED_IFORM_CFCMOVZ_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 652;
pub const XED_IFORM_CFCMOVZ_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 653;
pub const XED_IFORM_CFCMOVZ_GPRv_MEMv_APX: xed_iform_enum_t = 654;
pub const XED_IFORM_CFCMOVZ_MEMv_GPRv_APX: xed_iform_enum_t = 655;
pub const XED_IFORM_CLAC: xed_iform_enum_t = 656;
pub const XED_IFORM_CLC: xed_iform_enum_t = 657;
pub const XED_IFORM_CLD: xed_iform_enum_t = 658;
pub const XED_IFORM_CLDEMOTE_MEMu8: xed_iform_enum_t = 659;
pub const XED_IFORM_CLFLUSH_MEMmprefetch: xed_iform_enum_t = 660;
pub const XED_IFORM_CLFLUSHOPT_MEMmprefetch: xed_iform_enum_t = 661;
pub const XED_IFORM_CLGI: xed_iform_enum_t = 662;
pub const XED_IFORM_CLI: xed_iform_enum_t = 663;
pub const XED_IFORM_CLRSSBSY_MEMu64: xed_iform_enum_t = 664;
pub const XED_IFORM_CLTS: xed_iform_enum_t = 665;
pub const XED_IFORM_CLUI: xed_iform_enum_t = 666;
pub const XED_IFORM_CLWB_MEMmprefetch: xed_iform_enum_t = 667;
pub const XED_IFORM_CLZERO: xed_iform_enum_t = 668;
pub const XED_IFORM_CMC: xed_iform_enum_t = 669;
pub const XED_IFORM_CMOVB_GPRv_GPRv: xed_iform_enum_t = 670;
pub const XED_IFORM_CMOVB_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 671;
pub const XED_IFORM_CMOVB_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 672;
pub const XED_IFORM_CMOVB_GPRv_MEMv: xed_iform_enum_t = 673;
pub const XED_IFORM_CMOVBE_GPRv_GPRv: xed_iform_enum_t = 674;
pub const XED_IFORM_CMOVBE_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 675;
pub const XED_IFORM_CMOVBE_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 676;
pub const XED_IFORM_CMOVBE_GPRv_MEMv: xed_iform_enum_t = 677;
pub const XED_IFORM_CMOVL_GPRv_GPRv: xed_iform_enum_t = 678;
pub const XED_IFORM_CMOVL_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 679;
pub const XED_IFORM_CMOVL_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 680;
pub const XED_IFORM_CMOVL_GPRv_MEMv: xed_iform_enum_t = 681;
pub const XED_IFORM_CMOVLE_GPRv_GPRv: xed_iform_enum_t = 682;
pub const XED_IFORM_CMOVLE_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 683;
pub const XED_IFORM_CMOVLE_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 684;
pub const XED_IFORM_CMOVLE_GPRv_MEMv: xed_iform_enum_t = 685;
pub const XED_IFORM_CMOVNB_GPRv_GPRv: xed_iform_enum_t = 686;
pub const XED_IFORM_CMOVNB_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 687;
pub const XED_IFORM_CMOVNB_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 688;
pub const XED_IFORM_CMOVNB_GPRv_MEMv: xed_iform_enum_t = 689;
pub const XED_IFORM_CMOVNBE_GPRv_GPRv: xed_iform_enum_t = 690;
pub const XED_IFORM_CMOVNBE_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 691;
pub const XED_IFORM_CMOVNBE_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 692;
pub const XED_IFORM_CMOVNBE_GPRv_MEMv: xed_iform_enum_t = 693;
pub const XED_IFORM_CMOVNL_GPRv_GPRv: xed_iform_enum_t = 694;
pub const XED_IFORM_CMOVNL_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 695;
pub const XED_IFORM_CMOVNL_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 696;
pub const XED_IFORM_CMOVNL_GPRv_MEMv: xed_iform_enum_t = 697;
pub const XED_IFORM_CMOVNLE_GPRv_GPRv: xed_iform_enum_t = 698;
pub const XED_IFORM_CMOVNLE_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 699;
pub const XED_IFORM_CMOVNLE_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 700;
pub const XED_IFORM_CMOVNLE_GPRv_MEMv: xed_iform_enum_t = 701;
pub const XED_IFORM_CMOVNO_GPRv_GPRv: xed_iform_enum_t = 702;
pub const XED_IFORM_CMOVNO_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 703;
pub const XED_IFORM_CMOVNO_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 704;
pub const XED_IFORM_CMOVNO_GPRv_MEMv: xed_iform_enum_t = 705;
pub const XED_IFORM_CMOVNP_GPRv_GPRv: xed_iform_enum_t = 706;
pub const XED_IFORM_CMOVNP_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 707;
pub const XED_IFORM_CMOVNP_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 708;
pub const XED_IFORM_CMOVNP_GPRv_MEMv: xed_iform_enum_t = 709;
pub const XED_IFORM_CMOVNS_GPRv_GPRv: xed_iform_enum_t = 710;
pub const XED_IFORM_CMOVNS_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 711;
pub const XED_IFORM_CMOVNS_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 712;
pub const XED_IFORM_CMOVNS_GPRv_MEMv: xed_iform_enum_t = 713;
pub const XED_IFORM_CMOVNZ_GPRv_GPRv: xed_iform_enum_t = 714;
pub const XED_IFORM_CMOVNZ_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 715;
pub const XED_IFORM_CMOVNZ_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 716;
pub const XED_IFORM_CMOVNZ_GPRv_MEMv: xed_iform_enum_t = 717;
pub const XED_IFORM_CMOVO_GPRv_GPRv: xed_iform_enum_t = 718;
pub const XED_IFORM_CMOVO_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 719;
pub const XED_IFORM_CMOVO_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 720;
pub const XED_IFORM_CMOVO_GPRv_MEMv: xed_iform_enum_t = 721;
pub const XED_IFORM_CMOVP_GPRv_GPRv: xed_iform_enum_t = 722;
pub const XED_IFORM_CMOVP_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 723;
pub const XED_IFORM_CMOVP_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 724;
pub const XED_IFORM_CMOVP_GPRv_MEMv: xed_iform_enum_t = 725;
pub const XED_IFORM_CMOVS_GPRv_GPRv: xed_iform_enum_t = 726;
pub const XED_IFORM_CMOVS_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 727;
pub const XED_IFORM_CMOVS_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 728;
pub const XED_IFORM_CMOVS_GPRv_MEMv: xed_iform_enum_t = 729;
pub const XED_IFORM_CMOVZ_GPRv_GPRv: xed_iform_enum_t = 730;
pub const XED_IFORM_CMOVZ_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 731;
pub const XED_IFORM_CMOVZ_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 732;
pub const XED_IFORM_CMOVZ_GPRv_MEMv: xed_iform_enum_t = 733;
pub const XED_IFORM_CMP_AL_IMMb: xed_iform_enum_t = 734;
pub const XED_IFORM_CMP_GPR8_GPR8_38: xed_iform_enum_t = 735;
pub const XED_IFORM_CMP_GPR8_GPR8_3A: xed_iform_enum_t = 736;
pub const XED_IFORM_CMP_GPR8_IMMb_80r7: xed_iform_enum_t = 737;
pub const XED_IFORM_CMP_GPR8_IMMb_82r7: xed_iform_enum_t = 738;
pub const XED_IFORM_CMP_GPR8_MEMb: xed_iform_enum_t = 739;
pub const XED_IFORM_CMP_GPRv_GPRv_39: xed_iform_enum_t = 740;
pub const XED_IFORM_CMP_GPRv_GPRv_3B: xed_iform_enum_t = 741;
pub const XED_IFORM_CMP_GPRv_IMMb: xed_iform_enum_t = 742;
pub const XED_IFORM_CMP_GPRv_IMMz: xed_iform_enum_t = 743;
pub const XED_IFORM_CMP_GPRv_MEMv: xed_iform_enum_t = 744;
pub const XED_IFORM_CMP_MEMb_GPR8: xed_iform_enum_t = 745;
pub const XED_IFORM_CMP_MEMb_IMMb_80r7: xed_iform_enum_t = 746;
pub const XED_IFORM_CMP_MEMb_IMMb_82r7: xed_iform_enum_t = 747;
pub const XED_IFORM_CMP_MEMv_GPRv: xed_iform_enum_t = 748;
pub const XED_IFORM_CMP_MEMv_IMMb: xed_iform_enum_t = 749;
pub const XED_IFORM_CMP_MEMv_IMMz: xed_iform_enum_t = 750;
pub const XED_IFORM_CMP_OrAX_IMMz: xed_iform_enum_t = 751;
pub const XED_IFORM_CMPBEXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 752;
pub const XED_IFORM_CMPBEXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 753;
pub const XED_IFORM_CMPBEXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 754;
pub const XED_IFORM_CMPBEXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 755;
pub const XED_IFORM_CMPBXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 756;
pub const XED_IFORM_CMPBXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 757;
pub const XED_IFORM_CMPBXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 758;
pub const XED_IFORM_CMPBXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 759;
pub const XED_IFORM_CMPLEXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 760;
pub const XED_IFORM_CMPLEXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 761;
pub const XED_IFORM_CMPLEXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 762;
pub const XED_IFORM_CMPLEXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 763;
pub const XED_IFORM_CMPLXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 764;
pub const XED_IFORM_CMPLXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 765;
pub const XED_IFORM_CMPLXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 766;
pub const XED_IFORM_CMPLXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 767;
pub const XED_IFORM_CMPNBEXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 768;
pub const XED_IFORM_CMPNBEXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 769;
pub const XED_IFORM_CMPNBEXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 770;
pub const XED_IFORM_CMPNBEXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 771;
pub const XED_IFORM_CMPNBXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 772;
pub const XED_IFORM_CMPNBXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 773;
pub const XED_IFORM_CMPNBXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 774;
pub const XED_IFORM_CMPNBXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 775;
pub const XED_IFORM_CMPNLEXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 776;
pub const XED_IFORM_CMPNLEXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 777;
pub const XED_IFORM_CMPNLEXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 778;
pub const XED_IFORM_CMPNLEXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 779;
pub const XED_IFORM_CMPNLXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 780;
pub const XED_IFORM_CMPNLXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 781;
pub const XED_IFORM_CMPNLXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 782;
pub const XED_IFORM_CMPNLXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 783;
pub const XED_IFORM_CMPNOXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 784;
pub const XED_IFORM_CMPNOXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 785;
pub const XED_IFORM_CMPNOXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 786;
pub const XED_IFORM_CMPNOXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 787;
pub const XED_IFORM_CMPNPXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 788;
pub const XED_IFORM_CMPNPXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 789;
pub const XED_IFORM_CMPNPXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 790;
pub const XED_IFORM_CMPNPXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 791;
pub const XED_IFORM_CMPNSXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 792;
pub const XED_IFORM_CMPNSXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 793;
pub const XED_IFORM_CMPNSXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 794;
pub const XED_IFORM_CMPNSXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 795;
pub const XED_IFORM_CMPNZXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 796;
pub const XED_IFORM_CMPNZXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 797;
pub const XED_IFORM_CMPNZXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 798;
pub const XED_IFORM_CMPNZXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 799;
pub const XED_IFORM_CMPOXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 800;
pub const XED_IFORM_CMPOXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 801;
pub const XED_IFORM_CMPOXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 802;
pub const XED_IFORM_CMPOXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 803;
pub const XED_IFORM_CMPPD_XMMpd_MEMpd_IMMb: xed_iform_enum_t = 804;
pub const XED_IFORM_CMPPD_XMMpd_XMMpd_IMMb: xed_iform_enum_t = 805;
pub const XED_IFORM_CMPPS_XMMps_MEMps_IMMb: xed_iform_enum_t = 806;
pub const XED_IFORM_CMPPS_XMMps_XMMps_IMMb: xed_iform_enum_t = 807;
pub const XED_IFORM_CMPPXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 808;
pub const XED_IFORM_CMPPXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 809;
pub const XED_IFORM_CMPPXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 810;
pub const XED_IFORM_CMPPXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 811;
pub const XED_IFORM_CMPSB: xed_iform_enum_t = 812;
pub const XED_IFORM_CMPSD: xed_iform_enum_t = 813;
pub const XED_IFORM_CMPSD_XMM_XMMsd_MEMsd_IMMb: xed_iform_enum_t = 814;
pub const XED_IFORM_CMPSD_XMM_XMMsd_XMMsd_IMMb: xed_iform_enum_t = 815;
pub const XED_IFORM_CMPSQ: xed_iform_enum_t = 816;
pub const XED_IFORM_CMPSS_XMMss_MEMss_IMMb: xed_iform_enum_t = 817;
pub const XED_IFORM_CMPSS_XMMss_XMMss_IMMb: xed_iform_enum_t = 818;
pub const XED_IFORM_CMPSW: xed_iform_enum_t = 819;
pub const XED_IFORM_CMPSXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 820;
pub const XED_IFORM_CMPSXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 821;
pub const XED_IFORM_CMPSXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 822;
pub const XED_IFORM_CMPSXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 823;
pub const XED_IFORM_CMPXCHG_GPR8_GPR8: xed_iform_enum_t = 824;
pub const XED_IFORM_CMPXCHG_GPRv_GPRv: xed_iform_enum_t = 825;
pub const XED_IFORM_CMPXCHG_MEMb_GPR8: xed_iform_enum_t = 826;
pub const XED_IFORM_CMPXCHG_MEMv_GPRv: xed_iform_enum_t = 827;
pub const XED_IFORM_CMPXCHG16B_MEMdq: xed_iform_enum_t = 828;
pub const XED_IFORM_CMPXCHG16B_LOCK_MEMdq: xed_iform_enum_t = 829;
pub const XED_IFORM_CMPXCHG8B_MEMq: xed_iform_enum_t = 830;
pub const XED_IFORM_CMPXCHG8B_LOCK_MEMq: xed_iform_enum_t = 831;
pub const XED_IFORM_CMPXCHG_LOCK_MEMb_GPR8: xed_iform_enum_t = 832;
pub const XED_IFORM_CMPXCHG_LOCK_MEMv_GPRv: xed_iform_enum_t = 833;
pub const XED_IFORM_CMPZXADD_MEMu32_GPR32u32_GPR32u32: xed_iform_enum_t = 834;
pub const XED_IFORM_CMPZXADD_MEMu32_GPR32u32_GPR32u32_APX: xed_iform_enum_t = 835;
pub const XED_IFORM_CMPZXADD_MEMu64_GPR64u64_GPR64u64: xed_iform_enum_t = 836;
pub const XED_IFORM_CMPZXADD_MEMu64_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 837;
pub const XED_IFORM_COMISD_XMMsd_MEMsd: xed_iform_enum_t = 838;
pub const XED_IFORM_COMISD_XMMsd_XMMsd: xed_iform_enum_t = 839;
pub const XED_IFORM_COMISS_XMMss_MEMss: xed_iform_enum_t = 840;
pub const XED_IFORM_COMISS_XMMss_XMMss: xed_iform_enum_t = 841;
pub const XED_IFORM_CPUID: xed_iform_enum_t = 842;
pub const XED_IFORM_CQO: xed_iform_enum_t = 843;
pub const XED_IFORM_CRC32_GPRy_GPR8i8_APX: xed_iform_enum_t = 844;
pub const XED_IFORM_CRC32_GPRy_GPRv_APX: xed_iform_enum_t = 845;
pub const XED_IFORM_CRC32_GPRy_MEMi8_APX: xed_iform_enum_t = 846;
pub const XED_IFORM_CRC32_GPRy_MEMv_APX: xed_iform_enum_t = 847;
pub const XED_IFORM_CRC32_GPRyy_GPR8b: xed_iform_enum_t = 848;
pub const XED_IFORM_CRC32_GPRyy_GPRv: xed_iform_enum_t = 849;
pub const XED_IFORM_CRC32_GPRyy_MEMb: xed_iform_enum_t = 850;
pub const XED_IFORM_CRC32_GPRyy_MEMv: xed_iform_enum_t = 851;
pub const XED_IFORM_CTESTB_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 852;
pub const XED_IFORM_CTESTB_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 853;
pub const XED_IFORM_CTESTB_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 854;
pub const XED_IFORM_CTESTB_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 855;
pub const XED_IFORM_CTESTB_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 856;
pub const XED_IFORM_CTESTB_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 857;
pub const XED_IFORM_CTESTB_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 858;
pub const XED_IFORM_CTESTB_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 859;
pub const XED_IFORM_CTESTBE_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 860;
pub const XED_IFORM_CTESTBE_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 861;
pub const XED_IFORM_CTESTBE_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 862;
pub const XED_IFORM_CTESTBE_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 863;
pub const XED_IFORM_CTESTBE_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 864;
pub const XED_IFORM_CTESTBE_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 865;
pub const XED_IFORM_CTESTBE_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 866;
pub const XED_IFORM_CTESTBE_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 867;
pub const XED_IFORM_CTESTF_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 868;
pub const XED_IFORM_CTESTF_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 869;
pub const XED_IFORM_CTESTF_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 870;
pub const XED_IFORM_CTESTF_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 871;
pub const XED_IFORM_CTESTF_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 872;
pub const XED_IFORM_CTESTF_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 873;
pub const XED_IFORM_CTESTF_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 874;
pub const XED_IFORM_CTESTF_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 875;
pub const XED_IFORM_CTESTL_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 876;
pub const XED_IFORM_CTESTL_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 877;
pub const XED_IFORM_CTESTL_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 878;
pub const XED_IFORM_CTESTL_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 879;
pub const XED_IFORM_CTESTL_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 880;
pub const XED_IFORM_CTESTL_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 881;
pub const XED_IFORM_CTESTL_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 882;
pub const XED_IFORM_CTESTL_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 883;
pub const XED_IFORM_CTESTLE_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 884;
pub const XED_IFORM_CTESTLE_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 885;
pub const XED_IFORM_CTESTLE_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 886;
pub const XED_IFORM_CTESTLE_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 887;
pub const XED_IFORM_CTESTLE_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 888;
pub const XED_IFORM_CTESTLE_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 889;
pub const XED_IFORM_CTESTLE_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 890;
pub const XED_IFORM_CTESTLE_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 891;
pub const XED_IFORM_CTESTNB_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 892;
pub const XED_IFORM_CTESTNB_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 893;
pub const XED_IFORM_CTESTNB_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 894;
pub const XED_IFORM_CTESTNB_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 895;
pub const XED_IFORM_CTESTNB_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 896;
pub const XED_IFORM_CTESTNB_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 897;
pub const XED_IFORM_CTESTNB_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 898;
pub const XED_IFORM_CTESTNB_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 899;
pub const XED_IFORM_CTESTNBE_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 900;
pub const XED_IFORM_CTESTNBE_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 901;
pub const XED_IFORM_CTESTNBE_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 902;
pub const XED_IFORM_CTESTNBE_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 903;
pub const XED_IFORM_CTESTNBE_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 904;
pub const XED_IFORM_CTESTNBE_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 905;
pub const XED_IFORM_CTESTNBE_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 906;
pub const XED_IFORM_CTESTNBE_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 907;
pub const XED_IFORM_CTESTNL_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 908;
pub const XED_IFORM_CTESTNL_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 909;
pub const XED_IFORM_CTESTNL_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 910;
pub const XED_IFORM_CTESTNL_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 911;
pub const XED_IFORM_CTESTNL_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 912;
pub const XED_IFORM_CTESTNL_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 913;
pub const XED_IFORM_CTESTNL_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 914;
pub const XED_IFORM_CTESTNL_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 915;
pub const XED_IFORM_CTESTNLE_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 916;
pub const XED_IFORM_CTESTNLE_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 917;
pub const XED_IFORM_CTESTNLE_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 918;
pub const XED_IFORM_CTESTNLE_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 919;
pub const XED_IFORM_CTESTNLE_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 920;
pub const XED_IFORM_CTESTNLE_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 921;
pub const XED_IFORM_CTESTNLE_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 922;
pub const XED_IFORM_CTESTNLE_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 923;
pub const XED_IFORM_CTESTNO_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 924;
pub const XED_IFORM_CTESTNO_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 925;
pub const XED_IFORM_CTESTNO_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 926;
pub const XED_IFORM_CTESTNO_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 927;
pub const XED_IFORM_CTESTNO_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 928;
pub const XED_IFORM_CTESTNO_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 929;
pub const XED_IFORM_CTESTNO_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 930;
pub const XED_IFORM_CTESTNO_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 931;
pub const XED_IFORM_CTESTNS_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 932;
pub const XED_IFORM_CTESTNS_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 933;
pub const XED_IFORM_CTESTNS_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 934;
pub const XED_IFORM_CTESTNS_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 935;
pub const XED_IFORM_CTESTNS_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 936;
pub const XED_IFORM_CTESTNS_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 937;
pub const XED_IFORM_CTESTNS_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 938;
pub const XED_IFORM_CTESTNS_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 939;
pub const XED_IFORM_CTESTNZ_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 940;
pub const XED_IFORM_CTESTNZ_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 941;
pub const XED_IFORM_CTESTNZ_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 942;
pub const XED_IFORM_CTESTNZ_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 943;
pub const XED_IFORM_CTESTNZ_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 944;
pub const XED_IFORM_CTESTNZ_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 945;
pub const XED_IFORM_CTESTNZ_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 946;
pub const XED_IFORM_CTESTNZ_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 947;
pub const XED_IFORM_CTESTO_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 948;
pub const XED_IFORM_CTESTO_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 949;
pub const XED_IFORM_CTESTO_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 950;
pub const XED_IFORM_CTESTO_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 951;
pub const XED_IFORM_CTESTO_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 952;
pub const XED_IFORM_CTESTO_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 953;
pub const XED_IFORM_CTESTO_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 954;
pub const XED_IFORM_CTESTO_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 955;
pub const XED_IFORM_CTESTS_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 956;
pub const XED_IFORM_CTESTS_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 957;
pub const XED_IFORM_CTESTS_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 958;
pub const XED_IFORM_CTESTS_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 959;
pub const XED_IFORM_CTESTS_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 960;
pub const XED_IFORM_CTESTS_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 961;
pub const XED_IFORM_CTESTS_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 962;
pub const XED_IFORM_CTESTS_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 963;
pub const XED_IFORM_CTESTT_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 964;
pub const XED_IFORM_CTESTT_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 965;
pub const XED_IFORM_CTESTT_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 966;
pub const XED_IFORM_CTESTT_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 967;
pub const XED_IFORM_CTESTT_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 968;
pub const XED_IFORM_CTESTT_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 969;
pub const XED_IFORM_CTESTT_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 970;
pub const XED_IFORM_CTESTT_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 971;
pub const XED_IFORM_CTESTZ_GPR8i8_GPR8i8_DFV_APX: xed_iform_enum_t = 972;
pub const XED_IFORM_CTESTZ_GPR8i8_IMM8_DFV_APX: xed_iform_enum_t = 973;
pub const XED_IFORM_CTESTZ_GPRv_GPRv_DFV_APX: xed_iform_enum_t = 974;
pub const XED_IFORM_CTESTZ_GPRv_IMMz_DFV_APX: xed_iform_enum_t = 975;
pub const XED_IFORM_CTESTZ_MEMi8_GPR8i8_DFV_APX: xed_iform_enum_t = 976;
pub const XED_IFORM_CTESTZ_MEMi8_IMM8_DFV_APX: xed_iform_enum_t = 977;
pub const XED_IFORM_CTESTZ_MEMv_GPRv_DFV_APX: xed_iform_enum_t = 978;
pub const XED_IFORM_CTESTZ_MEMv_IMMz_DFV_APX: xed_iform_enum_t = 979;
pub const XED_IFORM_CVTDQ2PD_XMMpd_MEMq: xed_iform_enum_t = 980;
pub const XED_IFORM_CVTDQ2PD_XMMpd_XMMq: xed_iform_enum_t = 981;
pub const XED_IFORM_CVTDQ2PS_XMMps_MEMdq: xed_iform_enum_t = 982;
pub const XED_IFORM_CVTDQ2PS_XMMps_XMMdq: xed_iform_enum_t = 983;
pub const XED_IFORM_CVTPD2DQ_XMMdq_MEMpd: xed_iform_enum_t = 984;
pub const XED_IFORM_CVTPD2DQ_XMMdq_XMMpd: xed_iform_enum_t = 985;
pub const XED_IFORM_CVTPD2PI_MMXq_MEMpd: xed_iform_enum_t = 986;
pub const XED_IFORM_CVTPD2PI_MMXq_XMMpd: xed_iform_enum_t = 987;
pub const XED_IFORM_CVTPD2PS_XMMps_MEMpd: xed_iform_enum_t = 988;
pub const XED_IFORM_CVTPD2PS_XMMps_XMMpd: xed_iform_enum_t = 989;
pub const XED_IFORM_CVTPI2PD_XMMpd_MEMq: xed_iform_enum_t = 990;
pub const XED_IFORM_CVTPI2PD_XMMpd_MMXq: xed_iform_enum_t = 991;
pub const XED_IFORM_CVTPI2PS_XMMq_MEMq: xed_iform_enum_t = 992;
pub const XED_IFORM_CVTPI2PS_XMMq_MMXq: xed_iform_enum_t = 993;
pub const XED_IFORM_CVTPS2DQ_XMMdq_MEMps: xed_iform_enum_t = 994;
pub const XED_IFORM_CVTPS2DQ_XMMdq_XMMps: xed_iform_enum_t = 995;
pub const XED_IFORM_CVTPS2PD_XMMpd_MEMq: xed_iform_enum_t = 996;
pub const XED_IFORM_CVTPS2PD_XMMpd_XMMq: xed_iform_enum_t = 997;
pub const XED_IFORM_CVTPS2PI_MMXq_MEMq: xed_iform_enum_t = 998;
pub const XED_IFORM_CVTPS2PI_MMXq_XMMq: xed_iform_enum_t = 999;
pub const XED_IFORM_CVTSD2SI_GPR32d_MEMsd: xed_iform_enum_t = 1000;
pub const XED_IFORM_CVTSD2SI_GPR32d_XMMsd: xed_iform_enum_t = 1001;
pub const XED_IFORM_CVTSD2SI_GPR64q_MEMsd: xed_iform_enum_t = 1002;
pub const XED_IFORM_CVTSD2SI_GPR64q_XMMsd: xed_iform_enum_t = 1003;
pub const XED_IFORM_CVTSD2SS_XMMss_MEMsd: xed_iform_enum_t = 1004;
pub const XED_IFORM_CVTSD2SS_XMMss_XMMsd: xed_iform_enum_t = 1005;
pub const XED_IFORM_CVTSI2SD_XMMsd_GPR32d: xed_iform_enum_t = 1006;
pub const XED_IFORM_CVTSI2SD_XMMsd_GPR64q: xed_iform_enum_t = 1007;
pub const XED_IFORM_CVTSI2SD_XMMsd_MEMd: xed_iform_enum_t = 1008;
pub const XED_IFORM_CVTSI2SD_XMMsd_MEMq: xed_iform_enum_t = 1009;
pub const XED_IFORM_CVTSI2SS_XMMss_GPR32d: xed_iform_enum_t = 1010;
pub const XED_IFORM_CVTSI2SS_XMMss_GPR64q: xed_iform_enum_t = 1011;
pub const XED_IFORM_CVTSI2SS_XMMss_MEMd: xed_iform_enum_t = 1012;
pub const XED_IFORM_CVTSI2SS_XMMss_MEMq: xed_iform_enum_t = 1013;
pub const XED_IFORM_CVTSS2SD_XMMsd_MEMss: xed_iform_enum_t = 1014;
pub const XED_IFORM_CVTSS2SD_XMMsd_XMMss: xed_iform_enum_t = 1015;
pub const XED_IFORM_CVTSS2SI_GPR32d_MEMss: xed_iform_enum_t = 1016;
pub const XED_IFORM_CVTSS2SI_GPR32d_XMMss: xed_iform_enum_t = 1017;
pub const XED_IFORM_CVTSS2SI_GPR64q_MEMss: xed_iform_enum_t = 1018;
pub const XED_IFORM_CVTSS2SI_GPR64q_XMMss: xed_iform_enum_t = 1019;
pub const XED_IFORM_CVTTPD2DQ_XMMdq_MEMpd: xed_iform_enum_t = 1020;
pub const XED_IFORM_CVTTPD2DQ_XMMdq_XMMpd: xed_iform_enum_t = 1021;
pub const XED_IFORM_CVTTPD2PI_MMXq_MEMpd: xed_iform_enum_t = 1022;
pub const XED_IFORM_CVTTPD2PI_MMXq_XMMpd: xed_iform_enum_t = 1023;
pub const XED_IFORM_CVTTPS2DQ_XMMdq_MEMps: xed_iform_enum_t = 1024;
pub const XED_IFORM_CVTTPS2DQ_XMMdq_XMMps: xed_iform_enum_t = 1025;
pub const XED_IFORM_CVTTPS2PI_MMXq_MEMq: xed_iform_enum_t = 1026;
pub const XED_IFORM_CVTTPS2PI_MMXq_XMMq: xed_iform_enum_t = 1027;
pub const XED_IFORM_CVTTSD2SI_GPR32d_MEMsd: xed_iform_enum_t = 1028;
pub const XED_IFORM_CVTTSD2SI_GPR32d_XMMsd: xed_iform_enum_t = 1029;
pub const XED_IFORM_CVTTSD2SI_GPR64q_MEMsd: xed_iform_enum_t = 1030;
pub const XED_IFORM_CVTTSD2SI_GPR64q_XMMsd: xed_iform_enum_t = 1031;
pub const XED_IFORM_CVTTSS2SI_GPR32d_MEMss: xed_iform_enum_t = 1032;
pub const XED_IFORM_CVTTSS2SI_GPR32d_XMMss: xed_iform_enum_t = 1033;
pub const XED_IFORM_CVTTSS2SI_GPR64q_MEMss: xed_iform_enum_t = 1034;
pub const XED_IFORM_CVTTSS2SI_GPR64q_XMMss: xed_iform_enum_t = 1035;
pub const XED_IFORM_CWD: xed_iform_enum_t = 1036;
pub const XED_IFORM_CWDE: xed_iform_enum_t = 1037;
pub const XED_IFORM_DAA: xed_iform_enum_t = 1038;
pub const XED_IFORM_DAS: xed_iform_enum_t = 1039;
pub const XED_IFORM_DEC_GPR8: xed_iform_enum_t = 1040;
pub const XED_IFORM_DEC_GPR8i8_APX: xed_iform_enum_t = 1041;
pub const XED_IFORM_DEC_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 1042;
pub const XED_IFORM_DEC_GPR8i8_MEMi8_APX: xed_iform_enum_t = 1043;
pub const XED_IFORM_DEC_GPRv_48: xed_iform_enum_t = 1044;
pub const XED_IFORM_DEC_GPRv_APX: xed_iform_enum_t = 1045;
pub const XED_IFORM_DEC_GPRv_FFr1: xed_iform_enum_t = 1046;
pub const XED_IFORM_DEC_GPRv_GPRv_APX: xed_iform_enum_t = 1047;
pub const XED_IFORM_DEC_GPRv_MEMv_APX: xed_iform_enum_t = 1048;
pub const XED_IFORM_DEC_MEMb: xed_iform_enum_t = 1049;
pub const XED_IFORM_DEC_MEMi8_APX: xed_iform_enum_t = 1050;
pub const XED_IFORM_DEC_MEMv: xed_iform_enum_t = 1051;
pub const XED_IFORM_DEC_MEMv_APX: xed_iform_enum_t = 1052;
pub const XED_IFORM_DEC_LOCK_MEMb: xed_iform_enum_t = 1053;
pub const XED_IFORM_DEC_LOCK_MEMv: xed_iform_enum_t = 1054;
pub const XED_IFORM_DIV_GPR8: xed_iform_enum_t = 1055;
pub const XED_IFORM_DIV_GPR8i8_APX: xed_iform_enum_t = 1056;
pub const XED_IFORM_DIV_GPRv: xed_iform_enum_t = 1057;
pub const XED_IFORM_DIV_GPRv_APX: xed_iform_enum_t = 1058;
pub const XED_IFORM_DIV_MEMb: xed_iform_enum_t = 1059;
pub const XED_IFORM_DIV_MEMi8_APX: xed_iform_enum_t = 1060;
pub const XED_IFORM_DIV_MEMv: xed_iform_enum_t = 1061;
pub const XED_IFORM_DIV_MEMv_APX: xed_iform_enum_t = 1062;
pub const XED_IFORM_DIVPD_XMMpd_MEMpd: xed_iform_enum_t = 1063;
pub const XED_IFORM_DIVPD_XMMpd_XMMpd: xed_iform_enum_t = 1064;
pub const XED_IFORM_DIVPS_XMMps_MEMps: xed_iform_enum_t = 1065;
pub const XED_IFORM_DIVPS_XMMps_XMMps: xed_iform_enum_t = 1066;
pub const XED_IFORM_DIVSD_XMMsd_MEMsd: xed_iform_enum_t = 1067;
pub const XED_IFORM_DIVSD_XMMsd_XMMsd: xed_iform_enum_t = 1068;
pub const XED_IFORM_DIVSS_XMMss_MEMss: xed_iform_enum_t = 1069;
pub const XED_IFORM_DIVSS_XMMss_XMMss: xed_iform_enum_t = 1070;
pub const XED_IFORM_DPPD_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1071;
pub const XED_IFORM_DPPD_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1072;
pub const XED_IFORM_DPPS_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1073;
pub const XED_IFORM_DPPS_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1074;
pub const XED_IFORM_EMMS: xed_iform_enum_t = 1075;
pub const XED_IFORM_ENCLS: xed_iform_enum_t = 1076;
pub const XED_IFORM_ENCLU: xed_iform_enum_t = 1077;
pub const XED_IFORM_ENCLV: xed_iform_enum_t = 1078;
pub const XED_IFORM_ENCODEKEY128_GPR32u8_GPR32u8: xed_iform_enum_t = 1079;
pub const XED_IFORM_ENCODEKEY128_GPR32u8_GPR32u8_APX: xed_iform_enum_t = 1080;
pub const XED_IFORM_ENCODEKEY256_GPR32u8_GPR32u8: xed_iform_enum_t = 1081;
pub const XED_IFORM_ENCODEKEY256_GPR32u8_GPR32u8_APX: xed_iform_enum_t = 1082;
pub const XED_IFORM_ENDBR32: xed_iform_enum_t = 1083;
pub const XED_IFORM_ENDBR64: xed_iform_enum_t = 1084;
pub const XED_IFORM_ENQCMD_GPRa_MEMu32: xed_iform_enum_t = 1085;
pub const XED_IFORM_ENQCMD_GPRav_MEMu32_APX: xed_iform_enum_t = 1086;
pub const XED_IFORM_ENQCMDS_GPRa_MEMu32: xed_iform_enum_t = 1087;
pub const XED_IFORM_ENQCMDS_GPRav_MEMu32_APX: xed_iform_enum_t = 1088;
pub const XED_IFORM_ENTER_IMMw_IMMb: xed_iform_enum_t = 1089;
pub const XED_IFORM_ERETS: xed_iform_enum_t = 1090;
pub const XED_IFORM_ERETU: xed_iform_enum_t = 1091;
pub const XED_IFORM_EXTRACTPS_GPR32d_XMMdq_IMMb: xed_iform_enum_t = 1092;
pub const XED_IFORM_EXTRACTPS_MEMd_XMMps_IMMb: xed_iform_enum_t = 1093;
pub const XED_IFORM_EXTRQ_XMMq_IMMb_IMMb: xed_iform_enum_t = 1094;
pub const XED_IFORM_EXTRQ_XMMq_XMMdq: xed_iform_enum_t = 1095;
pub const XED_IFORM_F2XM1: xed_iform_enum_t = 1096;
pub const XED_IFORM_FABS: xed_iform_enum_t = 1097;
pub const XED_IFORM_FADD_MEMm64real: xed_iform_enum_t = 1098;
pub const XED_IFORM_FADD_MEMmem32real: xed_iform_enum_t = 1099;
pub const XED_IFORM_FADD_ST0_X87: xed_iform_enum_t = 1100;
pub const XED_IFORM_FADD_X87_ST0: xed_iform_enum_t = 1101;
pub const XED_IFORM_FADDP_X87_ST0: xed_iform_enum_t = 1102;
pub const XED_IFORM_FBLD_ST0_MEMmem80dec: xed_iform_enum_t = 1103;
pub const XED_IFORM_FBSTP_MEMmem80dec_ST0: xed_iform_enum_t = 1104;
pub const XED_IFORM_FCHS: xed_iform_enum_t = 1105;
pub const XED_IFORM_FCMOVB_ST0_X87: xed_iform_enum_t = 1106;
pub const XED_IFORM_FCMOVBE_ST0_X87: xed_iform_enum_t = 1107;
pub const XED_IFORM_FCMOVE_ST0_X87: xed_iform_enum_t = 1108;
pub const XED_IFORM_FCMOVNB_ST0_X87: xed_iform_enum_t = 1109;
pub const XED_IFORM_FCMOVNBE_ST0_X87: xed_iform_enum_t = 1110;
pub const XED_IFORM_FCMOVNE_ST0_X87: xed_iform_enum_t = 1111;
pub const XED_IFORM_FCMOVNU_ST0_X87: xed_iform_enum_t = 1112;
pub const XED_IFORM_FCMOVU_ST0_X87: xed_iform_enum_t = 1113;
pub const XED_IFORM_FCOM_ST0_MEMm64real: xed_iform_enum_t = 1114;
pub const XED_IFORM_FCOM_ST0_MEMmem32real: xed_iform_enum_t = 1115;
pub const XED_IFORM_FCOM_ST0_X87: xed_iform_enum_t = 1116;
pub const XED_IFORM_FCOM_ST0_X87_DCD0: xed_iform_enum_t = 1117;
pub const XED_IFORM_FCOMI_ST0_X87: xed_iform_enum_t = 1118;
pub const XED_IFORM_FCOMIP_ST0_X87: xed_iform_enum_t = 1119;
pub const XED_IFORM_FCOMP_ST0_MEMm64real: xed_iform_enum_t = 1120;
pub const XED_IFORM_FCOMP_ST0_MEMmem32real: xed_iform_enum_t = 1121;
pub const XED_IFORM_FCOMP_ST0_X87: xed_iform_enum_t = 1122;
pub const XED_IFORM_FCOMP_ST0_X87_DCD1: xed_iform_enum_t = 1123;
pub const XED_IFORM_FCOMP_ST0_X87_DED0: xed_iform_enum_t = 1124;
pub const XED_IFORM_FCOMPP: xed_iform_enum_t = 1125;
pub const XED_IFORM_FCOS: xed_iform_enum_t = 1126;
pub const XED_IFORM_FDECSTP: xed_iform_enum_t = 1127;
pub const XED_IFORM_FDISI8087_NOP: xed_iform_enum_t = 1128;
pub const XED_IFORM_FDIV_ST0_MEMm64real: xed_iform_enum_t = 1129;
pub const XED_IFORM_FDIV_ST0_MEMmem32real: xed_iform_enum_t = 1130;
pub const XED_IFORM_FDIV_ST0_X87: xed_iform_enum_t = 1131;
pub const XED_IFORM_FDIV_X87_ST0: xed_iform_enum_t = 1132;
pub const XED_IFORM_FDIVP_X87_ST0: xed_iform_enum_t = 1133;
pub const XED_IFORM_FDIVR_ST0_MEMm64real: xed_iform_enum_t = 1134;
pub const XED_IFORM_FDIVR_ST0_MEMmem32real: xed_iform_enum_t = 1135;
pub const XED_IFORM_FDIVR_ST0_X87: xed_iform_enum_t = 1136;
pub const XED_IFORM_FDIVR_X87_ST0: xed_iform_enum_t = 1137;
pub const XED_IFORM_FDIVRP_X87_ST0: xed_iform_enum_t = 1138;
pub const XED_IFORM_FEMMS: xed_iform_enum_t = 1139;
pub const XED_IFORM_FENI8087_NOP: xed_iform_enum_t = 1140;
pub const XED_IFORM_FFREE_X87: xed_iform_enum_t = 1141;
pub const XED_IFORM_FFREEP_X87: xed_iform_enum_t = 1142;
pub const XED_IFORM_FIADD_ST0_MEMmem16int: xed_iform_enum_t = 1143;
pub const XED_IFORM_FIADD_ST0_MEMmem32int: xed_iform_enum_t = 1144;
pub const XED_IFORM_FICOM_ST0_MEMmem16int: xed_iform_enum_t = 1145;
pub const XED_IFORM_FICOM_ST0_MEMmem32int: xed_iform_enum_t = 1146;
pub const XED_IFORM_FICOMP_ST0_MEMmem16int: xed_iform_enum_t = 1147;
pub const XED_IFORM_FICOMP_ST0_MEMmem32int: xed_iform_enum_t = 1148;
pub const XED_IFORM_FIDIV_ST0_MEMmem16int: xed_iform_enum_t = 1149;
pub const XED_IFORM_FIDIV_ST0_MEMmem32int: xed_iform_enum_t = 1150;
pub const XED_IFORM_FIDIVR_ST0_MEMmem16int: xed_iform_enum_t = 1151;
pub const XED_IFORM_FIDIVR_ST0_MEMmem32int: xed_iform_enum_t = 1152;
pub const XED_IFORM_FILD_ST0_MEMm64int: xed_iform_enum_t = 1153;
pub const XED_IFORM_FILD_ST0_MEMmem16int: xed_iform_enum_t = 1154;
pub const XED_IFORM_FILD_ST0_MEMmem32int: xed_iform_enum_t = 1155;
pub const XED_IFORM_FIMUL_ST0_MEMmem16int: xed_iform_enum_t = 1156;
pub const XED_IFORM_FIMUL_ST0_MEMmem32int: xed_iform_enum_t = 1157;
pub const XED_IFORM_FINCSTP: xed_iform_enum_t = 1158;
pub const XED_IFORM_FIST_MEMmem16int_ST0: xed_iform_enum_t = 1159;
pub const XED_IFORM_FIST_MEMmem32int_ST0: xed_iform_enum_t = 1160;
pub const XED_IFORM_FISTP_MEMm64int_ST0: xed_iform_enum_t = 1161;
pub const XED_IFORM_FISTP_MEMmem16int_ST0: xed_iform_enum_t = 1162;
pub const XED_IFORM_FISTP_MEMmem32int_ST0: xed_iform_enum_t = 1163;
pub const XED_IFORM_FISTTP_MEMm64int_ST0: xed_iform_enum_t = 1164;
pub const XED_IFORM_FISTTP_MEMmem16int_ST0: xed_iform_enum_t = 1165;
pub const XED_IFORM_FISTTP_MEMmem32int_ST0: xed_iform_enum_t = 1166;
pub const XED_IFORM_FISUB_ST0_MEMmem16int: xed_iform_enum_t = 1167;
pub const XED_IFORM_FISUB_ST0_MEMmem32int: xed_iform_enum_t = 1168;
pub const XED_IFORM_FISUBR_ST0_MEMmem16int: xed_iform_enum_t = 1169;
pub const XED_IFORM_FISUBR_ST0_MEMmem32int: xed_iform_enum_t = 1170;
pub const XED_IFORM_FLD_ST0_MEMm64real: xed_iform_enum_t = 1171;
pub const XED_IFORM_FLD_ST0_MEMmem32real: xed_iform_enum_t = 1172;
pub const XED_IFORM_FLD_ST0_MEMmem80real: xed_iform_enum_t = 1173;
pub const XED_IFORM_FLD_ST0_X87: xed_iform_enum_t = 1174;
pub const XED_IFORM_FLD1: xed_iform_enum_t = 1175;
pub const XED_IFORM_FLDCW_MEMmem16: xed_iform_enum_t = 1176;
pub const XED_IFORM_FLDENV_MEMmem14: xed_iform_enum_t = 1177;
pub const XED_IFORM_FLDENV_MEMmem28: xed_iform_enum_t = 1178;
pub const XED_IFORM_FLDL2E: xed_iform_enum_t = 1179;
pub const XED_IFORM_FLDL2T: xed_iform_enum_t = 1180;
pub const XED_IFORM_FLDLG2: xed_iform_enum_t = 1181;
pub const XED_IFORM_FLDLN2: xed_iform_enum_t = 1182;
pub const XED_IFORM_FLDPI: xed_iform_enum_t = 1183;
pub const XED_IFORM_FLDZ: xed_iform_enum_t = 1184;
pub const XED_IFORM_FMUL_ST0_MEMm64real: xed_iform_enum_t = 1185;
pub const XED_IFORM_FMUL_ST0_MEMmem32real: xed_iform_enum_t = 1186;
pub const XED_IFORM_FMUL_ST0_X87: xed_iform_enum_t = 1187;
pub const XED_IFORM_FMUL_X87_ST0: xed_iform_enum_t = 1188;
pub const XED_IFORM_FMULP_X87_ST0: xed_iform_enum_t = 1189;
pub const XED_IFORM_FNCLEX: xed_iform_enum_t = 1190;
pub const XED_IFORM_FNINIT: xed_iform_enum_t = 1191;
pub const XED_IFORM_FNOP: xed_iform_enum_t = 1192;
pub const XED_IFORM_FNSAVE_MEMmem108: xed_iform_enum_t = 1193;
pub const XED_IFORM_FNSAVE_MEMmem94: xed_iform_enum_t = 1194;
pub const XED_IFORM_FNSTCW_MEMmem16: xed_iform_enum_t = 1195;
pub const XED_IFORM_FNSTENV_MEMmem14: xed_iform_enum_t = 1196;
pub const XED_IFORM_FNSTENV_MEMmem28: xed_iform_enum_t = 1197;
pub const XED_IFORM_FNSTSW_AX: xed_iform_enum_t = 1198;
pub const XED_IFORM_FNSTSW_MEMmem16: xed_iform_enum_t = 1199;
pub const XED_IFORM_FPATAN: xed_iform_enum_t = 1200;
pub const XED_IFORM_FPREM: xed_iform_enum_t = 1201;
pub const XED_IFORM_FPREM1: xed_iform_enum_t = 1202;
pub const XED_IFORM_FPTAN: xed_iform_enum_t = 1203;
pub const XED_IFORM_FRNDINT: xed_iform_enum_t = 1204;
pub const XED_IFORM_FRSTOR_MEMmem108: xed_iform_enum_t = 1205;
pub const XED_IFORM_FRSTOR_MEMmem94: xed_iform_enum_t = 1206;
pub const XED_IFORM_FSCALE: xed_iform_enum_t = 1207;
pub const XED_IFORM_FSETPM287_NOP: xed_iform_enum_t = 1208;
pub const XED_IFORM_FSIN: xed_iform_enum_t = 1209;
pub const XED_IFORM_FSINCOS: xed_iform_enum_t = 1210;
pub const XED_IFORM_FSQRT: xed_iform_enum_t = 1211;
pub const XED_IFORM_FST_MEMm64real_ST0: xed_iform_enum_t = 1212;
pub const XED_IFORM_FST_MEMmem32real_ST0: xed_iform_enum_t = 1213;
pub const XED_IFORM_FST_X87_ST0: xed_iform_enum_t = 1214;
pub const XED_IFORM_FSTP_MEMm64real_ST0: xed_iform_enum_t = 1215;
pub const XED_IFORM_FSTP_MEMmem32real_ST0: xed_iform_enum_t = 1216;
pub const XED_IFORM_FSTP_MEMmem80real_ST0: xed_iform_enum_t = 1217;
pub const XED_IFORM_FSTP_X87_ST0: xed_iform_enum_t = 1218;
pub const XED_IFORM_FSTP_X87_ST0_DFD0: xed_iform_enum_t = 1219;
pub const XED_IFORM_FSTP_X87_ST0_DFD1: xed_iform_enum_t = 1220;
pub const XED_IFORM_FSTPNCE_X87_ST0: xed_iform_enum_t = 1221;
pub const XED_IFORM_FSUB_ST0_MEMm64real: xed_iform_enum_t = 1222;
pub const XED_IFORM_FSUB_ST0_MEMmem32real: xed_iform_enum_t = 1223;
pub const XED_IFORM_FSUB_ST0_X87: xed_iform_enum_t = 1224;
pub const XED_IFORM_FSUB_X87_ST0: xed_iform_enum_t = 1225;
pub const XED_IFORM_FSUBP_X87_ST0: xed_iform_enum_t = 1226;
pub const XED_IFORM_FSUBR_ST0_MEMm64real: xed_iform_enum_t = 1227;
pub const XED_IFORM_FSUBR_ST0_MEMmem32real: xed_iform_enum_t = 1228;
pub const XED_IFORM_FSUBR_ST0_X87: xed_iform_enum_t = 1229;
pub const XED_IFORM_FSUBR_X87_ST0: xed_iform_enum_t = 1230;
pub const XED_IFORM_FSUBRP_X87_ST0: xed_iform_enum_t = 1231;
pub const XED_IFORM_FTST: xed_iform_enum_t = 1232;
pub const XED_IFORM_FUCOM_ST0_X87: xed_iform_enum_t = 1233;
pub const XED_IFORM_FUCOMI_ST0_X87: xed_iform_enum_t = 1234;
pub const XED_IFORM_FUCOMIP_ST0_X87: xed_iform_enum_t = 1235;
pub const XED_IFORM_FUCOMP_ST0_X87: xed_iform_enum_t = 1236;
pub const XED_IFORM_FUCOMPP: xed_iform_enum_t = 1237;
pub const XED_IFORM_FWAIT: xed_iform_enum_t = 1238;
pub const XED_IFORM_FXAM: xed_iform_enum_t = 1239;
pub const XED_IFORM_FXCH_ST0_X87: xed_iform_enum_t = 1240;
pub const XED_IFORM_FXCH_ST0_X87_DDC1: xed_iform_enum_t = 1241;
pub const XED_IFORM_FXCH_ST0_X87_DFC1: xed_iform_enum_t = 1242;
pub const XED_IFORM_FXRSTOR_MEMmfpxenv: xed_iform_enum_t = 1243;
pub const XED_IFORM_FXRSTOR64_MEMmfpxenv: xed_iform_enum_t = 1244;
pub const XED_IFORM_FXSAVE_MEMmfpxenv: xed_iform_enum_t = 1245;
pub const XED_IFORM_FXSAVE64_MEMmfpxenv: xed_iform_enum_t = 1246;
pub const XED_IFORM_FXTRACT: xed_iform_enum_t = 1247;
pub const XED_IFORM_FYL2X: xed_iform_enum_t = 1248;
pub const XED_IFORM_FYL2XP1: xed_iform_enum_t = 1249;
pub const XED_IFORM_GETSEC: xed_iform_enum_t = 1250;
pub const XED_IFORM_GF2P8AFFINEINVQB_XMMu8_MEMu64_IMM8: xed_iform_enum_t = 1251;
pub const XED_IFORM_GF2P8AFFINEINVQB_XMMu8_XMMu64_IMM8: xed_iform_enum_t = 1252;
pub const XED_IFORM_GF2P8AFFINEQB_XMMu8_MEMu64_IMM8: xed_iform_enum_t = 1253;
pub const XED_IFORM_GF2P8AFFINEQB_XMMu8_XMMu64_IMM8: xed_iform_enum_t = 1254;
pub const XED_IFORM_GF2P8MULB_XMMu8_MEMu8: xed_iform_enum_t = 1255;
pub const XED_IFORM_GF2P8MULB_XMMu8_XMMu8: xed_iform_enum_t = 1256;
pub const XED_IFORM_HADDPD_XMMpd_MEMpd: xed_iform_enum_t = 1257;
pub const XED_IFORM_HADDPD_XMMpd_XMMpd: xed_iform_enum_t = 1258;
pub const XED_IFORM_HADDPS_XMMps_MEMps: xed_iform_enum_t = 1259;
pub const XED_IFORM_HADDPS_XMMps_XMMps: xed_iform_enum_t = 1260;
pub const XED_IFORM_HLT: xed_iform_enum_t = 1261;
pub const XED_IFORM_HRESET_IMM8: xed_iform_enum_t = 1262;
pub const XED_IFORM_HSUBPD_XMMpd_MEMpd: xed_iform_enum_t = 1263;
pub const XED_IFORM_HSUBPD_XMMpd_XMMpd: xed_iform_enum_t = 1264;
pub const XED_IFORM_HSUBPS_XMMps_MEMps: xed_iform_enum_t = 1265;
pub const XED_IFORM_HSUBPS_XMMps_XMMps: xed_iform_enum_t = 1266;
pub const XED_IFORM_IDIV_GPR8: xed_iform_enum_t = 1267;
pub const XED_IFORM_IDIV_GPR8i8_APX: xed_iform_enum_t = 1268;
pub const XED_IFORM_IDIV_GPRv: xed_iform_enum_t = 1269;
pub const XED_IFORM_IDIV_GPRv_APX: xed_iform_enum_t = 1270;
pub const XED_IFORM_IDIV_MEMb: xed_iform_enum_t = 1271;
pub const XED_IFORM_IDIV_MEMi8_APX: xed_iform_enum_t = 1272;
pub const XED_IFORM_IDIV_MEMv: xed_iform_enum_t = 1273;
pub const XED_IFORM_IDIV_MEMv_APX: xed_iform_enum_t = 1274;
pub const XED_IFORM_IMUL_GPR8: xed_iform_enum_t = 1275;
pub const XED_IFORM_IMUL_GPR8i8_APX: xed_iform_enum_t = 1276;
pub const XED_IFORM_IMUL_GPRv: xed_iform_enum_t = 1277;
pub const XED_IFORM_IMUL_GPRv_APX: xed_iform_enum_t = 1278;
pub const XED_IFORM_IMUL_GPRv_GPRv: xed_iform_enum_t = 1279;
pub const XED_IFORM_IMUL_GPRv_GPRv_APX: xed_iform_enum_t = 1280;
pub const XED_IFORM_IMUL_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 1281;
pub const XED_IFORM_IMUL_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 1282;
pub const XED_IFORM_IMUL_GPRv_GPRv_IMMb: xed_iform_enum_t = 1283;
pub const XED_IFORM_IMUL_GPRv_GPRv_IMMz: xed_iform_enum_t = 1284;
pub const XED_IFORM_IMUL_GPRv_GPRv_IMMz_APX: xed_iform_enum_t = 1285;
pub const XED_IFORM_IMUL_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 1286;
pub const XED_IFORM_IMUL_GPRv_MEMv: xed_iform_enum_t = 1287;
pub const XED_IFORM_IMUL_GPRv_MEMv_APX: xed_iform_enum_t = 1288;
pub const XED_IFORM_IMUL_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 1289;
pub const XED_IFORM_IMUL_GPRv_MEMv_IMMb: xed_iform_enum_t = 1290;
pub const XED_IFORM_IMUL_GPRv_MEMv_IMMz: xed_iform_enum_t = 1291;
pub const XED_IFORM_IMUL_GPRv_MEMv_IMMz_APX: xed_iform_enum_t = 1292;
pub const XED_IFORM_IMUL_MEMb: xed_iform_enum_t = 1293;
pub const XED_IFORM_IMUL_MEMi8_APX: xed_iform_enum_t = 1294;
pub const XED_IFORM_IMUL_MEMv: xed_iform_enum_t = 1295;
pub const XED_IFORM_IMUL_MEMv_APX: xed_iform_enum_t = 1296;
pub const XED_IFORM_IN_AL_DX: xed_iform_enum_t = 1297;
pub const XED_IFORM_IN_AL_IMMb: xed_iform_enum_t = 1298;
pub const XED_IFORM_IN_OeAX_DX: xed_iform_enum_t = 1299;
pub const XED_IFORM_IN_OeAX_IMMb: xed_iform_enum_t = 1300;
pub const XED_IFORM_INC_GPR8: xed_iform_enum_t = 1301;
pub const XED_IFORM_INC_GPR8i8_APX: xed_iform_enum_t = 1302;
pub const XED_IFORM_INC_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 1303;
pub const XED_IFORM_INC_GPR8i8_MEMi8_APX: xed_iform_enum_t = 1304;
pub const XED_IFORM_INC_GPRv_40: xed_iform_enum_t = 1305;
pub const XED_IFORM_INC_GPRv_APX: xed_iform_enum_t = 1306;
pub const XED_IFORM_INC_GPRv_FFr0: xed_iform_enum_t = 1307;
pub const XED_IFORM_INC_GPRv_GPRv_APX: xed_iform_enum_t = 1308;
pub const XED_IFORM_INC_GPRv_MEMv_APX: xed_iform_enum_t = 1309;
pub const XED_IFORM_INC_MEMb: xed_iform_enum_t = 1310;
pub const XED_IFORM_INC_MEMi8_APX: xed_iform_enum_t = 1311;
pub const XED_IFORM_INC_MEMv: xed_iform_enum_t = 1312;
pub const XED_IFORM_INC_MEMv_APX: xed_iform_enum_t = 1313;
pub const XED_IFORM_INCSSPD_GPR32u8: xed_iform_enum_t = 1314;
pub const XED_IFORM_INCSSPQ_GPR64u8: xed_iform_enum_t = 1315;
pub const XED_IFORM_INC_LOCK_MEMb: xed_iform_enum_t = 1316;
pub const XED_IFORM_INC_LOCK_MEMv: xed_iform_enum_t = 1317;
pub const XED_IFORM_INSB: xed_iform_enum_t = 1318;
pub const XED_IFORM_INSD: xed_iform_enum_t = 1319;
pub const XED_IFORM_INSERTPS_XMMps_MEMd_IMMb: xed_iform_enum_t = 1320;
pub const XED_IFORM_INSERTPS_XMMps_XMMps_IMMb: xed_iform_enum_t = 1321;
pub const XED_IFORM_INSERTQ_XMMq_XMMdq: xed_iform_enum_t = 1322;
pub const XED_IFORM_INSERTQ_XMMq_XMMq_IMMb_IMMb: xed_iform_enum_t = 1323;
pub const XED_IFORM_INSW: xed_iform_enum_t = 1324;
pub const XED_IFORM_INT_IMMb: xed_iform_enum_t = 1325;
pub const XED_IFORM_INT1: xed_iform_enum_t = 1326;
pub const XED_IFORM_INT3: xed_iform_enum_t = 1327;
pub const XED_IFORM_INTO: xed_iform_enum_t = 1328;
pub const XED_IFORM_INVD: xed_iform_enum_t = 1329;
pub const XED_IFORM_INVEPT_GPR32_MEMdq: xed_iform_enum_t = 1330;
pub const XED_IFORM_INVEPT_GPR64_MEMdq: xed_iform_enum_t = 1331;
pub const XED_IFORM_INVEPT_GPR64i64_MEMi128_APX: xed_iform_enum_t = 1332;
pub const XED_IFORM_INVLPG_MEMb: xed_iform_enum_t = 1333;
pub const XED_IFORM_INVLPGA_ArAX_ECX: xed_iform_enum_t = 1334;
pub const XED_IFORM_INVLPGB_EAX_EDX_ECX: xed_iform_enum_t = 1335;
pub const XED_IFORM_INVLPGB_RAX_EDX_ECX: xed_iform_enum_t = 1336;
pub const XED_IFORM_INVPCID_GPR32_MEMdq: xed_iform_enum_t = 1337;
pub const XED_IFORM_INVPCID_GPR64_MEMdq: xed_iform_enum_t = 1338;
pub const XED_IFORM_INVPCID_GPR64i64_MEMi128_APX: xed_iform_enum_t = 1339;
pub const XED_IFORM_INVVPID_GPR32_MEMdq: xed_iform_enum_t = 1340;
pub const XED_IFORM_INVVPID_GPR64_MEMdq: xed_iform_enum_t = 1341;
pub const XED_IFORM_INVVPID_GPR64i64_MEMi128_APX: xed_iform_enum_t = 1342;
pub const XED_IFORM_IRET: xed_iform_enum_t = 1343;
pub const XED_IFORM_IRETD: xed_iform_enum_t = 1344;
pub const XED_IFORM_IRETQ: xed_iform_enum_t = 1345;
pub const XED_IFORM_JB_RELBRb: xed_iform_enum_t = 1346;
pub const XED_IFORM_JB_RELBRd: xed_iform_enum_t = 1347;
pub const XED_IFORM_JB_RELBRz: xed_iform_enum_t = 1348;
pub const XED_IFORM_JBE_RELBRb: xed_iform_enum_t = 1349;
pub const XED_IFORM_JBE_RELBRd: xed_iform_enum_t = 1350;
pub const XED_IFORM_JBE_RELBRz: xed_iform_enum_t = 1351;
pub const XED_IFORM_JCXZ_RELBRb: xed_iform_enum_t = 1352;
pub const XED_IFORM_JECXZ_RELBRb: xed_iform_enum_t = 1353;
pub const XED_IFORM_JL_RELBRb: xed_iform_enum_t = 1354;
pub const XED_IFORM_JL_RELBRd: xed_iform_enum_t = 1355;
pub const XED_IFORM_JL_RELBRz: xed_iform_enum_t = 1356;
pub const XED_IFORM_JLE_RELBRb: xed_iform_enum_t = 1357;
pub const XED_IFORM_JLE_RELBRd: xed_iform_enum_t = 1358;
pub const XED_IFORM_JLE_RELBRz: xed_iform_enum_t = 1359;
pub const XED_IFORM_JMP_GPRv: xed_iform_enum_t = 1360;
pub const XED_IFORM_JMP_MEMv: xed_iform_enum_t = 1361;
pub const XED_IFORM_JMP_RELBRb: xed_iform_enum_t = 1362;
pub const XED_IFORM_JMP_RELBRd: xed_iform_enum_t = 1363;
pub const XED_IFORM_JMP_RELBRz: xed_iform_enum_t = 1364;
pub const XED_IFORM_JMPABS_ABSBRu64_APX: xed_iform_enum_t = 1365;
pub const XED_IFORM_JMP_FAR_MEMp2: xed_iform_enum_t = 1366;
pub const XED_IFORM_JMP_FAR_PTRp_IMMw: xed_iform_enum_t = 1367;
pub const XED_IFORM_JNB_RELBRb: xed_iform_enum_t = 1368;
pub const XED_IFORM_JNB_RELBRd: xed_iform_enum_t = 1369;
pub const XED_IFORM_JNB_RELBRz: xed_iform_enum_t = 1370;
pub const XED_IFORM_JNBE_RELBRb: xed_iform_enum_t = 1371;
pub const XED_IFORM_JNBE_RELBRd: xed_iform_enum_t = 1372;
pub const XED_IFORM_JNBE_RELBRz: xed_iform_enum_t = 1373;
pub const XED_IFORM_JNL_RELBRb: xed_iform_enum_t = 1374;
pub const XED_IFORM_JNL_RELBRd: xed_iform_enum_t = 1375;
pub const XED_IFORM_JNL_RELBRz: xed_iform_enum_t = 1376;
pub const XED_IFORM_JNLE_RELBRb: xed_iform_enum_t = 1377;
pub const XED_IFORM_JNLE_RELBRd: xed_iform_enum_t = 1378;
pub const XED_IFORM_JNLE_RELBRz: xed_iform_enum_t = 1379;
pub const XED_IFORM_JNO_RELBRb: xed_iform_enum_t = 1380;
pub const XED_IFORM_JNO_RELBRd: xed_iform_enum_t = 1381;
pub const XED_IFORM_JNO_RELBRz: xed_iform_enum_t = 1382;
pub const XED_IFORM_JNP_RELBRb: xed_iform_enum_t = 1383;
pub const XED_IFORM_JNP_RELBRd: xed_iform_enum_t = 1384;
pub const XED_IFORM_JNP_RELBRz: xed_iform_enum_t = 1385;
pub const XED_IFORM_JNS_RELBRb: xed_iform_enum_t = 1386;
pub const XED_IFORM_JNS_RELBRd: xed_iform_enum_t = 1387;
pub const XED_IFORM_JNS_RELBRz: xed_iform_enum_t = 1388;
pub const XED_IFORM_JNZ_RELBRb: xed_iform_enum_t = 1389;
pub const XED_IFORM_JNZ_RELBRd: xed_iform_enum_t = 1390;
pub const XED_IFORM_JNZ_RELBRz: xed_iform_enum_t = 1391;
pub const XED_IFORM_JO_RELBRb: xed_iform_enum_t = 1392;
pub const XED_IFORM_JO_RELBRd: xed_iform_enum_t = 1393;
pub const XED_IFORM_JO_RELBRz: xed_iform_enum_t = 1394;
pub const XED_IFORM_JP_RELBRb: xed_iform_enum_t = 1395;
pub const XED_IFORM_JP_RELBRd: xed_iform_enum_t = 1396;
pub const XED_IFORM_JP_RELBRz: xed_iform_enum_t = 1397;
pub const XED_IFORM_JRCXZ_RELBRb: xed_iform_enum_t = 1398;
pub const XED_IFORM_JS_RELBRb: xed_iform_enum_t = 1399;
pub const XED_IFORM_JS_RELBRd: xed_iform_enum_t = 1400;
pub const XED_IFORM_JS_RELBRz: xed_iform_enum_t = 1401;
pub const XED_IFORM_JZ_RELBRb: xed_iform_enum_t = 1402;
pub const XED_IFORM_JZ_RELBRd: xed_iform_enum_t = 1403;
pub const XED_IFORM_JZ_RELBRz: xed_iform_enum_t = 1404;
pub const XED_IFORM_KADDB_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1405;
pub const XED_IFORM_KADDD_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1406;
pub const XED_IFORM_KADDQ_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1407;
pub const XED_IFORM_KADDW_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1408;
pub const XED_IFORM_KANDB_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1409;
pub const XED_IFORM_KANDD_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1410;
pub const XED_IFORM_KANDNB_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1411;
pub const XED_IFORM_KANDND_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1412;
pub const XED_IFORM_KANDNQ_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1413;
pub const XED_IFORM_KANDNW_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1414;
pub const XED_IFORM_KANDQ_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1415;
pub const XED_IFORM_KANDW_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1416;
pub const XED_IFORM_KMOVB_GPR32u32_MASKmskw_APX: xed_iform_enum_t = 1417;
pub const XED_IFORM_KMOVB_GPR32u32_MASKmskw_AVX512: xed_iform_enum_t = 1418;
pub const XED_IFORM_KMOVB_MASKmskw_GPR32u32_APX: xed_iform_enum_t = 1419;
pub const XED_IFORM_KMOVB_MASKmskw_GPR32u32_AVX512: xed_iform_enum_t = 1420;
pub const XED_IFORM_KMOVB_MASKmskw_MASKu8_APX: xed_iform_enum_t = 1421;
pub const XED_IFORM_KMOVB_MASKmskw_MASKu8_AVX512: xed_iform_enum_t = 1422;
pub const XED_IFORM_KMOVB_MASKmskw_MEMu8_APX: xed_iform_enum_t = 1423;
pub const XED_IFORM_KMOVB_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 1424;
pub const XED_IFORM_KMOVB_MEMu8_MASKmskw_APX: xed_iform_enum_t = 1425;
pub const XED_IFORM_KMOVB_MEMu8_MASKmskw_AVX512: xed_iform_enum_t = 1426;
pub const XED_IFORM_KMOVD_GPR32u32_MASKmskw_APX: xed_iform_enum_t = 1427;
pub const XED_IFORM_KMOVD_GPR32u32_MASKmskw_AVX512: xed_iform_enum_t = 1428;
pub const XED_IFORM_KMOVD_MASKmskw_GPR32u32_APX: xed_iform_enum_t = 1429;
pub const XED_IFORM_KMOVD_MASKmskw_GPR32u32_AVX512: xed_iform_enum_t = 1430;
pub const XED_IFORM_KMOVD_MASKmskw_MASKu32_APX: xed_iform_enum_t = 1431;
pub const XED_IFORM_KMOVD_MASKmskw_MASKu32_AVX512: xed_iform_enum_t = 1432;
pub const XED_IFORM_KMOVD_MASKmskw_MEMu32_APX: xed_iform_enum_t = 1433;
pub const XED_IFORM_KMOVD_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 1434;
pub const XED_IFORM_KMOVD_MEMu32_MASKmskw_APX: xed_iform_enum_t = 1435;
pub const XED_IFORM_KMOVD_MEMu32_MASKmskw_AVX512: xed_iform_enum_t = 1436;
pub const XED_IFORM_KMOVQ_GPR64u64_MASKmskw_APX: xed_iform_enum_t = 1437;
pub const XED_IFORM_KMOVQ_GPR64u64_MASKmskw_AVX512: xed_iform_enum_t = 1438;
pub const XED_IFORM_KMOVQ_MASKmskw_GPR64u64_APX: xed_iform_enum_t = 1439;
pub const XED_IFORM_KMOVQ_MASKmskw_GPR64u64_AVX512: xed_iform_enum_t = 1440;
pub const XED_IFORM_KMOVQ_MASKmskw_MASKu64_APX: xed_iform_enum_t = 1441;
pub const XED_IFORM_KMOVQ_MASKmskw_MASKu64_AVX512: xed_iform_enum_t = 1442;
pub const XED_IFORM_KMOVQ_MASKmskw_MEMu64_APX: xed_iform_enum_t = 1443;
pub const XED_IFORM_KMOVQ_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 1444;
pub const XED_IFORM_KMOVQ_MEMu64_MASKmskw_APX: xed_iform_enum_t = 1445;
pub const XED_IFORM_KMOVQ_MEMu64_MASKmskw_AVX512: xed_iform_enum_t = 1446;
pub const XED_IFORM_KMOVW_GPR32u32_MASKmskw_APX: xed_iform_enum_t = 1447;
pub const XED_IFORM_KMOVW_GPR32u32_MASKmskw_AVX512: xed_iform_enum_t = 1448;
pub const XED_IFORM_KMOVW_MASKmskw_GPR32u32_APX: xed_iform_enum_t = 1449;
pub const XED_IFORM_KMOVW_MASKmskw_GPR32u32_AVX512: xed_iform_enum_t = 1450;
pub const XED_IFORM_KMOVW_MASKmskw_MASKu16_APX: xed_iform_enum_t = 1451;
pub const XED_IFORM_KMOVW_MASKmskw_MASKu16_AVX512: xed_iform_enum_t = 1452;
pub const XED_IFORM_KMOVW_MASKmskw_MEMu16_APX: xed_iform_enum_t = 1453;
pub const XED_IFORM_KMOVW_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 1454;
pub const XED_IFORM_KMOVW_MEMu16_MASKmskw_APX: xed_iform_enum_t = 1455;
pub const XED_IFORM_KMOVW_MEMu16_MASKmskw_AVX512: xed_iform_enum_t = 1456;
pub const XED_IFORM_KNOTB_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1457;
pub const XED_IFORM_KNOTD_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1458;
pub const XED_IFORM_KNOTQ_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1459;
pub const XED_IFORM_KNOTW_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1460;
pub const XED_IFORM_KORB_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1461;
pub const XED_IFORM_KORD_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1462;
pub const XED_IFORM_KORQ_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1463;
pub const XED_IFORM_KORTESTB_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1464;
pub const XED_IFORM_KORTESTD_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1465;
pub const XED_IFORM_KORTESTQ_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1466;
pub const XED_IFORM_KORTESTW_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1467;
pub const XED_IFORM_KORW_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1468;
pub const XED_IFORM_KSHIFTLB_MASKmskw_MASKmskw_IMM8_AVX512: xed_iform_enum_t = 1469;
pub const XED_IFORM_KSHIFTLD_MASKmskw_MASKmskw_IMM8_AVX512: xed_iform_enum_t = 1470;
pub const XED_IFORM_KSHIFTLQ_MASKmskw_MASKmskw_IMM8_AVX512: xed_iform_enum_t = 1471;
pub const XED_IFORM_KSHIFTLW_MASKmskw_MASKmskw_IMM8_AVX512: xed_iform_enum_t = 1472;
pub const XED_IFORM_KSHIFTRB_MASKmskw_MASKmskw_IMM8_AVX512: xed_iform_enum_t = 1473;
pub const XED_IFORM_KSHIFTRD_MASKmskw_MASKmskw_IMM8_AVX512: xed_iform_enum_t = 1474;
pub const XED_IFORM_KSHIFTRQ_MASKmskw_MASKmskw_IMM8_AVX512: xed_iform_enum_t = 1475;
pub const XED_IFORM_KSHIFTRW_MASKmskw_MASKmskw_IMM8_AVX512: xed_iform_enum_t = 1476;
pub const XED_IFORM_KTESTB_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1477;
pub const XED_IFORM_KTESTD_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1478;
pub const XED_IFORM_KTESTQ_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1479;
pub const XED_IFORM_KTESTW_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1480;
pub const XED_IFORM_KUNPCKBW_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1481;
pub const XED_IFORM_KUNPCKDQ_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1482;
pub const XED_IFORM_KUNPCKWD_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1483;
pub const XED_IFORM_KXNORB_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1484;
pub const XED_IFORM_KXNORD_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1485;
pub const XED_IFORM_KXNORQ_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1486;
pub const XED_IFORM_KXNORW_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1487;
pub const XED_IFORM_KXORB_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1488;
pub const XED_IFORM_KXORD_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1489;
pub const XED_IFORM_KXORQ_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1490;
pub const XED_IFORM_KXORW_MASKmskw_MASKmskw_MASKmskw_AVX512: xed_iform_enum_t = 1491;
pub const XED_IFORM_LAHF: xed_iform_enum_t = 1492;
pub const XED_IFORM_LAR_GPRv_GPRv: xed_iform_enum_t = 1493;
pub const XED_IFORM_LAR_GPRv_MEMw: xed_iform_enum_t = 1494;
pub const XED_IFORM_LDDQU_XMMpd_MEMdq: xed_iform_enum_t = 1495;
pub const XED_IFORM_LDMXCSR_MEMd: xed_iform_enum_t = 1496;
pub const XED_IFORM_LDS_GPRz_MEMp: xed_iform_enum_t = 1497;
pub const XED_IFORM_LDTILECFG_MEM: xed_iform_enum_t = 1498;
pub const XED_IFORM_LDTILECFG_MEM_APX: xed_iform_enum_t = 1499;
pub const XED_IFORM_LEA_GPRv_AGEN: xed_iform_enum_t = 1500;
pub const XED_IFORM_LEAVE: xed_iform_enum_t = 1501;
pub const XED_IFORM_LES_GPRz_MEMp: xed_iform_enum_t = 1502;
pub const XED_IFORM_LFENCE: xed_iform_enum_t = 1503;
pub const XED_IFORM_LFS_GPRv_MEMp2: xed_iform_enum_t = 1504;
pub const XED_IFORM_LGDT_MEMs: xed_iform_enum_t = 1505;
pub const XED_IFORM_LGDT_MEMs64: xed_iform_enum_t = 1506;
pub const XED_IFORM_LGS_GPRv_MEMp2: xed_iform_enum_t = 1507;
pub const XED_IFORM_LIDT_MEMs: xed_iform_enum_t = 1508;
pub const XED_IFORM_LIDT_MEMs64: xed_iform_enum_t = 1509;
pub const XED_IFORM_LKGS_GPR16u16: xed_iform_enum_t = 1510;
pub const XED_IFORM_LKGS_MEMu16: xed_iform_enum_t = 1511;
pub const XED_IFORM_LLDT_GPR16: xed_iform_enum_t = 1512;
pub const XED_IFORM_LLDT_MEMw: xed_iform_enum_t = 1513;
pub const XED_IFORM_LLWPCB_GPRyy: xed_iform_enum_t = 1514;
pub const XED_IFORM_LMSW_GPR16: xed_iform_enum_t = 1515;
pub const XED_IFORM_LMSW_MEMw: xed_iform_enum_t = 1516;
pub const XED_IFORM_LOADIWKEY_XMMu8_XMMu8: xed_iform_enum_t = 1517;
pub const XED_IFORM_LODSB: xed_iform_enum_t = 1518;
pub const XED_IFORM_LODSD: xed_iform_enum_t = 1519;
pub const XED_IFORM_LODSQ: xed_iform_enum_t = 1520;
pub const XED_IFORM_LODSW: xed_iform_enum_t = 1521;
pub const XED_IFORM_LOOP_RELBRb: xed_iform_enum_t = 1522;
pub const XED_IFORM_LOOPE_RELBRb: xed_iform_enum_t = 1523;
pub const XED_IFORM_LOOPNE_RELBRb: xed_iform_enum_t = 1524;
pub const XED_IFORM_LSL_GPRv_GPRz: xed_iform_enum_t = 1525;
pub const XED_IFORM_LSL_GPRv_MEMw: xed_iform_enum_t = 1526;
pub const XED_IFORM_LSS_GPRv_MEMp2: xed_iform_enum_t = 1527;
pub const XED_IFORM_LTR_GPR16: xed_iform_enum_t = 1528;
pub const XED_IFORM_LTR_MEMw: xed_iform_enum_t = 1529;
pub const XED_IFORM_LWPINS_GPRyy_GPR32d_IMMd: xed_iform_enum_t = 1530;
pub const XED_IFORM_LWPINS_GPRyy_MEMd_IMMd: xed_iform_enum_t = 1531;
pub const XED_IFORM_LWPVAL_GPRyy_GPR32d_IMMd: xed_iform_enum_t = 1532;
pub const XED_IFORM_LWPVAL_GPRyy_MEMd_IMMd: xed_iform_enum_t = 1533;
pub const XED_IFORM_LZCNT_GPRv_GPRv: xed_iform_enum_t = 1534;
pub const XED_IFORM_LZCNT_GPRv_GPRv_APX: xed_iform_enum_t = 1535;
pub const XED_IFORM_LZCNT_GPRv_MEMv: xed_iform_enum_t = 1536;
pub const XED_IFORM_LZCNT_GPRv_MEMv_APX: xed_iform_enum_t = 1537;
pub const XED_IFORM_MASKMOVDQU_XMMxub_XMMxub: xed_iform_enum_t = 1538;
pub const XED_IFORM_MASKMOVQ_MMXq_MMXq: xed_iform_enum_t = 1539;
pub const XED_IFORM_MAXPD_XMMpd_MEMpd: xed_iform_enum_t = 1540;
pub const XED_IFORM_MAXPD_XMMpd_XMMpd: xed_iform_enum_t = 1541;
pub const XED_IFORM_MAXPS_XMMps_MEMps: xed_iform_enum_t = 1542;
pub const XED_IFORM_MAXPS_XMMps_XMMps: xed_iform_enum_t = 1543;
pub const XED_IFORM_MAXSD_XMMsd_MEMsd: xed_iform_enum_t = 1544;
pub const XED_IFORM_MAXSD_XMMsd_XMMsd: xed_iform_enum_t = 1545;
pub const XED_IFORM_MAXSS_XMMss_MEMss: xed_iform_enum_t = 1546;
pub const XED_IFORM_MAXSS_XMMss_XMMss: xed_iform_enum_t = 1547;
pub const XED_IFORM_MCOMMIT: xed_iform_enum_t = 1548;
pub const XED_IFORM_MFENCE: xed_iform_enum_t = 1549;
pub const XED_IFORM_MINPD_XMMpd_MEMpd: xed_iform_enum_t = 1550;
pub const XED_IFORM_MINPD_XMMpd_XMMpd: xed_iform_enum_t = 1551;
pub const XED_IFORM_MINPS_XMMps_MEMps: xed_iform_enum_t = 1552;
pub const XED_IFORM_MINPS_XMMps_XMMps: xed_iform_enum_t = 1553;
pub const XED_IFORM_MINSD_XMMsd_MEMsd: xed_iform_enum_t = 1554;
pub const XED_IFORM_MINSD_XMMsd_XMMsd: xed_iform_enum_t = 1555;
pub const XED_IFORM_MINSS_XMMss_MEMss: xed_iform_enum_t = 1556;
pub const XED_IFORM_MINSS_XMMss_XMMss: xed_iform_enum_t = 1557;
pub const XED_IFORM_MONITOR: xed_iform_enum_t = 1558;
pub const XED_IFORM_MONITORX: xed_iform_enum_t = 1559;
pub const XED_IFORM_MOV_AL_MEMb: xed_iform_enum_t = 1560;
pub const XED_IFORM_MOV_GPR8_GPR8_88: xed_iform_enum_t = 1561;
pub const XED_IFORM_MOV_GPR8_GPR8_8A: xed_iform_enum_t = 1562;
pub const XED_IFORM_MOV_GPR8_IMMb_B0: xed_iform_enum_t = 1563;
pub const XED_IFORM_MOV_GPR8_IMMb_C6r0: xed_iform_enum_t = 1564;
pub const XED_IFORM_MOV_GPR8_MEMb: xed_iform_enum_t = 1565;
pub const XED_IFORM_MOV_GPRv_GPRv_89: xed_iform_enum_t = 1566;
pub const XED_IFORM_MOV_GPRv_GPRv_8B: xed_iform_enum_t = 1567;
pub const XED_IFORM_MOV_GPRv_IMMv: xed_iform_enum_t = 1568;
pub const XED_IFORM_MOV_GPRv_IMMz: xed_iform_enum_t = 1569;
pub const XED_IFORM_MOV_GPRv_MEMv: xed_iform_enum_t = 1570;
pub const XED_IFORM_MOV_GPRv_SEG: xed_iform_enum_t = 1571;
pub const XED_IFORM_MOV_MEMb_AL: xed_iform_enum_t = 1572;
pub const XED_IFORM_MOV_MEMb_GPR8: xed_iform_enum_t = 1573;
pub const XED_IFORM_MOV_MEMb_IMMb: xed_iform_enum_t = 1574;
pub const XED_IFORM_MOV_MEMv_GPRv: xed_iform_enum_t = 1575;
pub const XED_IFORM_MOV_MEMv_IMMz: xed_iform_enum_t = 1576;
pub const XED_IFORM_MOV_MEMv_OrAX: xed_iform_enum_t = 1577;
pub const XED_IFORM_MOV_MEMw_SEG: xed_iform_enum_t = 1578;
pub const XED_IFORM_MOV_OrAX_MEMv: xed_iform_enum_t = 1579;
pub const XED_IFORM_MOV_SEG_GPR16: xed_iform_enum_t = 1580;
pub const XED_IFORM_MOV_SEG_MEMw: xed_iform_enum_t = 1581;
pub const XED_IFORM_MOVAPD_MEMpd_XMMpd: xed_iform_enum_t = 1582;
pub const XED_IFORM_MOVAPD_XMMpd_MEMpd: xed_iform_enum_t = 1583;
pub const XED_IFORM_MOVAPD_XMMpd_XMMpd_0F28: xed_iform_enum_t = 1584;
pub const XED_IFORM_MOVAPD_XMMpd_XMMpd_0F29: xed_iform_enum_t = 1585;
pub const XED_IFORM_MOVAPS_MEMps_XMMps: xed_iform_enum_t = 1586;
pub const XED_IFORM_MOVAPS_XMMps_MEMps: xed_iform_enum_t = 1587;
pub const XED_IFORM_MOVAPS_XMMps_XMMps_0F28: xed_iform_enum_t = 1588;
pub const XED_IFORM_MOVAPS_XMMps_XMMps_0F29: xed_iform_enum_t = 1589;
pub const XED_IFORM_MOVBE_GPRv_GPRv_APX: xed_iform_enum_t = 1590;
pub const XED_IFORM_MOVBE_GPRv_MEMv: xed_iform_enum_t = 1591;
pub const XED_IFORM_MOVBE_GPRv_MEMv_APX: xed_iform_enum_t = 1592;
pub const XED_IFORM_MOVBE_MEMv_GPRv: xed_iform_enum_t = 1593;
pub const XED_IFORM_MOVBE_MEMv_GPRv_APX: xed_iform_enum_t = 1594;
pub const XED_IFORM_MOVD_GPR32_MMXd: xed_iform_enum_t = 1595;
pub const XED_IFORM_MOVD_GPR32_XMMd: xed_iform_enum_t = 1596;
pub const XED_IFORM_MOVD_MEMd_MMXd: xed_iform_enum_t = 1597;
pub const XED_IFORM_MOVD_MEMd_XMMd: xed_iform_enum_t = 1598;
pub const XED_IFORM_MOVD_MMXq_GPR32: xed_iform_enum_t = 1599;
pub const XED_IFORM_MOVD_MMXq_MEMd: xed_iform_enum_t = 1600;
pub const XED_IFORM_MOVD_XMMdq_GPR32: xed_iform_enum_t = 1601;
pub const XED_IFORM_MOVD_XMMdq_MEMd: xed_iform_enum_t = 1602;
pub const XED_IFORM_MOVDDUP_XMMdq_MEMq: xed_iform_enum_t = 1603;
pub const XED_IFORM_MOVDDUP_XMMdq_XMMq: xed_iform_enum_t = 1604;
pub const XED_IFORM_MOVDIR64B_GPRa_MEM: xed_iform_enum_t = 1605;
pub const XED_IFORM_MOVDIR64B_GPRav_MEMu32_APX: xed_iform_enum_t = 1606;
pub const XED_IFORM_MOVDIRI_MEMu32_GPR32u32: xed_iform_enum_t = 1607;
pub const XED_IFORM_MOVDIRI_MEMu64_GPR64u64: xed_iform_enum_t = 1608;
pub const XED_IFORM_MOVDIRI_MEMyu_GPRyu_APX: xed_iform_enum_t = 1609;
pub const XED_IFORM_MOVDQ2Q_MMXq_XMMq: xed_iform_enum_t = 1610;
pub const XED_IFORM_MOVDQA_MEMdq_XMMdq: xed_iform_enum_t = 1611;
pub const XED_IFORM_MOVDQA_XMMdq_MEMdq: xed_iform_enum_t = 1612;
pub const XED_IFORM_MOVDQA_XMMdq_XMMdq_0F6F: xed_iform_enum_t = 1613;
pub const XED_IFORM_MOVDQA_XMMdq_XMMdq_0F7F: xed_iform_enum_t = 1614;
pub const XED_IFORM_MOVDQU_MEMdq_XMMdq: xed_iform_enum_t = 1615;
pub const XED_IFORM_MOVDQU_XMMdq_MEMdq: xed_iform_enum_t = 1616;
pub const XED_IFORM_MOVDQU_XMMdq_XMMdq_0F6F: xed_iform_enum_t = 1617;
pub const XED_IFORM_MOVDQU_XMMdq_XMMdq_0F7F: xed_iform_enum_t = 1618;
pub const XED_IFORM_MOVHLPS_XMMq_XMMq: xed_iform_enum_t = 1619;
pub const XED_IFORM_MOVHPD_MEMq_XMMsd: xed_iform_enum_t = 1620;
pub const XED_IFORM_MOVHPD_XMMsd_MEMq: xed_iform_enum_t = 1621;
pub const XED_IFORM_MOVHPS_MEMq_XMMps: xed_iform_enum_t = 1622;
pub const XED_IFORM_MOVHPS_XMMq_MEMq: xed_iform_enum_t = 1623;
pub const XED_IFORM_MOVLHPS_XMMq_XMMq: xed_iform_enum_t = 1624;
pub const XED_IFORM_MOVLPD_MEMq_XMMsd: xed_iform_enum_t = 1625;
pub const XED_IFORM_MOVLPD_XMMsd_MEMq: xed_iform_enum_t = 1626;
pub const XED_IFORM_MOVLPS_MEMq_XMMq: xed_iform_enum_t = 1627;
pub const XED_IFORM_MOVLPS_XMMq_MEMq: xed_iform_enum_t = 1628;
pub const XED_IFORM_MOVMSKPD_GPR32_XMMpd: xed_iform_enum_t = 1629;
pub const XED_IFORM_MOVMSKPS_GPR32_XMMps: xed_iform_enum_t = 1630;
pub const XED_IFORM_MOVNTDQ_MEMdq_XMMdq: xed_iform_enum_t = 1631;
pub const XED_IFORM_MOVNTDQA_XMMdq_MEMdq: xed_iform_enum_t = 1632;
pub const XED_IFORM_MOVNTI_MEMd_GPR32: xed_iform_enum_t = 1633;
pub const XED_IFORM_MOVNTI_MEMq_GPR64: xed_iform_enum_t = 1634;
pub const XED_IFORM_MOVNTPD_MEMdq_XMMpd: xed_iform_enum_t = 1635;
pub const XED_IFORM_MOVNTPS_MEMdq_XMMps: xed_iform_enum_t = 1636;
pub const XED_IFORM_MOVNTQ_MEMq_MMXq: xed_iform_enum_t = 1637;
pub const XED_IFORM_MOVNTSD_MEMq_XMMq: xed_iform_enum_t = 1638;
pub const XED_IFORM_MOVNTSS_MEMd_XMMd: xed_iform_enum_t = 1639;
pub const XED_IFORM_MOVQ_GPR64_MMXq: xed_iform_enum_t = 1640;
pub const XED_IFORM_MOVQ_GPR64_XMMq: xed_iform_enum_t = 1641;
pub const XED_IFORM_MOVQ_MEMq_MMXq_0F7E: xed_iform_enum_t = 1642;
pub const XED_IFORM_MOVQ_MEMq_MMXq_0F7F: xed_iform_enum_t = 1643;
pub const XED_IFORM_MOVQ_MEMq_XMMq_0F7E: xed_iform_enum_t = 1644;
pub const XED_IFORM_MOVQ_MEMq_XMMq_0FD6: xed_iform_enum_t = 1645;
pub const XED_IFORM_MOVQ_MMXq_GPR64: xed_iform_enum_t = 1646;
pub const XED_IFORM_MOVQ_MMXq_MEMq_0F6E: xed_iform_enum_t = 1647;
pub const XED_IFORM_MOVQ_MMXq_MEMq_0F6F: xed_iform_enum_t = 1648;
pub const XED_IFORM_MOVQ_MMXq_MMXq_0F6F: xed_iform_enum_t = 1649;
pub const XED_IFORM_MOVQ_MMXq_MMXq_0F7F: xed_iform_enum_t = 1650;
pub const XED_IFORM_MOVQ_XMMdq_GPR64: xed_iform_enum_t = 1651;
pub const XED_IFORM_MOVQ_XMMdq_MEMq_0F6E: xed_iform_enum_t = 1652;
pub const XED_IFORM_MOVQ_XMMdq_MEMq_0F7E: xed_iform_enum_t = 1653;
pub const XED_IFORM_MOVQ_XMMdq_XMMq_0F7E: xed_iform_enum_t = 1654;
pub const XED_IFORM_MOVQ_XMMdq_XMMq_0FD6: xed_iform_enum_t = 1655;
pub const XED_IFORM_MOVQ2DQ_XMMdq_MMXq: xed_iform_enum_t = 1656;
pub const XED_IFORM_MOVSB: xed_iform_enum_t = 1657;
pub const XED_IFORM_MOVSD: xed_iform_enum_t = 1658;
pub const XED_IFORM_MOVSD_XMM_MEMsd_XMMsd: xed_iform_enum_t = 1659;
pub const XED_IFORM_MOVSD_XMM_XMMdq_MEMsd: xed_iform_enum_t = 1660;
pub const XED_IFORM_MOVSD_XMM_XMMsd_XMMsd_0F10: xed_iform_enum_t = 1661;
pub const XED_IFORM_MOVSD_XMM_XMMsd_XMMsd_0F11: xed_iform_enum_t = 1662;
pub const XED_IFORM_MOVSHDUP_XMMps_MEMps: xed_iform_enum_t = 1663;
pub const XED_IFORM_MOVSHDUP_XMMps_XMMps: xed_iform_enum_t = 1664;
pub const XED_IFORM_MOVSLDUP_XMMps_MEMps: xed_iform_enum_t = 1665;
pub const XED_IFORM_MOVSLDUP_XMMps_XMMps: xed_iform_enum_t = 1666;
pub const XED_IFORM_MOVSQ: xed_iform_enum_t = 1667;
pub const XED_IFORM_MOVSS_MEMss_XMMss: xed_iform_enum_t = 1668;
pub const XED_IFORM_MOVSS_XMMdq_MEMss: xed_iform_enum_t = 1669;
pub const XED_IFORM_MOVSS_XMMss_XMMss_0F10: xed_iform_enum_t = 1670;
pub const XED_IFORM_MOVSS_XMMss_XMMss_0F11: xed_iform_enum_t = 1671;
pub const XED_IFORM_MOVSW: xed_iform_enum_t = 1672;
pub const XED_IFORM_MOVSX_GPRv_GPR16: xed_iform_enum_t = 1673;
pub const XED_IFORM_MOVSX_GPRv_GPR8: xed_iform_enum_t = 1674;
pub const XED_IFORM_MOVSX_GPRv_MEMb: xed_iform_enum_t = 1675;
pub const XED_IFORM_MOVSX_GPRv_MEMw: xed_iform_enum_t = 1676;
pub const XED_IFORM_MOVSXD_GPRv_GPRz: xed_iform_enum_t = 1677;
pub const XED_IFORM_MOVSXD_GPRv_MEMz: xed_iform_enum_t = 1678;
pub const XED_IFORM_MOVUPD_MEMpd_XMMpd: xed_iform_enum_t = 1679;
pub const XED_IFORM_MOVUPD_XMMpd_MEMpd: xed_iform_enum_t = 1680;
pub const XED_IFORM_MOVUPD_XMMpd_XMMpd_0F10: xed_iform_enum_t = 1681;
pub const XED_IFORM_MOVUPD_XMMpd_XMMpd_0F11: xed_iform_enum_t = 1682;
pub const XED_IFORM_MOVUPS_MEMps_XMMps: xed_iform_enum_t = 1683;
pub const XED_IFORM_MOVUPS_XMMps_MEMps: xed_iform_enum_t = 1684;
pub const XED_IFORM_MOVUPS_XMMps_XMMps_0F10: xed_iform_enum_t = 1685;
pub const XED_IFORM_MOVUPS_XMMps_XMMps_0F11: xed_iform_enum_t = 1686;
pub const XED_IFORM_MOVZX_GPRv_GPR16: xed_iform_enum_t = 1687;
pub const XED_IFORM_MOVZX_GPRv_GPR8: xed_iform_enum_t = 1688;
pub const XED_IFORM_MOVZX_GPRv_MEMb: xed_iform_enum_t = 1689;
pub const XED_IFORM_MOVZX_GPRv_MEMw: xed_iform_enum_t = 1690;
pub const XED_IFORM_MOV_CR_CR_GPR32: xed_iform_enum_t = 1691;
pub const XED_IFORM_MOV_CR_CR_GPR64: xed_iform_enum_t = 1692;
pub const XED_IFORM_MOV_CR_GPR32_CR: xed_iform_enum_t = 1693;
pub const XED_IFORM_MOV_CR_GPR64_CR: xed_iform_enum_t = 1694;
pub const XED_IFORM_MOV_DR_DR_GPR32: xed_iform_enum_t = 1695;
pub const XED_IFORM_MOV_DR_DR_GPR64: xed_iform_enum_t = 1696;
pub const XED_IFORM_MOV_DR_GPR32_DR: xed_iform_enum_t = 1697;
pub const XED_IFORM_MOV_DR_GPR64_DR: xed_iform_enum_t = 1698;
pub const XED_IFORM_MPSADBW_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1699;
pub const XED_IFORM_MPSADBW_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1700;
pub const XED_IFORM_MUL_GPR8: xed_iform_enum_t = 1701;
pub const XED_IFORM_MUL_GPR8i8_APX: xed_iform_enum_t = 1702;
pub const XED_IFORM_MUL_GPRv: xed_iform_enum_t = 1703;
pub const XED_IFORM_MUL_GPRv_APX: xed_iform_enum_t = 1704;
pub const XED_IFORM_MUL_MEMb: xed_iform_enum_t = 1705;
pub const XED_IFORM_MUL_MEMi8_APX: xed_iform_enum_t = 1706;
pub const XED_IFORM_MUL_MEMv: xed_iform_enum_t = 1707;
pub const XED_IFORM_MUL_MEMv_APX: xed_iform_enum_t = 1708;
pub const XED_IFORM_MULPD_XMMpd_MEMpd: xed_iform_enum_t = 1709;
pub const XED_IFORM_MULPD_XMMpd_XMMpd: xed_iform_enum_t = 1710;
pub const XED_IFORM_MULPS_XMMps_MEMps: xed_iform_enum_t = 1711;
pub const XED_IFORM_MULPS_XMMps_XMMps: xed_iform_enum_t = 1712;
pub const XED_IFORM_MULSD_XMMsd_MEMsd: xed_iform_enum_t = 1713;
pub const XED_IFORM_MULSD_XMMsd_XMMsd: xed_iform_enum_t = 1714;
pub const XED_IFORM_MULSS_XMMss_MEMss: xed_iform_enum_t = 1715;
pub const XED_IFORM_MULSS_XMMss_XMMss: xed_iform_enum_t = 1716;
pub const XED_IFORM_MULX_GPR32d_GPR32d_GPR32d: xed_iform_enum_t = 1717;
pub const XED_IFORM_MULX_GPR32d_GPR32d_MEMd: xed_iform_enum_t = 1718;
pub const XED_IFORM_MULX_GPR32i32_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 1719;
pub const XED_IFORM_MULX_GPR32i32_GPR32i32_MEMi32_APX: xed_iform_enum_t = 1720;
pub const XED_IFORM_MULX_GPR64i64_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 1721;
pub const XED_IFORM_MULX_GPR64i64_GPR64i64_MEMi64_APX: xed_iform_enum_t = 1722;
pub const XED_IFORM_MULX_GPR64q_GPR64q_GPR64q: xed_iform_enum_t = 1723;
pub const XED_IFORM_MULX_GPR64q_GPR64q_MEMq: xed_iform_enum_t = 1724;
pub const XED_IFORM_MWAIT: xed_iform_enum_t = 1725;
pub const XED_IFORM_MWAITX: xed_iform_enum_t = 1726;
pub const XED_IFORM_NEG_GPR8: xed_iform_enum_t = 1727;
pub const XED_IFORM_NEG_GPR8i8_APX: xed_iform_enum_t = 1728;
pub const XED_IFORM_NEG_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 1729;
pub const XED_IFORM_NEG_GPR8i8_MEMi8_APX: xed_iform_enum_t = 1730;
pub const XED_IFORM_NEG_GPRv: xed_iform_enum_t = 1731;
pub const XED_IFORM_NEG_GPRv_APX: xed_iform_enum_t = 1732;
pub const XED_IFORM_NEG_GPRv_GPRv_APX: xed_iform_enum_t = 1733;
pub const XED_IFORM_NEG_GPRv_MEMv_APX: xed_iform_enum_t = 1734;
pub const XED_IFORM_NEG_MEMb: xed_iform_enum_t = 1735;
pub const XED_IFORM_NEG_MEMi8_APX: xed_iform_enum_t = 1736;
pub const XED_IFORM_NEG_MEMv: xed_iform_enum_t = 1737;
pub const XED_IFORM_NEG_MEMv_APX: xed_iform_enum_t = 1738;
pub const XED_IFORM_NEG_LOCK_MEMb: xed_iform_enum_t = 1739;
pub const XED_IFORM_NEG_LOCK_MEMv: xed_iform_enum_t = 1740;
pub const XED_IFORM_NOP_90: xed_iform_enum_t = 1741;
pub const XED_IFORM_NOP_GPRv_0F18r0: xed_iform_enum_t = 1742;
pub const XED_IFORM_NOP_GPRv_0F18r1: xed_iform_enum_t = 1743;
pub const XED_IFORM_NOP_GPRv_0F18r2: xed_iform_enum_t = 1744;
pub const XED_IFORM_NOP_GPRv_0F18r3: xed_iform_enum_t = 1745;
pub const XED_IFORM_NOP_GPRv_0F18r4: xed_iform_enum_t = 1746;
pub const XED_IFORM_NOP_GPRv_0F18r5: xed_iform_enum_t = 1747;
pub const XED_IFORM_NOP_GPRv_0F18r6: xed_iform_enum_t = 1748;
pub const XED_IFORM_NOP_GPRv_0F18r7: xed_iform_enum_t = 1749;
pub const XED_IFORM_NOP_GPRv_0F1F: xed_iform_enum_t = 1750;
pub const XED_IFORM_NOP_GPRv_GPRv_0F0D: xed_iform_enum_t = 1751;
pub const XED_IFORM_NOP_GPRv_GPRv_0F19: xed_iform_enum_t = 1752;
pub const XED_IFORM_NOP_GPRv_GPRv_0F1A: xed_iform_enum_t = 1753;
pub const XED_IFORM_NOP_GPRv_GPRv_0F1B: xed_iform_enum_t = 1754;
pub const XED_IFORM_NOP_GPRv_GPRv_0F1C: xed_iform_enum_t = 1755;
pub const XED_IFORM_NOP_GPRv_GPRv_0F1D: xed_iform_enum_t = 1756;
pub const XED_IFORM_NOP_GPRv_GPRv_0F1E: xed_iform_enum_t = 1757;
pub const XED_IFORM_NOP_GPRv_MEM_0F1B: xed_iform_enum_t = 1758;
pub const XED_IFORM_NOP_GPRv_MEMv_0F1A: xed_iform_enum_t = 1759;
pub const XED_IFORM_NOP_MEMv_0F18r4: xed_iform_enum_t = 1760;
pub const XED_IFORM_NOP_MEMv_0F18r5: xed_iform_enum_t = 1761;
pub const XED_IFORM_NOP_MEMv_0F1F: xed_iform_enum_t = 1762;
pub const XED_IFORM_NOP_MEMv_GPRv_0F19: xed_iform_enum_t = 1763;
pub const XED_IFORM_NOP_MEMv_GPRv_0F1C: xed_iform_enum_t = 1764;
pub const XED_IFORM_NOP_MEMv_GPRv_0F1D: xed_iform_enum_t = 1765;
pub const XED_IFORM_NOP_MEMv_GPRv_0F1E: xed_iform_enum_t = 1766;
pub const XED_IFORM_NOT_GPR8: xed_iform_enum_t = 1767;
pub const XED_IFORM_NOT_GPR8i8_APX: xed_iform_enum_t = 1768;
pub const XED_IFORM_NOT_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 1769;
pub const XED_IFORM_NOT_GPR8i8_MEMi8_APX: xed_iform_enum_t = 1770;
pub const XED_IFORM_NOT_GPRv: xed_iform_enum_t = 1771;
pub const XED_IFORM_NOT_GPRv_APX: xed_iform_enum_t = 1772;
pub const XED_IFORM_NOT_GPRv_GPRv_APX: xed_iform_enum_t = 1773;
pub const XED_IFORM_NOT_GPRv_MEMv_APX: xed_iform_enum_t = 1774;
pub const XED_IFORM_NOT_MEMb: xed_iform_enum_t = 1775;
pub const XED_IFORM_NOT_MEMi8_APX: xed_iform_enum_t = 1776;
pub const XED_IFORM_NOT_MEMv: xed_iform_enum_t = 1777;
pub const XED_IFORM_NOT_MEMv_APX: xed_iform_enum_t = 1778;
pub const XED_IFORM_NOT_LOCK_MEMb: xed_iform_enum_t = 1779;
pub const XED_IFORM_NOT_LOCK_MEMv: xed_iform_enum_t = 1780;
pub const XED_IFORM_OR_AL_IMMb: xed_iform_enum_t = 1781;
pub const XED_IFORM_OR_GPR8_GPR8_08: xed_iform_enum_t = 1782;
pub const XED_IFORM_OR_GPR8_GPR8_0A: xed_iform_enum_t = 1783;
pub const XED_IFORM_OR_GPR8_IMMb_80r1: xed_iform_enum_t = 1784;
pub const XED_IFORM_OR_GPR8_IMMb_82r1: xed_iform_enum_t = 1785;
pub const XED_IFORM_OR_GPR8_MEMb: xed_iform_enum_t = 1786;
pub const XED_IFORM_OR_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 1787;
pub const XED_IFORM_OR_GPR8i8_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 1788;
pub const XED_IFORM_OR_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 1789;
pub const XED_IFORM_OR_GPR8i8_GPR8i8_MEMi8_APX: xed_iform_enum_t = 1790;
pub const XED_IFORM_OR_GPR8i8_IMM8_APX: xed_iform_enum_t = 1791;
pub const XED_IFORM_OR_GPR8i8_MEMi8_APX: xed_iform_enum_t = 1792;
pub const XED_IFORM_OR_GPR8i8_MEMi8_GPR8i8_APX: xed_iform_enum_t = 1793;
pub const XED_IFORM_OR_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 1794;
pub const XED_IFORM_OR_GPRv_GPRv_09: xed_iform_enum_t = 1795;
pub const XED_IFORM_OR_GPRv_GPRv_0B: xed_iform_enum_t = 1796;
pub const XED_IFORM_OR_GPRv_GPRv_APX: xed_iform_enum_t = 1797;
pub const XED_IFORM_OR_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 1798;
pub const XED_IFORM_OR_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 1799;
pub const XED_IFORM_OR_GPRv_GPRv_IMMz_APX: xed_iform_enum_t = 1800;
pub const XED_IFORM_OR_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 1801;
pub const XED_IFORM_OR_GPRv_IMM8_APX: xed_iform_enum_t = 1802;
pub const XED_IFORM_OR_GPRv_IMMb: xed_iform_enum_t = 1803;
pub const XED_IFORM_OR_GPRv_IMMz: xed_iform_enum_t = 1804;
pub const XED_IFORM_OR_GPRv_IMMz_APX: xed_iform_enum_t = 1805;
pub const XED_IFORM_OR_GPRv_MEMv: xed_iform_enum_t = 1806;
pub const XED_IFORM_OR_GPRv_MEMv_APX: xed_iform_enum_t = 1807;
pub const XED_IFORM_OR_GPRv_MEMv_GPRv_APX: xed_iform_enum_t = 1808;
pub const XED_IFORM_OR_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 1809;
pub const XED_IFORM_OR_GPRv_MEMv_IMMz_APX: xed_iform_enum_t = 1810;
pub const XED_IFORM_OR_MEMb_GPR8: xed_iform_enum_t = 1811;
pub const XED_IFORM_OR_MEMb_IMMb_80r1: xed_iform_enum_t = 1812;
pub const XED_IFORM_OR_MEMb_IMMb_82r1: xed_iform_enum_t = 1813;
pub const XED_IFORM_OR_MEMi8_GPR8i8_APX: xed_iform_enum_t = 1814;
pub const XED_IFORM_OR_MEMi8_IMM8_APX: xed_iform_enum_t = 1815;
pub const XED_IFORM_OR_MEMv_GPRv: xed_iform_enum_t = 1816;
pub const XED_IFORM_OR_MEMv_GPRv_APX: xed_iform_enum_t = 1817;
pub const XED_IFORM_OR_MEMv_IMM8_APX: xed_iform_enum_t = 1818;
pub const XED_IFORM_OR_MEMv_IMMb: xed_iform_enum_t = 1819;
pub const XED_IFORM_OR_MEMv_IMMz: xed_iform_enum_t = 1820;
pub const XED_IFORM_OR_MEMv_IMMz_APX: xed_iform_enum_t = 1821;
pub const XED_IFORM_OR_OrAX_IMMz: xed_iform_enum_t = 1822;
pub const XED_IFORM_ORPD_XMMxuq_MEMxuq: xed_iform_enum_t = 1823;
pub const XED_IFORM_ORPD_XMMxuq_XMMxuq: xed_iform_enum_t = 1824;
pub const XED_IFORM_ORPS_XMMxud_MEMxud: xed_iform_enum_t = 1825;
pub const XED_IFORM_ORPS_XMMxud_XMMxud: xed_iform_enum_t = 1826;
pub const XED_IFORM_OR_LOCK_MEMb_GPR8: xed_iform_enum_t = 1827;
pub const XED_IFORM_OR_LOCK_MEMb_IMMb_80r1: xed_iform_enum_t = 1828;
pub const XED_IFORM_OR_LOCK_MEMb_IMMb_82r1: xed_iform_enum_t = 1829;
pub const XED_IFORM_OR_LOCK_MEMv_GPRv: xed_iform_enum_t = 1830;
pub const XED_IFORM_OR_LOCK_MEMv_IMMb: xed_iform_enum_t = 1831;
pub const XED_IFORM_OR_LOCK_MEMv_IMMz: xed_iform_enum_t = 1832;
pub const XED_IFORM_OUT_DX_AL: xed_iform_enum_t = 1833;
pub const XED_IFORM_OUT_DX_OeAX: xed_iform_enum_t = 1834;
pub const XED_IFORM_OUT_IMMb_AL: xed_iform_enum_t = 1835;
pub const XED_IFORM_OUT_IMMb_OeAX: xed_iform_enum_t = 1836;
pub const XED_IFORM_OUTSB: xed_iform_enum_t = 1837;
pub const XED_IFORM_OUTSD: xed_iform_enum_t = 1838;
pub const XED_IFORM_OUTSW: xed_iform_enum_t = 1839;
pub const XED_IFORM_PABSB_MMXq_MEMq: xed_iform_enum_t = 1840;
pub const XED_IFORM_PABSB_MMXq_MMXq: xed_iform_enum_t = 1841;
pub const XED_IFORM_PABSB_XMMdq_MEMdq: xed_iform_enum_t = 1842;
pub const XED_IFORM_PABSB_XMMdq_XMMdq: xed_iform_enum_t = 1843;
pub const XED_IFORM_PABSD_MMXq_MEMq: xed_iform_enum_t = 1844;
pub const XED_IFORM_PABSD_MMXq_MMXq: xed_iform_enum_t = 1845;
pub const XED_IFORM_PABSD_XMMdq_MEMdq: xed_iform_enum_t = 1846;
pub const XED_IFORM_PABSD_XMMdq_XMMdq: xed_iform_enum_t = 1847;
pub const XED_IFORM_PABSW_MMXq_MEMq: xed_iform_enum_t = 1848;
pub const XED_IFORM_PABSW_MMXq_MMXq: xed_iform_enum_t = 1849;
pub const XED_IFORM_PABSW_XMMdq_MEMdq: xed_iform_enum_t = 1850;
pub const XED_IFORM_PABSW_XMMdq_XMMdq: xed_iform_enum_t = 1851;
pub const XED_IFORM_PACKSSDW_MMXq_MEMq: xed_iform_enum_t = 1852;
pub const XED_IFORM_PACKSSDW_MMXq_MMXq: xed_iform_enum_t = 1853;
pub const XED_IFORM_PACKSSDW_XMMdq_MEMdq: xed_iform_enum_t = 1854;
pub const XED_IFORM_PACKSSDW_XMMdq_XMMdq: xed_iform_enum_t = 1855;
pub const XED_IFORM_PACKSSWB_MMXq_MEMq: xed_iform_enum_t = 1856;
pub const XED_IFORM_PACKSSWB_MMXq_MMXq: xed_iform_enum_t = 1857;
pub const XED_IFORM_PACKSSWB_XMMdq_MEMdq: xed_iform_enum_t = 1858;
pub const XED_IFORM_PACKSSWB_XMMdq_XMMdq: xed_iform_enum_t = 1859;
pub const XED_IFORM_PACKUSDW_XMMdq_MEMdq: xed_iform_enum_t = 1860;
pub const XED_IFORM_PACKUSDW_XMMdq_XMMdq: xed_iform_enum_t = 1861;
pub const XED_IFORM_PACKUSWB_MMXq_MEMq: xed_iform_enum_t = 1862;
pub const XED_IFORM_PACKUSWB_MMXq_MMXq: xed_iform_enum_t = 1863;
pub const XED_IFORM_PACKUSWB_XMMdq_MEMdq: xed_iform_enum_t = 1864;
pub const XED_IFORM_PACKUSWB_XMMdq_XMMdq: xed_iform_enum_t = 1865;
pub const XED_IFORM_PADDB_MMXq_MEMq: xed_iform_enum_t = 1866;
pub const XED_IFORM_PADDB_MMXq_MMXq: xed_iform_enum_t = 1867;
pub const XED_IFORM_PADDB_XMMdq_MEMdq: xed_iform_enum_t = 1868;
pub const XED_IFORM_PADDB_XMMdq_XMMdq: xed_iform_enum_t = 1869;
pub const XED_IFORM_PADDD_MMXq_MEMq: xed_iform_enum_t = 1870;
pub const XED_IFORM_PADDD_MMXq_MMXq: xed_iform_enum_t = 1871;
pub const XED_IFORM_PADDD_XMMdq_MEMdq: xed_iform_enum_t = 1872;
pub const XED_IFORM_PADDD_XMMdq_XMMdq: xed_iform_enum_t = 1873;
pub const XED_IFORM_PADDQ_MMXq_MEMq: xed_iform_enum_t = 1874;
pub const XED_IFORM_PADDQ_MMXq_MMXq: xed_iform_enum_t = 1875;
pub const XED_IFORM_PADDQ_XMMdq_MEMdq: xed_iform_enum_t = 1876;
pub const XED_IFORM_PADDQ_XMMdq_XMMdq: xed_iform_enum_t = 1877;
pub const XED_IFORM_PADDSB_MMXq_MEMq: xed_iform_enum_t = 1878;
pub const XED_IFORM_PADDSB_MMXq_MMXq: xed_iform_enum_t = 1879;
pub const XED_IFORM_PADDSB_XMMdq_MEMdq: xed_iform_enum_t = 1880;
pub const XED_IFORM_PADDSB_XMMdq_XMMdq: xed_iform_enum_t = 1881;
pub const XED_IFORM_PADDSW_MMXq_MEMq: xed_iform_enum_t = 1882;
pub const XED_IFORM_PADDSW_MMXq_MMXq: xed_iform_enum_t = 1883;
pub const XED_IFORM_PADDSW_XMMdq_MEMdq: xed_iform_enum_t = 1884;
pub const XED_IFORM_PADDSW_XMMdq_XMMdq: xed_iform_enum_t = 1885;
pub const XED_IFORM_PADDUSB_MMXq_MEMq: xed_iform_enum_t = 1886;
pub const XED_IFORM_PADDUSB_MMXq_MMXq: xed_iform_enum_t = 1887;
pub const XED_IFORM_PADDUSB_XMMdq_MEMdq: xed_iform_enum_t = 1888;
pub const XED_IFORM_PADDUSB_XMMdq_XMMdq: xed_iform_enum_t = 1889;
pub const XED_IFORM_PADDUSW_MMXq_MEMq: xed_iform_enum_t = 1890;
pub const XED_IFORM_PADDUSW_MMXq_MMXq: xed_iform_enum_t = 1891;
pub const XED_IFORM_PADDUSW_XMMdq_MEMdq: xed_iform_enum_t = 1892;
pub const XED_IFORM_PADDUSW_XMMdq_XMMdq: xed_iform_enum_t = 1893;
pub const XED_IFORM_PADDW_MMXq_MEMq: xed_iform_enum_t = 1894;
pub const XED_IFORM_PADDW_MMXq_MMXq: xed_iform_enum_t = 1895;
pub const XED_IFORM_PADDW_XMMdq_MEMdq: xed_iform_enum_t = 1896;
pub const XED_IFORM_PADDW_XMMdq_XMMdq: xed_iform_enum_t = 1897;
pub const XED_IFORM_PALIGNR_MMXq_MEMq_IMMb: xed_iform_enum_t = 1898;
pub const XED_IFORM_PALIGNR_MMXq_MMXq_IMMb: xed_iform_enum_t = 1899;
pub const XED_IFORM_PALIGNR_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1900;
pub const XED_IFORM_PALIGNR_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1901;
pub const XED_IFORM_PAND_MMXq_MEMq: xed_iform_enum_t = 1902;
pub const XED_IFORM_PAND_MMXq_MMXq: xed_iform_enum_t = 1903;
pub const XED_IFORM_PAND_XMMdq_MEMdq: xed_iform_enum_t = 1904;
pub const XED_IFORM_PAND_XMMdq_XMMdq: xed_iform_enum_t = 1905;
pub const XED_IFORM_PANDN_MMXq_MEMq: xed_iform_enum_t = 1906;
pub const XED_IFORM_PANDN_MMXq_MMXq: xed_iform_enum_t = 1907;
pub const XED_IFORM_PANDN_XMMdq_MEMdq: xed_iform_enum_t = 1908;
pub const XED_IFORM_PANDN_XMMdq_XMMdq: xed_iform_enum_t = 1909;
pub const XED_IFORM_PAUSE: xed_iform_enum_t = 1910;
pub const XED_IFORM_PAVGB_MMXq_MEMq: xed_iform_enum_t = 1911;
pub const XED_IFORM_PAVGB_MMXq_MMXq: xed_iform_enum_t = 1912;
pub const XED_IFORM_PAVGB_XMMdq_MEMdq: xed_iform_enum_t = 1913;
pub const XED_IFORM_PAVGB_XMMdq_XMMdq: xed_iform_enum_t = 1914;
pub const XED_IFORM_PAVGUSB_MMXq_MEMq: xed_iform_enum_t = 1915;
pub const XED_IFORM_PAVGUSB_MMXq_MMXq: xed_iform_enum_t = 1916;
pub const XED_IFORM_PAVGW_MMXq_MEMq: xed_iform_enum_t = 1917;
pub const XED_IFORM_PAVGW_MMXq_MMXq: xed_iform_enum_t = 1918;
pub const XED_IFORM_PAVGW_XMMdq_MEMdq: xed_iform_enum_t = 1919;
pub const XED_IFORM_PAVGW_XMMdq_XMMdq: xed_iform_enum_t = 1920;
pub const XED_IFORM_PBLENDVB_XMMdq_MEMdq: xed_iform_enum_t = 1921;
pub const XED_IFORM_PBLENDVB_XMMdq_XMMdq: xed_iform_enum_t = 1922;
pub const XED_IFORM_PBLENDW_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1923;
pub const XED_IFORM_PBLENDW_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1924;
pub const XED_IFORM_PBNDKB: xed_iform_enum_t = 1925;
pub const XED_IFORM_PCLMULQDQ_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1926;
pub const XED_IFORM_PCLMULQDQ_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1927;
pub const XED_IFORM_PCMPEQB_MMXq_MEMq: xed_iform_enum_t = 1928;
pub const XED_IFORM_PCMPEQB_MMXq_MMXq: xed_iform_enum_t = 1929;
pub const XED_IFORM_PCMPEQB_XMMdq_MEMdq: xed_iform_enum_t = 1930;
pub const XED_IFORM_PCMPEQB_XMMdq_XMMdq: xed_iform_enum_t = 1931;
pub const XED_IFORM_PCMPEQD_MMXq_MEMq: xed_iform_enum_t = 1932;
pub const XED_IFORM_PCMPEQD_MMXq_MMXq: xed_iform_enum_t = 1933;
pub const XED_IFORM_PCMPEQD_XMMdq_MEMdq: xed_iform_enum_t = 1934;
pub const XED_IFORM_PCMPEQD_XMMdq_XMMdq: xed_iform_enum_t = 1935;
pub const XED_IFORM_PCMPEQQ_XMMdq_MEMdq: xed_iform_enum_t = 1936;
pub const XED_IFORM_PCMPEQQ_XMMdq_XMMdq: xed_iform_enum_t = 1937;
pub const XED_IFORM_PCMPEQW_MMXq_MEMq: xed_iform_enum_t = 1938;
pub const XED_IFORM_PCMPEQW_MMXq_MMXq: xed_iform_enum_t = 1939;
pub const XED_IFORM_PCMPEQW_XMMdq_MEMdq: xed_iform_enum_t = 1940;
pub const XED_IFORM_PCMPEQW_XMMdq_XMMdq: xed_iform_enum_t = 1941;
pub const XED_IFORM_PCMPESTRI_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1942;
pub const XED_IFORM_PCMPESTRI_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1943;
pub const XED_IFORM_PCMPESTRI64_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1944;
pub const XED_IFORM_PCMPESTRI64_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1945;
pub const XED_IFORM_PCMPESTRM_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1946;
pub const XED_IFORM_PCMPESTRM_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1947;
pub const XED_IFORM_PCMPESTRM64_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1948;
pub const XED_IFORM_PCMPESTRM64_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1949;
pub const XED_IFORM_PCMPGTB_MMXq_MEMq: xed_iform_enum_t = 1950;
pub const XED_IFORM_PCMPGTB_MMXq_MMXq: xed_iform_enum_t = 1951;
pub const XED_IFORM_PCMPGTB_XMMdq_MEMdq: xed_iform_enum_t = 1952;
pub const XED_IFORM_PCMPGTB_XMMdq_XMMdq: xed_iform_enum_t = 1953;
pub const XED_IFORM_PCMPGTD_MMXq_MEMq: xed_iform_enum_t = 1954;
pub const XED_IFORM_PCMPGTD_MMXq_MMXq: xed_iform_enum_t = 1955;
pub const XED_IFORM_PCMPGTD_XMMdq_MEMdq: xed_iform_enum_t = 1956;
pub const XED_IFORM_PCMPGTD_XMMdq_XMMdq: xed_iform_enum_t = 1957;
pub const XED_IFORM_PCMPGTQ_XMMdq_MEMdq: xed_iform_enum_t = 1958;
pub const XED_IFORM_PCMPGTQ_XMMdq_XMMdq: xed_iform_enum_t = 1959;
pub const XED_IFORM_PCMPGTW_MMXq_MEMq: xed_iform_enum_t = 1960;
pub const XED_IFORM_PCMPGTW_MMXq_MMXq: xed_iform_enum_t = 1961;
pub const XED_IFORM_PCMPGTW_XMMdq_MEMdq: xed_iform_enum_t = 1962;
pub const XED_IFORM_PCMPGTW_XMMdq_XMMdq: xed_iform_enum_t = 1963;
pub const XED_IFORM_PCMPISTRI_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1964;
pub const XED_IFORM_PCMPISTRI_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1965;
pub const XED_IFORM_PCMPISTRI64_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1966;
pub const XED_IFORM_PCMPISTRI64_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1967;
pub const XED_IFORM_PCMPISTRM_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 1968;
pub const XED_IFORM_PCMPISTRM_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 1969;
pub const XED_IFORM_PCONFIG: xed_iform_enum_t = 1970;
pub const XED_IFORM_PCONFIG64: xed_iform_enum_t = 1971;
pub const XED_IFORM_PDEP_GPR32d_GPR32d_GPR32d: xed_iform_enum_t = 1972;
pub const XED_IFORM_PDEP_GPR32d_GPR32d_MEMd: xed_iform_enum_t = 1973;
pub const XED_IFORM_PDEP_GPR32i32_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 1974;
pub const XED_IFORM_PDEP_GPR32i32_GPR32i32_MEMi32_APX: xed_iform_enum_t = 1975;
pub const XED_IFORM_PDEP_GPR64i64_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 1976;
pub const XED_IFORM_PDEP_GPR64i64_GPR64i64_MEMi64_APX: xed_iform_enum_t = 1977;
pub const XED_IFORM_PDEP_GPR64q_GPR64q_GPR64q: xed_iform_enum_t = 1978;
pub const XED_IFORM_PDEP_GPR64q_GPR64q_MEMq: xed_iform_enum_t = 1979;
pub const XED_IFORM_PEXT_GPR32d_GPR32d_GPR32d: xed_iform_enum_t = 1980;
pub const XED_IFORM_PEXT_GPR32d_GPR32d_MEMd: xed_iform_enum_t = 1981;
pub const XED_IFORM_PEXT_GPR32i32_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 1982;
pub const XED_IFORM_PEXT_GPR32i32_GPR32i32_MEMi32_APX: xed_iform_enum_t = 1983;
pub const XED_IFORM_PEXT_GPR64i64_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 1984;
pub const XED_IFORM_PEXT_GPR64i64_GPR64i64_MEMi64_APX: xed_iform_enum_t = 1985;
pub const XED_IFORM_PEXT_GPR64q_GPR64q_GPR64q: xed_iform_enum_t = 1986;
pub const XED_IFORM_PEXT_GPR64q_GPR64q_MEMq: xed_iform_enum_t = 1987;
pub const XED_IFORM_PEXTRB_GPR32d_XMMdq_IMMb: xed_iform_enum_t = 1988;
pub const XED_IFORM_PEXTRB_MEMb_XMMdq_IMMb: xed_iform_enum_t = 1989;
pub const XED_IFORM_PEXTRD_GPR32d_XMMdq_IMMb: xed_iform_enum_t = 1990;
pub const XED_IFORM_PEXTRD_MEMd_XMMdq_IMMb: xed_iform_enum_t = 1991;
pub const XED_IFORM_PEXTRQ_GPR64q_XMMdq_IMMb: xed_iform_enum_t = 1992;
pub const XED_IFORM_PEXTRQ_MEMq_XMMdq_IMMb: xed_iform_enum_t = 1993;
pub const XED_IFORM_PEXTRW_GPR32_MMXq_IMMb: xed_iform_enum_t = 1994;
pub const XED_IFORM_PEXTRW_GPR32_XMMdq_IMMb: xed_iform_enum_t = 1995;
pub const XED_IFORM_PEXTRW_SSE4_GPR32_XMMdq_IMMb: xed_iform_enum_t = 1996;
pub const XED_IFORM_PEXTRW_SSE4_MEMw_XMMdq_IMMb: xed_iform_enum_t = 1997;
pub const XED_IFORM_PF2ID_MMXq_MEMq: xed_iform_enum_t = 1998;
pub const XED_IFORM_PF2ID_MMXq_MMXq: xed_iform_enum_t = 1999;
pub const XED_IFORM_PF2IW_MMXq_MEMq: xed_iform_enum_t = 2000;
pub const XED_IFORM_PF2IW_MMXq_MMXq: xed_iform_enum_t = 2001;
pub const XED_IFORM_PFACC_MMXq_MEMq: xed_iform_enum_t = 2002;
pub const XED_IFORM_PFACC_MMXq_MMXq: xed_iform_enum_t = 2003;
pub const XED_IFORM_PFADD_MMXq_MEMq: xed_iform_enum_t = 2004;
pub const XED_IFORM_PFADD_MMXq_MMXq: xed_iform_enum_t = 2005;
pub const XED_IFORM_PFCMPEQ_MMXq_MEMq: xed_iform_enum_t = 2006;
pub const XED_IFORM_PFCMPEQ_MMXq_MMXq: xed_iform_enum_t = 2007;
pub const XED_IFORM_PFCMPGE_MMXq_MEMq: xed_iform_enum_t = 2008;
pub const XED_IFORM_PFCMPGE_MMXq_MMXq: xed_iform_enum_t = 2009;
pub const XED_IFORM_PFCMPGT_MMXq_MEMq: xed_iform_enum_t = 2010;
pub const XED_IFORM_PFCMPGT_MMXq_MMXq: xed_iform_enum_t = 2011;
pub const XED_IFORM_PFMAX_MMXq_MEMq: xed_iform_enum_t = 2012;
pub const XED_IFORM_PFMAX_MMXq_MMXq: xed_iform_enum_t = 2013;
pub const XED_IFORM_PFMIN_MMXq_MEMq: xed_iform_enum_t = 2014;
pub const XED_IFORM_PFMIN_MMXq_MMXq: xed_iform_enum_t = 2015;
pub const XED_IFORM_PFMUL_MMXq_MEMq: xed_iform_enum_t = 2016;
pub const XED_IFORM_PFMUL_MMXq_MMXq: xed_iform_enum_t = 2017;
pub const XED_IFORM_PFNACC_MMXq_MEMq: xed_iform_enum_t = 2018;
pub const XED_IFORM_PFNACC_MMXq_MMXq: xed_iform_enum_t = 2019;
pub const XED_IFORM_PFPNACC_MMXq_MEMq: xed_iform_enum_t = 2020;
pub const XED_IFORM_PFPNACC_MMXq_MMXq: xed_iform_enum_t = 2021;
pub const XED_IFORM_PFRCP_MMXq_MEMq: xed_iform_enum_t = 2022;
pub const XED_IFORM_PFRCP_MMXq_MMXq: xed_iform_enum_t = 2023;
pub const XED_IFORM_PFRCPIT1_MMXq_MEMq: xed_iform_enum_t = 2024;
pub const XED_IFORM_PFRCPIT1_MMXq_MMXq: xed_iform_enum_t = 2025;
pub const XED_IFORM_PFRCPIT2_MMXq_MEMq: xed_iform_enum_t = 2026;
pub const XED_IFORM_PFRCPIT2_MMXq_MMXq: xed_iform_enum_t = 2027;
pub const XED_IFORM_PFRSQIT1_MMXq_MEMq: xed_iform_enum_t = 2028;
pub const XED_IFORM_PFRSQIT1_MMXq_MMXq: xed_iform_enum_t = 2029;
pub const XED_IFORM_PFRSQRT_MMXq_MEMq: xed_iform_enum_t = 2030;
pub const XED_IFORM_PFRSQRT_MMXq_MMXq: xed_iform_enum_t = 2031;
pub const XED_IFORM_PFSUB_MMXq_MEMq: xed_iform_enum_t = 2032;
pub const XED_IFORM_PFSUB_MMXq_MMXq: xed_iform_enum_t = 2033;
pub const XED_IFORM_PFSUBR_MMXq_MEMq: xed_iform_enum_t = 2034;
pub const XED_IFORM_PFSUBR_MMXq_MMXq: xed_iform_enum_t = 2035;
pub const XED_IFORM_PHADDD_MMXq_MEMq: xed_iform_enum_t = 2036;
pub const XED_IFORM_PHADDD_MMXq_MMXq: xed_iform_enum_t = 2037;
pub const XED_IFORM_PHADDD_XMMdq_MEMdq: xed_iform_enum_t = 2038;
pub const XED_IFORM_PHADDD_XMMdq_XMMdq: xed_iform_enum_t = 2039;
pub const XED_IFORM_PHADDSW_MMXq_MEMq: xed_iform_enum_t = 2040;
pub const XED_IFORM_PHADDSW_MMXq_MMXq: xed_iform_enum_t = 2041;
pub const XED_IFORM_PHADDSW_XMMdq_MEMdq: xed_iform_enum_t = 2042;
pub const XED_IFORM_PHADDSW_XMMdq_XMMdq: xed_iform_enum_t = 2043;
pub const XED_IFORM_PHADDW_MMXq_MEMq: xed_iform_enum_t = 2044;
pub const XED_IFORM_PHADDW_MMXq_MMXq: xed_iform_enum_t = 2045;
pub const XED_IFORM_PHADDW_XMMdq_MEMdq: xed_iform_enum_t = 2046;
pub const XED_IFORM_PHADDW_XMMdq_XMMdq: xed_iform_enum_t = 2047;
pub const XED_IFORM_PHMINPOSUW_XMMdq_MEMdq: xed_iform_enum_t = 2048;
pub const XED_IFORM_PHMINPOSUW_XMMdq_XMMdq: xed_iform_enum_t = 2049;
pub const XED_IFORM_PHSUBD_MMXq_MEMq: xed_iform_enum_t = 2050;
pub const XED_IFORM_PHSUBD_MMXq_MMXq: xed_iform_enum_t = 2051;
pub const XED_IFORM_PHSUBD_XMMdq_MEMdq: xed_iform_enum_t = 2052;
pub const XED_IFORM_PHSUBD_XMMdq_XMMdq: xed_iform_enum_t = 2053;
pub const XED_IFORM_PHSUBSW_MMXq_MEMq: xed_iform_enum_t = 2054;
pub const XED_IFORM_PHSUBSW_MMXq_MMXq: xed_iform_enum_t = 2055;
pub const XED_IFORM_PHSUBSW_XMMdq_MEMdq: xed_iform_enum_t = 2056;
pub const XED_IFORM_PHSUBSW_XMMdq_XMMdq: xed_iform_enum_t = 2057;
pub const XED_IFORM_PHSUBW_MMXq_MEMq: xed_iform_enum_t = 2058;
pub const XED_IFORM_PHSUBW_MMXq_MMXq: xed_iform_enum_t = 2059;
pub const XED_IFORM_PHSUBW_XMMdq_MEMdq: xed_iform_enum_t = 2060;
pub const XED_IFORM_PHSUBW_XMMdq_XMMdq: xed_iform_enum_t = 2061;
pub const XED_IFORM_PI2FD_MMXq_MEMq: xed_iform_enum_t = 2062;
pub const XED_IFORM_PI2FD_MMXq_MMXq: xed_iform_enum_t = 2063;
pub const XED_IFORM_PI2FW_MMXq_MEMq: xed_iform_enum_t = 2064;
pub const XED_IFORM_PI2FW_MMXq_MMXq: xed_iform_enum_t = 2065;
pub const XED_IFORM_PINSRB_XMMdq_GPR32d_IMMb: xed_iform_enum_t = 2066;
pub const XED_IFORM_PINSRB_XMMdq_MEMb_IMMb: xed_iform_enum_t = 2067;
pub const XED_IFORM_PINSRD_XMMdq_GPR32d_IMMb: xed_iform_enum_t = 2068;
pub const XED_IFORM_PINSRD_XMMdq_MEMd_IMMb: xed_iform_enum_t = 2069;
pub const XED_IFORM_PINSRQ_XMMdq_GPR64q_IMMb: xed_iform_enum_t = 2070;
pub const XED_IFORM_PINSRQ_XMMdq_MEMq_IMMb: xed_iform_enum_t = 2071;
pub const XED_IFORM_PINSRW_MMXq_GPR32_IMMb: xed_iform_enum_t = 2072;
pub const XED_IFORM_PINSRW_MMXq_MEMw_IMMb: xed_iform_enum_t = 2073;
pub const XED_IFORM_PINSRW_XMMdq_GPR32_IMMb: xed_iform_enum_t = 2074;
pub const XED_IFORM_PINSRW_XMMdq_MEMw_IMMb: xed_iform_enum_t = 2075;
pub const XED_IFORM_PMADDUBSW_MMXq_MEMq: xed_iform_enum_t = 2076;
pub const XED_IFORM_PMADDUBSW_MMXq_MMXq: xed_iform_enum_t = 2077;
pub const XED_IFORM_PMADDUBSW_XMMdq_MEMdq: xed_iform_enum_t = 2078;
pub const XED_IFORM_PMADDUBSW_XMMdq_XMMdq: xed_iform_enum_t = 2079;
pub const XED_IFORM_PMADDWD_MMXq_MEMq: xed_iform_enum_t = 2080;
pub const XED_IFORM_PMADDWD_MMXq_MMXq: xed_iform_enum_t = 2081;
pub const XED_IFORM_PMADDWD_XMMdq_MEMdq: xed_iform_enum_t = 2082;
pub const XED_IFORM_PMADDWD_XMMdq_XMMdq: xed_iform_enum_t = 2083;
pub const XED_IFORM_PMAXSB_XMMdq_MEMdq: xed_iform_enum_t = 2084;
pub const XED_IFORM_PMAXSB_XMMdq_XMMdq: xed_iform_enum_t = 2085;
pub const XED_IFORM_PMAXSD_XMMdq_MEMdq: xed_iform_enum_t = 2086;
pub const XED_IFORM_PMAXSD_XMMdq_XMMdq: xed_iform_enum_t = 2087;
pub const XED_IFORM_PMAXSW_MMXq_MEMq: xed_iform_enum_t = 2088;
pub const XED_IFORM_PMAXSW_MMXq_MMXq: xed_iform_enum_t = 2089;
pub const XED_IFORM_PMAXSW_XMMdq_MEMdq: xed_iform_enum_t = 2090;
pub const XED_IFORM_PMAXSW_XMMdq_XMMdq: xed_iform_enum_t = 2091;
pub const XED_IFORM_PMAXUB_MMXq_MEMq: xed_iform_enum_t = 2092;
pub const XED_IFORM_PMAXUB_MMXq_MMXq: xed_iform_enum_t = 2093;
pub const XED_IFORM_PMAXUB_XMMdq_MEMdq: xed_iform_enum_t = 2094;
pub const XED_IFORM_PMAXUB_XMMdq_XMMdq: xed_iform_enum_t = 2095;
pub const XED_IFORM_PMAXUD_XMMdq_MEMdq: xed_iform_enum_t = 2096;
pub const XED_IFORM_PMAXUD_XMMdq_XMMdq: xed_iform_enum_t = 2097;
pub const XED_IFORM_PMAXUW_XMMdq_MEMdq: xed_iform_enum_t = 2098;
pub const XED_IFORM_PMAXUW_XMMdq_XMMdq: xed_iform_enum_t = 2099;
pub const XED_IFORM_PMINSB_XMMdq_MEMdq: xed_iform_enum_t = 2100;
pub const XED_IFORM_PMINSB_XMMdq_XMMdq: xed_iform_enum_t = 2101;
pub const XED_IFORM_PMINSD_XMMdq_MEMdq: xed_iform_enum_t = 2102;
pub const XED_IFORM_PMINSD_XMMdq_XMMdq: xed_iform_enum_t = 2103;
pub const XED_IFORM_PMINSW_MMXq_MEMq: xed_iform_enum_t = 2104;
pub const XED_IFORM_PMINSW_MMXq_MMXq: xed_iform_enum_t = 2105;
pub const XED_IFORM_PMINSW_XMMdq_MEMdq: xed_iform_enum_t = 2106;
pub const XED_IFORM_PMINSW_XMMdq_XMMdq: xed_iform_enum_t = 2107;
pub const XED_IFORM_PMINUB_MMXq_MEMq: xed_iform_enum_t = 2108;
pub const XED_IFORM_PMINUB_MMXq_MMXq: xed_iform_enum_t = 2109;
pub const XED_IFORM_PMINUB_XMMdq_MEMdq: xed_iform_enum_t = 2110;
pub const XED_IFORM_PMINUB_XMMdq_XMMdq: xed_iform_enum_t = 2111;
pub const XED_IFORM_PMINUD_XMMdq_MEMdq: xed_iform_enum_t = 2112;
pub const XED_IFORM_PMINUD_XMMdq_XMMdq: xed_iform_enum_t = 2113;
pub const XED_IFORM_PMINUW_XMMdq_MEMdq: xed_iform_enum_t = 2114;
pub const XED_IFORM_PMINUW_XMMdq_XMMdq: xed_iform_enum_t = 2115;
pub const XED_IFORM_PMOVMSKB_GPR32_MMXq: xed_iform_enum_t = 2116;
pub const XED_IFORM_PMOVMSKB_GPR32_XMMdq: xed_iform_enum_t = 2117;
pub const XED_IFORM_PMOVSXBD_XMMdq_MEMd: xed_iform_enum_t = 2118;
pub const XED_IFORM_PMOVSXBD_XMMdq_XMMd: xed_iform_enum_t = 2119;
pub const XED_IFORM_PMOVSXBQ_XMMdq_MEMw: xed_iform_enum_t = 2120;
pub const XED_IFORM_PMOVSXBQ_XMMdq_XMMw: xed_iform_enum_t = 2121;
pub const XED_IFORM_PMOVSXBW_XMMdq_MEMq: xed_iform_enum_t = 2122;
pub const XED_IFORM_PMOVSXBW_XMMdq_XMMq: xed_iform_enum_t = 2123;
pub const XED_IFORM_PMOVSXDQ_XMMdq_MEMq: xed_iform_enum_t = 2124;
pub const XED_IFORM_PMOVSXDQ_XMMdq_XMMq: xed_iform_enum_t = 2125;
pub const XED_IFORM_PMOVSXWD_XMMdq_MEMq: xed_iform_enum_t = 2126;
pub const XED_IFORM_PMOVSXWD_XMMdq_XMMq: xed_iform_enum_t = 2127;
pub const XED_IFORM_PMOVSXWQ_XMMdq_MEMd: xed_iform_enum_t = 2128;
pub const XED_IFORM_PMOVSXWQ_XMMdq_XMMd: xed_iform_enum_t = 2129;
pub const XED_IFORM_PMOVZXBD_XMMdq_MEMd: xed_iform_enum_t = 2130;
pub const XED_IFORM_PMOVZXBD_XMMdq_XMMd: xed_iform_enum_t = 2131;
pub const XED_IFORM_PMOVZXBQ_XMMdq_MEMw: xed_iform_enum_t = 2132;
pub const XED_IFORM_PMOVZXBQ_XMMdq_XMMw: xed_iform_enum_t = 2133;
pub const XED_IFORM_PMOVZXBW_XMMdq_MEMq: xed_iform_enum_t = 2134;
pub const XED_IFORM_PMOVZXBW_XMMdq_XMMq: xed_iform_enum_t = 2135;
pub const XED_IFORM_PMOVZXDQ_XMMdq_MEMq: xed_iform_enum_t = 2136;
pub const XED_IFORM_PMOVZXDQ_XMMdq_XMMq: xed_iform_enum_t = 2137;
pub const XED_IFORM_PMOVZXWD_XMMdq_MEMq: xed_iform_enum_t = 2138;
pub const XED_IFORM_PMOVZXWD_XMMdq_XMMq: xed_iform_enum_t = 2139;
pub const XED_IFORM_PMOVZXWQ_XMMdq_MEMd: xed_iform_enum_t = 2140;
pub const XED_IFORM_PMOVZXWQ_XMMdq_XMMd: xed_iform_enum_t = 2141;
pub const XED_IFORM_PMULDQ_XMMdq_MEMdq: xed_iform_enum_t = 2142;
pub const XED_IFORM_PMULDQ_XMMdq_XMMdq: xed_iform_enum_t = 2143;
pub const XED_IFORM_PMULHRSW_MMXq_MEMq: xed_iform_enum_t = 2144;
pub const XED_IFORM_PMULHRSW_MMXq_MMXq: xed_iform_enum_t = 2145;
pub const XED_IFORM_PMULHRSW_XMMdq_MEMdq: xed_iform_enum_t = 2146;
pub const XED_IFORM_PMULHRSW_XMMdq_XMMdq: xed_iform_enum_t = 2147;
pub const XED_IFORM_PMULHRW_MMXq_MEMq: xed_iform_enum_t = 2148;
pub const XED_IFORM_PMULHRW_MMXq_MMXq: xed_iform_enum_t = 2149;
pub const XED_IFORM_PMULHUW_MMXq_MEMq: xed_iform_enum_t = 2150;
pub const XED_IFORM_PMULHUW_MMXq_MMXq: xed_iform_enum_t = 2151;
pub const XED_IFORM_PMULHUW_XMMdq_MEMdq: xed_iform_enum_t = 2152;
pub const XED_IFORM_PMULHUW_XMMdq_XMMdq: xed_iform_enum_t = 2153;
pub const XED_IFORM_PMULHW_MMXq_MEMq: xed_iform_enum_t = 2154;
pub const XED_IFORM_PMULHW_MMXq_MMXq: xed_iform_enum_t = 2155;
pub const XED_IFORM_PMULHW_XMMdq_MEMdq: xed_iform_enum_t = 2156;
pub const XED_IFORM_PMULHW_XMMdq_XMMdq: xed_iform_enum_t = 2157;
pub const XED_IFORM_PMULLD_XMMdq_MEMdq: xed_iform_enum_t = 2158;
pub const XED_IFORM_PMULLD_XMMdq_XMMdq: xed_iform_enum_t = 2159;
pub const XED_IFORM_PMULLW_MMXq_MEMq: xed_iform_enum_t = 2160;
pub const XED_IFORM_PMULLW_MMXq_MMXq: xed_iform_enum_t = 2161;
pub const XED_IFORM_PMULLW_XMMdq_MEMdq: xed_iform_enum_t = 2162;
pub const XED_IFORM_PMULLW_XMMdq_XMMdq: xed_iform_enum_t = 2163;
pub const XED_IFORM_PMULUDQ_MMXq_MEMq: xed_iform_enum_t = 2164;
pub const XED_IFORM_PMULUDQ_MMXq_MMXq: xed_iform_enum_t = 2165;
pub const XED_IFORM_PMULUDQ_XMMdq_MEMdq: xed_iform_enum_t = 2166;
pub const XED_IFORM_PMULUDQ_XMMdq_XMMdq: xed_iform_enum_t = 2167;
pub const XED_IFORM_POP_DS: xed_iform_enum_t = 2168;
pub const XED_IFORM_POP_ES: xed_iform_enum_t = 2169;
pub const XED_IFORM_POP_FS: xed_iform_enum_t = 2170;
pub const XED_IFORM_POP_GPRv_58: xed_iform_enum_t = 2171;
pub const XED_IFORM_POP_GPRv_8F: xed_iform_enum_t = 2172;
pub const XED_IFORM_POP_GS: xed_iform_enum_t = 2173;
pub const XED_IFORM_POP_MEMv: xed_iform_enum_t = 2174;
pub const XED_IFORM_POP_SS: xed_iform_enum_t = 2175;
pub const XED_IFORM_POP2_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 2176;
pub const XED_IFORM_POP2P_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 2177;
pub const XED_IFORM_POPA: xed_iform_enum_t = 2178;
pub const XED_IFORM_POPAD: xed_iform_enum_t = 2179;
pub const XED_IFORM_POPCNT_GPRv_GPRv: xed_iform_enum_t = 2180;
pub const XED_IFORM_POPCNT_GPRv_GPRv_APX: xed_iform_enum_t = 2181;
pub const XED_IFORM_POPCNT_GPRv_MEMv: xed_iform_enum_t = 2182;
pub const XED_IFORM_POPCNT_GPRv_MEMv_APX: xed_iform_enum_t = 2183;
pub const XED_IFORM_POPF: xed_iform_enum_t = 2184;
pub const XED_IFORM_POPFD: xed_iform_enum_t = 2185;
pub const XED_IFORM_POPFQ: xed_iform_enum_t = 2186;
pub const XED_IFORM_POPP_GPR64: xed_iform_enum_t = 2187;
pub const XED_IFORM_POR_MMXq_MEMq: xed_iform_enum_t = 2188;
pub const XED_IFORM_POR_MMXq_MMXq: xed_iform_enum_t = 2189;
pub const XED_IFORM_POR_XMMdq_MEMdq: xed_iform_enum_t = 2190;
pub const XED_IFORM_POR_XMMdq_XMMdq: xed_iform_enum_t = 2191;
pub const XED_IFORM_PREFETCHIT0_MEMu8: xed_iform_enum_t = 2192;
pub const XED_IFORM_PREFETCHIT1_MEMu8: xed_iform_enum_t = 2193;
pub const XED_IFORM_PREFETCHNTA_MEMmprefetch: xed_iform_enum_t = 2194;
pub const XED_IFORM_PREFETCHT0_MEMmprefetch: xed_iform_enum_t = 2195;
pub const XED_IFORM_PREFETCHT1_MEMmprefetch: xed_iform_enum_t = 2196;
pub const XED_IFORM_PREFETCHT2_MEMmprefetch: xed_iform_enum_t = 2197;
pub const XED_IFORM_PREFETCHW_0F0Dr1: xed_iform_enum_t = 2198;
pub const XED_IFORM_PREFETCHW_0F0Dr3: xed_iform_enum_t = 2199;
pub const XED_IFORM_PREFETCHWT1_MEMu8: xed_iform_enum_t = 2200;
pub const XED_IFORM_PREFETCH_EXCLUSIVE_MEMmprefetch: xed_iform_enum_t = 2201;
pub const XED_IFORM_PREFETCH_RESERVED_0F0Dr4: xed_iform_enum_t = 2202;
pub const XED_IFORM_PREFETCH_RESERVED_0F0Dr5: xed_iform_enum_t = 2203;
pub const XED_IFORM_PREFETCH_RESERVED_0F0Dr6: xed_iform_enum_t = 2204;
pub const XED_IFORM_PREFETCH_RESERVED_0F0Dr7: xed_iform_enum_t = 2205;
pub const XED_IFORM_PSADBW_MMXq_MEMq: xed_iform_enum_t = 2206;
pub const XED_IFORM_PSADBW_MMXq_MMXq: xed_iform_enum_t = 2207;
pub const XED_IFORM_PSADBW_XMMdq_MEMdq: xed_iform_enum_t = 2208;
pub const XED_IFORM_PSADBW_XMMdq_XMMdq: xed_iform_enum_t = 2209;
pub const XED_IFORM_PSHUFB_MMXq_MEMq: xed_iform_enum_t = 2210;
pub const XED_IFORM_PSHUFB_MMXq_MMXq: xed_iform_enum_t = 2211;
pub const XED_IFORM_PSHUFB_XMMdq_MEMdq: xed_iform_enum_t = 2212;
pub const XED_IFORM_PSHUFB_XMMdq_XMMdq: xed_iform_enum_t = 2213;
pub const XED_IFORM_PSHUFD_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 2214;
pub const XED_IFORM_PSHUFD_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 2215;
pub const XED_IFORM_PSHUFHW_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 2216;
pub const XED_IFORM_PSHUFHW_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 2217;
pub const XED_IFORM_PSHUFLW_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 2218;
pub const XED_IFORM_PSHUFLW_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 2219;
pub const XED_IFORM_PSHUFW_MMXq_MEMq_IMMb: xed_iform_enum_t = 2220;
pub const XED_IFORM_PSHUFW_MMXq_MMXq_IMMb: xed_iform_enum_t = 2221;
pub const XED_IFORM_PSIGNB_MMXq_MEMq: xed_iform_enum_t = 2222;
pub const XED_IFORM_PSIGNB_MMXq_MMXq: xed_iform_enum_t = 2223;
pub const XED_IFORM_PSIGNB_XMMdq_MEMdq: xed_iform_enum_t = 2224;
pub const XED_IFORM_PSIGNB_XMMdq_XMMdq: xed_iform_enum_t = 2225;
pub const XED_IFORM_PSIGND_MMXq_MEMq: xed_iform_enum_t = 2226;
pub const XED_IFORM_PSIGND_MMXq_MMXq: xed_iform_enum_t = 2227;
pub const XED_IFORM_PSIGND_XMMdq_MEMdq: xed_iform_enum_t = 2228;
pub const XED_IFORM_PSIGND_XMMdq_XMMdq: xed_iform_enum_t = 2229;
pub const XED_IFORM_PSIGNW_MMXq_MEMq: xed_iform_enum_t = 2230;
pub const XED_IFORM_PSIGNW_MMXq_MMXq: xed_iform_enum_t = 2231;
pub const XED_IFORM_PSIGNW_XMMdq_MEMdq: xed_iform_enum_t = 2232;
pub const XED_IFORM_PSIGNW_XMMdq_XMMdq: xed_iform_enum_t = 2233;
pub const XED_IFORM_PSLLD_MMXq_IMMb: xed_iform_enum_t = 2234;
pub const XED_IFORM_PSLLD_MMXq_MEMq: xed_iform_enum_t = 2235;
pub const XED_IFORM_PSLLD_MMXq_MMXq: xed_iform_enum_t = 2236;
pub const XED_IFORM_PSLLD_XMMdq_IMMb: xed_iform_enum_t = 2237;
pub const XED_IFORM_PSLLD_XMMdq_MEMdq: xed_iform_enum_t = 2238;
pub const XED_IFORM_PSLLD_XMMdq_XMMdq: xed_iform_enum_t = 2239;
pub const XED_IFORM_PSLLDQ_XMMdq_IMMb: xed_iform_enum_t = 2240;
pub const XED_IFORM_PSLLQ_MMXq_IMMb: xed_iform_enum_t = 2241;
pub const XED_IFORM_PSLLQ_MMXq_MEMq: xed_iform_enum_t = 2242;
pub const XED_IFORM_PSLLQ_MMXq_MMXq: xed_iform_enum_t = 2243;
pub const XED_IFORM_PSLLQ_XMMdq_IMMb: xed_iform_enum_t = 2244;
pub const XED_IFORM_PSLLQ_XMMdq_MEMdq: xed_iform_enum_t = 2245;
pub const XED_IFORM_PSLLQ_XMMdq_XMMdq: xed_iform_enum_t = 2246;
pub const XED_IFORM_PSLLW_MMXq_IMMb: xed_iform_enum_t = 2247;
pub const XED_IFORM_PSLLW_MMXq_MEMq: xed_iform_enum_t = 2248;
pub const XED_IFORM_PSLLW_MMXq_MMXq: xed_iform_enum_t = 2249;
pub const XED_IFORM_PSLLW_XMMdq_IMMb: xed_iform_enum_t = 2250;
pub const XED_IFORM_PSLLW_XMMdq_MEMdq: xed_iform_enum_t = 2251;
pub const XED_IFORM_PSLLW_XMMdq_XMMdq: xed_iform_enum_t = 2252;
pub const XED_IFORM_PSMASH_RAX: xed_iform_enum_t = 2253;
pub const XED_IFORM_PSRAD_MMXq_IMMb: xed_iform_enum_t = 2254;
pub const XED_IFORM_PSRAD_MMXq_MEMq: xed_iform_enum_t = 2255;
pub const XED_IFORM_PSRAD_MMXq_MMXq: xed_iform_enum_t = 2256;
pub const XED_IFORM_PSRAD_XMMdq_IMMb: xed_iform_enum_t = 2257;
pub const XED_IFORM_PSRAD_XMMdq_MEMdq: xed_iform_enum_t = 2258;
pub const XED_IFORM_PSRAD_XMMdq_XMMdq: xed_iform_enum_t = 2259;
pub const XED_IFORM_PSRAW_MMXq_IMMb: xed_iform_enum_t = 2260;
pub const XED_IFORM_PSRAW_MMXq_MEMq: xed_iform_enum_t = 2261;
pub const XED_IFORM_PSRAW_MMXq_MMXq: xed_iform_enum_t = 2262;
pub const XED_IFORM_PSRAW_XMMdq_IMMb: xed_iform_enum_t = 2263;
pub const XED_IFORM_PSRAW_XMMdq_MEMdq: xed_iform_enum_t = 2264;
pub const XED_IFORM_PSRAW_XMMdq_XMMdq: xed_iform_enum_t = 2265;
pub const XED_IFORM_PSRLD_MMXq_IMMb: xed_iform_enum_t = 2266;
pub const XED_IFORM_PSRLD_MMXq_MEMq: xed_iform_enum_t = 2267;
pub const XED_IFORM_PSRLD_MMXq_MMXq: xed_iform_enum_t = 2268;
pub const XED_IFORM_PSRLD_XMMdq_IMMb: xed_iform_enum_t = 2269;
pub const XED_IFORM_PSRLD_XMMdq_MEMdq: xed_iform_enum_t = 2270;
pub const XED_IFORM_PSRLD_XMMdq_XMMdq: xed_iform_enum_t = 2271;
pub const XED_IFORM_PSRLDQ_XMMdq_IMMb: xed_iform_enum_t = 2272;
pub const XED_IFORM_PSRLQ_MMXq_IMMb: xed_iform_enum_t = 2273;
pub const XED_IFORM_PSRLQ_MMXq_MEMq: xed_iform_enum_t = 2274;
pub const XED_IFORM_PSRLQ_MMXq_MMXq: xed_iform_enum_t = 2275;
pub const XED_IFORM_PSRLQ_XMMdq_IMMb: xed_iform_enum_t = 2276;
pub const XED_IFORM_PSRLQ_XMMdq_MEMdq: xed_iform_enum_t = 2277;
pub const XED_IFORM_PSRLQ_XMMdq_XMMdq: xed_iform_enum_t = 2278;
pub const XED_IFORM_PSRLW_MMXq_IMMb: xed_iform_enum_t = 2279;
pub const XED_IFORM_PSRLW_MMXq_MEMq: xed_iform_enum_t = 2280;
pub const XED_IFORM_PSRLW_MMXq_MMXq: xed_iform_enum_t = 2281;
pub const XED_IFORM_PSRLW_XMMdq_IMMb: xed_iform_enum_t = 2282;
pub const XED_IFORM_PSRLW_XMMdq_MEMdq: xed_iform_enum_t = 2283;
pub const XED_IFORM_PSRLW_XMMdq_XMMdq: xed_iform_enum_t = 2284;
pub const XED_IFORM_PSUBB_MMXq_MEMq: xed_iform_enum_t = 2285;
pub const XED_IFORM_PSUBB_MMXq_MMXq: xed_iform_enum_t = 2286;
pub const XED_IFORM_PSUBB_XMMdq_MEMdq: xed_iform_enum_t = 2287;
pub const XED_IFORM_PSUBB_XMMdq_XMMdq: xed_iform_enum_t = 2288;
pub const XED_IFORM_PSUBD_MMXq_MEMq: xed_iform_enum_t = 2289;
pub const XED_IFORM_PSUBD_MMXq_MMXq: xed_iform_enum_t = 2290;
pub const XED_IFORM_PSUBD_XMMdq_MEMdq: xed_iform_enum_t = 2291;
pub const XED_IFORM_PSUBD_XMMdq_XMMdq: xed_iform_enum_t = 2292;
pub const XED_IFORM_PSUBQ_MMXq_MEMq: xed_iform_enum_t = 2293;
pub const XED_IFORM_PSUBQ_MMXq_MMXq: xed_iform_enum_t = 2294;
pub const XED_IFORM_PSUBQ_XMMdq_MEMdq: xed_iform_enum_t = 2295;
pub const XED_IFORM_PSUBQ_XMMdq_XMMdq: xed_iform_enum_t = 2296;
pub const XED_IFORM_PSUBSB_MMXq_MEMq: xed_iform_enum_t = 2297;
pub const XED_IFORM_PSUBSB_MMXq_MMXq: xed_iform_enum_t = 2298;
pub const XED_IFORM_PSUBSB_XMMdq_MEMdq: xed_iform_enum_t = 2299;
pub const XED_IFORM_PSUBSB_XMMdq_XMMdq: xed_iform_enum_t = 2300;
pub const XED_IFORM_PSUBSW_MMXq_MEMq: xed_iform_enum_t = 2301;
pub const XED_IFORM_PSUBSW_MMXq_MMXq: xed_iform_enum_t = 2302;
pub const XED_IFORM_PSUBSW_XMMdq_MEMdq: xed_iform_enum_t = 2303;
pub const XED_IFORM_PSUBSW_XMMdq_XMMdq: xed_iform_enum_t = 2304;
pub const XED_IFORM_PSUBUSB_MMXq_MEMq: xed_iform_enum_t = 2305;
pub const XED_IFORM_PSUBUSB_MMXq_MMXq: xed_iform_enum_t = 2306;
pub const XED_IFORM_PSUBUSB_XMMdq_MEMdq: xed_iform_enum_t = 2307;
pub const XED_IFORM_PSUBUSB_XMMdq_XMMdq: xed_iform_enum_t = 2308;
pub const XED_IFORM_PSUBUSW_MMXq_MEMq: xed_iform_enum_t = 2309;
pub const XED_IFORM_PSUBUSW_MMXq_MMXq: xed_iform_enum_t = 2310;
pub const XED_IFORM_PSUBUSW_XMMdq_MEMdq: xed_iform_enum_t = 2311;
pub const XED_IFORM_PSUBUSW_XMMdq_XMMdq: xed_iform_enum_t = 2312;
pub const XED_IFORM_PSUBW_MMXq_MEMq: xed_iform_enum_t = 2313;
pub const XED_IFORM_PSUBW_MMXq_MMXq: xed_iform_enum_t = 2314;
pub const XED_IFORM_PSUBW_XMMdq_MEMdq: xed_iform_enum_t = 2315;
pub const XED_IFORM_PSUBW_XMMdq_XMMdq: xed_iform_enum_t = 2316;
pub const XED_IFORM_PSWAPD_MMXq_MEMq: xed_iform_enum_t = 2317;
pub const XED_IFORM_PSWAPD_MMXq_MMXq: xed_iform_enum_t = 2318;
pub const XED_IFORM_PTEST_XMMdq_MEMdq: xed_iform_enum_t = 2319;
pub const XED_IFORM_PTEST_XMMdq_XMMdq: xed_iform_enum_t = 2320;
pub const XED_IFORM_PTWRITE_GPRy: xed_iform_enum_t = 2321;
pub const XED_IFORM_PTWRITE_MEMy: xed_iform_enum_t = 2322;
pub const XED_IFORM_PUNPCKHBW_MMXq_MEMq: xed_iform_enum_t = 2323;
pub const XED_IFORM_PUNPCKHBW_MMXq_MMXd: xed_iform_enum_t = 2324;
pub const XED_IFORM_PUNPCKHBW_XMMdq_MEMdq: xed_iform_enum_t = 2325;
pub const XED_IFORM_PUNPCKHBW_XMMdq_XMMq: xed_iform_enum_t = 2326;
pub const XED_IFORM_PUNPCKHDQ_MMXq_MEMq: xed_iform_enum_t = 2327;
pub const XED_IFORM_PUNPCKHDQ_MMXq_MMXd: xed_iform_enum_t = 2328;
pub const XED_IFORM_PUNPCKHDQ_XMMdq_MEMdq: xed_iform_enum_t = 2329;
pub const XED_IFORM_PUNPCKHDQ_XMMdq_XMMq: xed_iform_enum_t = 2330;
pub const XED_IFORM_PUNPCKHQDQ_XMMdq_MEMdq: xed_iform_enum_t = 2331;
pub const XED_IFORM_PUNPCKHQDQ_XMMdq_XMMq: xed_iform_enum_t = 2332;
pub const XED_IFORM_PUNPCKHWD_MMXq_MEMq: xed_iform_enum_t = 2333;
pub const XED_IFORM_PUNPCKHWD_MMXq_MMXd: xed_iform_enum_t = 2334;
pub const XED_IFORM_PUNPCKHWD_XMMdq_MEMdq: xed_iform_enum_t = 2335;
pub const XED_IFORM_PUNPCKHWD_XMMdq_XMMq: xed_iform_enum_t = 2336;
pub const XED_IFORM_PUNPCKLBW_MMXq_MEMd: xed_iform_enum_t = 2337;
pub const XED_IFORM_PUNPCKLBW_MMXq_MMXd: xed_iform_enum_t = 2338;
pub const XED_IFORM_PUNPCKLBW_XMMdq_MEMdq: xed_iform_enum_t = 2339;
pub const XED_IFORM_PUNPCKLBW_XMMdq_XMMq: xed_iform_enum_t = 2340;
pub const XED_IFORM_PUNPCKLDQ_MMXq_MEMd: xed_iform_enum_t = 2341;
pub const XED_IFORM_PUNPCKLDQ_MMXq_MMXd: xed_iform_enum_t = 2342;
pub const XED_IFORM_PUNPCKLDQ_XMMdq_MEMdq: xed_iform_enum_t = 2343;
pub const XED_IFORM_PUNPCKLDQ_XMMdq_XMMq: xed_iform_enum_t = 2344;
pub const XED_IFORM_PUNPCKLQDQ_XMMdq_MEMdq: xed_iform_enum_t = 2345;
pub const XED_IFORM_PUNPCKLQDQ_XMMdq_XMMq: xed_iform_enum_t = 2346;
pub const XED_IFORM_PUNPCKLWD_MMXq_MEMd: xed_iform_enum_t = 2347;
pub const XED_IFORM_PUNPCKLWD_MMXq_MMXd: xed_iform_enum_t = 2348;
pub const XED_IFORM_PUNPCKLWD_XMMdq_MEMdq: xed_iform_enum_t = 2349;
pub const XED_IFORM_PUNPCKLWD_XMMdq_XMMq: xed_iform_enum_t = 2350;
pub const XED_IFORM_PUSH_CS: xed_iform_enum_t = 2351;
pub const XED_IFORM_PUSH_DS: xed_iform_enum_t = 2352;
pub const XED_IFORM_PUSH_ES: xed_iform_enum_t = 2353;
pub const XED_IFORM_PUSH_FS: xed_iform_enum_t = 2354;
pub const XED_IFORM_PUSH_GPRv_50: xed_iform_enum_t = 2355;
pub const XED_IFORM_PUSH_GPRv_FFr6: xed_iform_enum_t = 2356;
pub const XED_IFORM_PUSH_GS: xed_iform_enum_t = 2357;
pub const XED_IFORM_PUSH_IMMb: xed_iform_enum_t = 2358;
pub const XED_IFORM_PUSH_IMMz: xed_iform_enum_t = 2359;
pub const XED_IFORM_PUSH_MEMv: xed_iform_enum_t = 2360;
pub const XED_IFORM_PUSH_SS: xed_iform_enum_t = 2361;
pub const XED_IFORM_PUSH2_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 2362;
pub const XED_IFORM_PUSH2P_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 2363;
pub const XED_IFORM_PUSHA: xed_iform_enum_t = 2364;
pub const XED_IFORM_PUSHAD: xed_iform_enum_t = 2365;
pub const XED_IFORM_PUSHF: xed_iform_enum_t = 2366;
pub const XED_IFORM_PUSHFD: xed_iform_enum_t = 2367;
pub const XED_IFORM_PUSHFQ: xed_iform_enum_t = 2368;
pub const XED_IFORM_PUSHP_GPR64: xed_iform_enum_t = 2369;
pub const XED_IFORM_PVALIDATE_RAX_ECX_EDX: xed_iform_enum_t = 2370;
pub const XED_IFORM_PXOR_MMXq_MEMq: xed_iform_enum_t = 2371;
pub const XED_IFORM_PXOR_MMXq_MMXq: xed_iform_enum_t = 2372;
pub const XED_IFORM_PXOR_XMMdq_MEMdq: xed_iform_enum_t = 2373;
pub const XED_IFORM_PXOR_XMMdq_XMMdq: xed_iform_enum_t = 2374;
pub const XED_IFORM_RCL_GPR8_CL: xed_iform_enum_t = 2375;
pub const XED_IFORM_RCL_GPR8_IMMb: xed_iform_enum_t = 2376;
pub const XED_IFORM_RCL_GPR8_ONE: xed_iform_enum_t = 2377;
pub const XED_IFORM_RCL_GPR8i8_CL_APX: xed_iform_enum_t = 2378;
pub const XED_IFORM_RCL_GPR8i8_GPR8i8_CL_APX: xed_iform_enum_t = 2379;
pub const XED_IFORM_RCL_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 2380;
pub const XED_IFORM_RCL_GPR8i8_GPR8i8_ONE_APX: xed_iform_enum_t = 2381;
pub const XED_IFORM_RCL_GPR8i8_IMM8_APX: xed_iform_enum_t = 2382;
pub const XED_IFORM_RCL_GPR8i8_MEMi8_CL_APX: xed_iform_enum_t = 2383;
pub const XED_IFORM_RCL_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 2384;
pub const XED_IFORM_RCL_GPR8i8_MEMi8_ONE_APX: xed_iform_enum_t = 2385;
pub const XED_IFORM_RCL_GPR8i8_ONE_APX: xed_iform_enum_t = 2386;
pub const XED_IFORM_RCL_GPRv_CL: xed_iform_enum_t = 2387;
pub const XED_IFORM_RCL_GPRv_CL_APX: xed_iform_enum_t = 2388;
pub const XED_IFORM_RCL_GPRv_GPRv_CL_APX: xed_iform_enum_t = 2389;
pub const XED_IFORM_RCL_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2390;
pub const XED_IFORM_RCL_GPRv_GPRv_ONE_APX: xed_iform_enum_t = 2391;
pub const XED_IFORM_RCL_GPRv_IMM8_APX: xed_iform_enum_t = 2392;
pub const XED_IFORM_RCL_GPRv_IMMb: xed_iform_enum_t = 2393;
pub const XED_IFORM_RCL_GPRv_MEMv_CL_APX: xed_iform_enum_t = 2394;
pub const XED_IFORM_RCL_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 2395;
pub const XED_IFORM_RCL_GPRv_MEMv_ONE_APX: xed_iform_enum_t = 2396;
pub const XED_IFORM_RCL_GPRv_ONE: xed_iform_enum_t = 2397;
pub const XED_IFORM_RCL_GPRv_ONE_APX: xed_iform_enum_t = 2398;
pub const XED_IFORM_RCL_MEMb_CL: xed_iform_enum_t = 2399;
pub const XED_IFORM_RCL_MEMb_IMMb: xed_iform_enum_t = 2400;
pub const XED_IFORM_RCL_MEMb_ONE: xed_iform_enum_t = 2401;
pub const XED_IFORM_RCL_MEMi8_CL_APX: xed_iform_enum_t = 2402;
pub const XED_IFORM_RCL_MEMi8_IMM8_APX: xed_iform_enum_t = 2403;
pub const XED_IFORM_RCL_MEMi8_ONE_APX: xed_iform_enum_t = 2404;
pub const XED_IFORM_RCL_MEMv_CL: xed_iform_enum_t = 2405;
pub const XED_IFORM_RCL_MEMv_CL_APX: xed_iform_enum_t = 2406;
pub const XED_IFORM_RCL_MEMv_IMM8_APX: xed_iform_enum_t = 2407;
pub const XED_IFORM_RCL_MEMv_IMMb: xed_iform_enum_t = 2408;
pub const XED_IFORM_RCL_MEMv_ONE: xed_iform_enum_t = 2409;
pub const XED_IFORM_RCL_MEMv_ONE_APX: xed_iform_enum_t = 2410;
pub const XED_IFORM_RCPPS_XMMps_MEMps: xed_iform_enum_t = 2411;
pub const XED_IFORM_RCPPS_XMMps_XMMps: xed_iform_enum_t = 2412;
pub const XED_IFORM_RCPSS_XMMss_MEMss: xed_iform_enum_t = 2413;
pub const XED_IFORM_RCPSS_XMMss_XMMss: xed_iform_enum_t = 2414;
pub const XED_IFORM_RCR_GPR8_CL: xed_iform_enum_t = 2415;
pub const XED_IFORM_RCR_GPR8_IMMb: xed_iform_enum_t = 2416;
pub const XED_IFORM_RCR_GPR8_ONE: xed_iform_enum_t = 2417;
pub const XED_IFORM_RCR_GPR8i8_CL_APX: xed_iform_enum_t = 2418;
pub const XED_IFORM_RCR_GPR8i8_GPR8i8_CL_APX: xed_iform_enum_t = 2419;
pub const XED_IFORM_RCR_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 2420;
pub const XED_IFORM_RCR_GPR8i8_GPR8i8_ONE_APX: xed_iform_enum_t = 2421;
pub const XED_IFORM_RCR_GPR8i8_IMM8_APX: xed_iform_enum_t = 2422;
pub const XED_IFORM_RCR_GPR8i8_MEMi8_CL_APX: xed_iform_enum_t = 2423;
pub const XED_IFORM_RCR_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 2424;
pub const XED_IFORM_RCR_GPR8i8_MEMi8_ONE_APX: xed_iform_enum_t = 2425;
pub const XED_IFORM_RCR_GPR8i8_ONE_APX: xed_iform_enum_t = 2426;
pub const XED_IFORM_RCR_GPRv_CL: xed_iform_enum_t = 2427;
pub const XED_IFORM_RCR_GPRv_CL_APX: xed_iform_enum_t = 2428;
pub const XED_IFORM_RCR_GPRv_GPRv_CL_APX: xed_iform_enum_t = 2429;
pub const XED_IFORM_RCR_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2430;
pub const XED_IFORM_RCR_GPRv_GPRv_ONE_APX: xed_iform_enum_t = 2431;
pub const XED_IFORM_RCR_GPRv_IMM8_APX: xed_iform_enum_t = 2432;
pub const XED_IFORM_RCR_GPRv_IMMb: xed_iform_enum_t = 2433;
pub const XED_IFORM_RCR_GPRv_MEMv_CL_APX: xed_iform_enum_t = 2434;
pub const XED_IFORM_RCR_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 2435;
pub const XED_IFORM_RCR_GPRv_MEMv_ONE_APX: xed_iform_enum_t = 2436;
pub const XED_IFORM_RCR_GPRv_ONE: xed_iform_enum_t = 2437;
pub const XED_IFORM_RCR_GPRv_ONE_APX: xed_iform_enum_t = 2438;
pub const XED_IFORM_RCR_MEMb_CL: xed_iform_enum_t = 2439;
pub const XED_IFORM_RCR_MEMb_IMMb: xed_iform_enum_t = 2440;
pub const XED_IFORM_RCR_MEMb_ONE: xed_iform_enum_t = 2441;
pub const XED_IFORM_RCR_MEMi8_CL_APX: xed_iform_enum_t = 2442;
pub const XED_IFORM_RCR_MEMi8_IMM8_APX: xed_iform_enum_t = 2443;
pub const XED_IFORM_RCR_MEMi8_ONE_APX: xed_iform_enum_t = 2444;
pub const XED_IFORM_RCR_MEMv_CL: xed_iform_enum_t = 2445;
pub const XED_IFORM_RCR_MEMv_CL_APX: xed_iform_enum_t = 2446;
pub const XED_IFORM_RCR_MEMv_IMM8_APX: xed_iform_enum_t = 2447;
pub const XED_IFORM_RCR_MEMv_IMMb: xed_iform_enum_t = 2448;
pub const XED_IFORM_RCR_MEMv_ONE: xed_iform_enum_t = 2449;
pub const XED_IFORM_RCR_MEMv_ONE_APX: xed_iform_enum_t = 2450;
pub const XED_IFORM_RDFSBASE_GPRy: xed_iform_enum_t = 2451;
pub const XED_IFORM_RDGSBASE_GPRy: xed_iform_enum_t = 2452;
pub const XED_IFORM_RDMSR: xed_iform_enum_t = 2453;
pub const XED_IFORM_RDMSRLIST: xed_iform_enum_t = 2454;
pub const XED_IFORM_RDPID_GPR32u32: xed_iform_enum_t = 2455;
pub const XED_IFORM_RDPID_GPR64u64: xed_iform_enum_t = 2456;
pub const XED_IFORM_RDPKRU: xed_iform_enum_t = 2457;
pub const XED_IFORM_RDPMC: xed_iform_enum_t = 2458;
pub const XED_IFORM_RDPRU: xed_iform_enum_t = 2459;
pub const XED_IFORM_RDRAND_GPRv: xed_iform_enum_t = 2460;
pub const XED_IFORM_RDSEED_GPRv: xed_iform_enum_t = 2461;
pub const XED_IFORM_RDSSPD_GPR32u32: xed_iform_enum_t = 2462;
pub const XED_IFORM_RDSSPQ_GPR64u64: xed_iform_enum_t = 2463;
pub const XED_IFORM_RDTSC: xed_iform_enum_t = 2464;
pub const XED_IFORM_RDTSCP: xed_iform_enum_t = 2465;
pub const XED_IFORM_REPE_CMPSB: xed_iform_enum_t = 2466;
pub const XED_IFORM_REPE_CMPSD: xed_iform_enum_t = 2467;
pub const XED_IFORM_REPE_CMPSQ: xed_iform_enum_t = 2468;
pub const XED_IFORM_REPE_CMPSW: xed_iform_enum_t = 2469;
pub const XED_IFORM_REPE_SCASB: xed_iform_enum_t = 2470;
pub const XED_IFORM_REPE_SCASD: xed_iform_enum_t = 2471;
pub const XED_IFORM_REPE_SCASQ: xed_iform_enum_t = 2472;
pub const XED_IFORM_REPE_SCASW: xed_iform_enum_t = 2473;
pub const XED_IFORM_REPNE_CMPSB: xed_iform_enum_t = 2474;
pub const XED_IFORM_REPNE_CMPSD: xed_iform_enum_t = 2475;
pub const XED_IFORM_REPNE_CMPSQ: xed_iform_enum_t = 2476;
pub const XED_IFORM_REPNE_CMPSW: xed_iform_enum_t = 2477;
pub const XED_IFORM_REPNE_SCASB: xed_iform_enum_t = 2478;
pub const XED_IFORM_REPNE_SCASD: xed_iform_enum_t = 2479;
pub const XED_IFORM_REPNE_SCASQ: xed_iform_enum_t = 2480;
pub const XED_IFORM_REPNE_SCASW: xed_iform_enum_t = 2481;
pub const XED_IFORM_REP_INSB: xed_iform_enum_t = 2482;
pub const XED_IFORM_REP_INSD: xed_iform_enum_t = 2483;
pub const XED_IFORM_REP_INSW: xed_iform_enum_t = 2484;
pub const XED_IFORM_REP_LODSB: xed_iform_enum_t = 2485;
pub const XED_IFORM_REP_LODSD: xed_iform_enum_t = 2486;
pub const XED_IFORM_REP_LODSQ: xed_iform_enum_t = 2487;
pub const XED_IFORM_REP_LODSW: xed_iform_enum_t = 2488;
pub const XED_IFORM_REP_MONTMUL: xed_iform_enum_t = 2489;
pub const XED_IFORM_REP_MOVSB: xed_iform_enum_t = 2490;
pub const XED_IFORM_REP_MOVSD: xed_iform_enum_t = 2491;
pub const XED_IFORM_REP_MOVSQ: xed_iform_enum_t = 2492;
pub const XED_IFORM_REP_MOVSW: xed_iform_enum_t = 2493;
pub const XED_IFORM_REP_OUTSB: xed_iform_enum_t = 2494;
pub const XED_IFORM_REP_OUTSD: xed_iform_enum_t = 2495;
pub const XED_IFORM_REP_OUTSW: xed_iform_enum_t = 2496;
pub const XED_IFORM_REP_STOSB: xed_iform_enum_t = 2497;
pub const XED_IFORM_REP_STOSD: xed_iform_enum_t = 2498;
pub const XED_IFORM_REP_STOSQ: xed_iform_enum_t = 2499;
pub const XED_IFORM_REP_STOSW: xed_iform_enum_t = 2500;
pub const XED_IFORM_REP_XCRYPTCBC: xed_iform_enum_t = 2501;
pub const XED_IFORM_REP_XCRYPTCFB: xed_iform_enum_t = 2502;
pub const XED_IFORM_REP_XCRYPTCTR: xed_iform_enum_t = 2503;
pub const XED_IFORM_REP_XCRYPTECB: xed_iform_enum_t = 2504;
pub const XED_IFORM_REP_XCRYPTOFB: xed_iform_enum_t = 2505;
pub const XED_IFORM_REP_XSHA1: xed_iform_enum_t = 2506;
pub const XED_IFORM_REP_XSHA256: xed_iform_enum_t = 2507;
pub const XED_IFORM_REP_XSTORE: xed_iform_enum_t = 2508;
pub const XED_IFORM_RET_FAR: xed_iform_enum_t = 2509;
pub const XED_IFORM_RET_FAR_IMMw: xed_iform_enum_t = 2510;
pub const XED_IFORM_RET_NEAR: xed_iform_enum_t = 2511;
pub const XED_IFORM_RET_NEAR_IMMw: xed_iform_enum_t = 2512;
pub const XED_IFORM_RMPADJUST_RAX_RCX_RDX: xed_iform_enum_t = 2513;
pub const XED_IFORM_RMPUPDATE_RAX_RCX: xed_iform_enum_t = 2514;
pub const XED_IFORM_ROL_GPR8_CL: xed_iform_enum_t = 2515;
pub const XED_IFORM_ROL_GPR8_IMMb: xed_iform_enum_t = 2516;
pub const XED_IFORM_ROL_GPR8_ONE: xed_iform_enum_t = 2517;
pub const XED_IFORM_ROL_GPR8i8_CL_APX: xed_iform_enum_t = 2518;
pub const XED_IFORM_ROL_GPR8i8_GPR8i8_CL_APX: xed_iform_enum_t = 2519;
pub const XED_IFORM_ROL_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 2520;
pub const XED_IFORM_ROL_GPR8i8_GPR8i8_ONE_APX: xed_iform_enum_t = 2521;
pub const XED_IFORM_ROL_GPR8i8_IMM8_APX: xed_iform_enum_t = 2522;
pub const XED_IFORM_ROL_GPR8i8_MEMi8_CL_APX: xed_iform_enum_t = 2523;
pub const XED_IFORM_ROL_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 2524;
pub const XED_IFORM_ROL_GPR8i8_MEMi8_ONE_APX: xed_iform_enum_t = 2525;
pub const XED_IFORM_ROL_GPR8i8_ONE_APX: xed_iform_enum_t = 2526;
pub const XED_IFORM_ROL_GPRv_CL: xed_iform_enum_t = 2527;
pub const XED_IFORM_ROL_GPRv_CL_APX: xed_iform_enum_t = 2528;
pub const XED_IFORM_ROL_GPRv_GPRv_CL_APX: xed_iform_enum_t = 2529;
pub const XED_IFORM_ROL_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2530;
pub const XED_IFORM_ROL_GPRv_GPRv_ONE_APX: xed_iform_enum_t = 2531;
pub const XED_IFORM_ROL_GPRv_IMM8_APX: xed_iform_enum_t = 2532;
pub const XED_IFORM_ROL_GPRv_IMMb: xed_iform_enum_t = 2533;
pub const XED_IFORM_ROL_GPRv_MEMv_CL_APX: xed_iform_enum_t = 2534;
pub const XED_IFORM_ROL_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 2535;
pub const XED_IFORM_ROL_GPRv_MEMv_ONE_APX: xed_iform_enum_t = 2536;
pub const XED_IFORM_ROL_GPRv_ONE: xed_iform_enum_t = 2537;
pub const XED_IFORM_ROL_GPRv_ONE_APX: xed_iform_enum_t = 2538;
pub const XED_IFORM_ROL_MEMb_CL: xed_iform_enum_t = 2539;
pub const XED_IFORM_ROL_MEMb_IMMb: xed_iform_enum_t = 2540;
pub const XED_IFORM_ROL_MEMb_ONE: xed_iform_enum_t = 2541;
pub const XED_IFORM_ROL_MEMi8_CL_APX: xed_iform_enum_t = 2542;
pub const XED_IFORM_ROL_MEMi8_IMM8_APX: xed_iform_enum_t = 2543;
pub const XED_IFORM_ROL_MEMi8_ONE_APX: xed_iform_enum_t = 2544;
pub const XED_IFORM_ROL_MEMv_CL: xed_iform_enum_t = 2545;
pub const XED_IFORM_ROL_MEMv_CL_APX: xed_iform_enum_t = 2546;
pub const XED_IFORM_ROL_MEMv_IMM8_APX: xed_iform_enum_t = 2547;
pub const XED_IFORM_ROL_MEMv_IMMb: xed_iform_enum_t = 2548;
pub const XED_IFORM_ROL_MEMv_ONE: xed_iform_enum_t = 2549;
pub const XED_IFORM_ROL_MEMv_ONE_APX: xed_iform_enum_t = 2550;
pub const XED_IFORM_ROR_GPR8_CL: xed_iform_enum_t = 2551;
pub const XED_IFORM_ROR_GPR8_IMMb: xed_iform_enum_t = 2552;
pub const XED_IFORM_ROR_GPR8_ONE: xed_iform_enum_t = 2553;
pub const XED_IFORM_ROR_GPR8i8_CL_APX: xed_iform_enum_t = 2554;
pub const XED_IFORM_ROR_GPR8i8_GPR8i8_CL_APX: xed_iform_enum_t = 2555;
pub const XED_IFORM_ROR_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 2556;
pub const XED_IFORM_ROR_GPR8i8_GPR8i8_ONE_APX: xed_iform_enum_t = 2557;
pub const XED_IFORM_ROR_GPR8i8_IMM8_APX: xed_iform_enum_t = 2558;
pub const XED_IFORM_ROR_GPR8i8_MEMi8_CL_APX: xed_iform_enum_t = 2559;
pub const XED_IFORM_ROR_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 2560;
pub const XED_IFORM_ROR_GPR8i8_MEMi8_ONE_APX: xed_iform_enum_t = 2561;
pub const XED_IFORM_ROR_GPR8i8_ONE_APX: xed_iform_enum_t = 2562;
pub const XED_IFORM_ROR_GPRv_CL: xed_iform_enum_t = 2563;
pub const XED_IFORM_ROR_GPRv_CL_APX: xed_iform_enum_t = 2564;
pub const XED_IFORM_ROR_GPRv_GPRv_CL_APX: xed_iform_enum_t = 2565;
pub const XED_IFORM_ROR_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2566;
pub const XED_IFORM_ROR_GPRv_GPRv_ONE_APX: xed_iform_enum_t = 2567;
pub const XED_IFORM_ROR_GPRv_IMM8_APX: xed_iform_enum_t = 2568;
pub const XED_IFORM_ROR_GPRv_IMMb: xed_iform_enum_t = 2569;
pub const XED_IFORM_ROR_GPRv_MEMv_CL_APX: xed_iform_enum_t = 2570;
pub const XED_IFORM_ROR_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 2571;
pub const XED_IFORM_ROR_GPRv_MEMv_ONE_APX: xed_iform_enum_t = 2572;
pub const XED_IFORM_ROR_GPRv_ONE: xed_iform_enum_t = 2573;
pub const XED_IFORM_ROR_GPRv_ONE_APX: xed_iform_enum_t = 2574;
pub const XED_IFORM_ROR_MEMb_CL: xed_iform_enum_t = 2575;
pub const XED_IFORM_ROR_MEMb_IMMb: xed_iform_enum_t = 2576;
pub const XED_IFORM_ROR_MEMb_ONE: xed_iform_enum_t = 2577;
pub const XED_IFORM_ROR_MEMi8_CL_APX: xed_iform_enum_t = 2578;
pub const XED_IFORM_ROR_MEMi8_IMM8_APX: xed_iform_enum_t = 2579;
pub const XED_IFORM_ROR_MEMi8_ONE_APX: xed_iform_enum_t = 2580;
pub const XED_IFORM_ROR_MEMv_CL: xed_iform_enum_t = 2581;
pub const XED_IFORM_ROR_MEMv_CL_APX: xed_iform_enum_t = 2582;
pub const XED_IFORM_ROR_MEMv_IMM8_APX: xed_iform_enum_t = 2583;
pub const XED_IFORM_ROR_MEMv_IMMb: xed_iform_enum_t = 2584;
pub const XED_IFORM_ROR_MEMv_ONE: xed_iform_enum_t = 2585;
pub const XED_IFORM_ROR_MEMv_ONE_APX: xed_iform_enum_t = 2586;
pub const XED_IFORM_RORX_GPR32d_GPR32d_IMMb: xed_iform_enum_t = 2587;
pub const XED_IFORM_RORX_GPR32d_MEMd_IMMb: xed_iform_enum_t = 2588;
pub const XED_IFORM_RORX_GPR32i32_GPR32i32_IMM8_APX: xed_iform_enum_t = 2589;
pub const XED_IFORM_RORX_GPR32i32_MEMi32_IMM8_APX: xed_iform_enum_t = 2590;
pub const XED_IFORM_RORX_GPR64i64_GPR64i64_IMM8_APX: xed_iform_enum_t = 2591;
pub const XED_IFORM_RORX_GPR64i64_MEMi64_IMM8_APX: xed_iform_enum_t = 2592;
pub const XED_IFORM_RORX_GPR64q_GPR64q_IMMb: xed_iform_enum_t = 2593;
pub const XED_IFORM_RORX_GPR64q_MEMq_IMMb: xed_iform_enum_t = 2594;
pub const XED_IFORM_ROUNDPD_XMMpd_MEMpd_IMMb: xed_iform_enum_t = 2595;
pub const XED_IFORM_ROUNDPD_XMMpd_XMMpd_IMMb: xed_iform_enum_t = 2596;
pub const XED_IFORM_ROUNDPS_XMMps_MEMps_IMMb: xed_iform_enum_t = 2597;
pub const XED_IFORM_ROUNDPS_XMMps_XMMps_IMMb: xed_iform_enum_t = 2598;
pub const XED_IFORM_ROUNDSD_XMMq_MEMq_IMMb: xed_iform_enum_t = 2599;
pub const XED_IFORM_ROUNDSD_XMMq_XMMq_IMMb: xed_iform_enum_t = 2600;
pub const XED_IFORM_ROUNDSS_XMMd_MEMd_IMMb: xed_iform_enum_t = 2601;
pub const XED_IFORM_ROUNDSS_XMMd_XMMd_IMMb: xed_iform_enum_t = 2602;
pub const XED_IFORM_RSM: xed_iform_enum_t = 2603;
pub const XED_IFORM_RSQRTPS_XMMps_MEMps: xed_iform_enum_t = 2604;
pub const XED_IFORM_RSQRTPS_XMMps_XMMps: xed_iform_enum_t = 2605;
pub const XED_IFORM_RSQRTSS_XMMss_MEMss: xed_iform_enum_t = 2606;
pub const XED_IFORM_RSQRTSS_XMMss_XMMss: xed_iform_enum_t = 2607;
pub const XED_IFORM_RSTORSSP_MEMu64: xed_iform_enum_t = 2608;
pub const XED_IFORM_SAHF: xed_iform_enum_t = 2609;
pub const XED_IFORM_SALC: xed_iform_enum_t = 2610;
pub const XED_IFORM_SAR_GPR8_CL: xed_iform_enum_t = 2611;
pub const XED_IFORM_SAR_GPR8_IMMb: xed_iform_enum_t = 2612;
pub const XED_IFORM_SAR_GPR8_ONE: xed_iform_enum_t = 2613;
pub const XED_IFORM_SAR_GPR8i8_CL_APX: xed_iform_enum_t = 2614;
pub const XED_IFORM_SAR_GPR8i8_GPR8i8_CL_APX: xed_iform_enum_t = 2615;
pub const XED_IFORM_SAR_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 2616;
pub const XED_IFORM_SAR_GPR8i8_GPR8i8_ONE_APX: xed_iform_enum_t = 2617;
pub const XED_IFORM_SAR_GPR8i8_IMM8_APX: xed_iform_enum_t = 2618;
pub const XED_IFORM_SAR_GPR8i8_MEMi8_CL_APX: xed_iform_enum_t = 2619;
pub const XED_IFORM_SAR_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 2620;
pub const XED_IFORM_SAR_GPR8i8_MEMi8_ONE_APX: xed_iform_enum_t = 2621;
pub const XED_IFORM_SAR_GPR8i8_ONE_APX: xed_iform_enum_t = 2622;
pub const XED_IFORM_SAR_GPRv_CL: xed_iform_enum_t = 2623;
pub const XED_IFORM_SAR_GPRv_CL_APX: xed_iform_enum_t = 2624;
pub const XED_IFORM_SAR_GPRv_GPRv_CL_APX: xed_iform_enum_t = 2625;
pub const XED_IFORM_SAR_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2626;
pub const XED_IFORM_SAR_GPRv_GPRv_ONE_APX: xed_iform_enum_t = 2627;
pub const XED_IFORM_SAR_GPRv_IMM8_APX: xed_iform_enum_t = 2628;
pub const XED_IFORM_SAR_GPRv_IMMb: xed_iform_enum_t = 2629;
pub const XED_IFORM_SAR_GPRv_MEMv_CL_APX: xed_iform_enum_t = 2630;
pub const XED_IFORM_SAR_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 2631;
pub const XED_IFORM_SAR_GPRv_MEMv_ONE_APX: xed_iform_enum_t = 2632;
pub const XED_IFORM_SAR_GPRv_ONE: xed_iform_enum_t = 2633;
pub const XED_IFORM_SAR_GPRv_ONE_APX: xed_iform_enum_t = 2634;
pub const XED_IFORM_SAR_MEMb_CL: xed_iform_enum_t = 2635;
pub const XED_IFORM_SAR_MEMb_IMMb: xed_iform_enum_t = 2636;
pub const XED_IFORM_SAR_MEMb_ONE: xed_iform_enum_t = 2637;
pub const XED_IFORM_SAR_MEMi8_CL_APX: xed_iform_enum_t = 2638;
pub const XED_IFORM_SAR_MEMi8_IMM8_APX: xed_iform_enum_t = 2639;
pub const XED_IFORM_SAR_MEMi8_ONE_APX: xed_iform_enum_t = 2640;
pub const XED_IFORM_SAR_MEMv_CL: xed_iform_enum_t = 2641;
pub const XED_IFORM_SAR_MEMv_CL_APX: xed_iform_enum_t = 2642;
pub const XED_IFORM_SAR_MEMv_IMM8_APX: xed_iform_enum_t = 2643;
pub const XED_IFORM_SAR_MEMv_IMMb: xed_iform_enum_t = 2644;
pub const XED_IFORM_SAR_MEMv_ONE: xed_iform_enum_t = 2645;
pub const XED_IFORM_SAR_MEMv_ONE_APX: xed_iform_enum_t = 2646;
pub const XED_IFORM_SARX_GPR32d_GPR32d_GPR32d: xed_iform_enum_t = 2647;
pub const XED_IFORM_SARX_GPR32d_MEMd_GPR32d: xed_iform_enum_t = 2648;
pub const XED_IFORM_SARX_GPR32i32_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 2649;
pub const XED_IFORM_SARX_GPR32i32_MEMi32_GPR32i32_APX: xed_iform_enum_t = 2650;
pub const XED_IFORM_SARX_GPR64i64_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 2651;
pub const XED_IFORM_SARX_GPR64i64_MEMi64_GPR64i64_APX: xed_iform_enum_t = 2652;
pub const XED_IFORM_SARX_GPR64q_GPR64q_GPR64q: xed_iform_enum_t = 2653;
pub const XED_IFORM_SARX_GPR64q_MEMq_GPR64q: xed_iform_enum_t = 2654;
pub const XED_IFORM_SAVEPREVSSP: xed_iform_enum_t = 2655;
pub const XED_IFORM_SBB_AL_IMMb: xed_iform_enum_t = 2656;
pub const XED_IFORM_SBB_GPR8_GPR8_18: xed_iform_enum_t = 2657;
pub const XED_IFORM_SBB_GPR8_GPR8_1A: xed_iform_enum_t = 2658;
pub const XED_IFORM_SBB_GPR8_IMMb_80r3: xed_iform_enum_t = 2659;
pub const XED_IFORM_SBB_GPR8_IMMb_82r3: xed_iform_enum_t = 2660;
pub const XED_IFORM_SBB_GPR8_MEMb: xed_iform_enum_t = 2661;
pub const XED_IFORM_SBB_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 2662;
pub const XED_IFORM_SBB_GPR8i8_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 2663;
pub const XED_IFORM_SBB_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 2664;
pub const XED_IFORM_SBB_GPR8i8_GPR8i8_MEMi8_APX: xed_iform_enum_t = 2665;
pub const XED_IFORM_SBB_GPR8i8_IMM8_APX: xed_iform_enum_t = 2666;
pub const XED_IFORM_SBB_GPR8i8_MEMi8_APX: xed_iform_enum_t = 2667;
pub const XED_IFORM_SBB_GPR8i8_MEMi8_GPR8i8_APX: xed_iform_enum_t = 2668;
pub const XED_IFORM_SBB_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 2669;
pub const XED_IFORM_SBB_GPRv_GPRv_19: xed_iform_enum_t = 2670;
pub const XED_IFORM_SBB_GPRv_GPRv_1B: xed_iform_enum_t = 2671;
pub const XED_IFORM_SBB_GPRv_GPRv_APX: xed_iform_enum_t = 2672;
pub const XED_IFORM_SBB_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 2673;
pub const XED_IFORM_SBB_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2674;
pub const XED_IFORM_SBB_GPRv_GPRv_IMMz_APX: xed_iform_enum_t = 2675;
pub const XED_IFORM_SBB_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 2676;
pub const XED_IFORM_SBB_GPRv_IMM8_APX: xed_iform_enum_t = 2677;
pub const XED_IFORM_SBB_GPRv_IMMb: xed_iform_enum_t = 2678;
pub const XED_IFORM_SBB_GPRv_IMMz: xed_iform_enum_t = 2679;
pub const XED_IFORM_SBB_GPRv_IMMz_APX: xed_iform_enum_t = 2680;
pub const XED_IFORM_SBB_GPRv_MEMv: xed_iform_enum_t = 2681;
pub const XED_IFORM_SBB_GPRv_MEMv_APX: xed_iform_enum_t = 2682;
pub const XED_IFORM_SBB_GPRv_MEMv_GPRv_APX: xed_iform_enum_t = 2683;
pub const XED_IFORM_SBB_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 2684;
pub const XED_IFORM_SBB_GPRv_MEMv_IMMz_APX: xed_iform_enum_t = 2685;
pub const XED_IFORM_SBB_MEMb_GPR8: xed_iform_enum_t = 2686;
pub const XED_IFORM_SBB_MEMb_IMMb_80r3: xed_iform_enum_t = 2687;
pub const XED_IFORM_SBB_MEMb_IMMb_82r3: xed_iform_enum_t = 2688;
pub const XED_IFORM_SBB_MEMi8_GPR8i8_APX: xed_iform_enum_t = 2689;
pub const XED_IFORM_SBB_MEMi8_IMM8_APX: xed_iform_enum_t = 2690;
pub const XED_IFORM_SBB_MEMv_GPRv: xed_iform_enum_t = 2691;
pub const XED_IFORM_SBB_MEMv_GPRv_APX: xed_iform_enum_t = 2692;
pub const XED_IFORM_SBB_MEMv_IMM8_APX: xed_iform_enum_t = 2693;
pub const XED_IFORM_SBB_MEMv_IMMb: xed_iform_enum_t = 2694;
pub const XED_IFORM_SBB_MEMv_IMMz: xed_iform_enum_t = 2695;
pub const XED_IFORM_SBB_MEMv_IMMz_APX: xed_iform_enum_t = 2696;
pub const XED_IFORM_SBB_OrAX_IMMz: xed_iform_enum_t = 2697;
pub const XED_IFORM_SBB_LOCK_MEMb_GPR8: xed_iform_enum_t = 2698;
pub const XED_IFORM_SBB_LOCK_MEMb_IMMb_80r3: xed_iform_enum_t = 2699;
pub const XED_IFORM_SBB_LOCK_MEMb_IMMb_82r3: xed_iform_enum_t = 2700;
pub const XED_IFORM_SBB_LOCK_MEMv_GPRv: xed_iform_enum_t = 2701;
pub const XED_IFORM_SBB_LOCK_MEMv_IMMb: xed_iform_enum_t = 2702;
pub const XED_IFORM_SBB_LOCK_MEMv_IMMz: xed_iform_enum_t = 2703;
pub const XED_IFORM_SCASB: xed_iform_enum_t = 2704;
pub const XED_IFORM_SCASD: xed_iform_enum_t = 2705;
pub const XED_IFORM_SCASQ: xed_iform_enum_t = 2706;
pub const XED_IFORM_SCASW: xed_iform_enum_t = 2707;
pub const XED_IFORM_SEAMCALL: xed_iform_enum_t = 2708;
pub const XED_IFORM_SEAMOPS: xed_iform_enum_t = 2709;
pub const XED_IFORM_SEAMRET: xed_iform_enum_t = 2710;
pub const XED_IFORM_SENDUIPI_GPR64u32: xed_iform_enum_t = 2711;
pub const XED_IFORM_SERIALIZE: xed_iform_enum_t = 2712;
pub const XED_IFORM_SETB_GPR8: xed_iform_enum_t = 2713;
pub const XED_IFORM_SETB_GPR8i8_APX: xed_iform_enum_t = 2714;
pub const XED_IFORM_SETB_MEMb: xed_iform_enum_t = 2715;
pub const XED_IFORM_SETB_MEMi8_APX: xed_iform_enum_t = 2716;
pub const XED_IFORM_SETBE_GPR8: xed_iform_enum_t = 2717;
pub const XED_IFORM_SETBE_GPR8i8_APX: xed_iform_enum_t = 2718;
pub const XED_IFORM_SETBE_MEMb: xed_iform_enum_t = 2719;
pub const XED_IFORM_SETBE_MEMi8_APX: xed_iform_enum_t = 2720;
pub const XED_IFORM_SETL_GPR8: xed_iform_enum_t = 2721;
pub const XED_IFORM_SETL_GPR8i8_APX: xed_iform_enum_t = 2722;
pub const XED_IFORM_SETL_MEMb: xed_iform_enum_t = 2723;
pub const XED_IFORM_SETL_MEMi8_APX: xed_iform_enum_t = 2724;
pub const XED_IFORM_SETLE_GPR8: xed_iform_enum_t = 2725;
pub const XED_IFORM_SETLE_GPR8i8_APX: xed_iform_enum_t = 2726;
pub const XED_IFORM_SETLE_MEMb: xed_iform_enum_t = 2727;
pub const XED_IFORM_SETLE_MEMi8_APX: xed_iform_enum_t = 2728;
pub const XED_IFORM_SETNB_GPR8: xed_iform_enum_t = 2729;
pub const XED_IFORM_SETNB_GPR8i8_APX: xed_iform_enum_t = 2730;
pub const XED_IFORM_SETNB_MEMb: xed_iform_enum_t = 2731;
pub const XED_IFORM_SETNB_MEMi8_APX: xed_iform_enum_t = 2732;
pub const XED_IFORM_SETNBE_GPR8: xed_iform_enum_t = 2733;
pub const XED_IFORM_SETNBE_GPR8i8_APX: xed_iform_enum_t = 2734;
pub const XED_IFORM_SETNBE_MEMb: xed_iform_enum_t = 2735;
pub const XED_IFORM_SETNBE_MEMi8_APX: xed_iform_enum_t = 2736;
pub const XED_IFORM_SETNL_GPR8: xed_iform_enum_t = 2737;
pub const XED_IFORM_SETNL_GPR8i8_APX: xed_iform_enum_t = 2738;
pub const XED_IFORM_SETNL_MEMb: xed_iform_enum_t = 2739;
pub const XED_IFORM_SETNL_MEMi8_APX: xed_iform_enum_t = 2740;
pub const XED_IFORM_SETNLE_GPR8: xed_iform_enum_t = 2741;
pub const XED_IFORM_SETNLE_GPR8i8_APX: xed_iform_enum_t = 2742;
pub const XED_IFORM_SETNLE_MEMb: xed_iform_enum_t = 2743;
pub const XED_IFORM_SETNLE_MEMi8_APX: xed_iform_enum_t = 2744;
pub const XED_IFORM_SETNO_GPR8: xed_iform_enum_t = 2745;
pub const XED_IFORM_SETNO_GPR8i8_APX: xed_iform_enum_t = 2746;
pub const XED_IFORM_SETNO_MEMb: xed_iform_enum_t = 2747;
pub const XED_IFORM_SETNO_MEMi8_APX: xed_iform_enum_t = 2748;
pub const XED_IFORM_SETNP_GPR8: xed_iform_enum_t = 2749;
pub const XED_IFORM_SETNP_GPR8i8_APX: xed_iform_enum_t = 2750;
pub const XED_IFORM_SETNP_MEMb: xed_iform_enum_t = 2751;
pub const XED_IFORM_SETNP_MEMi8_APX: xed_iform_enum_t = 2752;
pub const XED_IFORM_SETNS_GPR8: xed_iform_enum_t = 2753;
pub const XED_IFORM_SETNS_GPR8i8_APX: xed_iform_enum_t = 2754;
pub const XED_IFORM_SETNS_MEMb: xed_iform_enum_t = 2755;
pub const XED_IFORM_SETNS_MEMi8_APX: xed_iform_enum_t = 2756;
pub const XED_IFORM_SETNZ_GPR8: xed_iform_enum_t = 2757;
pub const XED_IFORM_SETNZ_GPR8i8_APX: xed_iform_enum_t = 2758;
pub const XED_IFORM_SETNZ_MEMb: xed_iform_enum_t = 2759;
pub const XED_IFORM_SETNZ_MEMi8_APX: xed_iform_enum_t = 2760;
pub const XED_IFORM_SETO_GPR8: xed_iform_enum_t = 2761;
pub const XED_IFORM_SETO_GPR8i8_APX: xed_iform_enum_t = 2762;
pub const XED_IFORM_SETO_MEMb: xed_iform_enum_t = 2763;
pub const XED_IFORM_SETO_MEMi8_APX: xed_iform_enum_t = 2764;
pub const XED_IFORM_SETP_GPR8: xed_iform_enum_t = 2765;
pub const XED_IFORM_SETP_GPR8i8_APX: xed_iform_enum_t = 2766;
pub const XED_IFORM_SETP_MEMb: xed_iform_enum_t = 2767;
pub const XED_IFORM_SETP_MEMi8_APX: xed_iform_enum_t = 2768;
pub const XED_IFORM_SETS_GPR8: xed_iform_enum_t = 2769;
pub const XED_IFORM_SETS_GPR8i8_APX: xed_iform_enum_t = 2770;
pub const XED_IFORM_SETS_MEMb: xed_iform_enum_t = 2771;
pub const XED_IFORM_SETS_MEMi8_APX: xed_iform_enum_t = 2772;
pub const XED_IFORM_SETSSBSY: xed_iform_enum_t = 2773;
pub const XED_IFORM_SETZ_GPR8: xed_iform_enum_t = 2774;
pub const XED_IFORM_SETZ_GPR8i8_APX: xed_iform_enum_t = 2775;
pub const XED_IFORM_SETZ_MEMb: xed_iform_enum_t = 2776;
pub const XED_IFORM_SETZ_MEMi8_APX: xed_iform_enum_t = 2777;
pub const XED_IFORM_SFENCE: xed_iform_enum_t = 2778;
pub const XED_IFORM_SGDT_MEMs: xed_iform_enum_t = 2779;
pub const XED_IFORM_SGDT_MEMs64: xed_iform_enum_t = 2780;
pub const XED_IFORM_SHA1MSG1_XMMi32_MEMi32_APX: xed_iform_enum_t = 2781;
pub const XED_IFORM_SHA1MSG1_XMMi32_MEMi32_SHA: xed_iform_enum_t = 2782;
pub const XED_IFORM_SHA1MSG1_XMMi32_XMMi32_APX: xed_iform_enum_t = 2783;
pub const XED_IFORM_SHA1MSG1_XMMi32_XMMi32_SHA: xed_iform_enum_t = 2784;
pub const XED_IFORM_SHA1MSG2_XMMi32_MEMi32_APX: xed_iform_enum_t = 2785;
pub const XED_IFORM_SHA1MSG2_XMMi32_MEMi32_SHA: xed_iform_enum_t = 2786;
pub const XED_IFORM_SHA1MSG2_XMMi32_XMMi32_APX: xed_iform_enum_t = 2787;
pub const XED_IFORM_SHA1MSG2_XMMi32_XMMi32_SHA: xed_iform_enum_t = 2788;
pub const XED_IFORM_SHA1NEXTE_XMMi32_MEMi32_APX: xed_iform_enum_t = 2789;
pub const XED_IFORM_SHA1NEXTE_XMMi32_MEMi32_SHA: xed_iform_enum_t = 2790;
pub const XED_IFORM_SHA1NEXTE_XMMi32_XMMi32_APX: xed_iform_enum_t = 2791;
pub const XED_IFORM_SHA1NEXTE_XMMi32_XMMi32_SHA: xed_iform_enum_t = 2792;
pub const XED_IFORM_SHA1RNDS4_XMMi32_MEMi32_IMM8_APX: xed_iform_enum_t = 2793;
pub const XED_IFORM_SHA1RNDS4_XMMi32_MEMi32_IMM8_SHA: xed_iform_enum_t = 2794;
pub const XED_IFORM_SHA1RNDS4_XMMi32_XMMi32_IMM8_APX: xed_iform_enum_t = 2795;
pub const XED_IFORM_SHA1RNDS4_XMMi32_XMMi32_IMM8_SHA: xed_iform_enum_t = 2796;
pub const XED_IFORM_SHA256MSG1_XMMi32_MEMi32_APX: xed_iform_enum_t = 2797;
pub const XED_IFORM_SHA256MSG1_XMMi32_MEMi32_SHA: xed_iform_enum_t = 2798;
pub const XED_IFORM_SHA256MSG1_XMMi32_XMMi32_APX: xed_iform_enum_t = 2799;
pub const XED_IFORM_SHA256MSG1_XMMi32_XMMi32_SHA: xed_iform_enum_t = 2800;
pub const XED_IFORM_SHA256MSG2_XMMi32_MEMi32_APX: xed_iform_enum_t = 2801;
pub const XED_IFORM_SHA256MSG2_XMMi32_MEMi32_SHA: xed_iform_enum_t = 2802;
pub const XED_IFORM_SHA256MSG2_XMMi32_XMMi32_APX: xed_iform_enum_t = 2803;
pub const XED_IFORM_SHA256MSG2_XMMi32_XMMi32_SHA: xed_iform_enum_t = 2804;
pub const XED_IFORM_SHA256RNDS2_XMMi32_MEMi32_APX: xed_iform_enum_t = 2805;
pub const XED_IFORM_SHA256RNDS2_XMMi32_MEMi32_SHA: xed_iform_enum_t = 2806;
pub const XED_IFORM_SHA256RNDS2_XMMi32_XMMi32_APX: xed_iform_enum_t = 2807;
pub const XED_IFORM_SHA256RNDS2_XMMi32_XMMi32_SHA: xed_iform_enum_t = 2808;
pub const XED_IFORM_SHL_GPR8_CL_D2r4: xed_iform_enum_t = 2809;
pub const XED_IFORM_SHL_GPR8_CL_D2r6: xed_iform_enum_t = 2810;
pub const XED_IFORM_SHL_GPR8_IMMb_C0r4: xed_iform_enum_t = 2811;
pub const XED_IFORM_SHL_GPR8_IMMb_C0r6: xed_iform_enum_t = 2812;
pub const XED_IFORM_SHL_GPR8_ONE_D0r4: xed_iform_enum_t = 2813;
pub const XED_IFORM_SHL_GPR8_ONE_D0r6: xed_iform_enum_t = 2814;
pub const XED_IFORM_SHL_GPR8i8_CL_APX: xed_iform_enum_t = 2815;
pub const XED_IFORM_SHL_GPR8i8_GPR8i8_CL_APX: xed_iform_enum_t = 2816;
pub const XED_IFORM_SHL_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 2817;
pub const XED_IFORM_SHL_GPR8i8_GPR8i8_ONE_APX: xed_iform_enum_t = 2818;
pub const XED_IFORM_SHL_GPR8i8_IMM8_APX: xed_iform_enum_t = 2819;
pub const XED_IFORM_SHL_GPR8i8_MEMi8_CL_APX: xed_iform_enum_t = 2820;
pub const XED_IFORM_SHL_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 2821;
pub const XED_IFORM_SHL_GPR8i8_MEMi8_ONE_APX: xed_iform_enum_t = 2822;
pub const XED_IFORM_SHL_GPR8i8_ONE_APX: xed_iform_enum_t = 2823;
pub const XED_IFORM_SHL_GPRv_CL_APX: xed_iform_enum_t = 2824;
pub const XED_IFORM_SHL_GPRv_CL_D3r4: xed_iform_enum_t = 2825;
pub const XED_IFORM_SHL_GPRv_CL_D3r6: xed_iform_enum_t = 2826;
pub const XED_IFORM_SHL_GPRv_GPRv_CL_APX: xed_iform_enum_t = 2827;
pub const XED_IFORM_SHL_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2828;
pub const XED_IFORM_SHL_GPRv_GPRv_ONE_APX: xed_iform_enum_t = 2829;
pub const XED_IFORM_SHL_GPRv_IMM8_APX: xed_iform_enum_t = 2830;
pub const XED_IFORM_SHL_GPRv_IMMb_C1r4: xed_iform_enum_t = 2831;
pub const XED_IFORM_SHL_GPRv_IMMb_C1r6: xed_iform_enum_t = 2832;
pub const XED_IFORM_SHL_GPRv_MEMv_CL_APX: xed_iform_enum_t = 2833;
pub const XED_IFORM_SHL_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 2834;
pub const XED_IFORM_SHL_GPRv_MEMv_ONE_APX: xed_iform_enum_t = 2835;
pub const XED_IFORM_SHL_GPRv_ONE_APX: xed_iform_enum_t = 2836;
pub const XED_IFORM_SHL_GPRv_ONE_D1r4: xed_iform_enum_t = 2837;
pub const XED_IFORM_SHL_GPRv_ONE_D1r6: xed_iform_enum_t = 2838;
pub const XED_IFORM_SHL_MEMb_CL_D2r4: xed_iform_enum_t = 2839;
pub const XED_IFORM_SHL_MEMb_CL_D2r6: xed_iform_enum_t = 2840;
pub const XED_IFORM_SHL_MEMb_IMMb_C0r4: xed_iform_enum_t = 2841;
pub const XED_IFORM_SHL_MEMb_IMMb_C0r6: xed_iform_enum_t = 2842;
pub const XED_IFORM_SHL_MEMb_ONE_D0r4: xed_iform_enum_t = 2843;
pub const XED_IFORM_SHL_MEMb_ONE_D0r6: xed_iform_enum_t = 2844;
pub const XED_IFORM_SHL_MEMi8_CL_APX: xed_iform_enum_t = 2845;
pub const XED_IFORM_SHL_MEMi8_IMM8_APX: xed_iform_enum_t = 2846;
pub const XED_IFORM_SHL_MEMi8_ONE_APX: xed_iform_enum_t = 2847;
pub const XED_IFORM_SHL_MEMv_CL_APX: xed_iform_enum_t = 2848;
pub const XED_IFORM_SHL_MEMv_CL_D3r4: xed_iform_enum_t = 2849;
pub const XED_IFORM_SHL_MEMv_CL_D3r6: xed_iform_enum_t = 2850;
pub const XED_IFORM_SHL_MEMv_IMM8_APX: xed_iform_enum_t = 2851;
pub const XED_IFORM_SHL_MEMv_IMMb_C1r4: xed_iform_enum_t = 2852;
pub const XED_IFORM_SHL_MEMv_IMMb_C1r6: xed_iform_enum_t = 2853;
pub const XED_IFORM_SHL_MEMv_ONE_APX: xed_iform_enum_t = 2854;
pub const XED_IFORM_SHL_MEMv_ONE_D1r4: xed_iform_enum_t = 2855;
pub const XED_IFORM_SHL_MEMv_ONE_D1r6: xed_iform_enum_t = 2856;
pub const XED_IFORM_SHLD_GPRv_GPRv_CL: xed_iform_enum_t = 2857;
pub const XED_IFORM_SHLD_GPRv_GPRv_CL_APX: xed_iform_enum_t = 2858;
pub const XED_IFORM_SHLD_GPRv_GPRv_GPRv_CL_APX: xed_iform_enum_t = 2859;
pub const XED_IFORM_SHLD_GPRv_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2860;
pub const XED_IFORM_SHLD_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2861;
pub const XED_IFORM_SHLD_GPRv_GPRv_IMMb: xed_iform_enum_t = 2862;
pub const XED_IFORM_SHLD_GPRv_MEMv_GPRv_CL_APX: xed_iform_enum_t = 2863;
pub const XED_IFORM_SHLD_GPRv_MEMv_GPRv_IMM8_APX: xed_iform_enum_t = 2864;
pub const XED_IFORM_SHLD_MEMv_GPRv_CL: xed_iform_enum_t = 2865;
pub const XED_IFORM_SHLD_MEMv_GPRv_CL_APX: xed_iform_enum_t = 2866;
pub const XED_IFORM_SHLD_MEMv_GPRv_IMM8_APX: xed_iform_enum_t = 2867;
pub const XED_IFORM_SHLD_MEMv_GPRv_IMMb: xed_iform_enum_t = 2868;
pub const XED_IFORM_SHLX_GPR32d_GPR32d_GPR32d: xed_iform_enum_t = 2869;
pub const XED_IFORM_SHLX_GPR32d_MEMd_GPR32d: xed_iform_enum_t = 2870;
pub const XED_IFORM_SHLX_GPR32i32_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 2871;
pub const XED_IFORM_SHLX_GPR32i32_MEMi32_GPR32i32_APX: xed_iform_enum_t = 2872;
pub const XED_IFORM_SHLX_GPR64i64_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 2873;
pub const XED_IFORM_SHLX_GPR64i64_MEMi64_GPR64i64_APX: xed_iform_enum_t = 2874;
pub const XED_IFORM_SHLX_GPR64q_GPR64q_GPR64q: xed_iform_enum_t = 2875;
pub const XED_IFORM_SHLX_GPR64q_MEMq_GPR64q: xed_iform_enum_t = 2876;
pub const XED_IFORM_SHR_GPR8_CL: xed_iform_enum_t = 2877;
pub const XED_IFORM_SHR_GPR8_IMMb: xed_iform_enum_t = 2878;
pub const XED_IFORM_SHR_GPR8_ONE: xed_iform_enum_t = 2879;
pub const XED_IFORM_SHR_GPR8i8_CL_APX: xed_iform_enum_t = 2880;
pub const XED_IFORM_SHR_GPR8i8_GPR8i8_CL_APX: xed_iform_enum_t = 2881;
pub const XED_IFORM_SHR_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 2882;
pub const XED_IFORM_SHR_GPR8i8_GPR8i8_ONE_APX: xed_iform_enum_t = 2883;
pub const XED_IFORM_SHR_GPR8i8_IMM8_APX: xed_iform_enum_t = 2884;
pub const XED_IFORM_SHR_GPR8i8_MEMi8_CL_APX: xed_iform_enum_t = 2885;
pub const XED_IFORM_SHR_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 2886;
pub const XED_IFORM_SHR_GPR8i8_MEMi8_ONE_APX: xed_iform_enum_t = 2887;
pub const XED_IFORM_SHR_GPR8i8_ONE_APX: xed_iform_enum_t = 2888;
pub const XED_IFORM_SHR_GPRv_CL: xed_iform_enum_t = 2889;
pub const XED_IFORM_SHR_GPRv_CL_APX: xed_iform_enum_t = 2890;
pub const XED_IFORM_SHR_GPRv_GPRv_CL_APX: xed_iform_enum_t = 2891;
pub const XED_IFORM_SHR_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2892;
pub const XED_IFORM_SHR_GPRv_GPRv_ONE_APX: xed_iform_enum_t = 2893;
pub const XED_IFORM_SHR_GPRv_IMM8_APX: xed_iform_enum_t = 2894;
pub const XED_IFORM_SHR_GPRv_IMMb: xed_iform_enum_t = 2895;
pub const XED_IFORM_SHR_GPRv_MEMv_CL_APX: xed_iform_enum_t = 2896;
pub const XED_IFORM_SHR_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 2897;
pub const XED_IFORM_SHR_GPRv_MEMv_ONE_APX: xed_iform_enum_t = 2898;
pub const XED_IFORM_SHR_GPRv_ONE: xed_iform_enum_t = 2899;
pub const XED_IFORM_SHR_GPRv_ONE_APX: xed_iform_enum_t = 2900;
pub const XED_IFORM_SHR_MEMb_CL: xed_iform_enum_t = 2901;
pub const XED_IFORM_SHR_MEMb_IMMb: xed_iform_enum_t = 2902;
pub const XED_IFORM_SHR_MEMb_ONE: xed_iform_enum_t = 2903;
pub const XED_IFORM_SHR_MEMi8_CL_APX: xed_iform_enum_t = 2904;
pub const XED_IFORM_SHR_MEMi8_IMM8_APX: xed_iform_enum_t = 2905;
pub const XED_IFORM_SHR_MEMi8_ONE_APX: xed_iform_enum_t = 2906;
pub const XED_IFORM_SHR_MEMv_CL: xed_iform_enum_t = 2907;
pub const XED_IFORM_SHR_MEMv_CL_APX: xed_iform_enum_t = 2908;
pub const XED_IFORM_SHR_MEMv_IMM8_APX: xed_iform_enum_t = 2909;
pub const XED_IFORM_SHR_MEMv_IMMb: xed_iform_enum_t = 2910;
pub const XED_IFORM_SHR_MEMv_ONE: xed_iform_enum_t = 2911;
pub const XED_IFORM_SHR_MEMv_ONE_APX: xed_iform_enum_t = 2912;
pub const XED_IFORM_SHRD_GPRv_GPRv_CL: xed_iform_enum_t = 2913;
pub const XED_IFORM_SHRD_GPRv_GPRv_CL_APX: xed_iform_enum_t = 2914;
pub const XED_IFORM_SHRD_GPRv_GPRv_GPRv_CL_APX: xed_iform_enum_t = 2915;
pub const XED_IFORM_SHRD_GPRv_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2916;
pub const XED_IFORM_SHRD_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2917;
pub const XED_IFORM_SHRD_GPRv_GPRv_IMMb: xed_iform_enum_t = 2918;
pub const XED_IFORM_SHRD_GPRv_MEMv_GPRv_CL_APX: xed_iform_enum_t = 2919;
pub const XED_IFORM_SHRD_GPRv_MEMv_GPRv_IMM8_APX: xed_iform_enum_t = 2920;
pub const XED_IFORM_SHRD_MEMv_GPRv_CL: xed_iform_enum_t = 2921;
pub const XED_IFORM_SHRD_MEMv_GPRv_CL_APX: xed_iform_enum_t = 2922;
pub const XED_IFORM_SHRD_MEMv_GPRv_IMM8_APX: xed_iform_enum_t = 2923;
pub const XED_IFORM_SHRD_MEMv_GPRv_IMMb: xed_iform_enum_t = 2924;
pub const XED_IFORM_SHRX_GPR32d_GPR32d_GPR32d: xed_iform_enum_t = 2925;
pub const XED_IFORM_SHRX_GPR32d_MEMd_GPR32d: xed_iform_enum_t = 2926;
pub const XED_IFORM_SHRX_GPR32i32_GPR32i32_GPR32i32_APX: xed_iform_enum_t = 2927;
pub const XED_IFORM_SHRX_GPR32i32_MEMi32_GPR32i32_APX: xed_iform_enum_t = 2928;
pub const XED_IFORM_SHRX_GPR64i64_GPR64i64_GPR64i64_APX: xed_iform_enum_t = 2929;
pub const XED_IFORM_SHRX_GPR64i64_MEMi64_GPR64i64_APX: xed_iform_enum_t = 2930;
pub const XED_IFORM_SHRX_GPR64q_GPR64q_GPR64q: xed_iform_enum_t = 2931;
pub const XED_IFORM_SHRX_GPR64q_MEMq_GPR64q: xed_iform_enum_t = 2932;
pub const XED_IFORM_SHUFPD_XMMpd_MEMpd_IMMb: xed_iform_enum_t = 2933;
pub const XED_IFORM_SHUFPD_XMMpd_XMMpd_IMMb: xed_iform_enum_t = 2934;
pub const XED_IFORM_SHUFPS_XMMps_MEMps_IMMb: xed_iform_enum_t = 2935;
pub const XED_IFORM_SHUFPS_XMMps_XMMps_IMMb: xed_iform_enum_t = 2936;
pub const XED_IFORM_SIDT_MEMs: xed_iform_enum_t = 2937;
pub const XED_IFORM_SIDT_MEMs64: xed_iform_enum_t = 2938;
pub const XED_IFORM_SKINIT_EAX: xed_iform_enum_t = 2939;
pub const XED_IFORM_SLDT_GPRv: xed_iform_enum_t = 2940;
pub const XED_IFORM_SLDT_MEMw: xed_iform_enum_t = 2941;
pub const XED_IFORM_SLWPCB_GPRyy: xed_iform_enum_t = 2942;
pub const XED_IFORM_SMSW_GPRv: xed_iform_enum_t = 2943;
pub const XED_IFORM_SMSW_MEMw: xed_iform_enum_t = 2944;
pub const XED_IFORM_SQRTPD_XMMpd_MEMpd: xed_iform_enum_t = 2945;
pub const XED_IFORM_SQRTPD_XMMpd_XMMpd: xed_iform_enum_t = 2946;
pub const XED_IFORM_SQRTPS_XMMps_MEMps: xed_iform_enum_t = 2947;
pub const XED_IFORM_SQRTPS_XMMps_XMMps: xed_iform_enum_t = 2948;
pub const XED_IFORM_SQRTSD_XMMsd_MEMsd: xed_iform_enum_t = 2949;
pub const XED_IFORM_SQRTSD_XMMsd_XMMsd: xed_iform_enum_t = 2950;
pub const XED_IFORM_SQRTSS_XMMss_MEMss: xed_iform_enum_t = 2951;
pub const XED_IFORM_SQRTSS_XMMss_XMMss: xed_iform_enum_t = 2952;
pub const XED_IFORM_STAC: xed_iform_enum_t = 2953;
pub const XED_IFORM_STC: xed_iform_enum_t = 2954;
pub const XED_IFORM_STD: xed_iform_enum_t = 2955;
pub const XED_IFORM_STGI: xed_iform_enum_t = 2956;
pub const XED_IFORM_STI: xed_iform_enum_t = 2957;
pub const XED_IFORM_STMXCSR_MEMd: xed_iform_enum_t = 2958;
pub const XED_IFORM_STOSB: xed_iform_enum_t = 2959;
pub const XED_IFORM_STOSD: xed_iform_enum_t = 2960;
pub const XED_IFORM_STOSQ: xed_iform_enum_t = 2961;
pub const XED_IFORM_STOSW: xed_iform_enum_t = 2962;
pub const XED_IFORM_STR_GPRv: xed_iform_enum_t = 2963;
pub const XED_IFORM_STR_MEMw: xed_iform_enum_t = 2964;
pub const XED_IFORM_STTILECFG_MEM: xed_iform_enum_t = 2965;
pub const XED_IFORM_STTILECFG_MEM_APX: xed_iform_enum_t = 2966;
pub const XED_IFORM_STUI: xed_iform_enum_t = 2967;
pub const XED_IFORM_SUB_AL_IMMb: xed_iform_enum_t = 2968;
pub const XED_IFORM_SUB_GPR8_GPR8_28: xed_iform_enum_t = 2969;
pub const XED_IFORM_SUB_GPR8_GPR8_2A: xed_iform_enum_t = 2970;
pub const XED_IFORM_SUB_GPR8_IMMb_80r5: xed_iform_enum_t = 2971;
pub const XED_IFORM_SUB_GPR8_IMMb_82r5: xed_iform_enum_t = 2972;
pub const XED_IFORM_SUB_GPR8_MEMb: xed_iform_enum_t = 2973;
pub const XED_IFORM_SUB_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 2974;
pub const XED_IFORM_SUB_GPR8i8_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 2975;
pub const XED_IFORM_SUB_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 2976;
pub const XED_IFORM_SUB_GPR8i8_GPR8i8_MEMi8_APX: xed_iform_enum_t = 2977;
pub const XED_IFORM_SUB_GPR8i8_IMM8_APX: xed_iform_enum_t = 2978;
pub const XED_IFORM_SUB_GPR8i8_MEMi8_APX: xed_iform_enum_t = 2979;
pub const XED_IFORM_SUB_GPR8i8_MEMi8_GPR8i8_APX: xed_iform_enum_t = 2980;
pub const XED_IFORM_SUB_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 2981;
pub const XED_IFORM_SUB_GPRv_GPRv_29: xed_iform_enum_t = 2982;
pub const XED_IFORM_SUB_GPRv_GPRv_2B: xed_iform_enum_t = 2983;
pub const XED_IFORM_SUB_GPRv_GPRv_APX: xed_iform_enum_t = 2984;
pub const XED_IFORM_SUB_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 2985;
pub const XED_IFORM_SUB_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 2986;
pub const XED_IFORM_SUB_GPRv_GPRv_IMMz_APX: xed_iform_enum_t = 2987;
pub const XED_IFORM_SUB_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 2988;
pub const XED_IFORM_SUB_GPRv_IMM8_APX: xed_iform_enum_t = 2989;
pub const XED_IFORM_SUB_GPRv_IMMb: xed_iform_enum_t = 2990;
pub const XED_IFORM_SUB_GPRv_IMMz: xed_iform_enum_t = 2991;
pub const XED_IFORM_SUB_GPRv_IMMz_APX: xed_iform_enum_t = 2992;
pub const XED_IFORM_SUB_GPRv_MEMv: xed_iform_enum_t = 2993;
pub const XED_IFORM_SUB_GPRv_MEMv_APX: xed_iform_enum_t = 2994;
pub const XED_IFORM_SUB_GPRv_MEMv_GPRv_APX: xed_iform_enum_t = 2995;
pub const XED_IFORM_SUB_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 2996;
pub const XED_IFORM_SUB_GPRv_MEMv_IMMz_APX: xed_iform_enum_t = 2997;
pub const XED_IFORM_SUB_MEMb_GPR8: xed_iform_enum_t = 2998;
pub const XED_IFORM_SUB_MEMb_IMMb_80r5: xed_iform_enum_t = 2999;
pub const XED_IFORM_SUB_MEMb_IMMb_82r5: xed_iform_enum_t = 3000;
pub const XED_IFORM_SUB_MEMi8_GPR8i8_APX: xed_iform_enum_t = 3001;
pub const XED_IFORM_SUB_MEMi8_IMM8_APX: xed_iform_enum_t = 3002;
pub const XED_IFORM_SUB_MEMv_GPRv: xed_iform_enum_t = 3003;
pub const XED_IFORM_SUB_MEMv_GPRv_APX: xed_iform_enum_t = 3004;
pub const XED_IFORM_SUB_MEMv_IMM8_APX: xed_iform_enum_t = 3005;
pub const XED_IFORM_SUB_MEMv_IMMb: xed_iform_enum_t = 3006;
pub const XED_IFORM_SUB_MEMv_IMMz: xed_iform_enum_t = 3007;
pub const XED_IFORM_SUB_MEMv_IMMz_APX: xed_iform_enum_t = 3008;
pub const XED_IFORM_SUB_OrAX_IMMz: xed_iform_enum_t = 3009;
pub const XED_IFORM_SUBPD_XMMpd_MEMpd: xed_iform_enum_t = 3010;
pub const XED_IFORM_SUBPD_XMMpd_XMMpd: xed_iform_enum_t = 3011;
pub const XED_IFORM_SUBPS_XMMps_MEMps: xed_iform_enum_t = 3012;
pub const XED_IFORM_SUBPS_XMMps_XMMps: xed_iform_enum_t = 3013;
pub const XED_IFORM_SUBSD_XMMsd_MEMsd: xed_iform_enum_t = 3014;
pub const XED_IFORM_SUBSD_XMMsd_XMMsd: xed_iform_enum_t = 3015;
pub const XED_IFORM_SUBSS_XMMss_MEMss: xed_iform_enum_t = 3016;
pub const XED_IFORM_SUBSS_XMMss_XMMss: xed_iform_enum_t = 3017;
pub const XED_IFORM_SUB_LOCK_MEMb_GPR8: xed_iform_enum_t = 3018;
pub const XED_IFORM_SUB_LOCK_MEMb_IMMb_80r5: xed_iform_enum_t = 3019;
pub const XED_IFORM_SUB_LOCK_MEMb_IMMb_82r5: xed_iform_enum_t = 3020;
pub const XED_IFORM_SUB_LOCK_MEMv_GPRv: xed_iform_enum_t = 3021;
pub const XED_IFORM_SUB_LOCK_MEMv_IMMb: xed_iform_enum_t = 3022;
pub const XED_IFORM_SUB_LOCK_MEMv_IMMz: xed_iform_enum_t = 3023;
pub const XED_IFORM_SWAPGS: xed_iform_enum_t = 3024;
pub const XED_IFORM_SYSCALL: xed_iform_enum_t = 3025;
pub const XED_IFORM_SYSCALL_32: xed_iform_enum_t = 3026;
pub const XED_IFORM_SYSENTER: xed_iform_enum_t = 3027;
pub const XED_IFORM_SYSEXIT: xed_iform_enum_t = 3028;
pub const XED_IFORM_SYSRET: xed_iform_enum_t = 3029;
pub const XED_IFORM_SYSRET64: xed_iform_enum_t = 3030;
pub const XED_IFORM_SYSRET_AMD: xed_iform_enum_t = 3031;
pub const XED_IFORM_T1MSKC_GPR32d_GPR32d: xed_iform_enum_t = 3032;
pub const XED_IFORM_T1MSKC_GPR32d_MEMd: xed_iform_enum_t = 3033;
pub const XED_IFORM_T1MSKC_GPRyy_GPRyy: xed_iform_enum_t = 3034;
pub const XED_IFORM_T1MSKC_GPRyy_MEMy: xed_iform_enum_t = 3035;
pub const XED_IFORM_TCMMIMFP16PS_TMMf32_TMM2f16_TMM2f16: xed_iform_enum_t = 3036;
pub const XED_IFORM_TCMMRLFP16PS_TMMf32_TMM2f16_TMM2f16: xed_iform_enum_t = 3037;
pub const XED_IFORM_TDCALL: xed_iform_enum_t = 3038;
pub const XED_IFORM_TDPBF16PS_TMMf32_TMM2bf16_TMM2bf16: xed_iform_enum_t = 3039;
pub const XED_IFORM_TDPBSSD_TMMi32_TMM4i8_TMM4i8: xed_iform_enum_t = 3040;
pub const XED_IFORM_TDPBSUD_TMMi32_TMM4i8_TMM4u8: xed_iform_enum_t = 3041;
pub const XED_IFORM_TDPBUSD_TMMi32_TMM4u8_TMM4i8: xed_iform_enum_t = 3042;
pub const XED_IFORM_TDPBUUD_TMMu32_TMM4u8_TMM4u8: xed_iform_enum_t = 3043;
pub const XED_IFORM_TDPFP16PS_TMMf32_TMM2f16_TMM2f16: xed_iform_enum_t = 3044;
pub const XED_IFORM_TEST_AL_IMMb: xed_iform_enum_t = 3045;
pub const XED_IFORM_TEST_GPR8_GPR8: xed_iform_enum_t = 3046;
pub const XED_IFORM_TEST_GPR8_IMMb_F6r0: xed_iform_enum_t = 3047;
pub const XED_IFORM_TEST_GPR8_IMMb_F6r1: xed_iform_enum_t = 3048;
pub const XED_IFORM_TEST_GPRv_GPRv: xed_iform_enum_t = 3049;
pub const XED_IFORM_TEST_GPRv_IMMz_F7r0: xed_iform_enum_t = 3050;
pub const XED_IFORM_TEST_GPRv_IMMz_F7r1: xed_iform_enum_t = 3051;
pub const XED_IFORM_TEST_MEMb_GPR8: xed_iform_enum_t = 3052;
pub const XED_IFORM_TEST_MEMb_IMMb_F6r0: xed_iform_enum_t = 3053;
pub const XED_IFORM_TEST_MEMb_IMMb_F6r1: xed_iform_enum_t = 3054;
pub const XED_IFORM_TEST_MEMv_GPRv: xed_iform_enum_t = 3055;
pub const XED_IFORM_TEST_MEMv_IMMz_F7r0: xed_iform_enum_t = 3056;
pub const XED_IFORM_TEST_MEMv_IMMz_F7r1: xed_iform_enum_t = 3057;
pub const XED_IFORM_TEST_OrAX_IMMz: xed_iform_enum_t = 3058;
pub const XED_IFORM_TESTUI: xed_iform_enum_t = 3059;
pub const XED_IFORM_TILELOADD_TMMu32_MEMu32: xed_iform_enum_t = 3060;
pub const XED_IFORM_TILELOADD_TMMu32_MEMu32_APX: xed_iform_enum_t = 3061;
pub const XED_IFORM_TILELOADDT1_TMMu32_MEMu32: xed_iform_enum_t = 3062;
pub const XED_IFORM_TILELOADDT1_TMMu32_MEMu32_APX: xed_iform_enum_t = 3063;
pub const XED_IFORM_TILERELEASE: xed_iform_enum_t = 3064;
pub const XED_IFORM_TILESTORED_MEMu32_TMMu32: xed_iform_enum_t = 3065;
pub const XED_IFORM_TILESTORED_MEMu32_TMMu32_APX: xed_iform_enum_t = 3066;
pub const XED_IFORM_TILEZERO_TMMu32: xed_iform_enum_t = 3067;
pub const XED_IFORM_TLBSYNC: xed_iform_enum_t = 3068;
pub const XED_IFORM_TPAUSE_GPR32u32: xed_iform_enum_t = 3069;
pub const XED_IFORM_TZCNT_GPRv_GPRv: xed_iform_enum_t = 3070;
pub const XED_IFORM_TZCNT_GPRv_GPRv_APX: xed_iform_enum_t = 3071;
pub const XED_IFORM_TZCNT_GPRv_MEMv: xed_iform_enum_t = 3072;
pub const XED_IFORM_TZCNT_GPRv_MEMv_APX: xed_iform_enum_t = 3073;
pub const XED_IFORM_TZMSK_GPR32d_GPR32d: xed_iform_enum_t = 3074;
pub const XED_IFORM_TZMSK_GPR32d_MEMd: xed_iform_enum_t = 3075;
pub const XED_IFORM_TZMSK_GPRyy_GPRyy: xed_iform_enum_t = 3076;
pub const XED_IFORM_TZMSK_GPRyy_MEMy: xed_iform_enum_t = 3077;
pub const XED_IFORM_UCOMISD_XMMsd_MEMsd: xed_iform_enum_t = 3078;
pub const XED_IFORM_UCOMISD_XMMsd_XMMsd: xed_iform_enum_t = 3079;
pub const XED_IFORM_UCOMISS_XMMss_MEMss: xed_iform_enum_t = 3080;
pub const XED_IFORM_UCOMISS_XMMss_XMMss: xed_iform_enum_t = 3081;
pub const XED_IFORM_UD0: xed_iform_enum_t = 3082;
pub const XED_IFORM_UD0_GPR32_GPR32: xed_iform_enum_t = 3083;
pub const XED_IFORM_UD0_GPR32_MEMd: xed_iform_enum_t = 3084;
pub const XED_IFORM_UD1_GPR32_GPR32: xed_iform_enum_t = 3085;
pub const XED_IFORM_UD1_GPR32_MEMd: xed_iform_enum_t = 3086;
pub const XED_IFORM_UD2: xed_iform_enum_t = 3087;
pub const XED_IFORM_UIRET: xed_iform_enum_t = 3088;
pub const XED_IFORM_UMONITOR_GPRa: xed_iform_enum_t = 3089;
pub const XED_IFORM_UMWAIT_GPR32: xed_iform_enum_t = 3090;
pub const XED_IFORM_UNPCKHPD_XMMpd_MEMdq: xed_iform_enum_t = 3091;
pub const XED_IFORM_UNPCKHPD_XMMpd_XMMq: xed_iform_enum_t = 3092;
pub const XED_IFORM_UNPCKHPS_XMMps_MEMdq: xed_iform_enum_t = 3093;
pub const XED_IFORM_UNPCKHPS_XMMps_XMMdq: xed_iform_enum_t = 3094;
pub const XED_IFORM_UNPCKLPD_XMMpd_MEMdq: xed_iform_enum_t = 3095;
pub const XED_IFORM_UNPCKLPD_XMMpd_XMMq: xed_iform_enum_t = 3096;
pub const XED_IFORM_UNPCKLPS_XMMps_MEMdq: xed_iform_enum_t = 3097;
pub const XED_IFORM_UNPCKLPS_XMMps_XMMq: xed_iform_enum_t = 3098;
pub const XED_IFORM_URDMSR_GPR64u64_GPR64u64: xed_iform_enum_t = 3099;
pub const XED_IFORM_URDMSR_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 3100;
pub const XED_IFORM_URDMSR_GPR64u64_IMM32: xed_iform_enum_t = 3101;
pub const XED_IFORM_URDMSR_GPR64u64_IMM32_APX: xed_iform_enum_t = 3102;
pub const XED_IFORM_UWRMSR_GPR64u64_GPR64u64: xed_iform_enum_t = 3103;
pub const XED_IFORM_UWRMSR_GPR64u64_GPR64u64_APX: xed_iform_enum_t = 3104;
pub const XED_IFORM_UWRMSR_IMM32_GPR64u64: xed_iform_enum_t = 3105;
pub const XED_IFORM_UWRMSR_IMM32_GPR64u64_APX: xed_iform_enum_t = 3106;
pub const XED_IFORM_V4FMADDPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 3107;
pub const XED_IFORM_V4FMADDSS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 3108;
pub const XED_IFORM_V4FNMADDPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 3109;
pub const XED_IFORM_V4FNMADDSS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 3110;
pub const XED_IFORM_VADDPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3111;
pub const XED_IFORM_VADDPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3112;
pub const XED_IFORM_VADDPD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 3113;
pub const XED_IFORM_VADDPD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 3114;
pub const XED_IFORM_VADDPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 3115;
pub const XED_IFORM_VADDPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 3116;
pub const XED_IFORM_VADDPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 3117;
pub const XED_IFORM_VADDPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3118;
pub const XED_IFORM_VADDPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 3119;
pub const XED_IFORM_VADDPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 3120;
pub const XED_IFORM_VADDPH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 3121;
pub const XED_IFORM_VADDPH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 3122;
pub const XED_IFORM_VADDPH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 3123;
pub const XED_IFORM_VADDPH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 3124;
pub const XED_IFORM_VADDPH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 3125;
pub const XED_IFORM_VADDPH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 3126;
pub const XED_IFORM_VADDPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3127;
pub const XED_IFORM_VADDPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3128;
pub const XED_IFORM_VADDPS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 3129;
pub const XED_IFORM_VADDPS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 3130;
pub const XED_IFORM_VADDPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 3131;
pub const XED_IFORM_VADDPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 3132;
pub const XED_IFORM_VADDPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 3133;
pub const XED_IFORM_VADDPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3134;
pub const XED_IFORM_VADDPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 3135;
pub const XED_IFORM_VADDPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 3136;
pub const XED_IFORM_VADDSD_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 3137;
pub const XED_IFORM_VADDSD_XMMdq_XMMdq_XMMq: xed_iform_enum_t = 3138;
pub const XED_IFORM_VADDSD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 3139;
pub const XED_IFORM_VADDSD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 3140;
pub const XED_IFORM_VADDSH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 3141;
pub const XED_IFORM_VADDSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 3142;
pub const XED_IFORM_VADDSS_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 3143;
pub const XED_IFORM_VADDSS_XMMdq_XMMdq_XMMd: xed_iform_enum_t = 3144;
pub const XED_IFORM_VADDSS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 3145;
pub const XED_IFORM_VADDSS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 3146;
pub const XED_IFORM_VADDSUBPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3147;
pub const XED_IFORM_VADDSUBPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3148;
pub const XED_IFORM_VADDSUBPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 3149;
pub const XED_IFORM_VADDSUBPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3150;
pub const XED_IFORM_VADDSUBPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3151;
pub const XED_IFORM_VADDSUBPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3152;
pub const XED_IFORM_VADDSUBPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 3153;
pub const XED_IFORM_VADDSUBPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3154;
pub const XED_IFORM_VAESDEC_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3155;
pub const XED_IFORM_VAESDEC_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3156;
pub const XED_IFORM_VAESDEC_XMMu128_XMMu128_MEMu128_AVX512: xed_iform_enum_t = 3157;
pub const XED_IFORM_VAESDEC_XMMu128_XMMu128_XMMu128_AVX512: xed_iform_enum_t = 3158;
pub const XED_IFORM_VAESDEC_YMMu128_YMMu128_MEMu128: xed_iform_enum_t = 3159;
pub const XED_IFORM_VAESDEC_YMMu128_YMMu128_MEMu128_AVX512: xed_iform_enum_t = 3160;
pub const XED_IFORM_VAESDEC_YMMu128_YMMu128_YMMu128: xed_iform_enum_t = 3161;
pub const XED_IFORM_VAESDEC_YMMu128_YMMu128_YMMu128_AVX512: xed_iform_enum_t = 3162;
pub const XED_IFORM_VAESDEC_ZMMu128_ZMMu128_MEMu128_AVX512: xed_iform_enum_t = 3163;
pub const XED_IFORM_VAESDEC_ZMMu128_ZMMu128_ZMMu128_AVX512: xed_iform_enum_t = 3164;
pub const XED_IFORM_VAESDECLAST_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3165;
pub const XED_IFORM_VAESDECLAST_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3166;
pub const XED_IFORM_VAESDECLAST_XMMu128_XMMu128_MEMu128_AVX512: xed_iform_enum_t = 3167;
pub const XED_IFORM_VAESDECLAST_XMMu128_XMMu128_XMMu128_AVX512: xed_iform_enum_t = 3168;
pub const XED_IFORM_VAESDECLAST_YMMu128_YMMu128_MEMu128: xed_iform_enum_t = 3169;
pub const XED_IFORM_VAESDECLAST_YMMu128_YMMu128_MEMu128_AVX512: xed_iform_enum_t = 3170;
pub const XED_IFORM_VAESDECLAST_YMMu128_YMMu128_YMMu128: xed_iform_enum_t = 3171;
pub const XED_IFORM_VAESDECLAST_YMMu128_YMMu128_YMMu128_AVX512: xed_iform_enum_t = 3172;
pub const XED_IFORM_VAESDECLAST_ZMMu128_ZMMu128_MEMu128_AVX512: xed_iform_enum_t = 3173;
pub const XED_IFORM_VAESDECLAST_ZMMu128_ZMMu128_ZMMu128_AVX512: xed_iform_enum_t = 3174;
pub const XED_IFORM_VAESENC_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3175;
pub const XED_IFORM_VAESENC_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3176;
pub const XED_IFORM_VAESENC_XMMu128_XMMu128_MEMu128_AVX512: xed_iform_enum_t = 3177;
pub const XED_IFORM_VAESENC_XMMu128_XMMu128_XMMu128_AVX512: xed_iform_enum_t = 3178;
pub const XED_IFORM_VAESENC_YMMu128_YMMu128_MEMu128: xed_iform_enum_t = 3179;
pub const XED_IFORM_VAESENC_YMMu128_YMMu128_MEMu128_AVX512: xed_iform_enum_t = 3180;
pub const XED_IFORM_VAESENC_YMMu128_YMMu128_YMMu128: xed_iform_enum_t = 3181;
pub const XED_IFORM_VAESENC_YMMu128_YMMu128_YMMu128_AVX512: xed_iform_enum_t = 3182;
pub const XED_IFORM_VAESENC_ZMMu128_ZMMu128_MEMu128_AVX512: xed_iform_enum_t = 3183;
pub const XED_IFORM_VAESENC_ZMMu128_ZMMu128_ZMMu128_AVX512: xed_iform_enum_t = 3184;
pub const XED_IFORM_VAESENCLAST_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3185;
pub const XED_IFORM_VAESENCLAST_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3186;
pub const XED_IFORM_VAESENCLAST_XMMu128_XMMu128_MEMu128_AVX512: xed_iform_enum_t = 3187;
pub const XED_IFORM_VAESENCLAST_XMMu128_XMMu128_XMMu128_AVX512: xed_iform_enum_t = 3188;
pub const XED_IFORM_VAESENCLAST_YMMu128_YMMu128_MEMu128: xed_iform_enum_t = 3189;
pub const XED_IFORM_VAESENCLAST_YMMu128_YMMu128_MEMu128_AVX512: xed_iform_enum_t = 3190;
pub const XED_IFORM_VAESENCLAST_YMMu128_YMMu128_YMMu128: xed_iform_enum_t = 3191;
pub const XED_IFORM_VAESENCLAST_YMMu128_YMMu128_YMMu128_AVX512: xed_iform_enum_t = 3192;
pub const XED_IFORM_VAESENCLAST_ZMMu128_ZMMu128_MEMu128_AVX512: xed_iform_enum_t = 3193;
pub const XED_IFORM_VAESENCLAST_ZMMu128_ZMMu128_ZMMu128_AVX512: xed_iform_enum_t = 3194;
pub const XED_IFORM_VAESIMC_XMMdq_MEMdq: xed_iform_enum_t = 3195;
pub const XED_IFORM_VAESIMC_XMMdq_XMMdq: xed_iform_enum_t = 3196;
pub const XED_IFORM_VAESKEYGENASSIST_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 3197;
pub const XED_IFORM_VAESKEYGENASSIST_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 3198;
pub const XED_IFORM_VALIGND_XMMu32_MASKmskw_XMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 3199;
pub const XED_IFORM_VALIGND_XMMu32_MASKmskw_XMMu32_XMMu32_IMM8_AVX512: xed_iform_enum_t = 3200;
pub const XED_IFORM_VALIGND_YMMu32_MASKmskw_YMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 3201;
pub const XED_IFORM_VALIGND_YMMu32_MASKmskw_YMMu32_YMMu32_IMM8_AVX512: xed_iform_enum_t = 3202;
pub const XED_IFORM_VALIGND_ZMMu32_MASKmskw_ZMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 3203;
pub const XED_IFORM_VALIGND_ZMMu32_MASKmskw_ZMMu32_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 3204;
pub const XED_IFORM_VALIGNQ_XMMu64_MASKmskw_XMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 3205;
pub const XED_IFORM_VALIGNQ_XMMu64_MASKmskw_XMMu64_XMMu64_IMM8_AVX512: xed_iform_enum_t = 3206;
pub const XED_IFORM_VALIGNQ_YMMu64_MASKmskw_YMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 3207;
pub const XED_IFORM_VALIGNQ_YMMu64_MASKmskw_YMMu64_YMMu64_IMM8_AVX512: xed_iform_enum_t = 3208;
pub const XED_IFORM_VALIGNQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 3209;
pub const XED_IFORM_VALIGNQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 3210;
pub const XED_IFORM_VANDNPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3211;
pub const XED_IFORM_VANDNPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3212;
pub const XED_IFORM_VANDNPD_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 3213;
pub const XED_IFORM_VANDNPD_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 3214;
pub const XED_IFORM_VANDNPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 3215;
pub const XED_IFORM_VANDNPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3216;
pub const XED_IFORM_VANDNPD_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 3217;
pub const XED_IFORM_VANDNPD_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 3218;
pub const XED_IFORM_VANDNPD_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 3219;
pub const XED_IFORM_VANDNPD_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 3220;
pub const XED_IFORM_VANDNPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3221;
pub const XED_IFORM_VANDNPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3222;
pub const XED_IFORM_VANDNPS_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 3223;
pub const XED_IFORM_VANDNPS_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 3224;
pub const XED_IFORM_VANDNPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 3225;
pub const XED_IFORM_VANDNPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3226;
pub const XED_IFORM_VANDNPS_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 3227;
pub const XED_IFORM_VANDNPS_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 3228;
pub const XED_IFORM_VANDNPS_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 3229;
pub const XED_IFORM_VANDNPS_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 3230;
pub const XED_IFORM_VANDPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3231;
pub const XED_IFORM_VANDPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3232;
pub const XED_IFORM_VANDPD_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 3233;
pub const XED_IFORM_VANDPD_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 3234;
pub const XED_IFORM_VANDPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 3235;
pub const XED_IFORM_VANDPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3236;
pub const XED_IFORM_VANDPD_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 3237;
pub const XED_IFORM_VANDPD_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 3238;
pub const XED_IFORM_VANDPD_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 3239;
pub const XED_IFORM_VANDPD_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 3240;
pub const XED_IFORM_VANDPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3241;
pub const XED_IFORM_VANDPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3242;
pub const XED_IFORM_VANDPS_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 3243;
pub const XED_IFORM_VANDPS_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 3244;
pub const XED_IFORM_VANDPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 3245;
pub const XED_IFORM_VANDPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3246;
pub const XED_IFORM_VANDPS_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 3247;
pub const XED_IFORM_VANDPS_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 3248;
pub const XED_IFORM_VANDPS_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 3249;
pub const XED_IFORM_VANDPS_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 3250;
pub const XED_IFORM_VBCSTNEBF162PS_XMMf32_MEMbf16: xed_iform_enum_t = 3251;
pub const XED_IFORM_VBCSTNEBF162PS_YMMf32_MEMbf16: xed_iform_enum_t = 3252;
pub const XED_IFORM_VBCSTNESH2PS_XMMf32_MEMf16: xed_iform_enum_t = 3253;
pub const XED_IFORM_VBCSTNESH2PS_YMMf32_MEMf16: xed_iform_enum_t = 3254;
pub const XED_IFORM_VBLENDMPD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 3255;
pub const XED_IFORM_VBLENDMPD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 3256;
pub const XED_IFORM_VBLENDMPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 3257;
pub const XED_IFORM_VBLENDMPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 3258;
pub const XED_IFORM_VBLENDMPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 3259;
pub const XED_IFORM_VBLENDMPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 3260;
pub const XED_IFORM_VBLENDMPS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 3261;
pub const XED_IFORM_VBLENDMPS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 3262;
pub const XED_IFORM_VBLENDMPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 3263;
pub const XED_IFORM_VBLENDMPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 3264;
pub const XED_IFORM_VBLENDMPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 3265;
pub const XED_IFORM_VBLENDMPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 3266;
pub const XED_IFORM_VBLENDPD_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 3267;
pub const XED_IFORM_VBLENDPD_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 3268;
pub const XED_IFORM_VBLENDPD_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 3269;
pub const XED_IFORM_VBLENDPD_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 3270;
pub const XED_IFORM_VBLENDPS_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 3271;
pub const XED_IFORM_VBLENDPS_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 3272;
pub const XED_IFORM_VBLENDPS_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 3273;
pub const XED_IFORM_VBLENDPS_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 3274;
pub const XED_IFORM_VBLENDVPD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 3275;
pub const XED_IFORM_VBLENDVPD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3276;
pub const XED_IFORM_VBLENDVPD_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 3277;
pub const XED_IFORM_VBLENDVPD_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3278;
pub const XED_IFORM_VBLENDVPS_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 3279;
pub const XED_IFORM_VBLENDVPS_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3280;
pub const XED_IFORM_VBLENDVPS_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 3281;
pub const XED_IFORM_VBLENDVPS_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3282;
pub const XED_IFORM_VBROADCASTF128_YMMqq_MEMdq: xed_iform_enum_t = 3283;
pub const XED_IFORM_VBROADCASTF32X2_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3284;
pub const XED_IFORM_VBROADCASTF32X2_YMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3285;
pub const XED_IFORM_VBROADCASTF32X2_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3286;
pub const XED_IFORM_VBROADCASTF32X2_ZMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3287;
pub const XED_IFORM_VBROADCASTF32X4_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3288;
pub const XED_IFORM_VBROADCASTF32X4_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3289;
pub const XED_IFORM_VBROADCASTF32X8_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3290;
pub const XED_IFORM_VBROADCASTF64X2_YMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3291;
pub const XED_IFORM_VBROADCASTF64X2_ZMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3292;
pub const XED_IFORM_VBROADCASTF64X4_ZMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3293;
pub const XED_IFORM_VBROADCASTI128_YMMqq_MEMdq: xed_iform_enum_t = 3294;
pub const XED_IFORM_VBROADCASTI32X2_XMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3295;
pub const XED_IFORM_VBROADCASTI32X2_XMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 3296;
pub const XED_IFORM_VBROADCASTI32X2_YMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3297;
pub const XED_IFORM_VBROADCASTI32X2_YMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 3298;
pub const XED_IFORM_VBROADCASTI32X2_ZMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3299;
pub const XED_IFORM_VBROADCASTI32X2_ZMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 3300;
pub const XED_IFORM_VBROADCASTI32X4_YMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3301;
pub const XED_IFORM_VBROADCASTI32X4_ZMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3302;
pub const XED_IFORM_VBROADCASTI32X8_ZMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3303;
pub const XED_IFORM_VBROADCASTI64X2_YMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 3304;
pub const XED_IFORM_VBROADCASTI64X2_ZMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 3305;
pub const XED_IFORM_VBROADCASTI64X4_ZMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 3306;
pub const XED_IFORM_VBROADCASTSD_YMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3307;
pub const XED_IFORM_VBROADCASTSD_YMMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 3308;
pub const XED_IFORM_VBROADCASTSD_YMMqq_MEMq: xed_iform_enum_t = 3309;
pub const XED_IFORM_VBROADCASTSD_YMMqq_XMMdq: xed_iform_enum_t = 3310;
pub const XED_IFORM_VBROADCASTSD_ZMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3311;
pub const XED_IFORM_VBROADCASTSD_ZMMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 3312;
pub const XED_IFORM_VBROADCASTSS_XMMdq_MEMd: xed_iform_enum_t = 3313;
pub const XED_IFORM_VBROADCASTSS_XMMdq_XMMdq: xed_iform_enum_t = 3314;
pub const XED_IFORM_VBROADCASTSS_XMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3315;
pub const XED_IFORM_VBROADCASTSS_XMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3316;
pub const XED_IFORM_VBROADCASTSS_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3317;
pub const XED_IFORM_VBROADCASTSS_YMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3318;
pub const XED_IFORM_VBROADCASTSS_YMMqq_MEMd: xed_iform_enum_t = 3319;
pub const XED_IFORM_VBROADCASTSS_YMMqq_XMMdq: xed_iform_enum_t = 3320;
pub const XED_IFORM_VBROADCASTSS_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3321;
pub const XED_IFORM_VBROADCASTSS_ZMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3322;
pub const XED_IFORM_VCMPPD_MASKmskw_MASKmskw_XMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 3323;
pub const XED_IFORM_VCMPPD_MASKmskw_MASKmskw_XMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 3324;
pub const XED_IFORM_VCMPPD_MASKmskw_MASKmskw_YMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 3325;
pub const XED_IFORM_VCMPPD_MASKmskw_MASKmskw_YMMf64_YMMf64_IMM8_AVX512: xed_iform_enum_t = 3326;
pub const XED_IFORM_VCMPPD_MASKmskw_MASKmskw_ZMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 3327;
pub const XED_IFORM_VCMPPD_MASKmskw_MASKmskw_ZMMf64_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 3328;
pub const XED_IFORM_VCMPPD_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 3329;
pub const XED_IFORM_VCMPPD_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 3330;
pub const XED_IFORM_VCMPPD_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 3331;
pub const XED_IFORM_VCMPPD_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 3332;
pub const XED_IFORM_VCMPPH_MASKmskw_MASKmskw_XMMf16_MEMf16_IMM8_AVX512: xed_iform_enum_t = 3333;
pub const XED_IFORM_VCMPPH_MASKmskw_MASKmskw_XMMf16_XMMf16_IMM8_AVX512: xed_iform_enum_t = 3334;
pub const XED_IFORM_VCMPPH_MASKmskw_MASKmskw_YMMf16_MEMf16_IMM8_AVX512: xed_iform_enum_t = 3335;
pub const XED_IFORM_VCMPPH_MASKmskw_MASKmskw_YMMf16_YMMf16_IMM8_AVX512: xed_iform_enum_t = 3336;
pub const XED_IFORM_VCMPPH_MASKmskw_MASKmskw_ZMMf16_MEMf16_IMM8_AVX512: xed_iform_enum_t = 3337;
pub const XED_IFORM_VCMPPH_MASKmskw_MASKmskw_ZMMf16_ZMMf16_IMM8_AVX512: xed_iform_enum_t = 3338;
pub const XED_IFORM_VCMPPS_MASKmskw_MASKmskw_XMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 3339;
pub const XED_IFORM_VCMPPS_MASKmskw_MASKmskw_XMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 3340;
pub const XED_IFORM_VCMPPS_MASKmskw_MASKmskw_YMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 3341;
pub const XED_IFORM_VCMPPS_MASKmskw_MASKmskw_YMMf32_YMMf32_IMM8_AVX512: xed_iform_enum_t = 3342;
pub const XED_IFORM_VCMPPS_MASKmskw_MASKmskw_ZMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 3343;
pub const XED_IFORM_VCMPPS_MASKmskw_MASKmskw_ZMMf32_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 3344;
pub const XED_IFORM_VCMPPS_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 3345;
pub const XED_IFORM_VCMPPS_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 3346;
pub const XED_IFORM_VCMPPS_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 3347;
pub const XED_IFORM_VCMPPS_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 3348;
pub const XED_IFORM_VCMPSD_MASKmskw_MASKmskw_XMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 3349;
pub const XED_IFORM_VCMPSD_MASKmskw_MASKmskw_XMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 3350;
pub const XED_IFORM_VCMPSD_XMMdq_XMMdq_MEMq_IMMb: xed_iform_enum_t = 3351;
pub const XED_IFORM_VCMPSD_XMMdq_XMMdq_XMMq_IMMb: xed_iform_enum_t = 3352;
pub const XED_IFORM_VCMPSH_MASKmskw_MASKmskw_XMMf16_MEMf16_IMM8_AVX512: xed_iform_enum_t = 3353;
pub const XED_IFORM_VCMPSH_MASKmskw_MASKmskw_XMMf16_XMMf16_IMM8_AVX512: xed_iform_enum_t = 3354;
pub const XED_IFORM_VCMPSS_MASKmskw_MASKmskw_XMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 3355;
pub const XED_IFORM_VCMPSS_MASKmskw_MASKmskw_XMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 3356;
pub const XED_IFORM_VCMPSS_XMMdq_XMMdq_MEMd_IMMb: xed_iform_enum_t = 3357;
pub const XED_IFORM_VCMPSS_XMMdq_XMMdq_XMMd_IMMb: xed_iform_enum_t = 3358;
pub const XED_IFORM_VCOMISD_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 3359;
pub const XED_IFORM_VCOMISD_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 3360;
pub const XED_IFORM_VCOMISD_XMMq_MEMq: xed_iform_enum_t = 3361;
pub const XED_IFORM_VCOMISD_XMMq_XMMq: xed_iform_enum_t = 3362;
pub const XED_IFORM_VCOMISH_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 3363;
pub const XED_IFORM_VCOMISH_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 3364;
pub const XED_IFORM_VCOMISS_XMMd_MEMd: xed_iform_enum_t = 3365;
pub const XED_IFORM_VCOMISS_XMMd_XMMd: xed_iform_enum_t = 3366;
pub const XED_IFORM_VCOMISS_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 3367;
pub const XED_IFORM_VCOMISS_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 3368;
pub const XED_IFORM_VCOMPRESSPD_MEMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 3369;
pub const XED_IFORM_VCOMPRESSPD_MEMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 3370;
pub const XED_IFORM_VCOMPRESSPD_MEMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 3371;
pub const XED_IFORM_VCOMPRESSPD_XMMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 3372;
pub const XED_IFORM_VCOMPRESSPD_YMMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 3373;
pub const XED_IFORM_VCOMPRESSPD_ZMMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 3374;
pub const XED_IFORM_VCOMPRESSPS_MEMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3375;
pub const XED_IFORM_VCOMPRESSPS_MEMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3376;
pub const XED_IFORM_VCOMPRESSPS_MEMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 3377;
pub const XED_IFORM_VCOMPRESSPS_XMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3378;
pub const XED_IFORM_VCOMPRESSPS_YMMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3379;
pub const XED_IFORM_VCOMPRESSPS_ZMMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 3380;
pub const XED_IFORM_VCVTDQ2PD_XMMdq_MEMq: xed_iform_enum_t = 3381;
pub const XED_IFORM_VCVTDQ2PD_XMMdq_XMMq: xed_iform_enum_t = 3382;
pub const XED_IFORM_VCVTDQ2PD_XMMf64_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 3383;
pub const XED_IFORM_VCVTDQ2PD_XMMf64_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 3384;
pub const XED_IFORM_VCVTDQ2PD_YMMf64_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 3385;
pub const XED_IFORM_VCVTDQ2PD_YMMf64_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 3386;
pub const XED_IFORM_VCVTDQ2PD_YMMqq_MEMdq: xed_iform_enum_t = 3387;
pub const XED_IFORM_VCVTDQ2PD_YMMqq_XMMdq: xed_iform_enum_t = 3388;
pub const XED_IFORM_VCVTDQ2PD_ZMMf64_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 3389;
pub const XED_IFORM_VCVTDQ2PD_ZMMf64_MASKmskw_YMMi32_AVX512: xed_iform_enum_t = 3390;
pub const XED_IFORM_VCVTDQ2PH_XMMf16_MASKmskw_MEMi32_AVX512_VL128: xed_iform_enum_t = 3391;
pub const XED_IFORM_VCVTDQ2PH_XMMf16_MASKmskw_MEMi32_AVX512_VL256: xed_iform_enum_t = 3392;
pub const XED_IFORM_VCVTDQ2PH_XMMf16_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 3393;
pub const XED_IFORM_VCVTDQ2PH_XMMf16_MASKmskw_YMMi32_AVX512: xed_iform_enum_t = 3394;
pub const XED_IFORM_VCVTDQ2PH_YMMf16_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 3395;
pub const XED_IFORM_VCVTDQ2PH_YMMf16_MASKmskw_ZMMi32_AVX512: xed_iform_enum_t = 3396;
pub const XED_IFORM_VCVTDQ2PS_XMMdq_MEMdq: xed_iform_enum_t = 3397;
pub const XED_IFORM_VCVTDQ2PS_XMMdq_XMMdq: xed_iform_enum_t = 3398;
pub const XED_IFORM_VCVTDQ2PS_XMMf32_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 3399;
pub const XED_IFORM_VCVTDQ2PS_XMMf32_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 3400;
pub const XED_IFORM_VCVTDQ2PS_YMMf32_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 3401;
pub const XED_IFORM_VCVTDQ2PS_YMMf32_MASKmskw_YMMi32_AVX512: xed_iform_enum_t = 3402;
pub const XED_IFORM_VCVTDQ2PS_YMMqq_MEMqq: xed_iform_enum_t = 3403;
pub const XED_IFORM_VCVTDQ2PS_YMMqq_YMMqq: xed_iform_enum_t = 3404;
pub const XED_IFORM_VCVTDQ2PS_ZMMf32_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 3405;
pub const XED_IFORM_VCVTDQ2PS_ZMMf32_MASKmskw_ZMMi32_AVX512: xed_iform_enum_t = 3406;
pub const XED_IFORM_VCVTNE2PS2BF16_XMMbf16_MASKmskw_XMMf32_MEMf32_AVX512_VL128: xed_iform_enum_t =
    3407;
pub const XED_IFORM_VCVTNE2PS2BF16_XMMbf16_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 3408;
pub const XED_IFORM_VCVTNE2PS2BF16_YMMbf16_MASKmskw_YMMf32_MEMf32_AVX512_VL256: xed_iform_enum_t =
    3409;
pub const XED_IFORM_VCVTNE2PS2BF16_YMMbf16_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 3410;
pub const XED_IFORM_VCVTNE2PS2BF16_ZMMbf16_MASKmskw_ZMMf32_MEMf32_AVX512_VL512: xed_iform_enum_t =
    3411;
pub const XED_IFORM_VCVTNE2PS2BF16_ZMMbf16_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 3412;
pub const XED_IFORM_VCVTNEEBF162PS_XMMf32_MEM2bf16: xed_iform_enum_t = 3413;
pub const XED_IFORM_VCVTNEEBF162PS_YMMf32_MEM2bf16: xed_iform_enum_t = 3414;
pub const XED_IFORM_VCVTNEEPH2PS_XMMf32_MEM2f16: xed_iform_enum_t = 3415;
pub const XED_IFORM_VCVTNEEPH2PS_YMMf32_MEM2f16: xed_iform_enum_t = 3416;
pub const XED_IFORM_VCVTNEOBF162PS_XMMf32_MEM2bf16: xed_iform_enum_t = 3417;
pub const XED_IFORM_VCVTNEOBF162PS_YMMf32_MEM2bf16: xed_iform_enum_t = 3418;
pub const XED_IFORM_VCVTNEOPH2PS_XMMf32_MEM2f16: xed_iform_enum_t = 3419;
pub const XED_IFORM_VCVTNEOPH2PS_YMMf32_MEM2f16: xed_iform_enum_t = 3420;
pub const XED_IFORM_VCVTNEPS2BF16_XMMbf16_MASKmskw_MEMf32_AVX512_VL128: xed_iform_enum_t = 3421;
pub const XED_IFORM_VCVTNEPS2BF16_XMMbf16_MASKmskw_MEMf32_AVX512_VL256: xed_iform_enum_t = 3422;
pub const XED_IFORM_VCVTNEPS2BF16_XMMbf16_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3423;
pub const XED_IFORM_VCVTNEPS2BF16_XMMbf16_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3424;
pub const XED_IFORM_VCVTNEPS2BF16_XMMbf16_MEMf32_VL128: xed_iform_enum_t = 3425;
pub const XED_IFORM_VCVTNEPS2BF16_XMMbf16_MEMf32_VL256: xed_iform_enum_t = 3426;
pub const XED_IFORM_VCVTNEPS2BF16_XMMbf16_XMMf32: xed_iform_enum_t = 3427;
pub const XED_IFORM_VCVTNEPS2BF16_XMMbf16_YMMf32: xed_iform_enum_t = 3428;
pub const XED_IFORM_VCVTNEPS2BF16_YMMbf16_MASKmskw_MEMf32_AVX512_VL512: xed_iform_enum_t = 3429;
pub const XED_IFORM_VCVTNEPS2BF16_YMMbf16_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 3430;
pub const XED_IFORM_VCVTPD2DQ_XMMdq_MEMdq: xed_iform_enum_t = 3431;
pub const XED_IFORM_VCVTPD2DQ_XMMdq_MEMqq: xed_iform_enum_t = 3432;
pub const XED_IFORM_VCVTPD2DQ_XMMdq_XMMdq: xed_iform_enum_t = 3433;
pub const XED_IFORM_VCVTPD2DQ_XMMdq_YMMqq: xed_iform_enum_t = 3434;
pub const XED_IFORM_VCVTPD2DQ_XMMi32_MASKmskw_MEMf64_AVX512_VL128: xed_iform_enum_t = 3435;
pub const XED_IFORM_VCVTPD2DQ_XMMi32_MASKmskw_MEMf64_AVX512_VL256: xed_iform_enum_t = 3436;
pub const XED_IFORM_VCVTPD2DQ_XMMi32_MASKmskw_XMMf64_AVX512_VL128: xed_iform_enum_t = 3437;
pub const XED_IFORM_VCVTPD2DQ_XMMi32_MASKmskw_YMMf64_AVX512_VL256: xed_iform_enum_t = 3438;
pub const XED_IFORM_VCVTPD2DQ_YMMi32_MASKmskw_MEMf64_AVX512_VL512: xed_iform_enum_t = 3439;
pub const XED_IFORM_VCVTPD2DQ_YMMi32_MASKmskw_ZMMf64_AVX512_VL512: xed_iform_enum_t = 3440;
pub const XED_IFORM_VCVTPD2PH_XMMf16_MASKmskw_MEMf64_AVX512_VL128: xed_iform_enum_t = 3441;
pub const XED_IFORM_VCVTPD2PH_XMMf16_MASKmskw_MEMf64_AVX512_VL256: xed_iform_enum_t = 3442;
pub const XED_IFORM_VCVTPD2PH_XMMf16_MASKmskw_MEMf64_AVX512_VL512: xed_iform_enum_t = 3443;
pub const XED_IFORM_VCVTPD2PH_XMMf16_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 3444;
pub const XED_IFORM_VCVTPD2PH_XMMf16_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 3445;
pub const XED_IFORM_VCVTPD2PH_XMMf16_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 3446;
pub const XED_IFORM_VCVTPD2PS_XMMdq_MEMdq: xed_iform_enum_t = 3447;
pub const XED_IFORM_VCVTPD2PS_XMMdq_MEMqq: xed_iform_enum_t = 3448;
pub const XED_IFORM_VCVTPD2PS_XMMdq_XMMdq: xed_iform_enum_t = 3449;
pub const XED_IFORM_VCVTPD2PS_XMMdq_YMMqq: xed_iform_enum_t = 3450;
pub const XED_IFORM_VCVTPD2PS_XMMf32_MASKmskw_MEMf64_AVX512_VL128: xed_iform_enum_t = 3451;
pub const XED_IFORM_VCVTPD2PS_XMMf32_MASKmskw_MEMf64_AVX512_VL256: xed_iform_enum_t = 3452;
pub const XED_IFORM_VCVTPD2PS_XMMf32_MASKmskw_XMMf64_AVX512_VL128: xed_iform_enum_t = 3453;
pub const XED_IFORM_VCVTPD2PS_XMMf32_MASKmskw_YMMf64_AVX512_VL256: xed_iform_enum_t = 3454;
pub const XED_IFORM_VCVTPD2PS_YMMf32_MASKmskw_MEMf64_AVX512_VL512: xed_iform_enum_t = 3455;
pub const XED_IFORM_VCVTPD2PS_YMMf32_MASKmskw_ZMMf64_AVX512_VL512: xed_iform_enum_t = 3456;
pub const XED_IFORM_VCVTPD2QQ_XMMi64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3457;
pub const XED_IFORM_VCVTPD2QQ_XMMi64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 3458;
pub const XED_IFORM_VCVTPD2QQ_YMMi64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3459;
pub const XED_IFORM_VCVTPD2QQ_YMMi64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 3460;
pub const XED_IFORM_VCVTPD2QQ_ZMMi64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3461;
pub const XED_IFORM_VCVTPD2QQ_ZMMi64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 3462;
pub const XED_IFORM_VCVTPD2UDQ_XMMu32_MASKmskw_MEMf64_AVX512_VL128: xed_iform_enum_t = 3463;
pub const XED_IFORM_VCVTPD2UDQ_XMMu32_MASKmskw_MEMf64_AVX512_VL256: xed_iform_enum_t = 3464;
pub const XED_IFORM_VCVTPD2UDQ_XMMu32_MASKmskw_XMMf64_AVX512_VL128: xed_iform_enum_t = 3465;
pub const XED_IFORM_VCVTPD2UDQ_XMMu32_MASKmskw_YMMf64_AVX512_VL256: xed_iform_enum_t = 3466;
pub const XED_IFORM_VCVTPD2UDQ_YMMu32_MASKmskw_MEMf64_AVX512_VL512: xed_iform_enum_t = 3467;
pub const XED_IFORM_VCVTPD2UDQ_YMMu32_MASKmskw_ZMMf64_AVX512_VL512: xed_iform_enum_t = 3468;
pub const XED_IFORM_VCVTPD2UQQ_XMMu64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3469;
pub const XED_IFORM_VCVTPD2UQQ_XMMu64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 3470;
pub const XED_IFORM_VCVTPD2UQQ_YMMu64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3471;
pub const XED_IFORM_VCVTPD2UQQ_YMMu64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 3472;
pub const XED_IFORM_VCVTPD2UQQ_ZMMu64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3473;
pub const XED_IFORM_VCVTPD2UQQ_ZMMu64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 3474;
pub const XED_IFORM_VCVTPH2DQ_XMMi32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3475;
pub const XED_IFORM_VCVTPH2DQ_XMMi32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3476;
pub const XED_IFORM_VCVTPH2DQ_YMMi32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3477;
pub const XED_IFORM_VCVTPH2DQ_YMMi32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3478;
pub const XED_IFORM_VCVTPH2DQ_ZMMi32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3479;
pub const XED_IFORM_VCVTPH2DQ_ZMMi32_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 3480;
pub const XED_IFORM_VCVTPH2PD_XMMf64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3481;
pub const XED_IFORM_VCVTPH2PD_XMMf64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3482;
pub const XED_IFORM_VCVTPH2PD_YMMf64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3483;
pub const XED_IFORM_VCVTPH2PD_YMMf64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3484;
pub const XED_IFORM_VCVTPH2PD_ZMMf64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3485;
pub const XED_IFORM_VCVTPH2PD_ZMMf64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3486;
pub const XED_IFORM_VCVTPH2PS_XMMdq_MEMq: xed_iform_enum_t = 3487;
pub const XED_IFORM_VCVTPH2PS_XMMdq_XMMq: xed_iform_enum_t = 3488;
pub const XED_IFORM_VCVTPH2PS_XMMf32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3489;
pub const XED_IFORM_VCVTPH2PS_XMMf32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3490;
pub const XED_IFORM_VCVTPH2PS_YMMf32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3491;
pub const XED_IFORM_VCVTPH2PS_YMMf32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3492;
pub const XED_IFORM_VCVTPH2PS_YMMqq_MEMdq: xed_iform_enum_t = 3493;
pub const XED_IFORM_VCVTPH2PS_YMMqq_XMMdq: xed_iform_enum_t = 3494;
pub const XED_IFORM_VCVTPH2PS_ZMMf32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3495;
pub const XED_IFORM_VCVTPH2PS_ZMMf32_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 3496;
pub const XED_IFORM_VCVTPH2PSX_XMMf32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3497;
pub const XED_IFORM_VCVTPH2PSX_XMMf32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3498;
pub const XED_IFORM_VCVTPH2PSX_YMMf32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3499;
pub const XED_IFORM_VCVTPH2PSX_YMMf32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3500;
pub const XED_IFORM_VCVTPH2PSX_ZMMf32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3501;
pub const XED_IFORM_VCVTPH2PSX_ZMMf32_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 3502;
pub const XED_IFORM_VCVTPH2QQ_XMMi64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3503;
pub const XED_IFORM_VCVTPH2QQ_XMMi64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3504;
pub const XED_IFORM_VCVTPH2QQ_YMMi64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3505;
pub const XED_IFORM_VCVTPH2QQ_YMMi64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3506;
pub const XED_IFORM_VCVTPH2QQ_ZMMi64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3507;
pub const XED_IFORM_VCVTPH2QQ_ZMMi64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3508;
pub const XED_IFORM_VCVTPH2UDQ_XMMu32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3509;
pub const XED_IFORM_VCVTPH2UDQ_XMMu32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3510;
pub const XED_IFORM_VCVTPH2UDQ_YMMu32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3511;
pub const XED_IFORM_VCVTPH2UDQ_YMMu32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3512;
pub const XED_IFORM_VCVTPH2UDQ_ZMMu32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3513;
pub const XED_IFORM_VCVTPH2UDQ_ZMMu32_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 3514;
pub const XED_IFORM_VCVTPH2UQQ_XMMu64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3515;
pub const XED_IFORM_VCVTPH2UQQ_XMMu64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3516;
pub const XED_IFORM_VCVTPH2UQQ_YMMu64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3517;
pub const XED_IFORM_VCVTPH2UQQ_YMMu64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3518;
pub const XED_IFORM_VCVTPH2UQQ_ZMMu64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3519;
pub const XED_IFORM_VCVTPH2UQQ_ZMMu64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3520;
pub const XED_IFORM_VCVTPH2UW_XMMu16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3521;
pub const XED_IFORM_VCVTPH2UW_XMMu16_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3522;
pub const XED_IFORM_VCVTPH2UW_YMMu16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3523;
pub const XED_IFORM_VCVTPH2UW_YMMu16_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 3524;
pub const XED_IFORM_VCVTPH2UW_ZMMu16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3525;
pub const XED_IFORM_VCVTPH2UW_ZMMu16_MASKmskw_ZMMf16_AVX512: xed_iform_enum_t = 3526;
pub const XED_IFORM_VCVTPH2W_XMMi16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3527;
pub const XED_IFORM_VCVTPH2W_XMMi16_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3528;
pub const XED_IFORM_VCVTPH2W_YMMi16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3529;
pub const XED_IFORM_VCVTPH2W_YMMi16_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 3530;
pub const XED_IFORM_VCVTPH2W_ZMMi16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3531;
pub const XED_IFORM_VCVTPH2W_ZMMi16_MASKmskw_ZMMf16_AVX512: xed_iform_enum_t = 3532;
pub const XED_IFORM_VCVTPS2DQ_XMMdq_MEMdq: xed_iform_enum_t = 3533;
pub const XED_IFORM_VCVTPS2DQ_XMMdq_XMMdq: xed_iform_enum_t = 3534;
pub const XED_IFORM_VCVTPS2DQ_XMMi32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3535;
pub const XED_IFORM_VCVTPS2DQ_XMMi32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3536;
pub const XED_IFORM_VCVTPS2DQ_YMMi32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3537;
pub const XED_IFORM_VCVTPS2DQ_YMMi32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3538;
pub const XED_IFORM_VCVTPS2DQ_YMMqq_MEMqq: xed_iform_enum_t = 3539;
pub const XED_IFORM_VCVTPS2DQ_YMMqq_YMMqq: xed_iform_enum_t = 3540;
pub const XED_IFORM_VCVTPS2DQ_ZMMi32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3541;
pub const XED_IFORM_VCVTPS2DQ_ZMMi32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 3542;
pub const XED_IFORM_VCVTPS2PD_XMMdq_MEMq: xed_iform_enum_t = 3543;
pub const XED_IFORM_VCVTPS2PD_XMMdq_XMMq: xed_iform_enum_t = 3544;
pub const XED_IFORM_VCVTPS2PD_XMMf64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3545;
pub const XED_IFORM_VCVTPS2PD_XMMf64_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3546;
pub const XED_IFORM_VCVTPS2PD_YMMf64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3547;
pub const XED_IFORM_VCVTPS2PD_YMMf64_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3548;
pub const XED_IFORM_VCVTPS2PD_YMMqq_MEMdq: xed_iform_enum_t = 3549;
pub const XED_IFORM_VCVTPS2PD_YMMqq_XMMdq: xed_iform_enum_t = 3550;
pub const XED_IFORM_VCVTPS2PD_ZMMf64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3551;
pub const XED_IFORM_VCVTPS2PD_ZMMf64_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3552;
pub const XED_IFORM_VCVTPS2PH_MEMdq_YMMqq_IMMb: xed_iform_enum_t = 3553;
pub const XED_IFORM_VCVTPS2PH_MEMf16_MASKmskw_XMMf32_IMM8_AVX512: xed_iform_enum_t = 3554;
pub const XED_IFORM_VCVTPS2PH_MEMf16_MASKmskw_YMMf32_IMM8_AVX512: xed_iform_enum_t = 3555;
pub const XED_IFORM_VCVTPS2PH_MEMf16_MASKmskw_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 3556;
pub const XED_IFORM_VCVTPS2PH_MEMq_XMMdq_IMMb: xed_iform_enum_t = 3557;
pub const XED_IFORM_VCVTPS2PH_XMMdq_YMMqq_IMMb: xed_iform_enum_t = 3558;
pub const XED_IFORM_VCVTPS2PH_XMMf16_MASKmskw_XMMf32_IMM8_AVX512: xed_iform_enum_t = 3559;
pub const XED_IFORM_VCVTPS2PH_XMMf16_MASKmskw_YMMf32_IMM8_AVX512: xed_iform_enum_t = 3560;
pub const XED_IFORM_VCVTPS2PH_XMMq_XMMdq_IMMb: xed_iform_enum_t = 3561;
pub const XED_IFORM_VCVTPS2PH_YMMf16_MASKmskw_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 3562;
pub const XED_IFORM_VCVTPS2PHX_XMMf16_MASKmskw_MEMf32_AVX512_VL128: xed_iform_enum_t = 3563;
pub const XED_IFORM_VCVTPS2PHX_XMMf16_MASKmskw_MEMf32_AVX512_VL256: xed_iform_enum_t = 3564;
pub const XED_IFORM_VCVTPS2PHX_XMMf16_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3565;
pub const XED_IFORM_VCVTPS2PHX_XMMf16_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3566;
pub const XED_IFORM_VCVTPS2PHX_YMMf16_MASKmskw_MEMf32_AVX512_VL512: xed_iform_enum_t = 3567;
pub const XED_IFORM_VCVTPS2PHX_YMMf16_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 3568;
pub const XED_IFORM_VCVTPS2QQ_XMMi64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3569;
pub const XED_IFORM_VCVTPS2QQ_XMMi64_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3570;
pub const XED_IFORM_VCVTPS2QQ_YMMi64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3571;
pub const XED_IFORM_VCVTPS2QQ_YMMi64_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3572;
pub const XED_IFORM_VCVTPS2QQ_ZMMi64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3573;
pub const XED_IFORM_VCVTPS2QQ_ZMMi64_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3574;
pub const XED_IFORM_VCVTPS2UDQ_XMMu32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3575;
pub const XED_IFORM_VCVTPS2UDQ_XMMu32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3576;
pub const XED_IFORM_VCVTPS2UDQ_YMMu32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3577;
pub const XED_IFORM_VCVTPS2UDQ_YMMu32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3578;
pub const XED_IFORM_VCVTPS2UDQ_ZMMu32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3579;
pub const XED_IFORM_VCVTPS2UDQ_ZMMu32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 3580;
pub const XED_IFORM_VCVTPS2UQQ_XMMu64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3581;
pub const XED_IFORM_VCVTPS2UQQ_XMMu64_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3582;
pub const XED_IFORM_VCVTPS2UQQ_YMMu64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3583;
pub const XED_IFORM_VCVTPS2UQQ_YMMu64_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3584;
pub const XED_IFORM_VCVTPS2UQQ_ZMMu64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3585;
pub const XED_IFORM_VCVTPS2UQQ_ZMMu64_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3586;
pub const XED_IFORM_VCVTQQ2PD_XMMi64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3587;
pub const XED_IFORM_VCVTQQ2PD_XMMi64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 3588;
pub const XED_IFORM_VCVTQQ2PD_YMMi64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3589;
pub const XED_IFORM_VCVTQQ2PD_YMMi64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 3590;
pub const XED_IFORM_VCVTQQ2PD_ZMMi64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3591;
pub const XED_IFORM_VCVTQQ2PD_ZMMi64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 3592;
pub const XED_IFORM_VCVTQQ2PH_XMMf16_MASKmskw_MEMu64_AVX512_VL128: xed_iform_enum_t = 3593;
pub const XED_IFORM_VCVTQQ2PH_XMMf16_MASKmskw_MEMu64_AVX512_VL256: xed_iform_enum_t = 3594;
pub const XED_IFORM_VCVTQQ2PH_XMMf16_MASKmskw_MEMu64_AVX512_VL512: xed_iform_enum_t = 3595;
pub const XED_IFORM_VCVTQQ2PH_XMMf16_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 3596;
pub const XED_IFORM_VCVTQQ2PH_XMMf16_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 3597;
pub const XED_IFORM_VCVTQQ2PH_XMMf16_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 3598;
pub const XED_IFORM_VCVTQQ2PS_XMMf32_MASKmskw_MEMu64_AVX512_VL128: xed_iform_enum_t = 3599;
pub const XED_IFORM_VCVTQQ2PS_XMMf32_MASKmskw_MEMu64_AVX512_VL256: xed_iform_enum_t = 3600;
pub const XED_IFORM_VCVTQQ2PS_XMMf32_MASKmskw_XMMu64_AVX512_VL128: xed_iform_enum_t = 3601;
pub const XED_IFORM_VCVTQQ2PS_XMMf32_MASKmskw_YMMu64_AVX512_VL256: xed_iform_enum_t = 3602;
pub const XED_IFORM_VCVTQQ2PS_YMMf32_MASKmskw_MEMu64_AVX512_VL512: xed_iform_enum_t = 3603;
pub const XED_IFORM_VCVTQQ2PS_YMMf32_MASKmskw_ZMMu64_AVX512_VL512: xed_iform_enum_t = 3604;
pub const XED_IFORM_VCVTSD2SH_XMMf16_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 3605;
pub const XED_IFORM_VCVTSD2SH_XMMf16_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 3606;
pub const XED_IFORM_VCVTSD2SI_GPR32d_MEMq: xed_iform_enum_t = 3607;
pub const XED_IFORM_VCVTSD2SI_GPR32d_XMMq: xed_iform_enum_t = 3608;
pub const XED_IFORM_VCVTSD2SI_GPR32i32_MEMf64_AVX512: xed_iform_enum_t = 3609;
pub const XED_IFORM_VCVTSD2SI_GPR32i32_XMMf64_AVX512: xed_iform_enum_t = 3610;
pub const XED_IFORM_VCVTSD2SI_GPR64i64_MEMf64_AVX512: xed_iform_enum_t = 3611;
pub const XED_IFORM_VCVTSD2SI_GPR64i64_XMMf64_AVX512: xed_iform_enum_t = 3612;
pub const XED_IFORM_VCVTSD2SI_GPR64q_MEMq: xed_iform_enum_t = 3613;
pub const XED_IFORM_VCVTSD2SI_GPR64q_XMMq: xed_iform_enum_t = 3614;
pub const XED_IFORM_VCVTSD2SS_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 3615;
pub const XED_IFORM_VCVTSD2SS_XMMdq_XMMdq_XMMq: xed_iform_enum_t = 3616;
pub const XED_IFORM_VCVTSD2SS_XMMf32_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 3617;
pub const XED_IFORM_VCVTSD2SS_XMMf32_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 3618;
pub const XED_IFORM_VCVTSD2USI_GPR32u32_MEMf64_AVX512: xed_iform_enum_t = 3619;
pub const XED_IFORM_VCVTSD2USI_GPR32u32_XMMf64_AVX512: xed_iform_enum_t = 3620;
pub const XED_IFORM_VCVTSD2USI_GPR64u64_MEMf64_AVX512: xed_iform_enum_t = 3621;
pub const XED_IFORM_VCVTSD2USI_GPR64u64_XMMf64_AVX512: xed_iform_enum_t = 3622;
pub const XED_IFORM_VCVTSH2SD_XMMf64_MASKmskw_XMMf64_MEMf16_AVX512: xed_iform_enum_t = 3623;
pub const XED_IFORM_VCVTSH2SD_XMMf64_MASKmskw_XMMf64_XMMf16_AVX512: xed_iform_enum_t = 3624;
pub const XED_IFORM_VCVTSH2SI_GPR32i32_MEMf16_AVX512: xed_iform_enum_t = 3625;
pub const XED_IFORM_VCVTSH2SI_GPR32i32_XMMf16_AVX512: xed_iform_enum_t = 3626;
pub const XED_IFORM_VCVTSH2SI_GPR64i64_MEMf16_AVX512: xed_iform_enum_t = 3627;
pub const XED_IFORM_VCVTSH2SI_GPR64i64_XMMf16_AVX512: xed_iform_enum_t = 3628;
pub const XED_IFORM_VCVTSH2SS_XMMf32_MASKmskw_XMMf32_MEMf16_AVX512: xed_iform_enum_t = 3629;
pub const XED_IFORM_VCVTSH2SS_XMMf32_MASKmskw_XMMf32_XMMf16_AVX512: xed_iform_enum_t = 3630;
pub const XED_IFORM_VCVTSH2USI_GPR32u32_MEMf16_AVX512: xed_iform_enum_t = 3631;
pub const XED_IFORM_VCVTSH2USI_GPR32u32_XMMf16_AVX512: xed_iform_enum_t = 3632;
pub const XED_IFORM_VCVTSH2USI_GPR64u64_MEMf16_AVX512: xed_iform_enum_t = 3633;
pub const XED_IFORM_VCVTSH2USI_GPR64u64_XMMf16_AVX512: xed_iform_enum_t = 3634;
pub const XED_IFORM_VCVTSI2SD_XMMdq_XMMdq_GPR32d: xed_iform_enum_t = 3635;
pub const XED_IFORM_VCVTSI2SD_XMMdq_XMMdq_GPR64q: xed_iform_enum_t = 3636;
pub const XED_IFORM_VCVTSI2SD_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 3637;
pub const XED_IFORM_VCVTSI2SD_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 3638;
pub const XED_IFORM_VCVTSI2SD_XMMf64_XMMf64_GPR32i32_AVX512: xed_iform_enum_t = 3639;
pub const XED_IFORM_VCVTSI2SD_XMMf64_XMMf64_GPR64i64_AVX512: xed_iform_enum_t = 3640;
pub const XED_IFORM_VCVTSI2SD_XMMf64_XMMf64_MEMi32_AVX512: xed_iform_enum_t = 3641;
pub const XED_IFORM_VCVTSI2SD_XMMf64_XMMf64_MEMi64_AVX512: xed_iform_enum_t = 3642;
pub const XED_IFORM_VCVTSI2SH_XMMf16_XMMf16_GPR32i32_AVX512: xed_iform_enum_t = 3643;
pub const XED_IFORM_VCVTSI2SH_XMMf16_XMMf16_GPR64i64_AVX512: xed_iform_enum_t = 3644;
pub const XED_IFORM_VCVTSI2SH_XMMf16_XMMf16_MEMi32_AVX512: xed_iform_enum_t = 3645;
pub const XED_IFORM_VCVTSI2SH_XMMf16_XMMf16_MEMi64_AVX512: xed_iform_enum_t = 3646;
pub const XED_IFORM_VCVTSI2SS_XMMdq_XMMdq_GPR32d: xed_iform_enum_t = 3647;
pub const XED_IFORM_VCVTSI2SS_XMMdq_XMMdq_GPR64q: xed_iform_enum_t = 3648;
pub const XED_IFORM_VCVTSI2SS_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 3649;
pub const XED_IFORM_VCVTSI2SS_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 3650;
pub const XED_IFORM_VCVTSI2SS_XMMf32_XMMf32_GPR32i32_AVX512: xed_iform_enum_t = 3651;
pub const XED_IFORM_VCVTSI2SS_XMMf32_XMMf32_GPR64i64_AVX512: xed_iform_enum_t = 3652;
pub const XED_IFORM_VCVTSI2SS_XMMf32_XMMf32_MEMi32_AVX512: xed_iform_enum_t = 3653;
pub const XED_IFORM_VCVTSI2SS_XMMf32_XMMf32_MEMi64_AVX512: xed_iform_enum_t = 3654;
pub const XED_IFORM_VCVTSS2SD_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 3655;
pub const XED_IFORM_VCVTSS2SD_XMMdq_XMMdq_XMMd: xed_iform_enum_t = 3656;
pub const XED_IFORM_VCVTSS2SD_XMMf64_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 3657;
pub const XED_IFORM_VCVTSS2SD_XMMf64_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 3658;
pub const XED_IFORM_VCVTSS2SH_XMMf16_MASKmskw_XMMf16_MEMf32_AVX512: xed_iform_enum_t = 3659;
pub const XED_IFORM_VCVTSS2SH_XMMf16_MASKmskw_XMMf16_XMMf32_AVX512: xed_iform_enum_t = 3660;
pub const XED_IFORM_VCVTSS2SI_GPR32d_MEMd: xed_iform_enum_t = 3661;
pub const XED_IFORM_VCVTSS2SI_GPR32d_XMMd: xed_iform_enum_t = 3662;
pub const XED_IFORM_VCVTSS2SI_GPR32i32_MEMf32_AVX512: xed_iform_enum_t = 3663;
pub const XED_IFORM_VCVTSS2SI_GPR32i32_XMMf32_AVX512: xed_iform_enum_t = 3664;
pub const XED_IFORM_VCVTSS2SI_GPR64i64_MEMf32_AVX512: xed_iform_enum_t = 3665;
pub const XED_IFORM_VCVTSS2SI_GPR64i64_XMMf32_AVX512: xed_iform_enum_t = 3666;
pub const XED_IFORM_VCVTSS2SI_GPR64q_MEMd: xed_iform_enum_t = 3667;
pub const XED_IFORM_VCVTSS2SI_GPR64q_XMMd: xed_iform_enum_t = 3668;
pub const XED_IFORM_VCVTSS2USI_GPR32u32_MEMf32_AVX512: xed_iform_enum_t = 3669;
pub const XED_IFORM_VCVTSS2USI_GPR32u32_XMMf32_AVX512: xed_iform_enum_t = 3670;
pub const XED_IFORM_VCVTSS2USI_GPR64u64_MEMf32_AVX512: xed_iform_enum_t = 3671;
pub const XED_IFORM_VCVTSS2USI_GPR64u64_XMMf32_AVX512: xed_iform_enum_t = 3672;
pub const XED_IFORM_VCVTTPD2DQ_XMMdq_MEMdq: xed_iform_enum_t = 3673;
pub const XED_IFORM_VCVTTPD2DQ_XMMdq_MEMqq: xed_iform_enum_t = 3674;
pub const XED_IFORM_VCVTTPD2DQ_XMMdq_XMMdq: xed_iform_enum_t = 3675;
pub const XED_IFORM_VCVTTPD2DQ_XMMdq_YMMqq: xed_iform_enum_t = 3676;
pub const XED_IFORM_VCVTTPD2DQ_XMMi32_MASKmskw_MEMf64_AVX512_VL128: xed_iform_enum_t = 3677;
pub const XED_IFORM_VCVTTPD2DQ_XMMi32_MASKmskw_MEMf64_AVX512_VL256: xed_iform_enum_t = 3678;
pub const XED_IFORM_VCVTTPD2DQ_XMMi32_MASKmskw_XMMf64_AVX512_VL128: xed_iform_enum_t = 3679;
pub const XED_IFORM_VCVTTPD2DQ_XMMi32_MASKmskw_YMMf64_AVX512_VL256: xed_iform_enum_t = 3680;
pub const XED_IFORM_VCVTTPD2DQ_YMMi32_MASKmskw_MEMf64_AVX512_VL512: xed_iform_enum_t = 3681;
pub const XED_IFORM_VCVTTPD2DQ_YMMi32_MASKmskw_ZMMf64_AVX512_VL512: xed_iform_enum_t = 3682;
pub const XED_IFORM_VCVTTPD2QQ_XMMi64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3683;
pub const XED_IFORM_VCVTTPD2QQ_XMMi64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 3684;
pub const XED_IFORM_VCVTTPD2QQ_YMMi64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3685;
pub const XED_IFORM_VCVTTPD2QQ_YMMi64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 3686;
pub const XED_IFORM_VCVTTPD2QQ_ZMMi64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3687;
pub const XED_IFORM_VCVTTPD2QQ_ZMMi64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 3688;
pub const XED_IFORM_VCVTTPD2UDQ_XMMu32_MASKmskw_MEMf64_AVX512_VL128: xed_iform_enum_t = 3689;
pub const XED_IFORM_VCVTTPD2UDQ_XMMu32_MASKmskw_MEMf64_AVX512_VL256: xed_iform_enum_t = 3690;
pub const XED_IFORM_VCVTTPD2UDQ_XMMu32_MASKmskw_XMMf64_AVX512_VL128: xed_iform_enum_t = 3691;
pub const XED_IFORM_VCVTTPD2UDQ_XMMu32_MASKmskw_YMMf64_AVX512_VL256: xed_iform_enum_t = 3692;
pub const XED_IFORM_VCVTTPD2UDQ_YMMu32_MASKmskw_MEMf64_AVX512_VL512: xed_iform_enum_t = 3693;
pub const XED_IFORM_VCVTTPD2UDQ_YMMu32_MASKmskw_ZMMf64_AVX512_VL512: xed_iform_enum_t = 3694;
pub const XED_IFORM_VCVTTPD2UQQ_XMMu64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3695;
pub const XED_IFORM_VCVTTPD2UQQ_XMMu64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 3696;
pub const XED_IFORM_VCVTTPD2UQQ_YMMu64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3697;
pub const XED_IFORM_VCVTTPD2UQQ_YMMu64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 3698;
pub const XED_IFORM_VCVTTPD2UQQ_ZMMu64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3699;
pub const XED_IFORM_VCVTTPD2UQQ_ZMMu64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 3700;
pub const XED_IFORM_VCVTTPH2DQ_XMMi32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3701;
pub const XED_IFORM_VCVTTPH2DQ_XMMi32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3702;
pub const XED_IFORM_VCVTTPH2DQ_YMMi32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3703;
pub const XED_IFORM_VCVTTPH2DQ_YMMi32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3704;
pub const XED_IFORM_VCVTTPH2DQ_ZMMi32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3705;
pub const XED_IFORM_VCVTTPH2DQ_ZMMi32_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 3706;
pub const XED_IFORM_VCVTTPH2QQ_XMMi64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3707;
pub const XED_IFORM_VCVTTPH2QQ_XMMi64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3708;
pub const XED_IFORM_VCVTTPH2QQ_YMMi64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3709;
pub const XED_IFORM_VCVTTPH2QQ_YMMi64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3710;
pub const XED_IFORM_VCVTTPH2QQ_ZMMi64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3711;
pub const XED_IFORM_VCVTTPH2QQ_ZMMi64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3712;
pub const XED_IFORM_VCVTTPH2UDQ_XMMu32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3713;
pub const XED_IFORM_VCVTTPH2UDQ_XMMu32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3714;
pub const XED_IFORM_VCVTTPH2UDQ_YMMu32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3715;
pub const XED_IFORM_VCVTTPH2UDQ_YMMu32_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3716;
pub const XED_IFORM_VCVTTPH2UDQ_ZMMu32_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3717;
pub const XED_IFORM_VCVTTPH2UDQ_ZMMu32_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 3718;
pub const XED_IFORM_VCVTTPH2UQQ_XMMu64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3719;
pub const XED_IFORM_VCVTTPH2UQQ_XMMu64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3720;
pub const XED_IFORM_VCVTTPH2UQQ_YMMu64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3721;
pub const XED_IFORM_VCVTTPH2UQQ_YMMu64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3722;
pub const XED_IFORM_VCVTTPH2UQQ_ZMMu64_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3723;
pub const XED_IFORM_VCVTTPH2UQQ_ZMMu64_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3724;
pub const XED_IFORM_VCVTTPH2UW_XMMu16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3725;
pub const XED_IFORM_VCVTTPH2UW_XMMu16_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3726;
pub const XED_IFORM_VCVTTPH2UW_YMMu16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3727;
pub const XED_IFORM_VCVTTPH2UW_YMMu16_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 3728;
pub const XED_IFORM_VCVTTPH2UW_ZMMu16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3729;
pub const XED_IFORM_VCVTTPH2UW_ZMMu16_MASKmskw_ZMMf16_AVX512: xed_iform_enum_t = 3730;
pub const XED_IFORM_VCVTTPH2W_XMMi16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3731;
pub const XED_IFORM_VCVTTPH2W_XMMi16_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 3732;
pub const XED_IFORM_VCVTTPH2W_YMMi16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3733;
pub const XED_IFORM_VCVTTPH2W_YMMi16_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 3734;
pub const XED_IFORM_VCVTTPH2W_ZMMi16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 3735;
pub const XED_IFORM_VCVTTPH2W_ZMMi16_MASKmskw_ZMMf16_AVX512: xed_iform_enum_t = 3736;
pub const XED_IFORM_VCVTTPS2DQ_XMMdq_MEMdq: xed_iform_enum_t = 3737;
pub const XED_IFORM_VCVTTPS2DQ_XMMdq_XMMdq: xed_iform_enum_t = 3738;
pub const XED_IFORM_VCVTTPS2DQ_XMMi32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3739;
pub const XED_IFORM_VCVTTPS2DQ_XMMi32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3740;
pub const XED_IFORM_VCVTTPS2DQ_YMMi32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3741;
pub const XED_IFORM_VCVTTPS2DQ_YMMi32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3742;
pub const XED_IFORM_VCVTTPS2DQ_YMMqq_MEMqq: xed_iform_enum_t = 3743;
pub const XED_IFORM_VCVTTPS2DQ_YMMqq_YMMqq: xed_iform_enum_t = 3744;
pub const XED_IFORM_VCVTTPS2DQ_ZMMi32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3745;
pub const XED_IFORM_VCVTTPS2DQ_ZMMi32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 3746;
pub const XED_IFORM_VCVTTPS2QQ_XMMi64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3747;
pub const XED_IFORM_VCVTTPS2QQ_XMMi64_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3748;
pub const XED_IFORM_VCVTTPS2QQ_YMMi64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3749;
pub const XED_IFORM_VCVTTPS2QQ_YMMi64_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3750;
pub const XED_IFORM_VCVTTPS2QQ_ZMMi64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3751;
pub const XED_IFORM_VCVTTPS2QQ_ZMMi64_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3752;
pub const XED_IFORM_VCVTTPS2UDQ_XMMu32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3753;
pub const XED_IFORM_VCVTTPS2UDQ_XMMu32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3754;
pub const XED_IFORM_VCVTTPS2UDQ_YMMu32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3755;
pub const XED_IFORM_VCVTTPS2UDQ_YMMu32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3756;
pub const XED_IFORM_VCVTTPS2UDQ_ZMMu32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3757;
pub const XED_IFORM_VCVTTPS2UDQ_ZMMu32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 3758;
pub const XED_IFORM_VCVTTPS2UQQ_XMMu64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3759;
pub const XED_IFORM_VCVTTPS2UQQ_XMMu64_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3760;
pub const XED_IFORM_VCVTTPS2UQQ_YMMu64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3761;
pub const XED_IFORM_VCVTTPS2UQQ_YMMu64_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3762;
pub const XED_IFORM_VCVTTPS2UQQ_ZMMu64_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3763;
pub const XED_IFORM_VCVTTPS2UQQ_ZMMu64_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3764;
pub const XED_IFORM_VCVTTSD2SI_GPR32d_MEMq: xed_iform_enum_t = 3765;
pub const XED_IFORM_VCVTTSD2SI_GPR32d_XMMq: xed_iform_enum_t = 3766;
pub const XED_IFORM_VCVTTSD2SI_GPR32i32_MEMf64_AVX512: xed_iform_enum_t = 3767;
pub const XED_IFORM_VCVTTSD2SI_GPR32i32_XMMf64_AVX512: xed_iform_enum_t = 3768;
pub const XED_IFORM_VCVTTSD2SI_GPR64i64_MEMf64_AVX512: xed_iform_enum_t = 3769;
pub const XED_IFORM_VCVTTSD2SI_GPR64i64_XMMf64_AVX512: xed_iform_enum_t = 3770;
pub const XED_IFORM_VCVTTSD2SI_GPR64q_MEMq: xed_iform_enum_t = 3771;
pub const XED_IFORM_VCVTTSD2SI_GPR64q_XMMq: xed_iform_enum_t = 3772;
pub const XED_IFORM_VCVTTSD2USI_GPR32u32_MEMf64_AVX512: xed_iform_enum_t = 3773;
pub const XED_IFORM_VCVTTSD2USI_GPR32u32_XMMf64_AVX512: xed_iform_enum_t = 3774;
pub const XED_IFORM_VCVTTSD2USI_GPR64u64_MEMf64_AVX512: xed_iform_enum_t = 3775;
pub const XED_IFORM_VCVTTSD2USI_GPR64u64_XMMf64_AVX512: xed_iform_enum_t = 3776;
pub const XED_IFORM_VCVTTSH2SI_GPR32i32_MEMf16_AVX512: xed_iform_enum_t = 3777;
pub const XED_IFORM_VCVTTSH2SI_GPR32i32_XMMf16_AVX512: xed_iform_enum_t = 3778;
pub const XED_IFORM_VCVTTSH2SI_GPR64i64_MEMf16_AVX512: xed_iform_enum_t = 3779;
pub const XED_IFORM_VCVTTSH2SI_GPR64i64_XMMf16_AVX512: xed_iform_enum_t = 3780;
pub const XED_IFORM_VCVTTSH2USI_GPR32u32_MEMf16_AVX512: xed_iform_enum_t = 3781;
pub const XED_IFORM_VCVTTSH2USI_GPR32u32_XMMf16_AVX512: xed_iform_enum_t = 3782;
pub const XED_IFORM_VCVTTSH2USI_GPR64u64_MEMf16_AVX512: xed_iform_enum_t = 3783;
pub const XED_IFORM_VCVTTSH2USI_GPR64u64_XMMf16_AVX512: xed_iform_enum_t = 3784;
pub const XED_IFORM_VCVTTSS2SI_GPR32d_MEMd: xed_iform_enum_t = 3785;
pub const XED_IFORM_VCVTTSS2SI_GPR32d_XMMd: xed_iform_enum_t = 3786;
pub const XED_IFORM_VCVTTSS2SI_GPR32i32_MEMf32_AVX512: xed_iform_enum_t = 3787;
pub const XED_IFORM_VCVTTSS2SI_GPR32i32_XMMf32_AVX512: xed_iform_enum_t = 3788;
pub const XED_IFORM_VCVTTSS2SI_GPR64i64_MEMf32_AVX512: xed_iform_enum_t = 3789;
pub const XED_IFORM_VCVTTSS2SI_GPR64i64_XMMf32_AVX512: xed_iform_enum_t = 3790;
pub const XED_IFORM_VCVTTSS2SI_GPR64q_MEMd: xed_iform_enum_t = 3791;
pub const XED_IFORM_VCVTTSS2SI_GPR64q_XMMd: xed_iform_enum_t = 3792;
pub const XED_IFORM_VCVTTSS2USI_GPR32u32_MEMf32_AVX512: xed_iform_enum_t = 3793;
pub const XED_IFORM_VCVTTSS2USI_GPR32u32_XMMf32_AVX512: xed_iform_enum_t = 3794;
pub const XED_IFORM_VCVTTSS2USI_GPR64u64_MEMf32_AVX512: xed_iform_enum_t = 3795;
pub const XED_IFORM_VCVTTSS2USI_GPR64u64_XMMf32_AVX512: xed_iform_enum_t = 3796;
pub const XED_IFORM_VCVTUDQ2PD_XMMf64_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3797;
pub const XED_IFORM_VCVTUDQ2PD_XMMf64_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 3798;
pub const XED_IFORM_VCVTUDQ2PD_YMMf64_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3799;
pub const XED_IFORM_VCVTUDQ2PD_YMMf64_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 3800;
pub const XED_IFORM_VCVTUDQ2PD_ZMMf64_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3801;
pub const XED_IFORM_VCVTUDQ2PD_ZMMf64_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 3802;
pub const XED_IFORM_VCVTUDQ2PH_XMMf16_MASKmskw_MEMu32_AVX512_VL128: xed_iform_enum_t = 3803;
pub const XED_IFORM_VCVTUDQ2PH_XMMf16_MASKmskw_MEMu32_AVX512_VL256: xed_iform_enum_t = 3804;
pub const XED_IFORM_VCVTUDQ2PH_XMMf16_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 3805;
pub const XED_IFORM_VCVTUDQ2PH_XMMf16_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 3806;
pub const XED_IFORM_VCVTUDQ2PH_YMMf16_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3807;
pub const XED_IFORM_VCVTUDQ2PH_YMMf16_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 3808;
pub const XED_IFORM_VCVTUDQ2PS_XMMf32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3809;
pub const XED_IFORM_VCVTUDQ2PS_XMMf32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 3810;
pub const XED_IFORM_VCVTUDQ2PS_YMMf32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3811;
pub const XED_IFORM_VCVTUDQ2PS_YMMf32_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 3812;
pub const XED_IFORM_VCVTUDQ2PS_ZMMf32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 3813;
pub const XED_IFORM_VCVTUDQ2PS_ZMMf32_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 3814;
pub const XED_IFORM_VCVTUQQ2PD_XMMf64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 3815;
pub const XED_IFORM_VCVTUQQ2PD_XMMf64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 3816;
pub const XED_IFORM_VCVTUQQ2PD_YMMf64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 3817;
pub const XED_IFORM_VCVTUQQ2PD_YMMf64_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 3818;
pub const XED_IFORM_VCVTUQQ2PD_ZMMf64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 3819;
pub const XED_IFORM_VCVTUQQ2PD_ZMMf64_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 3820;
pub const XED_IFORM_VCVTUQQ2PH_XMMf16_MASKmskw_MEMu64_AVX512_VL128: xed_iform_enum_t = 3821;
pub const XED_IFORM_VCVTUQQ2PH_XMMf16_MASKmskw_MEMu64_AVX512_VL256: xed_iform_enum_t = 3822;
pub const XED_IFORM_VCVTUQQ2PH_XMMf16_MASKmskw_MEMu64_AVX512_VL512: xed_iform_enum_t = 3823;
pub const XED_IFORM_VCVTUQQ2PH_XMMf16_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 3824;
pub const XED_IFORM_VCVTUQQ2PH_XMMf16_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 3825;
pub const XED_IFORM_VCVTUQQ2PH_XMMf16_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 3826;
pub const XED_IFORM_VCVTUQQ2PS_XMMf32_MASKmskw_MEMu64_AVX512_VL128: xed_iform_enum_t = 3827;
pub const XED_IFORM_VCVTUQQ2PS_XMMf32_MASKmskw_MEMu64_AVX512_VL256: xed_iform_enum_t = 3828;
pub const XED_IFORM_VCVTUQQ2PS_XMMf32_MASKmskw_XMMu64_AVX512_VL128: xed_iform_enum_t = 3829;
pub const XED_IFORM_VCVTUQQ2PS_XMMf32_MASKmskw_YMMu64_AVX512_VL256: xed_iform_enum_t = 3830;
pub const XED_IFORM_VCVTUQQ2PS_YMMf32_MASKmskw_MEMu64_AVX512_VL512: xed_iform_enum_t = 3831;
pub const XED_IFORM_VCVTUQQ2PS_YMMf32_MASKmskw_ZMMu64_AVX512_VL512: xed_iform_enum_t = 3832;
pub const XED_IFORM_VCVTUSI2SD_XMMf64_XMMf64_GPR32u32_AVX512: xed_iform_enum_t = 3833;
pub const XED_IFORM_VCVTUSI2SD_XMMf64_XMMf64_GPR64u64_AVX512: xed_iform_enum_t = 3834;
pub const XED_IFORM_VCVTUSI2SD_XMMf64_XMMf64_MEMu32_AVX512: xed_iform_enum_t = 3835;
pub const XED_IFORM_VCVTUSI2SD_XMMf64_XMMf64_MEMu64_AVX512: xed_iform_enum_t = 3836;
pub const XED_IFORM_VCVTUSI2SH_XMMf16_XMMf16_GPR32u32_AVX512: xed_iform_enum_t = 3837;
pub const XED_IFORM_VCVTUSI2SH_XMMf16_XMMf16_GPR64u64_AVX512: xed_iform_enum_t = 3838;
pub const XED_IFORM_VCVTUSI2SH_XMMf16_XMMf16_MEMu32_AVX512: xed_iform_enum_t = 3839;
pub const XED_IFORM_VCVTUSI2SH_XMMf16_XMMf16_MEMu64_AVX512: xed_iform_enum_t = 3840;
pub const XED_IFORM_VCVTUSI2SS_XMMf32_XMMf32_GPR32u32_AVX512: xed_iform_enum_t = 3841;
pub const XED_IFORM_VCVTUSI2SS_XMMf32_XMMf32_GPR64u64_AVX512: xed_iform_enum_t = 3842;
pub const XED_IFORM_VCVTUSI2SS_XMMf32_XMMf32_MEMu32_AVX512: xed_iform_enum_t = 3843;
pub const XED_IFORM_VCVTUSI2SS_XMMf32_XMMf32_MEMu64_AVX512: xed_iform_enum_t = 3844;
pub const XED_IFORM_VCVTUW2PH_XMMf16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 3845;
pub const XED_IFORM_VCVTUW2PH_XMMf16_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 3846;
pub const XED_IFORM_VCVTUW2PH_YMMf16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 3847;
pub const XED_IFORM_VCVTUW2PH_YMMf16_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 3848;
pub const XED_IFORM_VCVTUW2PH_ZMMf16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 3849;
pub const XED_IFORM_VCVTUW2PH_ZMMf16_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 3850;
pub const XED_IFORM_VCVTW2PH_XMMf16_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 3851;
pub const XED_IFORM_VCVTW2PH_XMMf16_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 3852;
pub const XED_IFORM_VCVTW2PH_YMMf16_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 3853;
pub const XED_IFORM_VCVTW2PH_YMMf16_MASKmskw_YMMi16_AVX512: xed_iform_enum_t = 3854;
pub const XED_IFORM_VCVTW2PH_ZMMf16_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 3855;
pub const XED_IFORM_VCVTW2PH_ZMMf16_MASKmskw_ZMMi16_AVX512: xed_iform_enum_t = 3856;
pub const XED_IFORM_VDBPSADBW_XMMu16_MASKmskw_XMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 3857;
pub const XED_IFORM_VDBPSADBW_XMMu16_MASKmskw_XMMu8_XMMu8_IMM8_AVX512: xed_iform_enum_t = 3858;
pub const XED_IFORM_VDBPSADBW_YMMu16_MASKmskw_YMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 3859;
pub const XED_IFORM_VDBPSADBW_YMMu16_MASKmskw_YMMu8_YMMu8_IMM8_AVX512: xed_iform_enum_t = 3860;
pub const XED_IFORM_VDBPSADBW_ZMMu16_MASKmskw_ZMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 3861;
pub const XED_IFORM_VDBPSADBW_ZMMu16_MASKmskw_ZMMu8_ZMMu8_IMM8_AVX512: xed_iform_enum_t = 3862;
pub const XED_IFORM_VDIVPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3863;
pub const XED_IFORM_VDIVPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3864;
pub const XED_IFORM_VDIVPD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 3865;
pub const XED_IFORM_VDIVPD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 3866;
pub const XED_IFORM_VDIVPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 3867;
pub const XED_IFORM_VDIVPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 3868;
pub const XED_IFORM_VDIVPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 3869;
pub const XED_IFORM_VDIVPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3870;
pub const XED_IFORM_VDIVPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 3871;
pub const XED_IFORM_VDIVPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 3872;
pub const XED_IFORM_VDIVPH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 3873;
pub const XED_IFORM_VDIVPH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 3874;
pub const XED_IFORM_VDIVPH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 3875;
pub const XED_IFORM_VDIVPH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 3876;
pub const XED_IFORM_VDIVPH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 3877;
pub const XED_IFORM_VDIVPH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 3878;
pub const XED_IFORM_VDIVPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3879;
pub const XED_IFORM_VDIVPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3880;
pub const XED_IFORM_VDIVPS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 3881;
pub const XED_IFORM_VDIVPS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 3882;
pub const XED_IFORM_VDIVPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 3883;
pub const XED_IFORM_VDIVPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 3884;
pub const XED_IFORM_VDIVPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 3885;
pub const XED_IFORM_VDIVPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 3886;
pub const XED_IFORM_VDIVPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 3887;
pub const XED_IFORM_VDIVPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 3888;
pub const XED_IFORM_VDIVSD_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 3889;
pub const XED_IFORM_VDIVSD_XMMdq_XMMdq_XMMq: xed_iform_enum_t = 3890;
pub const XED_IFORM_VDIVSD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 3891;
pub const XED_IFORM_VDIVSD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 3892;
pub const XED_IFORM_VDIVSH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 3893;
pub const XED_IFORM_VDIVSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 3894;
pub const XED_IFORM_VDIVSS_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 3895;
pub const XED_IFORM_VDIVSS_XMMdq_XMMdq_XMMd: xed_iform_enum_t = 3896;
pub const XED_IFORM_VDIVSS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 3897;
pub const XED_IFORM_VDIVSS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 3898;
pub const XED_IFORM_VDPBF16PS_XMMf32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 3899;
pub const XED_IFORM_VDPBF16PS_XMMf32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 3900;
pub const XED_IFORM_VDPBF16PS_YMMf32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 3901;
pub const XED_IFORM_VDPBF16PS_YMMf32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 3902;
pub const XED_IFORM_VDPBF16PS_ZMMf32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 3903;
pub const XED_IFORM_VDPBF16PS_ZMMf32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 3904;
pub const XED_IFORM_VDPPD_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 3905;
pub const XED_IFORM_VDPPD_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 3906;
pub const XED_IFORM_VDPPS_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 3907;
pub const XED_IFORM_VDPPS_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 3908;
pub const XED_IFORM_VDPPS_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 3909;
pub const XED_IFORM_VDPPS_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 3910;
pub const XED_IFORM_VERR_GPR16: xed_iform_enum_t = 3911;
pub const XED_IFORM_VERR_MEMw: xed_iform_enum_t = 3912;
pub const XED_IFORM_VERW_GPR16: xed_iform_enum_t = 3913;
pub const XED_IFORM_VERW_MEMw: xed_iform_enum_t = 3914;
pub const XED_IFORM_VEXP2PD_ZMMf64_MASKmskw_MEMf64_AVX512ER: xed_iform_enum_t = 3915;
pub const XED_IFORM_VEXP2PD_ZMMf64_MASKmskw_ZMMf64_AVX512ER: xed_iform_enum_t = 3916;
pub const XED_IFORM_VEXP2PS_ZMMf32_MASKmskw_MEMf32_AVX512ER: xed_iform_enum_t = 3917;
pub const XED_IFORM_VEXP2PS_ZMMf32_MASKmskw_ZMMf32_AVX512ER: xed_iform_enum_t = 3918;
pub const XED_IFORM_VEXPANDPD_XMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3919;
pub const XED_IFORM_VEXPANDPD_XMMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 3920;
pub const XED_IFORM_VEXPANDPD_YMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3921;
pub const XED_IFORM_VEXPANDPD_YMMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 3922;
pub const XED_IFORM_VEXPANDPD_ZMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 3923;
pub const XED_IFORM_VEXPANDPD_ZMMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 3924;
pub const XED_IFORM_VEXPANDPS_XMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3925;
pub const XED_IFORM_VEXPANDPS_XMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 3926;
pub const XED_IFORM_VEXPANDPS_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3927;
pub const XED_IFORM_VEXPANDPS_YMMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 3928;
pub const XED_IFORM_VEXPANDPS_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 3929;
pub const XED_IFORM_VEXPANDPS_ZMMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 3930;
pub const XED_IFORM_VEXTRACTF128_MEMdq_YMMdq_IMMb: xed_iform_enum_t = 3931;
pub const XED_IFORM_VEXTRACTF128_XMMdq_YMMdq_IMMb: xed_iform_enum_t = 3932;
pub const XED_IFORM_VEXTRACTF32X4_MEMf32_MASKmskw_YMMf32_IMM8_AVX512: xed_iform_enum_t = 3933;
pub const XED_IFORM_VEXTRACTF32X4_MEMf32_MASKmskw_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 3934;
pub const XED_IFORM_VEXTRACTF32X4_XMMf32_MASKmskw_YMMf32_IMM8_AVX512: xed_iform_enum_t = 3935;
pub const XED_IFORM_VEXTRACTF32X4_XMMf32_MASKmskw_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 3936;
pub const XED_IFORM_VEXTRACTF32X8_MEMf32_MASKmskw_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 3937;
pub const XED_IFORM_VEXTRACTF32X8_YMMf32_MASKmskw_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 3938;
pub const XED_IFORM_VEXTRACTF64X2_MEMf64_MASKmskw_YMMf64_IMM8_AVX512: xed_iform_enum_t = 3939;
pub const XED_IFORM_VEXTRACTF64X2_MEMf64_MASKmskw_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 3940;
pub const XED_IFORM_VEXTRACTF64X2_XMMf64_MASKmskw_YMMf64_IMM8_AVX512: xed_iform_enum_t = 3941;
pub const XED_IFORM_VEXTRACTF64X2_XMMf64_MASKmskw_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 3942;
pub const XED_IFORM_VEXTRACTF64X4_MEMf64_MASKmskw_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 3943;
pub const XED_IFORM_VEXTRACTF64X4_YMMf64_MASKmskw_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 3944;
pub const XED_IFORM_VEXTRACTI128_MEMdq_YMMqq_IMMb: xed_iform_enum_t = 3945;
pub const XED_IFORM_VEXTRACTI128_XMMdq_YMMqq_IMMb: xed_iform_enum_t = 3946;
pub const XED_IFORM_VEXTRACTI32X4_MEMu32_MASKmskw_YMMu32_IMM8_AVX512: xed_iform_enum_t = 3947;
pub const XED_IFORM_VEXTRACTI32X4_MEMu32_MASKmskw_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 3948;
pub const XED_IFORM_VEXTRACTI32X4_XMMu32_MASKmskw_YMMu32_IMM8_AVX512: xed_iform_enum_t = 3949;
pub const XED_IFORM_VEXTRACTI32X4_XMMu32_MASKmskw_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 3950;
pub const XED_IFORM_VEXTRACTI32X8_MEMu32_MASKmskw_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 3951;
pub const XED_IFORM_VEXTRACTI32X8_YMMu32_MASKmskw_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 3952;
pub const XED_IFORM_VEXTRACTI64X2_MEMu64_MASKmskw_YMMu64_IMM8_AVX512: xed_iform_enum_t = 3953;
pub const XED_IFORM_VEXTRACTI64X2_MEMu64_MASKmskw_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 3954;
pub const XED_IFORM_VEXTRACTI64X2_XMMu64_MASKmskw_YMMu64_IMM8_AVX512: xed_iform_enum_t = 3955;
pub const XED_IFORM_VEXTRACTI64X2_XMMu64_MASKmskw_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 3956;
pub const XED_IFORM_VEXTRACTI64X4_MEMu64_MASKmskw_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 3957;
pub const XED_IFORM_VEXTRACTI64X4_YMMu64_MASKmskw_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 3958;
pub const XED_IFORM_VEXTRACTPS_GPR32_XMMdq_IMMb: xed_iform_enum_t = 3959;
pub const XED_IFORM_VEXTRACTPS_GPR32f32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 3960;
pub const XED_IFORM_VEXTRACTPS_MEMd_XMMdq_IMMb: xed_iform_enum_t = 3961;
pub const XED_IFORM_VEXTRACTPS_MEMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 3962;
pub const XED_IFORM_VFCMADDCPH_XMM2f16_MASKmskw_XMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 3963;
pub const XED_IFORM_VFCMADDCPH_XMM2f16_MASKmskw_XMM2f16_XMM2f16_AVX512: xed_iform_enum_t = 3964;
pub const XED_IFORM_VFCMADDCPH_YMM2f16_MASKmskw_YMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 3965;
pub const XED_IFORM_VFCMADDCPH_YMM2f16_MASKmskw_YMM2f16_YMM2f16_AVX512: xed_iform_enum_t = 3966;
pub const XED_IFORM_VFCMADDCPH_ZMM2f16_MASKmskw_ZMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 3967;
pub const XED_IFORM_VFCMADDCPH_ZMM2f16_MASKmskw_ZMM2f16_ZMM2f16_AVX512: xed_iform_enum_t = 3968;
pub const XED_IFORM_VFCMADDCSH_XMM2f16_MASKmskw_XMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 3969;
pub const XED_IFORM_VFCMADDCSH_XMM2f16_MASKmskw_XMM2f16_XMM2f16_AVX512: xed_iform_enum_t = 3970;
pub const XED_IFORM_VFCMULCPH_XMM2f16_MASKmskw_XMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 3971;
pub const XED_IFORM_VFCMULCPH_XMM2f16_MASKmskw_XMM2f16_XMM2f16_AVX512: xed_iform_enum_t = 3972;
pub const XED_IFORM_VFCMULCPH_YMM2f16_MASKmskw_YMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 3973;
pub const XED_IFORM_VFCMULCPH_YMM2f16_MASKmskw_YMM2f16_YMM2f16_AVX512: xed_iform_enum_t = 3974;
pub const XED_IFORM_VFCMULCPH_ZMM2f16_MASKmskw_ZMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 3975;
pub const XED_IFORM_VFCMULCPH_ZMM2f16_MASKmskw_ZMM2f16_ZMM2f16_AVX512: xed_iform_enum_t = 3976;
pub const XED_IFORM_VFCMULCSH_XMM2f16_MASKmskw_XMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 3977;
pub const XED_IFORM_VFCMULCSH_XMM2f16_MASKmskw_XMM2f16_XMM2f16_AVX512: xed_iform_enum_t = 3978;
pub const XED_IFORM_VFIXUPIMMPD_XMMf64_MASKmskw_XMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 3979;
pub const XED_IFORM_VFIXUPIMMPD_XMMf64_MASKmskw_XMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 3980;
pub const XED_IFORM_VFIXUPIMMPD_YMMf64_MASKmskw_YMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 3981;
pub const XED_IFORM_VFIXUPIMMPD_YMMf64_MASKmskw_YMMf64_YMMf64_IMM8_AVX512: xed_iform_enum_t = 3982;
pub const XED_IFORM_VFIXUPIMMPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 3983;
pub const XED_IFORM_VFIXUPIMMPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 3984;
pub const XED_IFORM_VFIXUPIMMPS_XMMf32_MASKmskw_XMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 3985;
pub const XED_IFORM_VFIXUPIMMPS_XMMf32_MASKmskw_XMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 3986;
pub const XED_IFORM_VFIXUPIMMPS_YMMf32_MASKmskw_YMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 3987;
pub const XED_IFORM_VFIXUPIMMPS_YMMf32_MASKmskw_YMMf32_YMMf32_IMM8_AVX512: xed_iform_enum_t = 3988;
pub const XED_IFORM_VFIXUPIMMPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 3989;
pub const XED_IFORM_VFIXUPIMMPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 3990;
pub const XED_IFORM_VFIXUPIMMSD_XMMf64_MASKmskw_XMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 3991;
pub const XED_IFORM_VFIXUPIMMSD_XMMf64_MASKmskw_XMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 3992;
pub const XED_IFORM_VFIXUPIMMSS_XMMf32_MASKmskw_XMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 3993;
pub const XED_IFORM_VFIXUPIMMSS_XMMf32_MASKmskw_XMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 3994;
pub const XED_IFORM_VFMADD132PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 3995;
pub const XED_IFORM_VFMADD132PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 3996;
pub const XED_IFORM_VFMADD132PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 3997;
pub const XED_IFORM_VFMADD132PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 3998;
pub const XED_IFORM_VFMADD132PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 3999;
pub const XED_IFORM_VFMADD132PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4000;
pub const XED_IFORM_VFMADD132PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4001;
pub const XED_IFORM_VFMADD132PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4002;
pub const XED_IFORM_VFMADD132PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4003;
pub const XED_IFORM_VFMADD132PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4004;
pub const XED_IFORM_VFMADD132PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4005;
pub const XED_IFORM_VFMADD132PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4006;
pub const XED_IFORM_VFMADD132PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4007;
pub const XED_IFORM_VFMADD132PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4008;
pub const XED_IFORM_VFMADD132PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4009;
pub const XED_IFORM_VFMADD132PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4010;
pub const XED_IFORM_VFMADD132PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4011;
pub const XED_IFORM_VFMADD132PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4012;
pub const XED_IFORM_VFMADD132PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4013;
pub const XED_IFORM_VFMADD132PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4014;
pub const XED_IFORM_VFMADD132PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4015;
pub const XED_IFORM_VFMADD132PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4016;
pub const XED_IFORM_VFMADD132PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4017;
pub const XED_IFORM_VFMADD132PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4018;
pub const XED_IFORM_VFMADD132PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4019;
pub const XED_IFORM_VFMADD132PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4020;
pub const XED_IFORM_VFMADD132SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4021;
pub const XED_IFORM_VFMADD132SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4022;
pub const XED_IFORM_VFMADD132SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4023;
pub const XED_IFORM_VFMADD132SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4024;
pub const XED_IFORM_VFMADD132SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4025;
pub const XED_IFORM_VFMADD132SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4026;
pub const XED_IFORM_VFMADD132SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4027;
pub const XED_IFORM_VFMADD132SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4028;
pub const XED_IFORM_VFMADD132SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4029;
pub const XED_IFORM_VFMADD132SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4030;
pub const XED_IFORM_VFMADD213PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4031;
pub const XED_IFORM_VFMADD213PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4032;
pub const XED_IFORM_VFMADD213PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4033;
pub const XED_IFORM_VFMADD213PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4034;
pub const XED_IFORM_VFMADD213PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4035;
pub const XED_IFORM_VFMADD213PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4036;
pub const XED_IFORM_VFMADD213PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4037;
pub const XED_IFORM_VFMADD213PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4038;
pub const XED_IFORM_VFMADD213PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4039;
pub const XED_IFORM_VFMADD213PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4040;
pub const XED_IFORM_VFMADD213PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4041;
pub const XED_IFORM_VFMADD213PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4042;
pub const XED_IFORM_VFMADD213PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4043;
pub const XED_IFORM_VFMADD213PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4044;
pub const XED_IFORM_VFMADD213PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4045;
pub const XED_IFORM_VFMADD213PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4046;
pub const XED_IFORM_VFMADD213PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4047;
pub const XED_IFORM_VFMADD213PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4048;
pub const XED_IFORM_VFMADD213PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4049;
pub const XED_IFORM_VFMADD213PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4050;
pub const XED_IFORM_VFMADD213PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4051;
pub const XED_IFORM_VFMADD213PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4052;
pub const XED_IFORM_VFMADD213PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4053;
pub const XED_IFORM_VFMADD213PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4054;
pub const XED_IFORM_VFMADD213PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4055;
pub const XED_IFORM_VFMADD213PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4056;
pub const XED_IFORM_VFMADD213SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4057;
pub const XED_IFORM_VFMADD213SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4058;
pub const XED_IFORM_VFMADD213SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4059;
pub const XED_IFORM_VFMADD213SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4060;
pub const XED_IFORM_VFMADD213SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4061;
pub const XED_IFORM_VFMADD213SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4062;
pub const XED_IFORM_VFMADD213SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4063;
pub const XED_IFORM_VFMADD213SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4064;
pub const XED_IFORM_VFMADD213SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4065;
pub const XED_IFORM_VFMADD213SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4066;
pub const XED_IFORM_VFMADD231PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4067;
pub const XED_IFORM_VFMADD231PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4068;
pub const XED_IFORM_VFMADD231PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4069;
pub const XED_IFORM_VFMADD231PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4070;
pub const XED_IFORM_VFMADD231PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4071;
pub const XED_IFORM_VFMADD231PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4072;
pub const XED_IFORM_VFMADD231PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4073;
pub const XED_IFORM_VFMADD231PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4074;
pub const XED_IFORM_VFMADD231PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4075;
pub const XED_IFORM_VFMADD231PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4076;
pub const XED_IFORM_VFMADD231PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4077;
pub const XED_IFORM_VFMADD231PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4078;
pub const XED_IFORM_VFMADD231PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4079;
pub const XED_IFORM_VFMADD231PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4080;
pub const XED_IFORM_VFMADD231PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4081;
pub const XED_IFORM_VFMADD231PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4082;
pub const XED_IFORM_VFMADD231PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4083;
pub const XED_IFORM_VFMADD231PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4084;
pub const XED_IFORM_VFMADD231PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4085;
pub const XED_IFORM_VFMADD231PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4086;
pub const XED_IFORM_VFMADD231PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4087;
pub const XED_IFORM_VFMADD231PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4088;
pub const XED_IFORM_VFMADD231PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4089;
pub const XED_IFORM_VFMADD231PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4090;
pub const XED_IFORM_VFMADD231PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4091;
pub const XED_IFORM_VFMADD231PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4092;
pub const XED_IFORM_VFMADD231SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4093;
pub const XED_IFORM_VFMADD231SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4094;
pub const XED_IFORM_VFMADD231SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4095;
pub const XED_IFORM_VFMADD231SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4096;
pub const XED_IFORM_VFMADD231SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4097;
pub const XED_IFORM_VFMADD231SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4098;
pub const XED_IFORM_VFMADD231SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4099;
pub const XED_IFORM_VFMADD231SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4100;
pub const XED_IFORM_VFMADD231SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4101;
pub const XED_IFORM_VFMADD231SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4102;
pub const XED_IFORM_VFMADDCPH_XMM2f16_MASKmskw_XMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 4103;
pub const XED_IFORM_VFMADDCPH_XMM2f16_MASKmskw_XMM2f16_XMM2f16_AVX512: xed_iform_enum_t = 4104;
pub const XED_IFORM_VFMADDCPH_YMM2f16_MASKmskw_YMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 4105;
pub const XED_IFORM_VFMADDCPH_YMM2f16_MASKmskw_YMM2f16_YMM2f16_AVX512: xed_iform_enum_t = 4106;
pub const XED_IFORM_VFMADDCPH_ZMM2f16_MASKmskw_ZMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 4107;
pub const XED_IFORM_VFMADDCPH_ZMM2f16_MASKmskw_ZMM2f16_ZMM2f16_AVX512: xed_iform_enum_t = 4108;
pub const XED_IFORM_VFMADDCSH_XMM2f16_MASKmskw_XMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 4109;
pub const XED_IFORM_VFMADDCSH_XMM2f16_MASKmskw_XMM2f16_XMM2f16_AVX512: xed_iform_enum_t = 4110;
pub const XED_IFORM_VFMADDPD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4111;
pub const XED_IFORM_VFMADDPD_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4112;
pub const XED_IFORM_VFMADDPD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4113;
pub const XED_IFORM_VFMADDPD_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4114;
pub const XED_IFORM_VFMADDPD_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4115;
pub const XED_IFORM_VFMADDPD_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4116;
pub const XED_IFORM_VFMADDPS_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4117;
pub const XED_IFORM_VFMADDPS_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4118;
pub const XED_IFORM_VFMADDPS_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4119;
pub const XED_IFORM_VFMADDPS_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4120;
pub const XED_IFORM_VFMADDPS_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4121;
pub const XED_IFORM_VFMADDPS_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4122;
pub const XED_IFORM_VFMADDSD_XMMdq_XMMq_MEMq_XMMq: xed_iform_enum_t = 4123;
pub const XED_IFORM_VFMADDSD_XMMdq_XMMq_XMMq_MEMq: xed_iform_enum_t = 4124;
pub const XED_IFORM_VFMADDSD_XMMdq_XMMq_XMMq_XMMq: xed_iform_enum_t = 4125;
pub const XED_IFORM_VFMADDSS_XMMdq_XMMd_MEMd_XMMd: xed_iform_enum_t = 4126;
pub const XED_IFORM_VFMADDSS_XMMdq_XMMd_XMMd_MEMd: xed_iform_enum_t = 4127;
pub const XED_IFORM_VFMADDSS_XMMdq_XMMd_XMMd_XMMd: xed_iform_enum_t = 4128;
pub const XED_IFORM_VFMADDSUB132PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4129;
pub const XED_IFORM_VFMADDSUB132PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4130;
pub const XED_IFORM_VFMADDSUB132PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4131;
pub const XED_IFORM_VFMADDSUB132PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4132;
pub const XED_IFORM_VFMADDSUB132PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4133;
pub const XED_IFORM_VFMADDSUB132PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4134;
pub const XED_IFORM_VFMADDSUB132PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4135;
pub const XED_IFORM_VFMADDSUB132PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4136;
pub const XED_IFORM_VFMADDSUB132PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4137;
pub const XED_IFORM_VFMADDSUB132PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4138;
pub const XED_IFORM_VFMADDSUB132PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4139;
pub const XED_IFORM_VFMADDSUB132PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4140;
pub const XED_IFORM_VFMADDSUB132PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4141;
pub const XED_IFORM_VFMADDSUB132PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4142;
pub const XED_IFORM_VFMADDSUB132PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4143;
pub const XED_IFORM_VFMADDSUB132PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4144;
pub const XED_IFORM_VFMADDSUB132PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4145;
pub const XED_IFORM_VFMADDSUB132PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4146;
pub const XED_IFORM_VFMADDSUB132PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4147;
pub const XED_IFORM_VFMADDSUB132PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4148;
pub const XED_IFORM_VFMADDSUB132PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4149;
pub const XED_IFORM_VFMADDSUB132PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4150;
pub const XED_IFORM_VFMADDSUB132PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4151;
pub const XED_IFORM_VFMADDSUB132PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4152;
pub const XED_IFORM_VFMADDSUB132PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4153;
pub const XED_IFORM_VFMADDSUB132PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4154;
pub const XED_IFORM_VFMADDSUB213PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4155;
pub const XED_IFORM_VFMADDSUB213PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4156;
pub const XED_IFORM_VFMADDSUB213PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4157;
pub const XED_IFORM_VFMADDSUB213PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4158;
pub const XED_IFORM_VFMADDSUB213PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4159;
pub const XED_IFORM_VFMADDSUB213PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4160;
pub const XED_IFORM_VFMADDSUB213PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4161;
pub const XED_IFORM_VFMADDSUB213PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4162;
pub const XED_IFORM_VFMADDSUB213PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4163;
pub const XED_IFORM_VFMADDSUB213PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4164;
pub const XED_IFORM_VFMADDSUB213PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4165;
pub const XED_IFORM_VFMADDSUB213PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4166;
pub const XED_IFORM_VFMADDSUB213PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4167;
pub const XED_IFORM_VFMADDSUB213PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4168;
pub const XED_IFORM_VFMADDSUB213PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4169;
pub const XED_IFORM_VFMADDSUB213PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4170;
pub const XED_IFORM_VFMADDSUB213PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4171;
pub const XED_IFORM_VFMADDSUB213PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4172;
pub const XED_IFORM_VFMADDSUB213PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4173;
pub const XED_IFORM_VFMADDSUB213PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4174;
pub const XED_IFORM_VFMADDSUB213PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4175;
pub const XED_IFORM_VFMADDSUB213PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4176;
pub const XED_IFORM_VFMADDSUB213PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4177;
pub const XED_IFORM_VFMADDSUB213PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4178;
pub const XED_IFORM_VFMADDSUB213PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4179;
pub const XED_IFORM_VFMADDSUB213PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4180;
pub const XED_IFORM_VFMADDSUB231PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4181;
pub const XED_IFORM_VFMADDSUB231PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4182;
pub const XED_IFORM_VFMADDSUB231PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4183;
pub const XED_IFORM_VFMADDSUB231PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4184;
pub const XED_IFORM_VFMADDSUB231PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4185;
pub const XED_IFORM_VFMADDSUB231PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4186;
pub const XED_IFORM_VFMADDSUB231PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4187;
pub const XED_IFORM_VFMADDSUB231PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4188;
pub const XED_IFORM_VFMADDSUB231PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4189;
pub const XED_IFORM_VFMADDSUB231PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4190;
pub const XED_IFORM_VFMADDSUB231PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4191;
pub const XED_IFORM_VFMADDSUB231PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4192;
pub const XED_IFORM_VFMADDSUB231PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4193;
pub const XED_IFORM_VFMADDSUB231PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4194;
pub const XED_IFORM_VFMADDSUB231PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4195;
pub const XED_IFORM_VFMADDSUB231PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4196;
pub const XED_IFORM_VFMADDSUB231PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4197;
pub const XED_IFORM_VFMADDSUB231PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4198;
pub const XED_IFORM_VFMADDSUB231PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4199;
pub const XED_IFORM_VFMADDSUB231PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4200;
pub const XED_IFORM_VFMADDSUB231PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4201;
pub const XED_IFORM_VFMADDSUB231PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4202;
pub const XED_IFORM_VFMADDSUB231PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4203;
pub const XED_IFORM_VFMADDSUB231PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4204;
pub const XED_IFORM_VFMADDSUB231PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4205;
pub const XED_IFORM_VFMADDSUB231PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4206;
pub const XED_IFORM_VFMADDSUBPD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4207;
pub const XED_IFORM_VFMADDSUBPD_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4208;
pub const XED_IFORM_VFMADDSUBPD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4209;
pub const XED_IFORM_VFMADDSUBPD_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4210;
pub const XED_IFORM_VFMADDSUBPD_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4211;
pub const XED_IFORM_VFMADDSUBPD_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4212;
pub const XED_IFORM_VFMADDSUBPS_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4213;
pub const XED_IFORM_VFMADDSUBPS_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4214;
pub const XED_IFORM_VFMADDSUBPS_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4215;
pub const XED_IFORM_VFMADDSUBPS_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4216;
pub const XED_IFORM_VFMADDSUBPS_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4217;
pub const XED_IFORM_VFMADDSUBPS_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4218;
pub const XED_IFORM_VFMSUB132PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4219;
pub const XED_IFORM_VFMSUB132PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4220;
pub const XED_IFORM_VFMSUB132PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4221;
pub const XED_IFORM_VFMSUB132PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4222;
pub const XED_IFORM_VFMSUB132PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4223;
pub const XED_IFORM_VFMSUB132PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4224;
pub const XED_IFORM_VFMSUB132PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4225;
pub const XED_IFORM_VFMSUB132PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4226;
pub const XED_IFORM_VFMSUB132PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4227;
pub const XED_IFORM_VFMSUB132PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4228;
pub const XED_IFORM_VFMSUB132PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4229;
pub const XED_IFORM_VFMSUB132PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4230;
pub const XED_IFORM_VFMSUB132PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4231;
pub const XED_IFORM_VFMSUB132PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4232;
pub const XED_IFORM_VFMSUB132PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4233;
pub const XED_IFORM_VFMSUB132PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4234;
pub const XED_IFORM_VFMSUB132PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4235;
pub const XED_IFORM_VFMSUB132PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4236;
pub const XED_IFORM_VFMSUB132PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4237;
pub const XED_IFORM_VFMSUB132PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4238;
pub const XED_IFORM_VFMSUB132PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4239;
pub const XED_IFORM_VFMSUB132PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4240;
pub const XED_IFORM_VFMSUB132PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4241;
pub const XED_IFORM_VFMSUB132PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4242;
pub const XED_IFORM_VFMSUB132PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4243;
pub const XED_IFORM_VFMSUB132PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4244;
pub const XED_IFORM_VFMSUB132SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4245;
pub const XED_IFORM_VFMSUB132SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4246;
pub const XED_IFORM_VFMSUB132SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4247;
pub const XED_IFORM_VFMSUB132SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4248;
pub const XED_IFORM_VFMSUB132SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4249;
pub const XED_IFORM_VFMSUB132SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4250;
pub const XED_IFORM_VFMSUB132SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4251;
pub const XED_IFORM_VFMSUB132SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4252;
pub const XED_IFORM_VFMSUB132SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4253;
pub const XED_IFORM_VFMSUB132SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4254;
pub const XED_IFORM_VFMSUB213PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4255;
pub const XED_IFORM_VFMSUB213PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4256;
pub const XED_IFORM_VFMSUB213PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4257;
pub const XED_IFORM_VFMSUB213PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4258;
pub const XED_IFORM_VFMSUB213PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4259;
pub const XED_IFORM_VFMSUB213PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4260;
pub const XED_IFORM_VFMSUB213PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4261;
pub const XED_IFORM_VFMSUB213PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4262;
pub const XED_IFORM_VFMSUB213PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4263;
pub const XED_IFORM_VFMSUB213PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4264;
pub const XED_IFORM_VFMSUB213PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4265;
pub const XED_IFORM_VFMSUB213PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4266;
pub const XED_IFORM_VFMSUB213PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4267;
pub const XED_IFORM_VFMSUB213PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4268;
pub const XED_IFORM_VFMSUB213PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4269;
pub const XED_IFORM_VFMSUB213PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4270;
pub const XED_IFORM_VFMSUB213PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4271;
pub const XED_IFORM_VFMSUB213PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4272;
pub const XED_IFORM_VFMSUB213PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4273;
pub const XED_IFORM_VFMSUB213PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4274;
pub const XED_IFORM_VFMSUB213PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4275;
pub const XED_IFORM_VFMSUB213PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4276;
pub const XED_IFORM_VFMSUB213PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4277;
pub const XED_IFORM_VFMSUB213PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4278;
pub const XED_IFORM_VFMSUB213PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4279;
pub const XED_IFORM_VFMSUB213PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4280;
pub const XED_IFORM_VFMSUB213SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4281;
pub const XED_IFORM_VFMSUB213SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4282;
pub const XED_IFORM_VFMSUB213SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4283;
pub const XED_IFORM_VFMSUB213SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4284;
pub const XED_IFORM_VFMSUB213SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4285;
pub const XED_IFORM_VFMSUB213SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4286;
pub const XED_IFORM_VFMSUB213SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4287;
pub const XED_IFORM_VFMSUB213SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4288;
pub const XED_IFORM_VFMSUB213SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4289;
pub const XED_IFORM_VFMSUB213SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4290;
pub const XED_IFORM_VFMSUB231PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4291;
pub const XED_IFORM_VFMSUB231PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4292;
pub const XED_IFORM_VFMSUB231PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4293;
pub const XED_IFORM_VFMSUB231PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4294;
pub const XED_IFORM_VFMSUB231PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4295;
pub const XED_IFORM_VFMSUB231PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4296;
pub const XED_IFORM_VFMSUB231PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4297;
pub const XED_IFORM_VFMSUB231PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4298;
pub const XED_IFORM_VFMSUB231PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4299;
pub const XED_IFORM_VFMSUB231PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4300;
pub const XED_IFORM_VFMSUB231PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4301;
pub const XED_IFORM_VFMSUB231PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4302;
pub const XED_IFORM_VFMSUB231PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4303;
pub const XED_IFORM_VFMSUB231PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4304;
pub const XED_IFORM_VFMSUB231PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4305;
pub const XED_IFORM_VFMSUB231PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4306;
pub const XED_IFORM_VFMSUB231PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4307;
pub const XED_IFORM_VFMSUB231PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4308;
pub const XED_IFORM_VFMSUB231PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4309;
pub const XED_IFORM_VFMSUB231PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4310;
pub const XED_IFORM_VFMSUB231PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4311;
pub const XED_IFORM_VFMSUB231PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4312;
pub const XED_IFORM_VFMSUB231PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4313;
pub const XED_IFORM_VFMSUB231PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4314;
pub const XED_IFORM_VFMSUB231PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4315;
pub const XED_IFORM_VFMSUB231PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4316;
pub const XED_IFORM_VFMSUB231SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4317;
pub const XED_IFORM_VFMSUB231SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4318;
pub const XED_IFORM_VFMSUB231SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4319;
pub const XED_IFORM_VFMSUB231SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4320;
pub const XED_IFORM_VFMSUB231SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4321;
pub const XED_IFORM_VFMSUB231SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4322;
pub const XED_IFORM_VFMSUB231SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4323;
pub const XED_IFORM_VFMSUB231SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4324;
pub const XED_IFORM_VFMSUB231SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4325;
pub const XED_IFORM_VFMSUB231SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4326;
pub const XED_IFORM_VFMSUBADD132PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4327;
pub const XED_IFORM_VFMSUBADD132PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4328;
pub const XED_IFORM_VFMSUBADD132PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4329;
pub const XED_IFORM_VFMSUBADD132PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4330;
pub const XED_IFORM_VFMSUBADD132PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4331;
pub const XED_IFORM_VFMSUBADD132PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4332;
pub const XED_IFORM_VFMSUBADD132PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4333;
pub const XED_IFORM_VFMSUBADD132PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4334;
pub const XED_IFORM_VFMSUBADD132PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4335;
pub const XED_IFORM_VFMSUBADD132PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4336;
pub const XED_IFORM_VFMSUBADD132PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4337;
pub const XED_IFORM_VFMSUBADD132PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4338;
pub const XED_IFORM_VFMSUBADD132PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4339;
pub const XED_IFORM_VFMSUBADD132PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4340;
pub const XED_IFORM_VFMSUBADD132PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4341;
pub const XED_IFORM_VFMSUBADD132PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4342;
pub const XED_IFORM_VFMSUBADD132PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4343;
pub const XED_IFORM_VFMSUBADD132PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4344;
pub const XED_IFORM_VFMSUBADD132PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4345;
pub const XED_IFORM_VFMSUBADD132PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4346;
pub const XED_IFORM_VFMSUBADD132PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4347;
pub const XED_IFORM_VFMSUBADD132PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4348;
pub const XED_IFORM_VFMSUBADD132PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4349;
pub const XED_IFORM_VFMSUBADD132PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4350;
pub const XED_IFORM_VFMSUBADD132PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4351;
pub const XED_IFORM_VFMSUBADD132PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4352;
pub const XED_IFORM_VFMSUBADD213PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4353;
pub const XED_IFORM_VFMSUBADD213PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4354;
pub const XED_IFORM_VFMSUBADD213PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4355;
pub const XED_IFORM_VFMSUBADD213PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4356;
pub const XED_IFORM_VFMSUBADD213PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4357;
pub const XED_IFORM_VFMSUBADD213PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4358;
pub const XED_IFORM_VFMSUBADD213PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4359;
pub const XED_IFORM_VFMSUBADD213PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4360;
pub const XED_IFORM_VFMSUBADD213PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4361;
pub const XED_IFORM_VFMSUBADD213PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4362;
pub const XED_IFORM_VFMSUBADD213PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4363;
pub const XED_IFORM_VFMSUBADD213PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4364;
pub const XED_IFORM_VFMSUBADD213PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4365;
pub const XED_IFORM_VFMSUBADD213PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4366;
pub const XED_IFORM_VFMSUBADD213PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4367;
pub const XED_IFORM_VFMSUBADD213PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4368;
pub const XED_IFORM_VFMSUBADD213PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4369;
pub const XED_IFORM_VFMSUBADD213PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4370;
pub const XED_IFORM_VFMSUBADD213PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4371;
pub const XED_IFORM_VFMSUBADD213PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4372;
pub const XED_IFORM_VFMSUBADD213PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4373;
pub const XED_IFORM_VFMSUBADD213PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4374;
pub const XED_IFORM_VFMSUBADD213PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4375;
pub const XED_IFORM_VFMSUBADD213PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4376;
pub const XED_IFORM_VFMSUBADD213PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4377;
pub const XED_IFORM_VFMSUBADD213PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4378;
pub const XED_IFORM_VFMSUBADD231PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4379;
pub const XED_IFORM_VFMSUBADD231PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4380;
pub const XED_IFORM_VFMSUBADD231PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4381;
pub const XED_IFORM_VFMSUBADD231PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4382;
pub const XED_IFORM_VFMSUBADD231PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4383;
pub const XED_IFORM_VFMSUBADD231PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4384;
pub const XED_IFORM_VFMSUBADD231PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4385;
pub const XED_IFORM_VFMSUBADD231PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4386;
pub const XED_IFORM_VFMSUBADD231PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4387;
pub const XED_IFORM_VFMSUBADD231PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4388;
pub const XED_IFORM_VFMSUBADD231PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4389;
pub const XED_IFORM_VFMSUBADD231PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4390;
pub const XED_IFORM_VFMSUBADD231PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4391;
pub const XED_IFORM_VFMSUBADD231PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4392;
pub const XED_IFORM_VFMSUBADD231PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4393;
pub const XED_IFORM_VFMSUBADD231PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4394;
pub const XED_IFORM_VFMSUBADD231PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4395;
pub const XED_IFORM_VFMSUBADD231PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4396;
pub const XED_IFORM_VFMSUBADD231PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4397;
pub const XED_IFORM_VFMSUBADD231PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4398;
pub const XED_IFORM_VFMSUBADD231PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4399;
pub const XED_IFORM_VFMSUBADD231PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4400;
pub const XED_IFORM_VFMSUBADD231PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4401;
pub const XED_IFORM_VFMSUBADD231PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4402;
pub const XED_IFORM_VFMSUBADD231PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4403;
pub const XED_IFORM_VFMSUBADD231PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4404;
pub const XED_IFORM_VFMSUBADDPD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4405;
pub const XED_IFORM_VFMSUBADDPD_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4406;
pub const XED_IFORM_VFMSUBADDPD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4407;
pub const XED_IFORM_VFMSUBADDPD_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4408;
pub const XED_IFORM_VFMSUBADDPD_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4409;
pub const XED_IFORM_VFMSUBADDPD_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4410;
pub const XED_IFORM_VFMSUBADDPS_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4411;
pub const XED_IFORM_VFMSUBADDPS_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4412;
pub const XED_IFORM_VFMSUBADDPS_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4413;
pub const XED_IFORM_VFMSUBADDPS_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4414;
pub const XED_IFORM_VFMSUBADDPS_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4415;
pub const XED_IFORM_VFMSUBADDPS_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4416;
pub const XED_IFORM_VFMSUBPD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4417;
pub const XED_IFORM_VFMSUBPD_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4418;
pub const XED_IFORM_VFMSUBPD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4419;
pub const XED_IFORM_VFMSUBPD_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4420;
pub const XED_IFORM_VFMSUBPD_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4421;
pub const XED_IFORM_VFMSUBPD_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4422;
pub const XED_IFORM_VFMSUBPS_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4423;
pub const XED_IFORM_VFMSUBPS_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4424;
pub const XED_IFORM_VFMSUBPS_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4425;
pub const XED_IFORM_VFMSUBPS_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4426;
pub const XED_IFORM_VFMSUBPS_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4427;
pub const XED_IFORM_VFMSUBPS_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4428;
pub const XED_IFORM_VFMSUBSD_XMMdq_XMMq_MEMq_XMMq: xed_iform_enum_t = 4429;
pub const XED_IFORM_VFMSUBSD_XMMdq_XMMq_XMMq_MEMq: xed_iform_enum_t = 4430;
pub const XED_IFORM_VFMSUBSD_XMMdq_XMMq_XMMq_XMMq: xed_iform_enum_t = 4431;
pub const XED_IFORM_VFMSUBSS_XMMdq_XMMd_MEMd_XMMd: xed_iform_enum_t = 4432;
pub const XED_IFORM_VFMSUBSS_XMMdq_XMMd_XMMd_MEMd: xed_iform_enum_t = 4433;
pub const XED_IFORM_VFMSUBSS_XMMdq_XMMd_XMMd_XMMd: xed_iform_enum_t = 4434;
pub const XED_IFORM_VFMULCPH_XMM2f16_MASKmskw_XMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 4435;
pub const XED_IFORM_VFMULCPH_XMM2f16_MASKmskw_XMM2f16_XMM2f16_AVX512: xed_iform_enum_t = 4436;
pub const XED_IFORM_VFMULCPH_YMM2f16_MASKmskw_YMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 4437;
pub const XED_IFORM_VFMULCPH_YMM2f16_MASKmskw_YMM2f16_YMM2f16_AVX512: xed_iform_enum_t = 4438;
pub const XED_IFORM_VFMULCPH_ZMM2f16_MASKmskw_ZMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 4439;
pub const XED_IFORM_VFMULCPH_ZMM2f16_MASKmskw_ZMM2f16_ZMM2f16_AVX512: xed_iform_enum_t = 4440;
pub const XED_IFORM_VFMULCSH_XMM2f16_MASKmskw_XMM2f16_MEM2f16_AVX512: xed_iform_enum_t = 4441;
pub const XED_IFORM_VFMULCSH_XMM2f16_MASKmskw_XMM2f16_XMM2f16_AVX512: xed_iform_enum_t = 4442;
pub const XED_IFORM_VFNMADD132PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4443;
pub const XED_IFORM_VFNMADD132PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4444;
pub const XED_IFORM_VFNMADD132PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4445;
pub const XED_IFORM_VFNMADD132PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4446;
pub const XED_IFORM_VFNMADD132PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4447;
pub const XED_IFORM_VFNMADD132PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4448;
pub const XED_IFORM_VFNMADD132PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4449;
pub const XED_IFORM_VFNMADD132PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4450;
pub const XED_IFORM_VFNMADD132PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4451;
pub const XED_IFORM_VFNMADD132PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4452;
pub const XED_IFORM_VFNMADD132PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4453;
pub const XED_IFORM_VFNMADD132PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4454;
pub const XED_IFORM_VFNMADD132PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4455;
pub const XED_IFORM_VFNMADD132PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4456;
pub const XED_IFORM_VFNMADD132PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4457;
pub const XED_IFORM_VFNMADD132PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4458;
pub const XED_IFORM_VFNMADD132PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4459;
pub const XED_IFORM_VFNMADD132PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4460;
pub const XED_IFORM_VFNMADD132PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4461;
pub const XED_IFORM_VFNMADD132PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4462;
pub const XED_IFORM_VFNMADD132PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4463;
pub const XED_IFORM_VFNMADD132PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4464;
pub const XED_IFORM_VFNMADD132PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4465;
pub const XED_IFORM_VFNMADD132PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4466;
pub const XED_IFORM_VFNMADD132PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4467;
pub const XED_IFORM_VFNMADD132PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4468;
pub const XED_IFORM_VFNMADD132SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4469;
pub const XED_IFORM_VFNMADD132SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4470;
pub const XED_IFORM_VFNMADD132SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4471;
pub const XED_IFORM_VFNMADD132SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4472;
pub const XED_IFORM_VFNMADD132SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4473;
pub const XED_IFORM_VFNMADD132SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4474;
pub const XED_IFORM_VFNMADD132SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4475;
pub const XED_IFORM_VFNMADD132SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4476;
pub const XED_IFORM_VFNMADD132SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4477;
pub const XED_IFORM_VFNMADD132SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4478;
pub const XED_IFORM_VFNMADD213PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4479;
pub const XED_IFORM_VFNMADD213PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4480;
pub const XED_IFORM_VFNMADD213PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4481;
pub const XED_IFORM_VFNMADD213PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4482;
pub const XED_IFORM_VFNMADD213PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4483;
pub const XED_IFORM_VFNMADD213PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4484;
pub const XED_IFORM_VFNMADD213PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4485;
pub const XED_IFORM_VFNMADD213PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4486;
pub const XED_IFORM_VFNMADD213PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4487;
pub const XED_IFORM_VFNMADD213PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4488;
pub const XED_IFORM_VFNMADD213PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4489;
pub const XED_IFORM_VFNMADD213PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4490;
pub const XED_IFORM_VFNMADD213PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4491;
pub const XED_IFORM_VFNMADD213PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4492;
pub const XED_IFORM_VFNMADD213PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4493;
pub const XED_IFORM_VFNMADD213PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4494;
pub const XED_IFORM_VFNMADD213PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4495;
pub const XED_IFORM_VFNMADD213PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4496;
pub const XED_IFORM_VFNMADD213PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4497;
pub const XED_IFORM_VFNMADD213PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4498;
pub const XED_IFORM_VFNMADD213PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4499;
pub const XED_IFORM_VFNMADD213PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4500;
pub const XED_IFORM_VFNMADD213PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4501;
pub const XED_IFORM_VFNMADD213PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4502;
pub const XED_IFORM_VFNMADD213PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4503;
pub const XED_IFORM_VFNMADD213PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4504;
pub const XED_IFORM_VFNMADD213SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4505;
pub const XED_IFORM_VFNMADD213SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4506;
pub const XED_IFORM_VFNMADD213SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4507;
pub const XED_IFORM_VFNMADD213SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4508;
pub const XED_IFORM_VFNMADD213SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4509;
pub const XED_IFORM_VFNMADD213SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4510;
pub const XED_IFORM_VFNMADD213SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4511;
pub const XED_IFORM_VFNMADD213SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4512;
pub const XED_IFORM_VFNMADD213SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4513;
pub const XED_IFORM_VFNMADD213SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4514;
pub const XED_IFORM_VFNMADD231PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4515;
pub const XED_IFORM_VFNMADD231PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4516;
pub const XED_IFORM_VFNMADD231PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4517;
pub const XED_IFORM_VFNMADD231PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4518;
pub const XED_IFORM_VFNMADD231PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4519;
pub const XED_IFORM_VFNMADD231PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4520;
pub const XED_IFORM_VFNMADD231PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4521;
pub const XED_IFORM_VFNMADD231PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4522;
pub const XED_IFORM_VFNMADD231PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4523;
pub const XED_IFORM_VFNMADD231PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4524;
pub const XED_IFORM_VFNMADD231PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4525;
pub const XED_IFORM_VFNMADD231PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4526;
pub const XED_IFORM_VFNMADD231PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4527;
pub const XED_IFORM_VFNMADD231PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4528;
pub const XED_IFORM_VFNMADD231PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4529;
pub const XED_IFORM_VFNMADD231PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4530;
pub const XED_IFORM_VFNMADD231PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4531;
pub const XED_IFORM_VFNMADD231PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4532;
pub const XED_IFORM_VFNMADD231PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4533;
pub const XED_IFORM_VFNMADD231PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4534;
pub const XED_IFORM_VFNMADD231PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4535;
pub const XED_IFORM_VFNMADD231PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4536;
pub const XED_IFORM_VFNMADD231PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4537;
pub const XED_IFORM_VFNMADD231PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4538;
pub const XED_IFORM_VFNMADD231PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4539;
pub const XED_IFORM_VFNMADD231PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4540;
pub const XED_IFORM_VFNMADD231SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4541;
pub const XED_IFORM_VFNMADD231SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4542;
pub const XED_IFORM_VFNMADD231SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4543;
pub const XED_IFORM_VFNMADD231SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4544;
pub const XED_IFORM_VFNMADD231SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4545;
pub const XED_IFORM_VFNMADD231SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4546;
pub const XED_IFORM_VFNMADD231SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4547;
pub const XED_IFORM_VFNMADD231SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4548;
pub const XED_IFORM_VFNMADD231SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4549;
pub const XED_IFORM_VFNMADD231SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4550;
pub const XED_IFORM_VFNMADDPD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4551;
pub const XED_IFORM_VFNMADDPD_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4552;
pub const XED_IFORM_VFNMADDPD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4553;
pub const XED_IFORM_VFNMADDPD_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4554;
pub const XED_IFORM_VFNMADDPD_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4555;
pub const XED_IFORM_VFNMADDPD_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4556;
pub const XED_IFORM_VFNMADDPS_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4557;
pub const XED_IFORM_VFNMADDPS_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4558;
pub const XED_IFORM_VFNMADDPS_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4559;
pub const XED_IFORM_VFNMADDPS_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4560;
pub const XED_IFORM_VFNMADDPS_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4561;
pub const XED_IFORM_VFNMADDPS_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4562;
pub const XED_IFORM_VFNMADDSD_XMMdq_XMMq_MEMq_XMMq: xed_iform_enum_t = 4563;
pub const XED_IFORM_VFNMADDSD_XMMdq_XMMq_XMMq_MEMq: xed_iform_enum_t = 4564;
pub const XED_IFORM_VFNMADDSD_XMMdq_XMMq_XMMq_XMMq: xed_iform_enum_t = 4565;
pub const XED_IFORM_VFNMADDSS_XMMdq_XMMd_MEMd_XMMd: xed_iform_enum_t = 4566;
pub const XED_IFORM_VFNMADDSS_XMMdq_XMMd_XMMd_MEMd: xed_iform_enum_t = 4567;
pub const XED_IFORM_VFNMADDSS_XMMdq_XMMd_XMMd_XMMd: xed_iform_enum_t = 4568;
pub const XED_IFORM_VFNMSUB132PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4569;
pub const XED_IFORM_VFNMSUB132PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4570;
pub const XED_IFORM_VFNMSUB132PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4571;
pub const XED_IFORM_VFNMSUB132PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4572;
pub const XED_IFORM_VFNMSUB132PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4573;
pub const XED_IFORM_VFNMSUB132PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4574;
pub const XED_IFORM_VFNMSUB132PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4575;
pub const XED_IFORM_VFNMSUB132PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4576;
pub const XED_IFORM_VFNMSUB132PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4577;
pub const XED_IFORM_VFNMSUB132PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4578;
pub const XED_IFORM_VFNMSUB132PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4579;
pub const XED_IFORM_VFNMSUB132PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4580;
pub const XED_IFORM_VFNMSUB132PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4581;
pub const XED_IFORM_VFNMSUB132PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4582;
pub const XED_IFORM_VFNMSUB132PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4583;
pub const XED_IFORM_VFNMSUB132PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4584;
pub const XED_IFORM_VFNMSUB132PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4585;
pub const XED_IFORM_VFNMSUB132PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4586;
pub const XED_IFORM_VFNMSUB132PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4587;
pub const XED_IFORM_VFNMSUB132PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4588;
pub const XED_IFORM_VFNMSUB132PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4589;
pub const XED_IFORM_VFNMSUB132PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4590;
pub const XED_IFORM_VFNMSUB132PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4591;
pub const XED_IFORM_VFNMSUB132PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4592;
pub const XED_IFORM_VFNMSUB132PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4593;
pub const XED_IFORM_VFNMSUB132PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4594;
pub const XED_IFORM_VFNMSUB132SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4595;
pub const XED_IFORM_VFNMSUB132SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4596;
pub const XED_IFORM_VFNMSUB132SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4597;
pub const XED_IFORM_VFNMSUB132SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4598;
pub const XED_IFORM_VFNMSUB132SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4599;
pub const XED_IFORM_VFNMSUB132SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4600;
pub const XED_IFORM_VFNMSUB132SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4601;
pub const XED_IFORM_VFNMSUB132SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4602;
pub const XED_IFORM_VFNMSUB132SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4603;
pub const XED_IFORM_VFNMSUB132SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4604;
pub const XED_IFORM_VFNMSUB213PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4605;
pub const XED_IFORM_VFNMSUB213PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4606;
pub const XED_IFORM_VFNMSUB213PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4607;
pub const XED_IFORM_VFNMSUB213PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4608;
pub const XED_IFORM_VFNMSUB213PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4609;
pub const XED_IFORM_VFNMSUB213PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4610;
pub const XED_IFORM_VFNMSUB213PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4611;
pub const XED_IFORM_VFNMSUB213PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4612;
pub const XED_IFORM_VFNMSUB213PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4613;
pub const XED_IFORM_VFNMSUB213PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4614;
pub const XED_IFORM_VFNMSUB213PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4615;
pub const XED_IFORM_VFNMSUB213PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4616;
pub const XED_IFORM_VFNMSUB213PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4617;
pub const XED_IFORM_VFNMSUB213PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4618;
pub const XED_IFORM_VFNMSUB213PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4619;
pub const XED_IFORM_VFNMSUB213PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4620;
pub const XED_IFORM_VFNMSUB213PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4621;
pub const XED_IFORM_VFNMSUB213PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4622;
pub const XED_IFORM_VFNMSUB213PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4623;
pub const XED_IFORM_VFNMSUB213PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4624;
pub const XED_IFORM_VFNMSUB213PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4625;
pub const XED_IFORM_VFNMSUB213PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4626;
pub const XED_IFORM_VFNMSUB213PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4627;
pub const XED_IFORM_VFNMSUB213PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4628;
pub const XED_IFORM_VFNMSUB213PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4629;
pub const XED_IFORM_VFNMSUB213PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4630;
pub const XED_IFORM_VFNMSUB213SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4631;
pub const XED_IFORM_VFNMSUB213SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4632;
pub const XED_IFORM_VFNMSUB213SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4633;
pub const XED_IFORM_VFNMSUB213SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4634;
pub const XED_IFORM_VFNMSUB213SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4635;
pub const XED_IFORM_VFNMSUB213SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4636;
pub const XED_IFORM_VFNMSUB213SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4637;
pub const XED_IFORM_VFNMSUB213SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4638;
pub const XED_IFORM_VFNMSUB213SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4639;
pub const XED_IFORM_VFNMSUB213SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4640;
pub const XED_IFORM_VFNMSUB231PD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4641;
pub const XED_IFORM_VFNMSUB231PD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4642;
pub const XED_IFORM_VFNMSUB231PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4643;
pub const XED_IFORM_VFNMSUB231PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4644;
pub const XED_IFORM_VFNMSUB231PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4645;
pub const XED_IFORM_VFNMSUB231PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4646;
pub const XED_IFORM_VFNMSUB231PD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4647;
pub const XED_IFORM_VFNMSUB231PD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4648;
pub const XED_IFORM_VFNMSUB231PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4649;
pub const XED_IFORM_VFNMSUB231PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4650;
pub const XED_IFORM_VFNMSUB231PH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4651;
pub const XED_IFORM_VFNMSUB231PH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4652;
pub const XED_IFORM_VFNMSUB231PH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4653;
pub const XED_IFORM_VFNMSUB231PH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4654;
pub const XED_IFORM_VFNMSUB231PH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4655;
pub const XED_IFORM_VFNMSUB231PH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4656;
pub const XED_IFORM_VFNMSUB231PS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4657;
pub const XED_IFORM_VFNMSUB231PS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4658;
pub const XED_IFORM_VFNMSUB231PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4659;
pub const XED_IFORM_VFNMSUB231PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4660;
pub const XED_IFORM_VFNMSUB231PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4661;
pub const XED_IFORM_VFNMSUB231PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4662;
pub const XED_IFORM_VFNMSUB231PS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4663;
pub const XED_IFORM_VFNMSUB231PS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4664;
pub const XED_IFORM_VFNMSUB231PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4665;
pub const XED_IFORM_VFNMSUB231PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4666;
pub const XED_IFORM_VFNMSUB231SD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 4667;
pub const XED_IFORM_VFNMSUB231SD_XMMdq_XMMq_XMMq: xed_iform_enum_t = 4668;
pub const XED_IFORM_VFNMSUB231SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4669;
pub const XED_IFORM_VFNMSUB231SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4670;
pub const XED_IFORM_VFNMSUB231SH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4671;
pub const XED_IFORM_VFNMSUB231SH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4672;
pub const XED_IFORM_VFNMSUB231SS_XMMdq_XMMd_MEMd: xed_iform_enum_t = 4673;
pub const XED_IFORM_VFNMSUB231SS_XMMdq_XMMd_XMMd: xed_iform_enum_t = 4674;
pub const XED_IFORM_VFNMSUB231SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4675;
pub const XED_IFORM_VFNMSUB231SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4676;
pub const XED_IFORM_VFNMSUBPD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4677;
pub const XED_IFORM_VFNMSUBPD_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4678;
pub const XED_IFORM_VFNMSUBPD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4679;
pub const XED_IFORM_VFNMSUBPD_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4680;
pub const XED_IFORM_VFNMSUBPD_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4681;
pub const XED_IFORM_VFNMSUBPD_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4682;
pub const XED_IFORM_VFNMSUBPS_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 4683;
pub const XED_IFORM_VFNMSUBPS_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4684;
pub const XED_IFORM_VFNMSUBPS_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4685;
pub const XED_IFORM_VFNMSUBPS_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 4686;
pub const XED_IFORM_VFNMSUBPS_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4687;
pub const XED_IFORM_VFNMSUBPS_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4688;
pub const XED_IFORM_VFNMSUBSD_XMMdq_XMMq_MEMq_XMMq: xed_iform_enum_t = 4689;
pub const XED_IFORM_VFNMSUBSD_XMMdq_XMMq_XMMq_MEMq: xed_iform_enum_t = 4690;
pub const XED_IFORM_VFNMSUBSD_XMMdq_XMMq_XMMq_XMMq: xed_iform_enum_t = 4691;
pub const XED_IFORM_VFNMSUBSS_XMMdq_XMMd_MEMd_XMMd: xed_iform_enum_t = 4692;
pub const XED_IFORM_VFNMSUBSS_XMMdq_XMMd_XMMd_MEMd: xed_iform_enum_t = 4693;
pub const XED_IFORM_VFNMSUBSS_XMMdq_XMMd_XMMd_XMMd: xed_iform_enum_t = 4694;
pub const XED_IFORM_VFPCLASSPD_MASKmskw_MASKmskw_MEMf64_IMM8_AVX512_VL128: xed_iform_enum_t = 4695;
pub const XED_IFORM_VFPCLASSPD_MASKmskw_MASKmskw_MEMf64_IMM8_AVX512_VL256: xed_iform_enum_t = 4696;
pub const XED_IFORM_VFPCLASSPD_MASKmskw_MASKmskw_MEMf64_IMM8_AVX512_VL512: xed_iform_enum_t = 4697;
pub const XED_IFORM_VFPCLASSPD_MASKmskw_MASKmskw_XMMf64_IMM8_AVX512: xed_iform_enum_t = 4698;
pub const XED_IFORM_VFPCLASSPD_MASKmskw_MASKmskw_YMMf64_IMM8_AVX512: xed_iform_enum_t = 4699;
pub const XED_IFORM_VFPCLASSPD_MASKmskw_MASKmskw_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 4700;
pub const XED_IFORM_VFPCLASSPH_MASKmskw_MASKmskw_MEMf16_IMM8_AVX512_VL128: xed_iform_enum_t = 4701;
pub const XED_IFORM_VFPCLASSPH_MASKmskw_MASKmskw_MEMf16_IMM8_AVX512_VL256: xed_iform_enum_t = 4702;
pub const XED_IFORM_VFPCLASSPH_MASKmskw_MASKmskw_MEMf16_IMM8_AVX512_VL512: xed_iform_enum_t = 4703;
pub const XED_IFORM_VFPCLASSPH_MASKmskw_MASKmskw_XMMf16_IMM8_AVX512: xed_iform_enum_t = 4704;
pub const XED_IFORM_VFPCLASSPH_MASKmskw_MASKmskw_YMMf16_IMM8_AVX512: xed_iform_enum_t = 4705;
pub const XED_IFORM_VFPCLASSPH_MASKmskw_MASKmskw_ZMMf16_IMM8_AVX512: xed_iform_enum_t = 4706;
pub const XED_IFORM_VFPCLASSPS_MASKmskw_MASKmskw_MEMf32_IMM8_AVX512_VL128: xed_iform_enum_t = 4707;
pub const XED_IFORM_VFPCLASSPS_MASKmskw_MASKmskw_MEMf32_IMM8_AVX512_VL256: xed_iform_enum_t = 4708;
pub const XED_IFORM_VFPCLASSPS_MASKmskw_MASKmskw_MEMf32_IMM8_AVX512_VL512: xed_iform_enum_t = 4709;
pub const XED_IFORM_VFPCLASSPS_MASKmskw_MASKmskw_XMMf32_IMM8_AVX512: xed_iform_enum_t = 4710;
pub const XED_IFORM_VFPCLASSPS_MASKmskw_MASKmskw_YMMf32_IMM8_AVX512: xed_iform_enum_t = 4711;
pub const XED_IFORM_VFPCLASSPS_MASKmskw_MASKmskw_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 4712;
pub const XED_IFORM_VFPCLASSSD_MASKmskw_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 4713;
pub const XED_IFORM_VFPCLASSSD_MASKmskw_MASKmskw_XMMf64_IMM8_AVX512: xed_iform_enum_t = 4714;
pub const XED_IFORM_VFPCLASSSH_MASKmskw_MASKmskw_MEMf16_IMM8_AVX512: xed_iform_enum_t = 4715;
pub const XED_IFORM_VFPCLASSSH_MASKmskw_MASKmskw_XMMf16_IMM8_AVX512: xed_iform_enum_t = 4716;
pub const XED_IFORM_VFPCLASSSS_MASKmskw_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 4717;
pub const XED_IFORM_VFPCLASSSS_MASKmskw_MASKmskw_XMMf32_IMM8_AVX512: xed_iform_enum_t = 4718;
pub const XED_IFORM_VFRCZPD_XMMdq_MEMdq: xed_iform_enum_t = 4719;
pub const XED_IFORM_VFRCZPD_XMMdq_XMMdq: xed_iform_enum_t = 4720;
pub const XED_IFORM_VFRCZPD_YMMqq_MEMqq: xed_iform_enum_t = 4721;
pub const XED_IFORM_VFRCZPD_YMMqq_YMMqq: xed_iform_enum_t = 4722;
pub const XED_IFORM_VFRCZPS_XMMdq_MEMdq: xed_iform_enum_t = 4723;
pub const XED_IFORM_VFRCZPS_XMMdq_XMMdq: xed_iform_enum_t = 4724;
pub const XED_IFORM_VFRCZPS_YMMqq_MEMqq: xed_iform_enum_t = 4725;
pub const XED_IFORM_VFRCZPS_YMMqq_YMMqq: xed_iform_enum_t = 4726;
pub const XED_IFORM_VFRCZSD_XMMdq_MEMq: xed_iform_enum_t = 4727;
pub const XED_IFORM_VFRCZSD_XMMdq_XMMq: xed_iform_enum_t = 4728;
pub const XED_IFORM_VFRCZSS_XMMdq_MEMd: xed_iform_enum_t = 4729;
pub const XED_IFORM_VFRCZSS_XMMdq_XMMd: xed_iform_enum_t = 4730;
pub const XED_IFORM_VGATHERDPD_XMMf64_MASKmskw_MEMf64_AVX512_VL128: xed_iform_enum_t = 4731;
pub const XED_IFORM_VGATHERDPD_XMMf64_MEMf64_XMMi64_VL128: xed_iform_enum_t = 4732;
pub const XED_IFORM_VGATHERDPD_YMMf64_MASKmskw_MEMf64_AVX512_VL256: xed_iform_enum_t = 4733;
pub const XED_IFORM_VGATHERDPD_YMMf64_MEMf64_YMMi64_VL256: xed_iform_enum_t = 4734;
pub const XED_IFORM_VGATHERDPD_ZMMf64_MASKmskw_MEMf64_AVX512_VL512: xed_iform_enum_t = 4735;
pub const XED_IFORM_VGATHERDPS_XMMf32_MASKmskw_MEMf32_AVX512_VL128: xed_iform_enum_t = 4736;
pub const XED_IFORM_VGATHERDPS_XMMf32_MEMf32_XMMi32_VL128: xed_iform_enum_t = 4737;
pub const XED_IFORM_VGATHERDPS_YMMf32_MASKmskw_MEMf32_AVX512_VL256: xed_iform_enum_t = 4738;
pub const XED_IFORM_VGATHERDPS_YMMf32_MEMf32_YMMi32_VL256: xed_iform_enum_t = 4739;
pub const XED_IFORM_VGATHERDPS_ZMMf32_MASKmskw_MEMf32_AVX512_VL512: xed_iform_enum_t = 4740;
pub const XED_IFORM_VGATHERPF0DPD_MEMf64_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 4741;
pub const XED_IFORM_VGATHERPF0DPS_MEMf32_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 4742;
pub const XED_IFORM_VGATHERPF0QPD_MEMf64_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 4743;
pub const XED_IFORM_VGATHERPF0QPS_MEMf32_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 4744;
pub const XED_IFORM_VGATHERPF1DPD_MEMf64_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 4745;
pub const XED_IFORM_VGATHERPF1DPS_MEMf32_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 4746;
pub const XED_IFORM_VGATHERPF1QPD_MEMf64_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 4747;
pub const XED_IFORM_VGATHERPF1QPS_MEMf32_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 4748;
pub const XED_IFORM_VGATHERQPD_XMMf64_MASKmskw_MEMf64_AVX512_VL128: xed_iform_enum_t = 4749;
pub const XED_IFORM_VGATHERQPD_XMMf64_MEMf64_XMMi64_VL128: xed_iform_enum_t = 4750;
pub const XED_IFORM_VGATHERQPD_YMMf64_MASKmskw_MEMf64_AVX512_VL256: xed_iform_enum_t = 4751;
pub const XED_IFORM_VGATHERQPD_YMMf64_MEMf64_YMMi64_VL256: xed_iform_enum_t = 4752;
pub const XED_IFORM_VGATHERQPD_ZMMf64_MASKmskw_MEMf64_AVX512_VL512: xed_iform_enum_t = 4753;
pub const XED_IFORM_VGATHERQPS_XMMf32_MASKmskw_MEMf32_AVX512_VL128: xed_iform_enum_t = 4754;
pub const XED_IFORM_VGATHERQPS_XMMf32_MASKmskw_MEMf32_AVX512_VL256: xed_iform_enum_t = 4755;
pub const XED_IFORM_VGATHERQPS_XMMf32_MEMf32_XMMi32_VL128: xed_iform_enum_t = 4756;
pub const XED_IFORM_VGATHERQPS_XMMf32_MEMf32_XMMi32_VL256: xed_iform_enum_t = 4757;
pub const XED_IFORM_VGATHERQPS_YMMf32_MASKmskw_MEMf32_AVX512_VL512: xed_iform_enum_t = 4758;
pub const XED_IFORM_VGETEXPPD_XMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 4759;
pub const XED_IFORM_VGETEXPPD_XMMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 4760;
pub const XED_IFORM_VGETEXPPD_YMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 4761;
pub const XED_IFORM_VGETEXPPD_YMMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 4762;
pub const XED_IFORM_VGETEXPPD_ZMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 4763;
pub const XED_IFORM_VGETEXPPD_ZMMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 4764;
pub const XED_IFORM_VGETEXPPH_XMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 4765;
pub const XED_IFORM_VGETEXPPH_XMMf16_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 4766;
pub const XED_IFORM_VGETEXPPH_YMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 4767;
pub const XED_IFORM_VGETEXPPH_YMMf16_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 4768;
pub const XED_IFORM_VGETEXPPH_ZMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 4769;
pub const XED_IFORM_VGETEXPPH_ZMMf16_MASKmskw_ZMMf16_AVX512: xed_iform_enum_t = 4770;
pub const XED_IFORM_VGETEXPPS_XMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 4771;
pub const XED_IFORM_VGETEXPPS_XMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 4772;
pub const XED_IFORM_VGETEXPPS_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 4773;
pub const XED_IFORM_VGETEXPPS_YMMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 4774;
pub const XED_IFORM_VGETEXPPS_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 4775;
pub const XED_IFORM_VGETEXPPS_ZMMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 4776;
pub const XED_IFORM_VGETEXPSD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4777;
pub const XED_IFORM_VGETEXPSD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4778;
pub const XED_IFORM_VGETEXPSH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4779;
pub const XED_IFORM_VGETEXPSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4780;
pub const XED_IFORM_VGETEXPSS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4781;
pub const XED_IFORM_VGETEXPSS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4782;
pub const XED_IFORM_VGETMANTPD_XMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 4783;
pub const XED_IFORM_VGETMANTPD_XMMf64_MASKmskw_XMMf64_IMM8_AVX512: xed_iform_enum_t = 4784;
pub const XED_IFORM_VGETMANTPD_YMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 4785;
pub const XED_IFORM_VGETMANTPD_YMMf64_MASKmskw_YMMf64_IMM8_AVX512: xed_iform_enum_t = 4786;
pub const XED_IFORM_VGETMANTPD_ZMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 4787;
pub const XED_IFORM_VGETMANTPD_ZMMf64_MASKmskw_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 4788;
pub const XED_IFORM_VGETMANTPH_XMMf16_MASKmskw_MEMf16_IMM8_AVX512: xed_iform_enum_t = 4789;
pub const XED_IFORM_VGETMANTPH_XMMf16_MASKmskw_XMMf16_IMM8_AVX512: xed_iform_enum_t = 4790;
pub const XED_IFORM_VGETMANTPH_YMMf16_MASKmskw_MEMf16_IMM8_AVX512: xed_iform_enum_t = 4791;
pub const XED_IFORM_VGETMANTPH_YMMf16_MASKmskw_YMMf16_IMM8_AVX512: xed_iform_enum_t = 4792;
pub const XED_IFORM_VGETMANTPH_ZMMf16_MASKmskw_MEMf16_IMM8_AVX512: xed_iform_enum_t = 4793;
pub const XED_IFORM_VGETMANTPH_ZMMf16_MASKmskw_ZMMf16_IMM8_AVX512: xed_iform_enum_t = 4794;
pub const XED_IFORM_VGETMANTPS_XMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 4795;
pub const XED_IFORM_VGETMANTPS_XMMf32_MASKmskw_XMMf32_IMM8_AVX512: xed_iform_enum_t = 4796;
pub const XED_IFORM_VGETMANTPS_YMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 4797;
pub const XED_IFORM_VGETMANTPS_YMMf32_MASKmskw_YMMf32_IMM8_AVX512: xed_iform_enum_t = 4798;
pub const XED_IFORM_VGETMANTPS_ZMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 4799;
pub const XED_IFORM_VGETMANTPS_ZMMf32_MASKmskw_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 4800;
pub const XED_IFORM_VGETMANTSD_XMMf64_MASKmskw_XMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 4801;
pub const XED_IFORM_VGETMANTSD_XMMf64_MASKmskw_XMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 4802;
pub const XED_IFORM_VGETMANTSH_XMMf16_MASKmskw_XMMf16_MEMf16_IMM8_AVX512: xed_iform_enum_t = 4803;
pub const XED_IFORM_VGETMANTSH_XMMf16_MASKmskw_XMMf16_XMMf16_IMM8_AVX512: xed_iform_enum_t = 4804;
pub const XED_IFORM_VGETMANTSS_XMMf32_MASKmskw_XMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 4805;
pub const XED_IFORM_VGETMANTSS_XMMf32_MASKmskw_XMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 4806;
pub const XED_IFORM_VGF2P8AFFINEINVQB_XMMu8_MASKmskw_XMMu8_MEMu64_IMM8_AVX512: xed_iform_enum_t =
    4807;
pub const XED_IFORM_VGF2P8AFFINEINVQB_XMMu8_MASKmskw_XMMu8_XMMu64_IMM8_AVX512: xed_iform_enum_t =
    4808;
pub const XED_IFORM_VGF2P8AFFINEINVQB_XMMu8_XMMu8_MEMu64_IMM8: xed_iform_enum_t = 4809;
pub const XED_IFORM_VGF2P8AFFINEINVQB_XMMu8_XMMu8_XMMu64_IMM8: xed_iform_enum_t = 4810;
pub const XED_IFORM_VGF2P8AFFINEINVQB_YMMu8_MASKmskw_YMMu8_MEMu64_IMM8_AVX512: xed_iform_enum_t =
    4811;
pub const XED_IFORM_VGF2P8AFFINEINVQB_YMMu8_MASKmskw_YMMu8_YMMu64_IMM8_AVX512: xed_iform_enum_t =
    4812;
pub const XED_IFORM_VGF2P8AFFINEINVQB_YMMu8_YMMu8_MEMu64_IMM8: xed_iform_enum_t = 4813;
pub const XED_IFORM_VGF2P8AFFINEINVQB_YMMu8_YMMu8_YMMu64_IMM8: xed_iform_enum_t = 4814;
pub const XED_IFORM_VGF2P8AFFINEINVQB_ZMMu8_MASKmskw_ZMMu8_MEMu64_IMM8_AVX512: xed_iform_enum_t =
    4815;
pub const XED_IFORM_VGF2P8AFFINEINVQB_ZMMu8_MASKmskw_ZMMu8_ZMMu64_IMM8_AVX512: xed_iform_enum_t =
    4816;
pub const XED_IFORM_VGF2P8AFFINEQB_XMMu8_MASKmskw_XMMu8_MEMu64_IMM8_AVX512: xed_iform_enum_t = 4817;
pub const XED_IFORM_VGF2P8AFFINEQB_XMMu8_MASKmskw_XMMu8_XMMu64_IMM8_AVX512: xed_iform_enum_t = 4818;
pub const XED_IFORM_VGF2P8AFFINEQB_XMMu8_XMMu8_MEMu64_IMM8: xed_iform_enum_t = 4819;
pub const XED_IFORM_VGF2P8AFFINEQB_XMMu8_XMMu8_XMMu64_IMM8: xed_iform_enum_t = 4820;
pub const XED_IFORM_VGF2P8AFFINEQB_YMMu8_MASKmskw_YMMu8_MEMu64_IMM8_AVX512: xed_iform_enum_t = 4821;
pub const XED_IFORM_VGF2P8AFFINEQB_YMMu8_MASKmskw_YMMu8_YMMu64_IMM8_AVX512: xed_iform_enum_t = 4822;
pub const XED_IFORM_VGF2P8AFFINEQB_YMMu8_YMMu8_MEMu64_IMM8: xed_iform_enum_t = 4823;
pub const XED_IFORM_VGF2P8AFFINEQB_YMMu8_YMMu8_YMMu64_IMM8: xed_iform_enum_t = 4824;
pub const XED_IFORM_VGF2P8AFFINEQB_ZMMu8_MASKmskw_ZMMu8_MEMu64_IMM8_AVX512: xed_iform_enum_t = 4825;
pub const XED_IFORM_VGF2P8AFFINEQB_ZMMu8_MASKmskw_ZMMu8_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 4826;
pub const XED_IFORM_VGF2P8MULB_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 4827;
pub const XED_IFORM_VGF2P8MULB_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 4828;
pub const XED_IFORM_VGF2P8MULB_XMMu8_XMMu8_MEMu8: xed_iform_enum_t = 4829;
pub const XED_IFORM_VGF2P8MULB_XMMu8_XMMu8_XMMu8: xed_iform_enum_t = 4830;
pub const XED_IFORM_VGF2P8MULB_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 4831;
pub const XED_IFORM_VGF2P8MULB_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 4832;
pub const XED_IFORM_VGF2P8MULB_YMMu8_YMMu8_MEMu8: xed_iform_enum_t = 4833;
pub const XED_IFORM_VGF2P8MULB_YMMu8_YMMu8_YMMu8: xed_iform_enum_t = 4834;
pub const XED_IFORM_VGF2P8MULB_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 4835;
pub const XED_IFORM_VGF2P8MULB_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 4836;
pub const XED_IFORM_VHADDPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4837;
pub const XED_IFORM_VHADDPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4838;
pub const XED_IFORM_VHADDPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4839;
pub const XED_IFORM_VHADDPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4840;
pub const XED_IFORM_VHADDPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4841;
pub const XED_IFORM_VHADDPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4842;
pub const XED_IFORM_VHADDPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4843;
pub const XED_IFORM_VHADDPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4844;
pub const XED_IFORM_VHSUBPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4845;
pub const XED_IFORM_VHSUBPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4846;
pub const XED_IFORM_VHSUBPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4847;
pub const XED_IFORM_VHSUBPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4848;
pub const XED_IFORM_VHSUBPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4849;
pub const XED_IFORM_VHSUBPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4850;
pub const XED_IFORM_VHSUBPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4851;
pub const XED_IFORM_VHSUBPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4852;
pub const XED_IFORM_VINSERTF128_YMMqq_YMMqq_MEMdq_IMMb: xed_iform_enum_t = 4853;
pub const XED_IFORM_VINSERTF128_YMMqq_YMMqq_XMMdq_IMMb: xed_iform_enum_t = 4854;
pub const XED_IFORM_VINSERTF32X4_YMMf32_MASKmskw_YMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 4855;
pub const XED_IFORM_VINSERTF32X4_YMMf32_MASKmskw_YMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 4856;
pub const XED_IFORM_VINSERTF32X4_ZMMf32_MASKmskw_ZMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 4857;
pub const XED_IFORM_VINSERTF32X4_ZMMf32_MASKmskw_ZMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 4858;
pub const XED_IFORM_VINSERTF32X8_ZMMf32_MASKmskw_ZMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 4859;
pub const XED_IFORM_VINSERTF32X8_ZMMf32_MASKmskw_ZMMf32_YMMf32_IMM8_AVX512: xed_iform_enum_t = 4860;
pub const XED_IFORM_VINSERTF64X2_YMMf64_MASKmskw_YMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 4861;
pub const XED_IFORM_VINSERTF64X2_YMMf64_MASKmskw_YMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 4862;
pub const XED_IFORM_VINSERTF64X2_ZMMf64_MASKmskw_ZMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 4863;
pub const XED_IFORM_VINSERTF64X2_ZMMf64_MASKmskw_ZMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 4864;
pub const XED_IFORM_VINSERTF64X4_ZMMf64_MASKmskw_ZMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 4865;
pub const XED_IFORM_VINSERTF64X4_ZMMf64_MASKmskw_ZMMf64_YMMf64_IMM8_AVX512: xed_iform_enum_t = 4866;
pub const XED_IFORM_VINSERTI128_YMMqq_YMMqq_MEMdq_IMMb: xed_iform_enum_t = 4867;
pub const XED_IFORM_VINSERTI128_YMMqq_YMMqq_XMMdq_IMMb: xed_iform_enum_t = 4868;
pub const XED_IFORM_VINSERTI32X4_YMMu32_MASKmskw_YMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 4869;
pub const XED_IFORM_VINSERTI32X4_YMMu32_MASKmskw_YMMu32_XMMu32_IMM8_AVX512: xed_iform_enum_t = 4870;
pub const XED_IFORM_VINSERTI32X4_ZMMu32_MASKmskw_ZMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 4871;
pub const XED_IFORM_VINSERTI32X4_ZMMu32_MASKmskw_ZMMu32_XMMu32_IMM8_AVX512: xed_iform_enum_t = 4872;
pub const XED_IFORM_VINSERTI32X8_ZMMu32_MASKmskw_ZMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 4873;
pub const XED_IFORM_VINSERTI32X8_ZMMu32_MASKmskw_ZMMu32_YMMu32_IMM8_AVX512: xed_iform_enum_t = 4874;
pub const XED_IFORM_VINSERTI64X2_YMMu64_MASKmskw_YMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 4875;
pub const XED_IFORM_VINSERTI64X2_YMMu64_MASKmskw_YMMu64_XMMu64_IMM8_AVX512: xed_iform_enum_t = 4876;
pub const XED_IFORM_VINSERTI64X2_ZMMu64_MASKmskw_ZMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 4877;
pub const XED_IFORM_VINSERTI64X2_ZMMu64_MASKmskw_ZMMu64_XMMu64_IMM8_AVX512: xed_iform_enum_t = 4878;
pub const XED_IFORM_VINSERTI64X4_ZMMu64_MASKmskw_ZMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 4879;
pub const XED_IFORM_VINSERTI64X4_ZMMu64_MASKmskw_ZMMu64_YMMu64_IMM8_AVX512: xed_iform_enum_t = 4880;
pub const XED_IFORM_VINSERTPS_XMMdq_XMMdq_MEMd_IMMb: xed_iform_enum_t = 4881;
pub const XED_IFORM_VINSERTPS_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 4882;
pub const XED_IFORM_VINSERTPS_XMMf32_XMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 4883;
pub const XED_IFORM_VINSERTPS_XMMf32_XMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 4884;
pub const XED_IFORM_VLDDQU_XMMdq_MEMdq: xed_iform_enum_t = 4885;
pub const XED_IFORM_VLDDQU_YMMqq_MEMqq: xed_iform_enum_t = 4886;
pub const XED_IFORM_VLDMXCSR_MEMd: xed_iform_enum_t = 4887;
pub const XED_IFORM_VMASKMOVDQU_XMMxub_XMMxub: xed_iform_enum_t = 4888;
pub const XED_IFORM_VMASKMOVPD_MEMdq_XMMdq_XMMdq: xed_iform_enum_t = 4889;
pub const XED_IFORM_VMASKMOVPD_MEMqq_YMMqq_YMMqq: xed_iform_enum_t = 4890;
pub const XED_IFORM_VMASKMOVPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4891;
pub const XED_IFORM_VMASKMOVPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4892;
pub const XED_IFORM_VMASKMOVPS_MEMdq_XMMdq_XMMdq: xed_iform_enum_t = 4893;
pub const XED_IFORM_VMASKMOVPS_MEMqq_YMMqq_YMMqq: xed_iform_enum_t = 4894;
pub const XED_IFORM_VMASKMOVPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4895;
pub const XED_IFORM_VMASKMOVPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4896;
pub const XED_IFORM_VMAXPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4897;
pub const XED_IFORM_VMAXPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4898;
pub const XED_IFORM_VMAXPD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4899;
pub const XED_IFORM_VMAXPD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4900;
pub const XED_IFORM_VMAXPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4901;
pub const XED_IFORM_VMAXPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4902;
pub const XED_IFORM_VMAXPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4903;
pub const XED_IFORM_VMAXPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4904;
pub const XED_IFORM_VMAXPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4905;
pub const XED_IFORM_VMAXPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4906;
pub const XED_IFORM_VMAXPH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4907;
pub const XED_IFORM_VMAXPH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4908;
pub const XED_IFORM_VMAXPH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4909;
pub const XED_IFORM_VMAXPH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4910;
pub const XED_IFORM_VMAXPH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4911;
pub const XED_IFORM_VMAXPH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4912;
pub const XED_IFORM_VMAXPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4913;
pub const XED_IFORM_VMAXPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4914;
pub const XED_IFORM_VMAXPS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4915;
pub const XED_IFORM_VMAXPS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4916;
pub const XED_IFORM_VMAXPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4917;
pub const XED_IFORM_VMAXPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4918;
pub const XED_IFORM_VMAXPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4919;
pub const XED_IFORM_VMAXPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4920;
pub const XED_IFORM_VMAXPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4921;
pub const XED_IFORM_VMAXPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4922;
pub const XED_IFORM_VMAXSD_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 4923;
pub const XED_IFORM_VMAXSD_XMMdq_XMMdq_XMMq: xed_iform_enum_t = 4924;
pub const XED_IFORM_VMAXSD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4925;
pub const XED_IFORM_VMAXSD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4926;
pub const XED_IFORM_VMAXSH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4927;
pub const XED_IFORM_VMAXSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4928;
pub const XED_IFORM_VMAXSS_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 4929;
pub const XED_IFORM_VMAXSS_XMMdq_XMMdq_XMMd: xed_iform_enum_t = 4930;
pub const XED_IFORM_VMAXSS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4931;
pub const XED_IFORM_VMAXSS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4932;
pub const XED_IFORM_VMCALL: xed_iform_enum_t = 4933;
pub const XED_IFORM_VMCLEAR_MEMq: xed_iform_enum_t = 4934;
pub const XED_IFORM_VMFUNC: xed_iform_enum_t = 4935;
pub const XED_IFORM_VMINPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4936;
pub const XED_IFORM_VMINPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4937;
pub const XED_IFORM_VMINPD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4938;
pub const XED_IFORM_VMINPD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4939;
pub const XED_IFORM_VMINPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 4940;
pub const XED_IFORM_VMINPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 4941;
pub const XED_IFORM_VMINPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4942;
pub const XED_IFORM_VMINPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4943;
pub const XED_IFORM_VMINPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 4944;
pub const XED_IFORM_VMINPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 4945;
pub const XED_IFORM_VMINPH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4946;
pub const XED_IFORM_VMINPH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4947;
pub const XED_IFORM_VMINPH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 4948;
pub const XED_IFORM_VMINPH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 4949;
pub const XED_IFORM_VMINPH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 4950;
pub const XED_IFORM_VMINPH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 4951;
pub const XED_IFORM_VMINPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 4952;
pub const XED_IFORM_VMINPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 4953;
pub const XED_IFORM_VMINPS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4954;
pub const XED_IFORM_VMINPS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4955;
pub const XED_IFORM_VMINPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 4956;
pub const XED_IFORM_VMINPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 4957;
pub const XED_IFORM_VMINPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 4958;
pub const XED_IFORM_VMINPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 4959;
pub const XED_IFORM_VMINPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 4960;
pub const XED_IFORM_VMINPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 4961;
pub const XED_IFORM_VMINSD_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 4962;
pub const XED_IFORM_VMINSD_XMMdq_XMMdq_XMMq: xed_iform_enum_t = 4963;
pub const XED_IFORM_VMINSD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 4964;
pub const XED_IFORM_VMINSD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 4965;
pub const XED_IFORM_VMINSH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 4966;
pub const XED_IFORM_VMINSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 4967;
pub const XED_IFORM_VMINSS_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 4968;
pub const XED_IFORM_VMINSS_XMMdq_XMMdq_XMMd: xed_iform_enum_t = 4969;
pub const XED_IFORM_VMINSS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 4970;
pub const XED_IFORM_VMINSS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 4971;
pub const XED_IFORM_VMLAUNCH: xed_iform_enum_t = 4972;
pub const XED_IFORM_VMLOAD_ArAX: xed_iform_enum_t = 4973;
pub const XED_IFORM_VMMCALL: xed_iform_enum_t = 4974;
pub const XED_IFORM_VMOVAPD_MEMdq_XMMdq: xed_iform_enum_t = 4975;
pub const XED_IFORM_VMOVAPD_MEMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 4976;
pub const XED_IFORM_VMOVAPD_MEMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 4977;
pub const XED_IFORM_VMOVAPD_MEMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 4978;
pub const XED_IFORM_VMOVAPD_MEMqq_YMMqq: xed_iform_enum_t = 4979;
pub const XED_IFORM_VMOVAPD_XMMdq_MEMdq: xed_iform_enum_t = 4980;
pub const XED_IFORM_VMOVAPD_XMMdq_XMMdq_28: xed_iform_enum_t = 4981;
pub const XED_IFORM_VMOVAPD_XMMdq_XMMdq_29: xed_iform_enum_t = 4982;
pub const XED_IFORM_VMOVAPD_XMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 4983;
pub const XED_IFORM_VMOVAPD_XMMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 4984;
pub const XED_IFORM_VMOVAPD_YMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 4985;
pub const XED_IFORM_VMOVAPD_YMMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 4986;
pub const XED_IFORM_VMOVAPD_YMMqq_MEMqq: xed_iform_enum_t = 4987;
pub const XED_IFORM_VMOVAPD_YMMqq_YMMqq_28: xed_iform_enum_t = 4988;
pub const XED_IFORM_VMOVAPD_YMMqq_YMMqq_29: xed_iform_enum_t = 4989;
pub const XED_IFORM_VMOVAPD_ZMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 4990;
pub const XED_IFORM_VMOVAPD_ZMMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 4991;
pub const XED_IFORM_VMOVAPS_MEMdq_XMMdq: xed_iform_enum_t = 4992;
pub const XED_IFORM_VMOVAPS_MEMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 4993;
pub const XED_IFORM_VMOVAPS_MEMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 4994;
pub const XED_IFORM_VMOVAPS_MEMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 4995;
pub const XED_IFORM_VMOVAPS_MEMqq_YMMqq: xed_iform_enum_t = 4996;
pub const XED_IFORM_VMOVAPS_XMMdq_MEMdq: xed_iform_enum_t = 4997;
pub const XED_IFORM_VMOVAPS_XMMdq_XMMdq_28: xed_iform_enum_t = 4998;
pub const XED_IFORM_VMOVAPS_XMMdq_XMMdq_29: xed_iform_enum_t = 4999;
pub const XED_IFORM_VMOVAPS_XMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5000;
pub const XED_IFORM_VMOVAPS_XMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 5001;
pub const XED_IFORM_VMOVAPS_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5002;
pub const XED_IFORM_VMOVAPS_YMMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 5003;
pub const XED_IFORM_VMOVAPS_YMMqq_MEMqq: xed_iform_enum_t = 5004;
pub const XED_IFORM_VMOVAPS_YMMqq_YMMqq_28: xed_iform_enum_t = 5005;
pub const XED_IFORM_VMOVAPS_YMMqq_YMMqq_29: xed_iform_enum_t = 5006;
pub const XED_IFORM_VMOVAPS_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5007;
pub const XED_IFORM_VMOVAPS_ZMMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 5008;
pub const XED_IFORM_VMOVD_GPR32d_XMMd: xed_iform_enum_t = 5009;
pub const XED_IFORM_VMOVD_GPR32u32_XMMu32_AVX512: xed_iform_enum_t = 5010;
pub const XED_IFORM_VMOVD_MEMd_XMMd: xed_iform_enum_t = 5011;
pub const XED_IFORM_VMOVD_MEMu32_XMMu32_AVX512: xed_iform_enum_t = 5012;
pub const XED_IFORM_VMOVD_XMMdq_GPR32d: xed_iform_enum_t = 5013;
pub const XED_IFORM_VMOVD_XMMdq_MEMd: xed_iform_enum_t = 5014;
pub const XED_IFORM_VMOVD_XMMu32_GPR32u32_AVX512: xed_iform_enum_t = 5015;
pub const XED_IFORM_VMOVD_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 5016;
pub const XED_IFORM_VMOVDDUP_XMMdq_MEMq: xed_iform_enum_t = 5017;
pub const XED_IFORM_VMOVDDUP_XMMdq_XMMq: xed_iform_enum_t = 5018;
pub const XED_IFORM_VMOVDDUP_XMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 5019;
pub const XED_IFORM_VMOVDDUP_XMMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 5020;
pub const XED_IFORM_VMOVDDUP_YMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 5021;
pub const XED_IFORM_VMOVDDUP_YMMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 5022;
pub const XED_IFORM_VMOVDDUP_YMMqq_MEMqq: xed_iform_enum_t = 5023;
pub const XED_IFORM_VMOVDDUP_YMMqq_YMMqq: xed_iform_enum_t = 5024;
pub const XED_IFORM_VMOVDDUP_ZMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 5025;
pub const XED_IFORM_VMOVDDUP_ZMMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 5026;
pub const XED_IFORM_VMOVDQA_MEMdq_XMMdq: xed_iform_enum_t = 5027;
pub const XED_IFORM_VMOVDQA_MEMqq_YMMqq: xed_iform_enum_t = 5028;
pub const XED_IFORM_VMOVDQA_XMMdq_MEMdq: xed_iform_enum_t = 5029;
pub const XED_IFORM_VMOVDQA_XMMdq_XMMdq_6F: xed_iform_enum_t = 5030;
pub const XED_IFORM_VMOVDQA_XMMdq_XMMdq_7F: xed_iform_enum_t = 5031;
pub const XED_IFORM_VMOVDQA_YMMqq_MEMqq: xed_iform_enum_t = 5032;
pub const XED_IFORM_VMOVDQA_YMMqq_YMMqq_6F: xed_iform_enum_t = 5033;
pub const XED_IFORM_VMOVDQA_YMMqq_YMMqq_7F: xed_iform_enum_t = 5034;
pub const XED_IFORM_VMOVDQA32_MEMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 5035;
pub const XED_IFORM_VMOVDQA32_MEMu32_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 5036;
pub const XED_IFORM_VMOVDQA32_MEMu32_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 5037;
pub const XED_IFORM_VMOVDQA32_XMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 5038;
pub const XED_IFORM_VMOVDQA32_XMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 5039;
pub const XED_IFORM_VMOVDQA32_YMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 5040;
pub const XED_IFORM_VMOVDQA32_YMMu32_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 5041;
pub const XED_IFORM_VMOVDQA32_ZMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 5042;
pub const XED_IFORM_VMOVDQA32_ZMMu32_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 5043;
pub const XED_IFORM_VMOVDQA64_MEMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 5044;
pub const XED_IFORM_VMOVDQA64_MEMu64_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 5045;
pub const XED_IFORM_VMOVDQA64_MEMu64_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 5046;
pub const XED_IFORM_VMOVDQA64_XMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 5047;
pub const XED_IFORM_VMOVDQA64_XMMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 5048;
pub const XED_IFORM_VMOVDQA64_YMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 5049;
pub const XED_IFORM_VMOVDQA64_YMMu64_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 5050;
pub const XED_IFORM_VMOVDQA64_ZMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 5051;
pub const XED_IFORM_VMOVDQA64_ZMMu64_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 5052;
pub const XED_IFORM_VMOVDQU_MEMdq_XMMdq: xed_iform_enum_t = 5053;
pub const XED_IFORM_VMOVDQU_MEMqq_YMMqq: xed_iform_enum_t = 5054;
pub const XED_IFORM_VMOVDQU_XMMdq_MEMdq: xed_iform_enum_t = 5055;
pub const XED_IFORM_VMOVDQU_XMMdq_XMMdq_6F: xed_iform_enum_t = 5056;
pub const XED_IFORM_VMOVDQU_XMMdq_XMMdq_7F: xed_iform_enum_t = 5057;
pub const XED_IFORM_VMOVDQU_YMMqq_MEMqq: xed_iform_enum_t = 5058;
pub const XED_IFORM_VMOVDQU_YMMqq_YMMqq_6F: xed_iform_enum_t = 5059;
pub const XED_IFORM_VMOVDQU_YMMqq_YMMqq_7F: xed_iform_enum_t = 5060;
pub const XED_IFORM_VMOVDQU16_MEMu16_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 5061;
pub const XED_IFORM_VMOVDQU16_MEMu16_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 5062;
pub const XED_IFORM_VMOVDQU16_MEMu16_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 5063;
pub const XED_IFORM_VMOVDQU16_XMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 5064;
pub const XED_IFORM_VMOVDQU16_XMMu16_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 5065;
pub const XED_IFORM_VMOVDQU16_YMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 5066;
pub const XED_IFORM_VMOVDQU16_YMMu16_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 5067;
pub const XED_IFORM_VMOVDQU16_ZMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 5068;
pub const XED_IFORM_VMOVDQU16_ZMMu16_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 5069;
pub const XED_IFORM_VMOVDQU32_MEMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 5070;
pub const XED_IFORM_VMOVDQU32_MEMu32_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 5071;
pub const XED_IFORM_VMOVDQU32_MEMu32_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 5072;
pub const XED_IFORM_VMOVDQU32_XMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 5073;
pub const XED_IFORM_VMOVDQU32_XMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 5074;
pub const XED_IFORM_VMOVDQU32_YMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 5075;
pub const XED_IFORM_VMOVDQU32_YMMu32_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 5076;
pub const XED_IFORM_VMOVDQU32_ZMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 5077;
pub const XED_IFORM_VMOVDQU32_ZMMu32_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 5078;
pub const XED_IFORM_VMOVDQU64_MEMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 5079;
pub const XED_IFORM_VMOVDQU64_MEMu64_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 5080;
pub const XED_IFORM_VMOVDQU64_MEMu64_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 5081;
pub const XED_IFORM_VMOVDQU64_XMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 5082;
pub const XED_IFORM_VMOVDQU64_XMMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 5083;
pub const XED_IFORM_VMOVDQU64_YMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 5084;
pub const XED_IFORM_VMOVDQU64_YMMu64_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 5085;
pub const XED_IFORM_VMOVDQU64_ZMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 5086;
pub const XED_IFORM_VMOVDQU64_ZMMu64_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 5087;
pub const XED_IFORM_VMOVDQU8_MEMu8_MASKmskw_XMMu8_AVX512: xed_iform_enum_t = 5088;
pub const XED_IFORM_VMOVDQU8_MEMu8_MASKmskw_YMMu8_AVX512: xed_iform_enum_t = 5089;
pub const XED_IFORM_VMOVDQU8_MEMu8_MASKmskw_ZMMu8_AVX512: xed_iform_enum_t = 5090;
pub const XED_IFORM_VMOVDQU8_XMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 5091;
pub const XED_IFORM_VMOVDQU8_XMMu8_MASKmskw_XMMu8_AVX512: xed_iform_enum_t = 5092;
pub const XED_IFORM_VMOVDQU8_YMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 5093;
pub const XED_IFORM_VMOVDQU8_YMMu8_MASKmskw_YMMu8_AVX512: xed_iform_enum_t = 5094;
pub const XED_IFORM_VMOVDQU8_ZMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 5095;
pub const XED_IFORM_VMOVDQU8_ZMMu8_MASKmskw_ZMMu8_AVX512: xed_iform_enum_t = 5096;
pub const XED_IFORM_VMOVHLPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5097;
pub const XED_IFORM_VMOVHLPS_XMMf32_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 5098;
pub const XED_IFORM_VMOVHPD_MEMf64_XMMf64_AVX512: xed_iform_enum_t = 5099;
pub const XED_IFORM_VMOVHPD_MEMq_XMMdq: xed_iform_enum_t = 5100;
pub const XED_IFORM_VMOVHPD_XMMdq_XMMq_MEMq: xed_iform_enum_t = 5101;
pub const XED_IFORM_VMOVHPD_XMMf64_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 5102;
pub const XED_IFORM_VMOVHPS_MEMf32_XMMf32_AVX512: xed_iform_enum_t = 5103;
pub const XED_IFORM_VMOVHPS_MEMq_XMMdq: xed_iform_enum_t = 5104;
pub const XED_IFORM_VMOVHPS_XMMdq_XMMq_MEMq: xed_iform_enum_t = 5105;
pub const XED_IFORM_VMOVHPS_XMMf32_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 5106;
pub const XED_IFORM_VMOVLHPS_XMMdq_XMMq_XMMq: xed_iform_enum_t = 5107;
pub const XED_IFORM_VMOVLHPS_XMMf32_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 5108;
pub const XED_IFORM_VMOVLPD_MEMf64_XMMf64_AVX512: xed_iform_enum_t = 5109;
pub const XED_IFORM_VMOVLPD_MEMq_XMMq: xed_iform_enum_t = 5110;
pub const XED_IFORM_VMOVLPD_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 5111;
pub const XED_IFORM_VMOVLPD_XMMf64_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 5112;
pub const XED_IFORM_VMOVLPS_MEMf32_XMMf32_AVX512: xed_iform_enum_t = 5113;
pub const XED_IFORM_VMOVLPS_MEMq_XMMq: xed_iform_enum_t = 5114;
pub const XED_IFORM_VMOVLPS_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 5115;
pub const XED_IFORM_VMOVLPS_XMMf32_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 5116;
pub const XED_IFORM_VMOVMSKPD_GPR32d_XMMdq: xed_iform_enum_t = 5117;
pub const XED_IFORM_VMOVMSKPD_GPR32d_YMMqq: xed_iform_enum_t = 5118;
pub const XED_IFORM_VMOVMSKPS_GPR32d_XMMdq: xed_iform_enum_t = 5119;
pub const XED_IFORM_VMOVMSKPS_GPR32d_YMMqq: xed_iform_enum_t = 5120;
pub const XED_IFORM_VMOVNTDQ_MEMdq_XMMdq: xed_iform_enum_t = 5121;
pub const XED_IFORM_VMOVNTDQ_MEMqq_YMMqq: xed_iform_enum_t = 5122;
pub const XED_IFORM_VMOVNTDQ_MEMu32_XMMu32_AVX512: xed_iform_enum_t = 5123;
pub const XED_IFORM_VMOVNTDQ_MEMu32_YMMu32_AVX512: xed_iform_enum_t = 5124;
pub const XED_IFORM_VMOVNTDQ_MEMu32_ZMMu32_AVX512: xed_iform_enum_t = 5125;
pub const XED_IFORM_VMOVNTDQA_XMMdq_MEMdq: xed_iform_enum_t = 5126;
pub const XED_IFORM_VMOVNTDQA_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 5127;
pub const XED_IFORM_VMOVNTDQA_YMMqq_MEMqq: xed_iform_enum_t = 5128;
pub const XED_IFORM_VMOVNTDQA_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 5129;
pub const XED_IFORM_VMOVNTDQA_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 5130;
pub const XED_IFORM_VMOVNTPD_MEMdq_XMMdq: xed_iform_enum_t = 5131;
pub const XED_IFORM_VMOVNTPD_MEMf64_XMMf64_AVX512: xed_iform_enum_t = 5132;
pub const XED_IFORM_VMOVNTPD_MEMf64_YMMf64_AVX512: xed_iform_enum_t = 5133;
pub const XED_IFORM_VMOVNTPD_MEMf64_ZMMf64_AVX512: xed_iform_enum_t = 5134;
pub const XED_IFORM_VMOVNTPD_MEMqq_YMMqq: xed_iform_enum_t = 5135;
pub const XED_IFORM_VMOVNTPS_MEMdq_XMMdq: xed_iform_enum_t = 5136;
pub const XED_IFORM_VMOVNTPS_MEMf32_XMMf32_AVX512: xed_iform_enum_t = 5137;
pub const XED_IFORM_VMOVNTPS_MEMf32_YMMf32_AVX512: xed_iform_enum_t = 5138;
pub const XED_IFORM_VMOVNTPS_MEMf32_ZMMf32_AVX512: xed_iform_enum_t = 5139;
pub const XED_IFORM_VMOVNTPS_MEMqq_YMMqq: xed_iform_enum_t = 5140;
pub const XED_IFORM_VMOVQ_GPR64q_XMMq: xed_iform_enum_t = 5141;
pub const XED_IFORM_VMOVQ_GPR64u64_XMMu64_AVX512: xed_iform_enum_t = 5142;
pub const XED_IFORM_VMOVQ_MEMq_XMMq_7E: xed_iform_enum_t = 5143;
pub const XED_IFORM_VMOVQ_MEMq_XMMq_D6: xed_iform_enum_t = 5144;
pub const XED_IFORM_VMOVQ_MEMu64_XMMu64_AVX512: xed_iform_enum_t = 5145;
pub const XED_IFORM_VMOVQ_XMMdq_GPR64q: xed_iform_enum_t = 5146;
pub const XED_IFORM_VMOVQ_XMMdq_MEMq_6E: xed_iform_enum_t = 5147;
pub const XED_IFORM_VMOVQ_XMMdq_MEMq_7E: xed_iform_enum_t = 5148;
pub const XED_IFORM_VMOVQ_XMMdq_XMMq_7E: xed_iform_enum_t = 5149;
pub const XED_IFORM_VMOVQ_XMMdq_XMMq_D6: xed_iform_enum_t = 5150;
pub const XED_IFORM_VMOVQ_XMMu64_GPR64u64_AVX512: xed_iform_enum_t = 5151;
pub const XED_IFORM_VMOVQ_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 5152;
pub const XED_IFORM_VMOVQ_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 5153;
pub const XED_IFORM_VMOVSD_MEMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 5154;
pub const XED_IFORM_VMOVSD_MEMq_XMMq: xed_iform_enum_t = 5155;
pub const XED_IFORM_VMOVSD_XMMdq_MEMq: xed_iform_enum_t = 5156;
pub const XED_IFORM_VMOVSD_XMMdq_XMMdq_XMMq_10: xed_iform_enum_t = 5157;
pub const XED_IFORM_VMOVSD_XMMdq_XMMdq_XMMq_11: xed_iform_enum_t = 5158;
pub const XED_IFORM_VMOVSD_XMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 5159;
pub const XED_IFORM_VMOVSD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 5160;
pub const XED_IFORM_VMOVSH_MEMf16_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 5161;
pub const XED_IFORM_VMOVSH_XMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 5162;
pub const XED_IFORM_VMOVSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 5163;
pub const XED_IFORM_VMOVSHDUP_XMMdq_MEMdq: xed_iform_enum_t = 5164;
pub const XED_IFORM_VMOVSHDUP_XMMdq_XMMdq: xed_iform_enum_t = 5165;
pub const XED_IFORM_VMOVSHDUP_XMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5166;
pub const XED_IFORM_VMOVSHDUP_XMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 5167;
pub const XED_IFORM_VMOVSHDUP_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5168;
pub const XED_IFORM_VMOVSHDUP_YMMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 5169;
pub const XED_IFORM_VMOVSHDUP_YMMqq_MEMqq: xed_iform_enum_t = 5170;
pub const XED_IFORM_VMOVSHDUP_YMMqq_YMMqq: xed_iform_enum_t = 5171;
pub const XED_IFORM_VMOVSHDUP_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5172;
pub const XED_IFORM_VMOVSHDUP_ZMMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 5173;
pub const XED_IFORM_VMOVSLDUP_XMMdq_MEMdq: xed_iform_enum_t = 5174;
pub const XED_IFORM_VMOVSLDUP_XMMdq_XMMdq: xed_iform_enum_t = 5175;
pub const XED_IFORM_VMOVSLDUP_XMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5176;
pub const XED_IFORM_VMOVSLDUP_XMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 5177;
pub const XED_IFORM_VMOVSLDUP_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5178;
pub const XED_IFORM_VMOVSLDUP_YMMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 5179;
pub const XED_IFORM_VMOVSLDUP_YMMqq_MEMqq: xed_iform_enum_t = 5180;
pub const XED_IFORM_VMOVSLDUP_YMMqq_YMMqq: xed_iform_enum_t = 5181;
pub const XED_IFORM_VMOVSLDUP_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5182;
pub const XED_IFORM_VMOVSLDUP_ZMMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 5183;
pub const XED_IFORM_VMOVSS_MEMd_XMMd: xed_iform_enum_t = 5184;
pub const XED_IFORM_VMOVSS_MEMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 5185;
pub const XED_IFORM_VMOVSS_XMMdq_MEMd: xed_iform_enum_t = 5186;
pub const XED_IFORM_VMOVSS_XMMdq_XMMdq_XMMd_10: xed_iform_enum_t = 5187;
pub const XED_IFORM_VMOVSS_XMMdq_XMMdq_XMMd_11: xed_iform_enum_t = 5188;
pub const XED_IFORM_VMOVSS_XMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5189;
pub const XED_IFORM_VMOVSS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 5190;
pub const XED_IFORM_VMOVUPD_MEMdq_XMMdq: xed_iform_enum_t = 5191;
pub const XED_IFORM_VMOVUPD_MEMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 5192;
pub const XED_IFORM_VMOVUPD_MEMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 5193;
pub const XED_IFORM_VMOVUPD_MEMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 5194;
pub const XED_IFORM_VMOVUPD_MEMqq_YMMqq: xed_iform_enum_t = 5195;
pub const XED_IFORM_VMOVUPD_XMMdq_MEMdq: xed_iform_enum_t = 5196;
pub const XED_IFORM_VMOVUPD_XMMdq_XMMdq_10: xed_iform_enum_t = 5197;
pub const XED_IFORM_VMOVUPD_XMMdq_XMMdq_11: xed_iform_enum_t = 5198;
pub const XED_IFORM_VMOVUPD_XMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 5199;
pub const XED_IFORM_VMOVUPD_XMMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 5200;
pub const XED_IFORM_VMOVUPD_YMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 5201;
pub const XED_IFORM_VMOVUPD_YMMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 5202;
pub const XED_IFORM_VMOVUPD_YMMqq_MEMqq: xed_iform_enum_t = 5203;
pub const XED_IFORM_VMOVUPD_YMMqq_YMMqq_10: xed_iform_enum_t = 5204;
pub const XED_IFORM_VMOVUPD_YMMqq_YMMqq_11: xed_iform_enum_t = 5205;
pub const XED_IFORM_VMOVUPD_ZMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 5206;
pub const XED_IFORM_VMOVUPD_ZMMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 5207;
pub const XED_IFORM_VMOVUPS_MEMdq_XMMdq: xed_iform_enum_t = 5208;
pub const XED_IFORM_VMOVUPS_MEMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 5209;
pub const XED_IFORM_VMOVUPS_MEMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 5210;
pub const XED_IFORM_VMOVUPS_MEMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 5211;
pub const XED_IFORM_VMOVUPS_MEMqq_YMMqq: xed_iform_enum_t = 5212;
pub const XED_IFORM_VMOVUPS_XMMdq_MEMdq: xed_iform_enum_t = 5213;
pub const XED_IFORM_VMOVUPS_XMMdq_XMMdq_10: xed_iform_enum_t = 5214;
pub const XED_IFORM_VMOVUPS_XMMdq_XMMdq_11: xed_iform_enum_t = 5215;
pub const XED_IFORM_VMOVUPS_XMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5216;
pub const XED_IFORM_VMOVUPS_XMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 5217;
pub const XED_IFORM_VMOVUPS_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5218;
pub const XED_IFORM_VMOVUPS_YMMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 5219;
pub const XED_IFORM_VMOVUPS_YMMqq_MEMqq: xed_iform_enum_t = 5220;
pub const XED_IFORM_VMOVUPS_YMMqq_YMMqq_10: xed_iform_enum_t = 5221;
pub const XED_IFORM_VMOVUPS_YMMqq_YMMqq_11: xed_iform_enum_t = 5222;
pub const XED_IFORM_VMOVUPS_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 5223;
pub const XED_IFORM_VMOVUPS_ZMMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 5224;
pub const XED_IFORM_VMOVW_GPR32f16_XMMf16_AVX512: xed_iform_enum_t = 5225;
pub const XED_IFORM_VMOVW_MEMf16_XMMf16_AVX512: xed_iform_enum_t = 5226;
pub const XED_IFORM_VMOVW_XMMf16_GPR32f16_AVX512: xed_iform_enum_t = 5227;
pub const XED_IFORM_VMOVW_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 5228;
pub const XED_IFORM_VMPSADBW_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5229;
pub const XED_IFORM_VMPSADBW_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5230;
pub const XED_IFORM_VMPSADBW_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 5231;
pub const XED_IFORM_VMPSADBW_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 5232;
pub const XED_IFORM_VMPTRLD_MEMq: xed_iform_enum_t = 5233;
pub const XED_IFORM_VMPTRST_MEMq: xed_iform_enum_t = 5234;
pub const XED_IFORM_VMREAD_GPR32_GPR32: xed_iform_enum_t = 5235;
pub const XED_IFORM_VMREAD_GPR64_GPR64: xed_iform_enum_t = 5236;
pub const XED_IFORM_VMREAD_MEMd_GPR32: xed_iform_enum_t = 5237;
pub const XED_IFORM_VMREAD_MEMq_GPR64: xed_iform_enum_t = 5238;
pub const XED_IFORM_VMRESUME: xed_iform_enum_t = 5239;
pub const XED_IFORM_VMRUN_ArAX: xed_iform_enum_t = 5240;
pub const XED_IFORM_VMSAVE: xed_iform_enum_t = 5241;
pub const XED_IFORM_VMULPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5242;
pub const XED_IFORM_VMULPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5243;
pub const XED_IFORM_VMULPD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 5244;
pub const XED_IFORM_VMULPD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 5245;
pub const XED_IFORM_VMULPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 5246;
pub const XED_IFORM_VMULPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 5247;
pub const XED_IFORM_VMULPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5248;
pub const XED_IFORM_VMULPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5249;
pub const XED_IFORM_VMULPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 5250;
pub const XED_IFORM_VMULPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 5251;
pub const XED_IFORM_VMULPH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 5252;
pub const XED_IFORM_VMULPH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 5253;
pub const XED_IFORM_VMULPH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 5254;
pub const XED_IFORM_VMULPH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 5255;
pub const XED_IFORM_VMULPH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 5256;
pub const XED_IFORM_VMULPH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 5257;
pub const XED_IFORM_VMULPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5258;
pub const XED_IFORM_VMULPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5259;
pub const XED_IFORM_VMULPS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 5260;
pub const XED_IFORM_VMULPS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 5261;
pub const XED_IFORM_VMULPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 5262;
pub const XED_IFORM_VMULPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 5263;
pub const XED_IFORM_VMULPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5264;
pub const XED_IFORM_VMULPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5265;
pub const XED_IFORM_VMULPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 5266;
pub const XED_IFORM_VMULPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 5267;
pub const XED_IFORM_VMULSD_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 5268;
pub const XED_IFORM_VMULSD_XMMdq_XMMdq_XMMq: xed_iform_enum_t = 5269;
pub const XED_IFORM_VMULSD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 5270;
pub const XED_IFORM_VMULSD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 5271;
pub const XED_IFORM_VMULSH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 5272;
pub const XED_IFORM_VMULSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 5273;
pub const XED_IFORM_VMULSS_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 5274;
pub const XED_IFORM_VMULSS_XMMdq_XMMdq_XMMd: xed_iform_enum_t = 5275;
pub const XED_IFORM_VMULSS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 5276;
pub const XED_IFORM_VMULSS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 5277;
pub const XED_IFORM_VMWRITE_GPR32_GPR32: xed_iform_enum_t = 5278;
pub const XED_IFORM_VMWRITE_GPR32_MEMd: xed_iform_enum_t = 5279;
pub const XED_IFORM_VMWRITE_GPR64_GPR64: xed_iform_enum_t = 5280;
pub const XED_IFORM_VMWRITE_GPR64_MEMq: xed_iform_enum_t = 5281;
pub const XED_IFORM_VMXOFF: xed_iform_enum_t = 5282;
pub const XED_IFORM_VMXON_MEMq: xed_iform_enum_t = 5283;
pub const XED_IFORM_VORPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5284;
pub const XED_IFORM_VORPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5285;
pub const XED_IFORM_VORPD_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 5286;
pub const XED_IFORM_VORPD_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 5287;
pub const XED_IFORM_VORPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5288;
pub const XED_IFORM_VORPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5289;
pub const XED_IFORM_VORPD_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 5290;
pub const XED_IFORM_VORPD_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 5291;
pub const XED_IFORM_VORPD_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 5292;
pub const XED_IFORM_VORPD_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 5293;
pub const XED_IFORM_VORPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5294;
pub const XED_IFORM_VORPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5295;
pub const XED_IFORM_VORPS_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 5296;
pub const XED_IFORM_VORPS_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 5297;
pub const XED_IFORM_VORPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5298;
pub const XED_IFORM_VORPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5299;
pub const XED_IFORM_VORPS_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 5300;
pub const XED_IFORM_VORPS_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 5301;
pub const XED_IFORM_VORPS_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 5302;
pub const XED_IFORM_VORPS_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 5303;
pub const XED_IFORM_VP2INTERSECTD_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 5304;
pub const XED_IFORM_VP2INTERSECTD_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 5305;
pub const XED_IFORM_VP2INTERSECTD_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 5306;
pub const XED_IFORM_VP2INTERSECTD_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 5307;
pub const XED_IFORM_VP2INTERSECTD_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 5308;
pub const XED_IFORM_VP2INTERSECTD_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 5309;
pub const XED_IFORM_VP2INTERSECTQ_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 5310;
pub const XED_IFORM_VP2INTERSECTQ_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 5311;
pub const XED_IFORM_VP2INTERSECTQ_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 5312;
pub const XED_IFORM_VP2INTERSECTQ_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 5313;
pub const XED_IFORM_VP2INTERSECTQ_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 5314;
pub const XED_IFORM_VP2INTERSECTQ_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 5315;
pub const XED_IFORM_VP4DPWSSD_ZMMi32_MASKmskw_ZMMi16_MEMu32_AVX512: xed_iform_enum_t = 5316;
pub const XED_IFORM_VP4DPWSSDS_ZMMi32_MASKmskw_ZMMi16_MEMu32_AVX512: xed_iform_enum_t = 5317;
pub const XED_IFORM_VPABSB_XMMdq_MEMdq: xed_iform_enum_t = 5318;
pub const XED_IFORM_VPABSB_XMMdq_XMMdq: xed_iform_enum_t = 5319;
pub const XED_IFORM_VPABSB_XMMi8_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 5320;
pub const XED_IFORM_VPABSB_XMMi8_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 5321;
pub const XED_IFORM_VPABSB_YMMi8_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 5322;
pub const XED_IFORM_VPABSB_YMMi8_MASKmskw_YMMi8_AVX512: xed_iform_enum_t = 5323;
pub const XED_IFORM_VPABSB_YMMqq_MEMqq: xed_iform_enum_t = 5324;
pub const XED_IFORM_VPABSB_YMMqq_YMMqq: xed_iform_enum_t = 5325;
pub const XED_IFORM_VPABSB_ZMMi8_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 5326;
pub const XED_IFORM_VPABSB_ZMMi8_MASKmskw_ZMMi8_AVX512: xed_iform_enum_t = 5327;
pub const XED_IFORM_VPABSD_XMMdq_MEMdq: xed_iform_enum_t = 5328;
pub const XED_IFORM_VPABSD_XMMdq_XMMdq: xed_iform_enum_t = 5329;
pub const XED_IFORM_VPABSD_XMMi32_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 5330;
pub const XED_IFORM_VPABSD_XMMi32_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 5331;
pub const XED_IFORM_VPABSD_YMMi32_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 5332;
pub const XED_IFORM_VPABSD_YMMi32_MASKmskw_YMMi32_AVX512: xed_iform_enum_t = 5333;
pub const XED_IFORM_VPABSD_YMMqq_MEMqq: xed_iform_enum_t = 5334;
pub const XED_IFORM_VPABSD_YMMqq_YMMqq: xed_iform_enum_t = 5335;
pub const XED_IFORM_VPABSD_ZMMi32_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 5336;
pub const XED_IFORM_VPABSD_ZMMi32_MASKmskw_ZMMi32_AVX512: xed_iform_enum_t = 5337;
pub const XED_IFORM_VPABSQ_XMMi64_MASKmskw_MEMi64_AVX512: xed_iform_enum_t = 5338;
pub const XED_IFORM_VPABSQ_XMMi64_MASKmskw_XMMi64_AVX512: xed_iform_enum_t = 5339;
pub const XED_IFORM_VPABSQ_YMMi64_MASKmskw_MEMi64_AVX512: xed_iform_enum_t = 5340;
pub const XED_IFORM_VPABSQ_YMMi64_MASKmskw_YMMi64_AVX512: xed_iform_enum_t = 5341;
pub const XED_IFORM_VPABSQ_ZMMi64_MASKmskw_MEMi64_AVX512: xed_iform_enum_t = 5342;
pub const XED_IFORM_VPABSQ_ZMMi64_MASKmskw_ZMMi64_AVX512: xed_iform_enum_t = 5343;
pub const XED_IFORM_VPABSW_XMMdq_MEMdq: xed_iform_enum_t = 5344;
pub const XED_IFORM_VPABSW_XMMdq_XMMdq: xed_iform_enum_t = 5345;
pub const XED_IFORM_VPABSW_XMMi16_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 5346;
pub const XED_IFORM_VPABSW_XMMi16_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 5347;
pub const XED_IFORM_VPABSW_YMMi16_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 5348;
pub const XED_IFORM_VPABSW_YMMi16_MASKmskw_YMMi16_AVX512: xed_iform_enum_t = 5349;
pub const XED_IFORM_VPABSW_YMMqq_MEMqq: xed_iform_enum_t = 5350;
pub const XED_IFORM_VPABSW_YMMqq_YMMqq: xed_iform_enum_t = 5351;
pub const XED_IFORM_VPABSW_ZMMi16_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 5352;
pub const XED_IFORM_VPABSW_ZMMi16_MASKmskw_ZMMi16_AVX512: xed_iform_enum_t = 5353;
pub const XED_IFORM_VPACKSSDW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5354;
pub const XED_IFORM_VPACKSSDW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5355;
pub const XED_IFORM_VPACKSSDW_XMMi16_MASKmskw_XMMi32_MEMi32_AVX512: xed_iform_enum_t = 5356;
pub const XED_IFORM_VPACKSSDW_XMMi16_MASKmskw_XMMi32_XMMi32_AVX512: xed_iform_enum_t = 5357;
pub const XED_IFORM_VPACKSSDW_YMMi16_MASKmskw_YMMi32_MEMi32_AVX512: xed_iform_enum_t = 5358;
pub const XED_IFORM_VPACKSSDW_YMMi16_MASKmskw_YMMi32_YMMi32_AVX512: xed_iform_enum_t = 5359;
pub const XED_IFORM_VPACKSSDW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5360;
pub const XED_IFORM_VPACKSSDW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5361;
pub const XED_IFORM_VPACKSSDW_ZMMi16_MASKmskw_ZMMi32_MEMi32_AVX512: xed_iform_enum_t = 5362;
pub const XED_IFORM_VPACKSSDW_ZMMi16_MASKmskw_ZMMi32_ZMMi32_AVX512: xed_iform_enum_t = 5363;
pub const XED_IFORM_VPACKSSWB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5364;
pub const XED_IFORM_VPACKSSWB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5365;
pub const XED_IFORM_VPACKSSWB_XMMi8_MASKmskw_XMMi16_MEMi16_AVX512: xed_iform_enum_t = 5366;
pub const XED_IFORM_VPACKSSWB_XMMi8_MASKmskw_XMMi16_XMMi16_AVX512: xed_iform_enum_t = 5367;
pub const XED_IFORM_VPACKSSWB_YMMi8_MASKmskw_YMMi16_MEMi16_AVX512: xed_iform_enum_t = 5368;
pub const XED_IFORM_VPACKSSWB_YMMi8_MASKmskw_YMMi16_YMMi16_AVX512: xed_iform_enum_t = 5369;
pub const XED_IFORM_VPACKSSWB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5370;
pub const XED_IFORM_VPACKSSWB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5371;
pub const XED_IFORM_VPACKSSWB_ZMMi8_MASKmskw_ZMMi16_MEMi16_AVX512: xed_iform_enum_t = 5372;
pub const XED_IFORM_VPACKSSWB_ZMMi8_MASKmskw_ZMMi16_ZMMi16_AVX512: xed_iform_enum_t = 5373;
pub const XED_IFORM_VPACKUSDW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5374;
pub const XED_IFORM_VPACKUSDW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5375;
pub const XED_IFORM_VPACKUSDW_XMMu16_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 5376;
pub const XED_IFORM_VPACKUSDW_XMMu16_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 5377;
pub const XED_IFORM_VPACKUSDW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5378;
pub const XED_IFORM_VPACKUSDW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5379;
pub const XED_IFORM_VPACKUSDW_YMMu16_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 5380;
pub const XED_IFORM_VPACKUSDW_YMMu16_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 5381;
pub const XED_IFORM_VPACKUSDW_ZMMu16_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 5382;
pub const XED_IFORM_VPACKUSDW_ZMMu16_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 5383;
pub const XED_IFORM_VPACKUSWB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5384;
pub const XED_IFORM_VPACKUSWB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5385;
pub const XED_IFORM_VPACKUSWB_XMMu8_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 5386;
pub const XED_IFORM_VPACKUSWB_XMMu8_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 5387;
pub const XED_IFORM_VPACKUSWB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5388;
pub const XED_IFORM_VPACKUSWB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5389;
pub const XED_IFORM_VPACKUSWB_YMMu8_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 5390;
pub const XED_IFORM_VPACKUSWB_YMMu8_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 5391;
pub const XED_IFORM_VPACKUSWB_ZMMu8_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 5392;
pub const XED_IFORM_VPACKUSWB_ZMMu8_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 5393;
pub const XED_IFORM_VPADDB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5394;
pub const XED_IFORM_VPADDB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5395;
pub const XED_IFORM_VPADDB_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 5396;
pub const XED_IFORM_VPADDB_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 5397;
pub const XED_IFORM_VPADDB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5398;
pub const XED_IFORM_VPADDB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5399;
pub const XED_IFORM_VPADDB_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 5400;
pub const XED_IFORM_VPADDB_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 5401;
pub const XED_IFORM_VPADDB_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 5402;
pub const XED_IFORM_VPADDB_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 5403;
pub const XED_IFORM_VPADDD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5404;
pub const XED_IFORM_VPADDD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5405;
pub const XED_IFORM_VPADDD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 5406;
pub const XED_IFORM_VPADDD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 5407;
pub const XED_IFORM_VPADDD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5408;
pub const XED_IFORM_VPADDD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5409;
pub const XED_IFORM_VPADDD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 5410;
pub const XED_IFORM_VPADDD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 5411;
pub const XED_IFORM_VPADDD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 5412;
pub const XED_IFORM_VPADDD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 5413;
pub const XED_IFORM_VPADDQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5414;
pub const XED_IFORM_VPADDQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5415;
pub const XED_IFORM_VPADDQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 5416;
pub const XED_IFORM_VPADDQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 5417;
pub const XED_IFORM_VPADDQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5418;
pub const XED_IFORM_VPADDQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5419;
pub const XED_IFORM_VPADDQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 5420;
pub const XED_IFORM_VPADDQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 5421;
pub const XED_IFORM_VPADDQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 5422;
pub const XED_IFORM_VPADDQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 5423;
pub const XED_IFORM_VPADDSB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5424;
pub const XED_IFORM_VPADDSB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5425;
pub const XED_IFORM_VPADDSB_XMMi8_MASKmskw_XMMi8_MEMi8_AVX512: xed_iform_enum_t = 5426;
pub const XED_IFORM_VPADDSB_XMMi8_MASKmskw_XMMi8_XMMi8_AVX512: xed_iform_enum_t = 5427;
pub const XED_IFORM_VPADDSB_YMMi8_MASKmskw_YMMi8_MEMi8_AVX512: xed_iform_enum_t = 5428;
pub const XED_IFORM_VPADDSB_YMMi8_MASKmskw_YMMi8_YMMi8_AVX512: xed_iform_enum_t = 5429;
pub const XED_IFORM_VPADDSB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5430;
pub const XED_IFORM_VPADDSB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5431;
pub const XED_IFORM_VPADDSB_ZMMi8_MASKmskw_ZMMi8_MEMi8_AVX512: xed_iform_enum_t = 5432;
pub const XED_IFORM_VPADDSB_ZMMi8_MASKmskw_ZMMi8_ZMMi8_AVX512: xed_iform_enum_t = 5433;
pub const XED_IFORM_VPADDSW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5434;
pub const XED_IFORM_VPADDSW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5435;
pub const XED_IFORM_VPADDSW_XMMi16_MASKmskw_XMMi16_MEMi16_AVX512: xed_iform_enum_t = 5436;
pub const XED_IFORM_VPADDSW_XMMi16_MASKmskw_XMMi16_XMMi16_AVX512: xed_iform_enum_t = 5437;
pub const XED_IFORM_VPADDSW_YMMi16_MASKmskw_YMMi16_MEMi16_AVX512: xed_iform_enum_t = 5438;
pub const XED_IFORM_VPADDSW_YMMi16_MASKmskw_YMMi16_YMMi16_AVX512: xed_iform_enum_t = 5439;
pub const XED_IFORM_VPADDSW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5440;
pub const XED_IFORM_VPADDSW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5441;
pub const XED_IFORM_VPADDSW_ZMMi16_MASKmskw_ZMMi16_MEMi16_AVX512: xed_iform_enum_t = 5442;
pub const XED_IFORM_VPADDSW_ZMMi16_MASKmskw_ZMMi16_ZMMi16_AVX512: xed_iform_enum_t = 5443;
pub const XED_IFORM_VPADDUSB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5444;
pub const XED_IFORM_VPADDUSB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5445;
pub const XED_IFORM_VPADDUSB_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 5446;
pub const XED_IFORM_VPADDUSB_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 5447;
pub const XED_IFORM_VPADDUSB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5448;
pub const XED_IFORM_VPADDUSB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5449;
pub const XED_IFORM_VPADDUSB_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 5450;
pub const XED_IFORM_VPADDUSB_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 5451;
pub const XED_IFORM_VPADDUSB_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 5452;
pub const XED_IFORM_VPADDUSB_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 5453;
pub const XED_IFORM_VPADDUSW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5454;
pub const XED_IFORM_VPADDUSW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5455;
pub const XED_IFORM_VPADDUSW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 5456;
pub const XED_IFORM_VPADDUSW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 5457;
pub const XED_IFORM_VPADDUSW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5458;
pub const XED_IFORM_VPADDUSW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5459;
pub const XED_IFORM_VPADDUSW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 5460;
pub const XED_IFORM_VPADDUSW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 5461;
pub const XED_IFORM_VPADDUSW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 5462;
pub const XED_IFORM_VPADDUSW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 5463;
pub const XED_IFORM_VPADDW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5464;
pub const XED_IFORM_VPADDW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5465;
pub const XED_IFORM_VPADDW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 5466;
pub const XED_IFORM_VPADDW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 5467;
pub const XED_IFORM_VPADDW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5468;
pub const XED_IFORM_VPADDW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5469;
pub const XED_IFORM_VPADDW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 5470;
pub const XED_IFORM_VPADDW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 5471;
pub const XED_IFORM_VPADDW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 5472;
pub const XED_IFORM_VPADDW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 5473;
pub const XED_IFORM_VPALIGNR_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5474;
pub const XED_IFORM_VPALIGNR_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5475;
pub const XED_IFORM_VPALIGNR_XMMu8_MASKmskw_XMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 5476;
pub const XED_IFORM_VPALIGNR_XMMu8_MASKmskw_XMMu8_XMMu8_IMM8_AVX512: xed_iform_enum_t = 5477;
pub const XED_IFORM_VPALIGNR_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 5478;
pub const XED_IFORM_VPALIGNR_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 5479;
pub const XED_IFORM_VPALIGNR_YMMu8_MASKmskw_YMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 5480;
pub const XED_IFORM_VPALIGNR_YMMu8_MASKmskw_YMMu8_YMMu8_IMM8_AVX512: xed_iform_enum_t = 5481;
pub const XED_IFORM_VPALIGNR_ZMMu8_MASKmskw_ZMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 5482;
pub const XED_IFORM_VPALIGNR_ZMMu8_MASKmskw_ZMMu8_ZMMu8_IMM8_AVX512: xed_iform_enum_t = 5483;
pub const XED_IFORM_VPAND_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5484;
pub const XED_IFORM_VPAND_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5485;
pub const XED_IFORM_VPAND_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5486;
pub const XED_IFORM_VPAND_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5487;
pub const XED_IFORM_VPANDD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 5488;
pub const XED_IFORM_VPANDD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 5489;
pub const XED_IFORM_VPANDD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 5490;
pub const XED_IFORM_VPANDD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 5491;
pub const XED_IFORM_VPANDD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 5492;
pub const XED_IFORM_VPANDD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 5493;
pub const XED_IFORM_VPANDN_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5494;
pub const XED_IFORM_VPANDN_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5495;
pub const XED_IFORM_VPANDN_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5496;
pub const XED_IFORM_VPANDN_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5497;
pub const XED_IFORM_VPANDND_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 5498;
pub const XED_IFORM_VPANDND_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 5499;
pub const XED_IFORM_VPANDND_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 5500;
pub const XED_IFORM_VPANDND_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 5501;
pub const XED_IFORM_VPANDND_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 5502;
pub const XED_IFORM_VPANDND_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 5503;
pub const XED_IFORM_VPANDNQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 5504;
pub const XED_IFORM_VPANDNQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 5505;
pub const XED_IFORM_VPANDNQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 5506;
pub const XED_IFORM_VPANDNQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 5507;
pub const XED_IFORM_VPANDNQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 5508;
pub const XED_IFORM_VPANDNQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 5509;
pub const XED_IFORM_VPANDQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 5510;
pub const XED_IFORM_VPANDQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 5511;
pub const XED_IFORM_VPANDQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 5512;
pub const XED_IFORM_VPANDQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 5513;
pub const XED_IFORM_VPANDQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 5514;
pub const XED_IFORM_VPANDQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 5515;
pub const XED_IFORM_VPAVGB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5516;
pub const XED_IFORM_VPAVGB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5517;
pub const XED_IFORM_VPAVGB_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 5518;
pub const XED_IFORM_VPAVGB_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 5519;
pub const XED_IFORM_VPAVGB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5520;
pub const XED_IFORM_VPAVGB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5521;
pub const XED_IFORM_VPAVGB_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 5522;
pub const XED_IFORM_VPAVGB_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 5523;
pub const XED_IFORM_VPAVGB_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 5524;
pub const XED_IFORM_VPAVGB_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 5525;
pub const XED_IFORM_VPAVGW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5526;
pub const XED_IFORM_VPAVGW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5527;
pub const XED_IFORM_VPAVGW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 5528;
pub const XED_IFORM_VPAVGW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 5529;
pub const XED_IFORM_VPAVGW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5530;
pub const XED_IFORM_VPAVGW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5531;
pub const XED_IFORM_VPAVGW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 5532;
pub const XED_IFORM_VPAVGW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 5533;
pub const XED_IFORM_VPAVGW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 5534;
pub const XED_IFORM_VPAVGW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 5535;
pub const XED_IFORM_VPBLENDD_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5536;
pub const XED_IFORM_VPBLENDD_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5537;
pub const XED_IFORM_VPBLENDD_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 5538;
pub const XED_IFORM_VPBLENDD_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 5539;
pub const XED_IFORM_VPBLENDMB_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 5540;
pub const XED_IFORM_VPBLENDMB_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 5541;
pub const XED_IFORM_VPBLENDMB_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 5542;
pub const XED_IFORM_VPBLENDMB_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 5543;
pub const XED_IFORM_VPBLENDMB_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 5544;
pub const XED_IFORM_VPBLENDMB_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 5545;
pub const XED_IFORM_VPBLENDMD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 5546;
pub const XED_IFORM_VPBLENDMD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 5547;
pub const XED_IFORM_VPBLENDMD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 5548;
pub const XED_IFORM_VPBLENDMD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 5549;
pub const XED_IFORM_VPBLENDMD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 5550;
pub const XED_IFORM_VPBLENDMD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 5551;
pub const XED_IFORM_VPBLENDMQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 5552;
pub const XED_IFORM_VPBLENDMQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 5553;
pub const XED_IFORM_VPBLENDMQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 5554;
pub const XED_IFORM_VPBLENDMQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 5555;
pub const XED_IFORM_VPBLENDMQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 5556;
pub const XED_IFORM_VPBLENDMQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 5557;
pub const XED_IFORM_VPBLENDMW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 5558;
pub const XED_IFORM_VPBLENDMW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 5559;
pub const XED_IFORM_VPBLENDMW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 5560;
pub const XED_IFORM_VPBLENDMW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 5561;
pub const XED_IFORM_VPBLENDMW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 5562;
pub const XED_IFORM_VPBLENDMW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 5563;
pub const XED_IFORM_VPBLENDVB_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 5564;
pub const XED_IFORM_VPBLENDVB_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5565;
pub const XED_IFORM_VPBLENDVB_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 5566;
pub const XED_IFORM_VPBLENDVB_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5567;
pub const XED_IFORM_VPBLENDW_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5568;
pub const XED_IFORM_VPBLENDW_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5569;
pub const XED_IFORM_VPBLENDW_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 5570;
pub const XED_IFORM_VPBLENDW_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 5571;
pub const XED_IFORM_VPBROADCASTB_XMMdq_MEMb: xed_iform_enum_t = 5572;
pub const XED_IFORM_VPBROADCASTB_XMMdq_XMMb: xed_iform_enum_t = 5573;
pub const XED_IFORM_VPBROADCASTB_XMMu8_MASKmskw_GPR32u8_AVX512: xed_iform_enum_t = 5574;
pub const XED_IFORM_VPBROADCASTB_XMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 5575;
pub const XED_IFORM_VPBROADCASTB_XMMu8_MASKmskw_XMMu8_AVX512: xed_iform_enum_t = 5576;
pub const XED_IFORM_VPBROADCASTB_YMMqq_MEMb: xed_iform_enum_t = 5577;
pub const XED_IFORM_VPBROADCASTB_YMMqq_XMMb: xed_iform_enum_t = 5578;
pub const XED_IFORM_VPBROADCASTB_YMMu8_MASKmskw_GPR32u8_AVX512: xed_iform_enum_t = 5579;
pub const XED_IFORM_VPBROADCASTB_YMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 5580;
pub const XED_IFORM_VPBROADCASTB_YMMu8_MASKmskw_XMMu8_AVX512: xed_iform_enum_t = 5581;
pub const XED_IFORM_VPBROADCASTB_ZMMu8_MASKmskw_GPR32u8_AVX512: xed_iform_enum_t = 5582;
pub const XED_IFORM_VPBROADCASTB_ZMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 5583;
pub const XED_IFORM_VPBROADCASTB_ZMMu8_MASKmskw_XMMu8_AVX512: xed_iform_enum_t = 5584;
pub const XED_IFORM_VPBROADCASTD_XMMdq_MEMd: xed_iform_enum_t = 5585;
pub const XED_IFORM_VPBROADCASTD_XMMdq_XMMd: xed_iform_enum_t = 5586;
pub const XED_IFORM_VPBROADCASTD_XMMu32_MASKmskw_GPR32u32_AVX512: xed_iform_enum_t = 5587;
pub const XED_IFORM_VPBROADCASTD_XMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 5588;
pub const XED_IFORM_VPBROADCASTD_XMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 5589;
pub const XED_IFORM_VPBROADCASTD_YMMqq_MEMd: xed_iform_enum_t = 5590;
pub const XED_IFORM_VPBROADCASTD_YMMqq_XMMd: xed_iform_enum_t = 5591;
pub const XED_IFORM_VPBROADCASTD_YMMu32_MASKmskw_GPR32u32_AVX512: xed_iform_enum_t = 5592;
pub const XED_IFORM_VPBROADCASTD_YMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 5593;
pub const XED_IFORM_VPBROADCASTD_YMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 5594;
pub const XED_IFORM_VPBROADCASTD_ZMMu32_MASKmskw_GPR32u32_AVX512: xed_iform_enum_t = 5595;
pub const XED_IFORM_VPBROADCASTD_ZMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 5596;
pub const XED_IFORM_VPBROADCASTD_ZMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 5597;
pub const XED_IFORM_VPBROADCASTMB2Q_XMMu64_MASKu64_AVX512: xed_iform_enum_t = 5598;
pub const XED_IFORM_VPBROADCASTMB2Q_YMMu64_MASKu64_AVX512: xed_iform_enum_t = 5599;
pub const XED_IFORM_VPBROADCASTMB2Q_ZMMu64_MASKu64_AVX512CD: xed_iform_enum_t = 5600;
pub const XED_IFORM_VPBROADCASTMW2D_XMMu32_MASKu32_AVX512: xed_iform_enum_t = 5601;
pub const XED_IFORM_VPBROADCASTMW2D_YMMu32_MASKu32_AVX512: xed_iform_enum_t = 5602;
pub const XED_IFORM_VPBROADCASTMW2D_ZMMu32_MASKu32_AVX512CD: xed_iform_enum_t = 5603;
pub const XED_IFORM_VPBROADCASTQ_XMMdq_MEMq: xed_iform_enum_t = 5604;
pub const XED_IFORM_VPBROADCASTQ_XMMdq_XMMq: xed_iform_enum_t = 5605;
pub const XED_IFORM_VPBROADCASTQ_XMMu64_MASKmskw_GPR64u64_AVX512: xed_iform_enum_t = 5606;
pub const XED_IFORM_VPBROADCASTQ_XMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 5607;
pub const XED_IFORM_VPBROADCASTQ_XMMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 5608;
pub const XED_IFORM_VPBROADCASTQ_YMMqq_MEMq: xed_iform_enum_t = 5609;
pub const XED_IFORM_VPBROADCASTQ_YMMqq_XMMq: xed_iform_enum_t = 5610;
pub const XED_IFORM_VPBROADCASTQ_YMMu64_MASKmskw_GPR64u64_AVX512: xed_iform_enum_t = 5611;
pub const XED_IFORM_VPBROADCASTQ_YMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 5612;
pub const XED_IFORM_VPBROADCASTQ_YMMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 5613;
pub const XED_IFORM_VPBROADCASTQ_ZMMu64_MASKmskw_GPR64u64_AVX512: xed_iform_enum_t = 5614;
pub const XED_IFORM_VPBROADCASTQ_ZMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 5615;
pub const XED_IFORM_VPBROADCASTQ_ZMMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 5616;
pub const XED_IFORM_VPBROADCASTW_XMMdq_MEMw: xed_iform_enum_t = 5617;
pub const XED_IFORM_VPBROADCASTW_XMMdq_XMMw: xed_iform_enum_t = 5618;
pub const XED_IFORM_VPBROADCASTW_XMMu16_MASKmskw_GPR32u16_AVX512: xed_iform_enum_t = 5619;
pub const XED_IFORM_VPBROADCASTW_XMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 5620;
pub const XED_IFORM_VPBROADCASTW_XMMu16_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 5621;
pub const XED_IFORM_VPBROADCASTW_YMMqq_MEMw: xed_iform_enum_t = 5622;
pub const XED_IFORM_VPBROADCASTW_YMMqq_XMMw: xed_iform_enum_t = 5623;
pub const XED_IFORM_VPBROADCASTW_YMMu16_MASKmskw_GPR32u16_AVX512: xed_iform_enum_t = 5624;
pub const XED_IFORM_VPBROADCASTW_YMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 5625;
pub const XED_IFORM_VPBROADCASTW_YMMu16_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 5626;
pub const XED_IFORM_VPBROADCASTW_ZMMu16_MASKmskw_GPR32u16_AVX512: xed_iform_enum_t = 5627;
pub const XED_IFORM_VPBROADCASTW_ZMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 5628;
pub const XED_IFORM_VPBROADCASTW_ZMMu16_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 5629;
pub const XED_IFORM_VPCLMULQDQ_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5630;
pub const XED_IFORM_VPCLMULQDQ_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5631;
pub const XED_IFORM_VPCLMULQDQ_XMMu128_XMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 5632;
pub const XED_IFORM_VPCLMULQDQ_XMMu128_XMMu64_XMMu64_IMM8_AVX512: xed_iform_enum_t = 5633;
pub const XED_IFORM_VPCLMULQDQ_YMMu128_YMMu64_MEMu64_IMM8: xed_iform_enum_t = 5634;
pub const XED_IFORM_VPCLMULQDQ_YMMu128_YMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 5635;
pub const XED_IFORM_VPCLMULQDQ_YMMu128_YMMu64_YMMu64_IMM8: xed_iform_enum_t = 5636;
pub const XED_IFORM_VPCLMULQDQ_YMMu128_YMMu64_YMMu64_IMM8_AVX512: xed_iform_enum_t = 5637;
pub const XED_IFORM_VPCLMULQDQ_ZMMu128_ZMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 5638;
pub const XED_IFORM_VPCLMULQDQ_ZMMu128_ZMMu64_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 5639;
pub const XED_IFORM_VPCMOV_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 5640;
pub const XED_IFORM_VPCMOV_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5641;
pub const XED_IFORM_VPCMOV_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5642;
pub const XED_IFORM_VPCMOV_YMMqq_YMMqq_MEMqq_YMMqq: xed_iform_enum_t = 5643;
pub const XED_IFORM_VPCMOV_YMMqq_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5644;
pub const XED_IFORM_VPCMOV_YMMqq_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5645;
pub const XED_IFORM_VPCMPB_MASKmskw_MASKmskw_XMMi8_MEMi8_IMM8_AVX512: xed_iform_enum_t = 5646;
pub const XED_IFORM_VPCMPB_MASKmskw_MASKmskw_XMMi8_XMMi8_IMM8_AVX512: xed_iform_enum_t = 5647;
pub const XED_IFORM_VPCMPB_MASKmskw_MASKmskw_YMMi8_MEMi8_IMM8_AVX512: xed_iform_enum_t = 5648;
pub const XED_IFORM_VPCMPB_MASKmskw_MASKmskw_YMMi8_YMMi8_IMM8_AVX512: xed_iform_enum_t = 5649;
pub const XED_IFORM_VPCMPB_MASKmskw_MASKmskw_ZMMi8_MEMi8_IMM8_AVX512: xed_iform_enum_t = 5650;
pub const XED_IFORM_VPCMPB_MASKmskw_MASKmskw_ZMMi8_ZMMi8_IMM8_AVX512: xed_iform_enum_t = 5651;
pub const XED_IFORM_VPCMPD_MASKmskw_MASKmskw_XMMi32_MEMi32_IMM8_AVX512: xed_iform_enum_t = 5652;
pub const XED_IFORM_VPCMPD_MASKmskw_MASKmskw_XMMi32_XMMi32_IMM8_AVX512: xed_iform_enum_t = 5653;
pub const XED_IFORM_VPCMPD_MASKmskw_MASKmskw_YMMi32_MEMi32_IMM8_AVX512: xed_iform_enum_t = 5654;
pub const XED_IFORM_VPCMPD_MASKmskw_MASKmskw_YMMi32_YMMi32_IMM8_AVX512: xed_iform_enum_t = 5655;
pub const XED_IFORM_VPCMPD_MASKmskw_MASKmskw_ZMMi32_MEMi32_IMM8_AVX512: xed_iform_enum_t = 5656;
pub const XED_IFORM_VPCMPD_MASKmskw_MASKmskw_ZMMi32_ZMMi32_IMM8_AVX512: xed_iform_enum_t = 5657;
pub const XED_IFORM_VPCMPEQB_MASKmskw_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 5658;
pub const XED_IFORM_VPCMPEQB_MASKmskw_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 5659;
pub const XED_IFORM_VPCMPEQB_MASKmskw_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 5660;
pub const XED_IFORM_VPCMPEQB_MASKmskw_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 5661;
pub const XED_IFORM_VPCMPEQB_MASKmskw_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 5662;
pub const XED_IFORM_VPCMPEQB_MASKmskw_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 5663;
pub const XED_IFORM_VPCMPEQB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5664;
pub const XED_IFORM_VPCMPEQB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5665;
pub const XED_IFORM_VPCMPEQB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5666;
pub const XED_IFORM_VPCMPEQB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5667;
pub const XED_IFORM_VPCMPEQD_MASKmskw_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 5668;
pub const XED_IFORM_VPCMPEQD_MASKmskw_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 5669;
pub const XED_IFORM_VPCMPEQD_MASKmskw_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 5670;
pub const XED_IFORM_VPCMPEQD_MASKmskw_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 5671;
pub const XED_IFORM_VPCMPEQD_MASKmskw_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 5672;
pub const XED_IFORM_VPCMPEQD_MASKmskw_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 5673;
pub const XED_IFORM_VPCMPEQD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5674;
pub const XED_IFORM_VPCMPEQD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5675;
pub const XED_IFORM_VPCMPEQD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5676;
pub const XED_IFORM_VPCMPEQD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5677;
pub const XED_IFORM_VPCMPEQQ_MASKmskw_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 5678;
pub const XED_IFORM_VPCMPEQQ_MASKmskw_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 5679;
pub const XED_IFORM_VPCMPEQQ_MASKmskw_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 5680;
pub const XED_IFORM_VPCMPEQQ_MASKmskw_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 5681;
pub const XED_IFORM_VPCMPEQQ_MASKmskw_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 5682;
pub const XED_IFORM_VPCMPEQQ_MASKmskw_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 5683;
pub const XED_IFORM_VPCMPEQQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5684;
pub const XED_IFORM_VPCMPEQQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5685;
pub const XED_IFORM_VPCMPEQQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5686;
pub const XED_IFORM_VPCMPEQQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5687;
pub const XED_IFORM_VPCMPEQW_MASKmskw_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 5688;
pub const XED_IFORM_VPCMPEQW_MASKmskw_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 5689;
pub const XED_IFORM_VPCMPEQW_MASKmskw_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 5690;
pub const XED_IFORM_VPCMPEQW_MASKmskw_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 5691;
pub const XED_IFORM_VPCMPEQW_MASKmskw_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 5692;
pub const XED_IFORM_VPCMPEQW_MASKmskw_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 5693;
pub const XED_IFORM_VPCMPEQW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5694;
pub const XED_IFORM_VPCMPEQW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5695;
pub const XED_IFORM_VPCMPEQW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5696;
pub const XED_IFORM_VPCMPEQW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5697;
pub const XED_IFORM_VPCMPESTRI_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5698;
pub const XED_IFORM_VPCMPESTRI_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5699;
pub const XED_IFORM_VPCMPESTRI64_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5700;
pub const XED_IFORM_VPCMPESTRI64_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5701;
pub const XED_IFORM_VPCMPESTRM_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5702;
pub const XED_IFORM_VPCMPESTRM_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5703;
pub const XED_IFORM_VPCMPESTRM64_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5704;
pub const XED_IFORM_VPCMPESTRM64_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5705;
pub const XED_IFORM_VPCMPGTB_MASKmskw_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 5706;
pub const XED_IFORM_VPCMPGTB_MASKmskw_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 5707;
pub const XED_IFORM_VPCMPGTB_MASKmskw_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 5708;
pub const XED_IFORM_VPCMPGTB_MASKmskw_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 5709;
pub const XED_IFORM_VPCMPGTB_MASKmskw_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 5710;
pub const XED_IFORM_VPCMPGTB_MASKmskw_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 5711;
pub const XED_IFORM_VPCMPGTB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5712;
pub const XED_IFORM_VPCMPGTB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5713;
pub const XED_IFORM_VPCMPGTB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5714;
pub const XED_IFORM_VPCMPGTB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5715;
pub const XED_IFORM_VPCMPGTD_MASKmskw_MASKmskw_XMMi32_MEMi32_AVX512: xed_iform_enum_t = 5716;
pub const XED_IFORM_VPCMPGTD_MASKmskw_MASKmskw_XMMi32_XMMi32_AVX512: xed_iform_enum_t = 5717;
pub const XED_IFORM_VPCMPGTD_MASKmskw_MASKmskw_YMMi32_MEMi32_AVX512: xed_iform_enum_t = 5718;
pub const XED_IFORM_VPCMPGTD_MASKmskw_MASKmskw_YMMi32_YMMi32_AVX512: xed_iform_enum_t = 5719;
pub const XED_IFORM_VPCMPGTD_MASKmskw_MASKmskw_ZMMi32_MEMi32_AVX512: xed_iform_enum_t = 5720;
pub const XED_IFORM_VPCMPGTD_MASKmskw_MASKmskw_ZMMi32_ZMMi32_AVX512: xed_iform_enum_t = 5721;
pub const XED_IFORM_VPCMPGTD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5722;
pub const XED_IFORM_VPCMPGTD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5723;
pub const XED_IFORM_VPCMPGTD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5724;
pub const XED_IFORM_VPCMPGTD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5725;
pub const XED_IFORM_VPCMPGTQ_MASKmskw_MASKmskw_XMMi64_MEMi64_AVX512: xed_iform_enum_t = 5726;
pub const XED_IFORM_VPCMPGTQ_MASKmskw_MASKmskw_XMMi64_XMMi64_AVX512: xed_iform_enum_t = 5727;
pub const XED_IFORM_VPCMPGTQ_MASKmskw_MASKmskw_YMMi64_MEMi64_AVX512: xed_iform_enum_t = 5728;
pub const XED_IFORM_VPCMPGTQ_MASKmskw_MASKmskw_YMMi64_YMMi64_AVX512: xed_iform_enum_t = 5729;
pub const XED_IFORM_VPCMPGTQ_MASKmskw_MASKmskw_ZMMi64_MEMi64_AVX512: xed_iform_enum_t = 5730;
pub const XED_IFORM_VPCMPGTQ_MASKmskw_MASKmskw_ZMMi64_ZMMi64_AVX512: xed_iform_enum_t = 5731;
pub const XED_IFORM_VPCMPGTQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5732;
pub const XED_IFORM_VPCMPGTQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5733;
pub const XED_IFORM_VPCMPGTQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5734;
pub const XED_IFORM_VPCMPGTQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5735;
pub const XED_IFORM_VPCMPGTW_MASKmskw_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 5736;
pub const XED_IFORM_VPCMPGTW_MASKmskw_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 5737;
pub const XED_IFORM_VPCMPGTW_MASKmskw_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 5738;
pub const XED_IFORM_VPCMPGTW_MASKmskw_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 5739;
pub const XED_IFORM_VPCMPGTW_MASKmskw_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 5740;
pub const XED_IFORM_VPCMPGTW_MASKmskw_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 5741;
pub const XED_IFORM_VPCMPGTW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5742;
pub const XED_IFORM_VPCMPGTW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5743;
pub const XED_IFORM_VPCMPGTW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5744;
pub const XED_IFORM_VPCMPGTW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5745;
pub const XED_IFORM_VPCMPISTRI_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5746;
pub const XED_IFORM_VPCMPISTRI_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5747;
pub const XED_IFORM_VPCMPISTRI64_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5748;
pub const XED_IFORM_VPCMPISTRI64_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5749;
pub const XED_IFORM_VPCMPISTRM_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5750;
pub const XED_IFORM_VPCMPISTRM_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5751;
pub const XED_IFORM_VPCMPQ_MASKmskw_MASKmskw_XMMi64_MEMi64_IMM8_AVX512: xed_iform_enum_t = 5752;
pub const XED_IFORM_VPCMPQ_MASKmskw_MASKmskw_XMMi64_XMMi64_IMM8_AVX512: xed_iform_enum_t = 5753;
pub const XED_IFORM_VPCMPQ_MASKmskw_MASKmskw_YMMi64_MEMi64_IMM8_AVX512: xed_iform_enum_t = 5754;
pub const XED_IFORM_VPCMPQ_MASKmskw_MASKmskw_YMMi64_YMMi64_IMM8_AVX512: xed_iform_enum_t = 5755;
pub const XED_IFORM_VPCMPQ_MASKmskw_MASKmskw_ZMMi64_MEMi64_IMM8_AVX512: xed_iform_enum_t = 5756;
pub const XED_IFORM_VPCMPQ_MASKmskw_MASKmskw_ZMMi64_ZMMi64_IMM8_AVX512: xed_iform_enum_t = 5757;
pub const XED_IFORM_VPCMPUB_MASKmskw_MASKmskw_XMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 5758;
pub const XED_IFORM_VPCMPUB_MASKmskw_MASKmskw_XMMu8_XMMu8_IMM8_AVX512: xed_iform_enum_t = 5759;
pub const XED_IFORM_VPCMPUB_MASKmskw_MASKmskw_YMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 5760;
pub const XED_IFORM_VPCMPUB_MASKmskw_MASKmskw_YMMu8_YMMu8_IMM8_AVX512: xed_iform_enum_t = 5761;
pub const XED_IFORM_VPCMPUB_MASKmskw_MASKmskw_ZMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 5762;
pub const XED_IFORM_VPCMPUB_MASKmskw_MASKmskw_ZMMu8_ZMMu8_IMM8_AVX512: xed_iform_enum_t = 5763;
pub const XED_IFORM_VPCMPUD_MASKmskw_MASKmskw_XMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 5764;
pub const XED_IFORM_VPCMPUD_MASKmskw_MASKmskw_XMMu32_XMMu32_IMM8_AVX512: xed_iform_enum_t = 5765;
pub const XED_IFORM_VPCMPUD_MASKmskw_MASKmskw_YMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 5766;
pub const XED_IFORM_VPCMPUD_MASKmskw_MASKmskw_YMMu32_YMMu32_IMM8_AVX512: xed_iform_enum_t = 5767;
pub const XED_IFORM_VPCMPUD_MASKmskw_MASKmskw_ZMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 5768;
pub const XED_IFORM_VPCMPUD_MASKmskw_MASKmskw_ZMMu32_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 5769;
pub const XED_IFORM_VPCMPUQ_MASKmskw_MASKmskw_XMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 5770;
pub const XED_IFORM_VPCMPUQ_MASKmskw_MASKmskw_XMMu64_XMMu64_IMM8_AVX512: xed_iform_enum_t = 5771;
pub const XED_IFORM_VPCMPUQ_MASKmskw_MASKmskw_YMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 5772;
pub const XED_IFORM_VPCMPUQ_MASKmskw_MASKmskw_YMMu64_YMMu64_IMM8_AVX512: xed_iform_enum_t = 5773;
pub const XED_IFORM_VPCMPUQ_MASKmskw_MASKmskw_ZMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 5774;
pub const XED_IFORM_VPCMPUQ_MASKmskw_MASKmskw_ZMMu64_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 5775;
pub const XED_IFORM_VPCMPUW_MASKmskw_MASKmskw_XMMu16_MEMu16_IMM8_AVX512: xed_iform_enum_t = 5776;
pub const XED_IFORM_VPCMPUW_MASKmskw_MASKmskw_XMMu16_XMMu16_IMM8_AVX512: xed_iform_enum_t = 5777;
pub const XED_IFORM_VPCMPUW_MASKmskw_MASKmskw_YMMu16_MEMu16_IMM8_AVX512: xed_iform_enum_t = 5778;
pub const XED_IFORM_VPCMPUW_MASKmskw_MASKmskw_YMMu16_YMMu16_IMM8_AVX512: xed_iform_enum_t = 5779;
pub const XED_IFORM_VPCMPUW_MASKmskw_MASKmskw_ZMMu16_MEMu16_IMM8_AVX512: xed_iform_enum_t = 5780;
pub const XED_IFORM_VPCMPUW_MASKmskw_MASKmskw_ZMMu16_ZMMu16_IMM8_AVX512: xed_iform_enum_t = 5781;
pub const XED_IFORM_VPCMPW_MASKmskw_MASKmskw_XMMi16_MEMi16_IMM8_AVX512: xed_iform_enum_t = 5782;
pub const XED_IFORM_VPCMPW_MASKmskw_MASKmskw_XMMi16_XMMi16_IMM8_AVX512: xed_iform_enum_t = 5783;
pub const XED_IFORM_VPCMPW_MASKmskw_MASKmskw_YMMi16_MEMi16_IMM8_AVX512: xed_iform_enum_t = 5784;
pub const XED_IFORM_VPCMPW_MASKmskw_MASKmskw_YMMi16_YMMi16_IMM8_AVX512: xed_iform_enum_t = 5785;
pub const XED_IFORM_VPCMPW_MASKmskw_MASKmskw_ZMMi16_MEMi16_IMM8_AVX512: xed_iform_enum_t = 5786;
pub const XED_IFORM_VPCMPW_MASKmskw_MASKmskw_ZMMi16_ZMMi16_IMM8_AVX512: xed_iform_enum_t = 5787;
pub const XED_IFORM_VPCOMB_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5788;
pub const XED_IFORM_VPCOMB_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5789;
pub const XED_IFORM_VPCOMD_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5790;
pub const XED_IFORM_VPCOMD_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5791;
pub const XED_IFORM_VPCOMPRESSB_MEMu8_MASKmskw_XMMu8_AVX512: xed_iform_enum_t = 5792;
pub const XED_IFORM_VPCOMPRESSB_MEMu8_MASKmskw_YMMu8_AVX512: xed_iform_enum_t = 5793;
pub const XED_IFORM_VPCOMPRESSB_MEMu8_MASKmskw_ZMMu8_AVX512: xed_iform_enum_t = 5794;
pub const XED_IFORM_VPCOMPRESSB_XMMu8_MASKmskw_XMMu8_AVX512: xed_iform_enum_t = 5795;
pub const XED_IFORM_VPCOMPRESSB_YMMu8_MASKmskw_YMMu8_AVX512: xed_iform_enum_t = 5796;
pub const XED_IFORM_VPCOMPRESSB_ZMMu8_MASKmskw_ZMMu8_AVX512: xed_iform_enum_t = 5797;
pub const XED_IFORM_VPCOMPRESSD_MEMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 5798;
pub const XED_IFORM_VPCOMPRESSD_MEMu32_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 5799;
pub const XED_IFORM_VPCOMPRESSD_MEMu32_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 5800;
pub const XED_IFORM_VPCOMPRESSD_XMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 5801;
pub const XED_IFORM_VPCOMPRESSD_YMMu32_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 5802;
pub const XED_IFORM_VPCOMPRESSD_ZMMu32_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 5803;
pub const XED_IFORM_VPCOMPRESSQ_MEMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 5804;
pub const XED_IFORM_VPCOMPRESSQ_MEMu64_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 5805;
pub const XED_IFORM_VPCOMPRESSQ_MEMu64_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 5806;
pub const XED_IFORM_VPCOMPRESSQ_XMMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 5807;
pub const XED_IFORM_VPCOMPRESSQ_YMMu64_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 5808;
pub const XED_IFORM_VPCOMPRESSQ_ZMMu64_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 5809;
pub const XED_IFORM_VPCOMPRESSW_MEMu16_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 5810;
pub const XED_IFORM_VPCOMPRESSW_MEMu16_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 5811;
pub const XED_IFORM_VPCOMPRESSW_MEMu16_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 5812;
pub const XED_IFORM_VPCOMPRESSW_XMMu16_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 5813;
pub const XED_IFORM_VPCOMPRESSW_YMMu16_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 5814;
pub const XED_IFORM_VPCOMPRESSW_ZMMu16_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 5815;
pub const XED_IFORM_VPCOMQ_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5816;
pub const XED_IFORM_VPCOMQ_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5817;
pub const XED_IFORM_VPCOMUB_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5818;
pub const XED_IFORM_VPCOMUB_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5819;
pub const XED_IFORM_VPCOMUD_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5820;
pub const XED_IFORM_VPCOMUD_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5821;
pub const XED_IFORM_VPCOMUQ_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5822;
pub const XED_IFORM_VPCOMUQ_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5823;
pub const XED_IFORM_VPCOMUW_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5824;
pub const XED_IFORM_VPCOMUW_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5825;
pub const XED_IFORM_VPCOMW_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5826;
pub const XED_IFORM_VPCOMW_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5827;
pub const XED_IFORM_VPCONFLICTD_XMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 5828;
pub const XED_IFORM_VPCONFLICTD_XMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 5829;
pub const XED_IFORM_VPCONFLICTD_YMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 5830;
pub const XED_IFORM_VPCONFLICTD_YMMu32_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 5831;
pub const XED_IFORM_VPCONFLICTD_ZMMu32_MASKmskw_MEMu32_AVX512CD: xed_iform_enum_t = 5832;
pub const XED_IFORM_VPCONFLICTD_ZMMu32_MASKmskw_ZMMu32_AVX512CD: xed_iform_enum_t = 5833;
pub const XED_IFORM_VPCONFLICTQ_XMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 5834;
pub const XED_IFORM_VPCONFLICTQ_XMMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 5835;
pub const XED_IFORM_VPCONFLICTQ_YMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 5836;
pub const XED_IFORM_VPCONFLICTQ_YMMu64_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 5837;
pub const XED_IFORM_VPCONFLICTQ_ZMMu64_MASKmskw_MEMu64_AVX512CD: xed_iform_enum_t = 5838;
pub const XED_IFORM_VPCONFLICTQ_ZMMu64_MASKmskw_ZMMu64_AVX512CD: xed_iform_enum_t = 5839;
pub const XED_IFORM_VPDPBSSD_XMMi32_XMM4i8_MEM4i8: xed_iform_enum_t = 5840;
pub const XED_IFORM_VPDPBSSD_XMMi32_XMM4i8_XMM4i8: xed_iform_enum_t = 5841;
pub const XED_IFORM_VPDPBSSD_YMMi32_YMM4i8_MEM4i8: xed_iform_enum_t = 5842;
pub const XED_IFORM_VPDPBSSD_YMMi32_YMM4i8_YMM4i8: xed_iform_enum_t = 5843;
pub const XED_IFORM_VPDPBSSDS_XMMi32_XMM4i8_MEM4i8: xed_iform_enum_t = 5844;
pub const XED_IFORM_VPDPBSSDS_XMMi32_XMM4i8_XMM4i8: xed_iform_enum_t = 5845;
pub const XED_IFORM_VPDPBSSDS_YMMi32_YMM4i8_MEM4i8: xed_iform_enum_t = 5846;
pub const XED_IFORM_VPDPBSSDS_YMMi32_YMM4i8_YMM4i8: xed_iform_enum_t = 5847;
pub const XED_IFORM_VPDPBSUD_XMMi32_XMM4i8_MEM4u8: xed_iform_enum_t = 5848;
pub const XED_IFORM_VPDPBSUD_XMMi32_XMM4i8_XMM4u8: xed_iform_enum_t = 5849;
pub const XED_IFORM_VPDPBSUD_YMMi32_YMM4i8_MEM4u8: xed_iform_enum_t = 5850;
pub const XED_IFORM_VPDPBSUD_YMMi32_YMM4i8_YMM4u8: xed_iform_enum_t = 5851;
pub const XED_IFORM_VPDPBSUDS_XMMi32_XMM4i8_MEM4u8: xed_iform_enum_t = 5852;
pub const XED_IFORM_VPDPBSUDS_XMMi32_XMM4i8_XMM4u8: xed_iform_enum_t = 5853;
pub const XED_IFORM_VPDPBSUDS_YMMi32_YMM4i8_MEM4u8: xed_iform_enum_t = 5854;
pub const XED_IFORM_VPDPBSUDS_YMMi32_YMM4i8_YMM4u8: xed_iform_enum_t = 5855;
pub const XED_IFORM_VPDPBUSD_XMMi32_MASKmskw_XMMu8_MEMu32_AVX512: xed_iform_enum_t = 5856;
pub const XED_IFORM_VPDPBUSD_XMMi32_MASKmskw_XMMu8_XMMu32_AVX512: xed_iform_enum_t = 5857;
pub const XED_IFORM_VPDPBUSD_XMMi32_XMMu32_MEMu32: xed_iform_enum_t = 5858;
pub const XED_IFORM_VPDPBUSD_XMMi32_XMMu32_XMMu32: xed_iform_enum_t = 5859;
pub const XED_IFORM_VPDPBUSD_YMMi32_MASKmskw_YMMu8_MEMu32_AVX512: xed_iform_enum_t = 5860;
pub const XED_IFORM_VPDPBUSD_YMMi32_MASKmskw_YMMu8_YMMu32_AVX512: xed_iform_enum_t = 5861;
pub const XED_IFORM_VPDPBUSD_YMMi32_YMMu32_MEMu32: xed_iform_enum_t = 5862;
pub const XED_IFORM_VPDPBUSD_YMMi32_YMMu32_YMMu32: xed_iform_enum_t = 5863;
pub const XED_IFORM_VPDPBUSD_ZMMi32_MASKmskw_ZMMu8_MEMu32_AVX512: xed_iform_enum_t = 5864;
pub const XED_IFORM_VPDPBUSD_ZMMi32_MASKmskw_ZMMu8_ZMMu32_AVX512: xed_iform_enum_t = 5865;
pub const XED_IFORM_VPDPBUSDS_XMMi32_MASKmskw_XMMu8_MEMu32_AVX512: xed_iform_enum_t = 5866;
pub const XED_IFORM_VPDPBUSDS_XMMi32_MASKmskw_XMMu8_XMMu32_AVX512: xed_iform_enum_t = 5867;
pub const XED_IFORM_VPDPBUSDS_XMMi32_XMMu32_MEMu32: xed_iform_enum_t = 5868;
pub const XED_IFORM_VPDPBUSDS_XMMi32_XMMu32_XMMu32: xed_iform_enum_t = 5869;
pub const XED_IFORM_VPDPBUSDS_YMMi32_MASKmskw_YMMu8_MEMu32_AVX512: xed_iform_enum_t = 5870;
pub const XED_IFORM_VPDPBUSDS_YMMi32_MASKmskw_YMMu8_YMMu32_AVX512: xed_iform_enum_t = 5871;
pub const XED_IFORM_VPDPBUSDS_YMMi32_YMMu32_MEMu32: xed_iform_enum_t = 5872;
pub const XED_IFORM_VPDPBUSDS_YMMi32_YMMu32_YMMu32: xed_iform_enum_t = 5873;
pub const XED_IFORM_VPDPBUSDS_ZMMi32_MASKmskw_ZMMu8_MEMu32_AVX512: xed_iform_enum_t = 5874;
pub const XED_IFORM_VPDPBUSDS_ZMMi32_MASKmskw_ZMMu8_ZMMu32_AVX512: xed_iform_enum_t = 5875;
pub const XED_IFORM_VPDPBUUD_XMMu32_XMM4u8_MEM4u8: xed_iform_enum_t = 5876;
pub const XED_IFORM_VPDPBUUD_XMMu32_XMM4u8_XMM4u8: xed_iform_enum_t = 5877;
pub const XED_IFORM_VPDPBUUD_YMMu32_YMM4u8_MEM4u8: xed_iform_enum_t = 5878;
pub const XED_IFORM_VPDPBUUD_YMMu32_YMM4u8_YMM4u8: xed_iform_enum_t = 5879;
pub const XED_IFORM_VPDPBUUDS_XMMu32_XMM4u8_MEM4u8: xed_iform_enum_t = 5880;
pub const XED_IFORM_VPDPBUUDS_XMMu32_XMM4u8_XMM4u8: xed_iform_enum_t = 5881;
pub const XED_IFORM_VPDPBUUDS_YMMu32_YMM4u8_MEM4u8: xed_iform_enum_t = 5882;
pub const XED_IFORM_VPDPBUUDS_YMMu32_YMM4u8_YMM4u8: xed_iform_enum_t = 5883;
pub const XED_IFORM_VPDPWSSD_XMMi32_MASKmskw_XMMi16_MEMu32_AVX512: xed_iform_enum_t = 5884;
pub const XED_IFORM_VPDPWSSD_XMMi32_MASKmskw_XMMi16_XMMu32_AVX512: xed_iform_enum_t = 5885;
pub const XED_IFORM_VPDPWSSD_XMMi32_XMMu32_MEMu32: xed_iform_enum_t = 5886;
pub const XED_IFORM_VPDPWSSD_XMMi32_XMMu32_XMMu32: xed_iform_enum_t = 5887;
pub const XED_IFORM_VPDPWSSD_YMMi32_MASKmskw_YMMi16_MEMu32_AVX512: xed_iform_enum_t = 5888;
pub const XED_IFORM_VPDPWSSD_YMMi32_MASKmskw_YMMi16_YMMu32_AVX512: xed_iform_enum_t = 5889;
pub const XED_IFORM_VPDPWSSD_YMMi32_YMMu32_MEMu32: xed_iform_enum_t = 5890;
pub const XED_IFORM_VPDPWSSD_YMMi32_YMMu32_YMMu32: xed_iform_enum_t = 5891;
pub const XED_IFORM_VPDPWSSD_ZMMi32_MASKmskw_ZMMi16_MEMu32_AVX512: xed_iform_enum_t = 5892;
pub const XED_IFORM_VPDPWSSD_ZMMi32_MASKmskw_ZMMi16_ZMMu32_AVX512: xed_iform_enum_t = 5893;
pub const XED_IFORM_VPDPWSSDS_XMMi32_MASKmskw_XMMi16_MEMu32_AVX512: xed_iform_enum_t = 5894;
pub const XED_IFORM_VPDPWSSDS_XMMi32_MASKmskw_XMMi16_XMMu32_AVX512: xed_iform_enum_t = 5895;
pub const XED_IFORM_VPDPWSSDS_XMMi32_XMMu32_MEMu32: xed_iform_enum_t = 5896;
pub const XED_IFORM_VPDPWSSDS_XMMi32_XMMu32_XMMu32: xed_iform_enum_t = 5897;
pub const XED_IFORM_VPDPWSSDS_YMMi32_MASKmskw_YMMi16_MEMu32_AVX512: xed_iform_enum_t = 5898;
pub const XED_IFORM_VPDPWSSDS_YMMi32_MASKmskw_YMMi16_YMMu32_AVX512: xed_iform_enum_t = 5899;
pub const XED_IFORM_VPDPWSSDS_YMMi32_YMMu32_MEMu32: xed_iform_enum_t = 5900;
pub const XED_IFORM_VPDPWSSDS_YMMi32_YMMu32_YMMu32: xed_iform_enum_t = 5901;
pub const XED_IFORM_VPDPWSSDS_ZMMi32_MASKmskw_ZMMi16_MEMu32_AVX512: xed_iform_enum_t = 5902;
pub const XED_IFORM_VPDPWSSDS_ZMMi32_MASKmskw_ZMMi16_ZMMu32_AVX512: xed_iform_enum_t = 5903;
pub const XED_IFORM_VPDPWSUD_XMMi32_XMM2i16_MEM2u16: xed_iform_enum_t = 5904;
pub const XED_IFORM_VPDPWSUD_XMMi32_XMM2i16_XMM2u16: xed_iform_enum_t = 5905;
pub const XED_IFORM_VPDPWSUD_YMMi32_YMM2i16_MEM2u16: xed_iform_enum_t = 5906;
pub const XED_IFORM_VPDPWSUD_YMMi32_YMM2i16_YMM2u16: xed_iform_enum_t = 5907;
pub const XED_IFORM_VPDPWSUDS_XMMi32_XMM2i16_MEM2u16: xed_iform_enum_t = 5908;
pub const XED_IFORM_VPDPWSUDS_XMMi32_XMM2i16_XMM2u16: xed_iform_enum_t = 5909;
pub const XED_IFORM_VPDPWSUDS_YMMi32_YMM2i16_MEM2u16: xed_iform_enum_t = 5910;
pub const XED_IFORM_VPDPWSUDS_YMMi32_YMM2i16_YMM2u16: xed_iform_enum_t = 5911;
pub const XED_IFORM_VPDPWUSD_XMMi32_XMM2u16_MEM2i16: xed_iform_enum_t = 5912;
pub const XED_IFORM_VPDPWUSD_XMMi32_XMM2u16_XMM2i16: xed_iform_enum_t = 5913;
pub const XED_IFORM_VPDPWUSD_YMMi32_YMM2u16_MEM2i16: xed_iform_enum_t = 5914;
pub const XED_IFORM_VPDPWUSD_YMMi32_YMM2u16_YMM2i16: xed_iform_enum_t = 5915;
pub const XED_IFORM_VPDPWUSDS_XMMi32_XMM2u16_MEM2i16: xed_iform_enum_t = 5916;
pub const XED_IFORM_VPDPWUSDS_XMMi32_XMM2u16_XMM2i16: xed_iform_enum_t = 5917;
pub const XED_IFORM_VPDPWUSDS_YMMi32_YMM2u16_MEM2i16: xed_iform_enum_t = 5918;
pub const XED_IFORM_VPDPWUSDS_YMMi32_YMM2u16_YMM2i16: xed_iform_enum_t = 5919;
pub const XED_IFORM_VPDPWUUD_XMMu32_XMM2u16_MEM2u16: xed_iform_enum_t = 5920;
pub const XED_IFORM_VPDPWUUD_XMMu32_XMM2u16_XMM2u16: xed_iform_enum_t = 5921;
pub const XED_IFORM_VPDPWUUD_YMMu32_YMM2u16_MEM2u16: xed_iform_enum_t = 5922;
pub const XED_IFORM_VPDPWUUD_YMMu32_YMM2u16_YMM2u16: xed_iform_enum_t = 5923;
pub const XED_IFORM_VPDPWUUDS_XMMu32_XMM2u16_MEM2u16: xed_iform_enum_t = 5924;
pub const XED_IFORM_VPDPWUUDS_XMMu32_XMM2u16_XMM2u16: xed_iform_enum_t = 5925;
pub const XED_IFORM_VPDPWUUDS_YMMu32_YMM2u16_MEM2u16: xed_iform_enum_t = 5926;
pub const XED_IFORM_VPDPWUUDS_YMMu32_YMM2u16_YMM2u16: xed_iform_enum_t = 5927;
pub const XED_IFORM_VPERM2F128_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 5928;
pub const XED_IFORM_VPERM2F128_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 5929;
pub const XED_IFORM_VPERM2I128_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 5930;
pub const XED_IFORM_VPERM2I128_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 5931;
pub const XED_IFORM_VPERMB_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 5932;
pub const XED_IFORM_VPERMB_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 5933;
pub const XED_IFORM_VPERMB_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 5934;
pub const XED_IFORM_VPERMB_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 5935;
pub const XED_IFORM_VPERMB_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 5936;
pub const XED_IFORM_VPERMB_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 5937;
pub const XED_IFORM_VPERMD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 5938;
pub const XED_IFORM_VPERMD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 5939;
pub const XED_IFORM_VPERMD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 5940;
pub const XED_IFORM_VPERMD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 5941;
pub const XED_IFORM_VPERMD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 5942;
pub const XED_IFORM_VPERMD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 5943;
pub const XED_IFORM_VPERMI2B_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 5944;
pub const XED_IFORM_VPERMI2B_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 5945;
pub const XED_IFORM_VPERMI2B_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 5946;
pub const XED_IFORM_VPERMI2B_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 5947;
pub const XED_IFORM_VPERMI2B_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 5948;
pub const XED_IFORM_VPERMI2B_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 5949;
pub const XED_IFORM_VPERMI2D_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 5950;
pub const XED_IFORM_VPERMI2D_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 5951;
pub const XED_IFORM_VPERMI2D_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 5952;
pub const XED_IFORM_VPERMI2D_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 5953;
pub const XED_IFORM_VPERMI2D_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 5954;
pub const XED_IFORM_VPERMI2D_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 5955;
pub const XED_IFORM_VPERMI2PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 5956;
pub const XED_IFORM_VPERMI2PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 5957;
pub const XED_IFORM_VPERMI2PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 5958;
pub const XED_IFORM_VPERMI2PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 5959;
pub const XED_IFORM_VPERMI2PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 5960;
pub const XED_IFORM_VPERMI2PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 5961;
pub const XED_IFORM_VPERMI2PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 5962;
pub const XED_IFORM_VPERMI2PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 5963;
pub const XED_IFORM_VPERMI2PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 5964;
pub const XED_IFORM_VPERMI2PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 5965;
pub const XED_IFORM_VPERMI2PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 5966;
pub const XED_IFORM_VPERMI2PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 5967;
pub const XED_IFORM_VPERMI2Q_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 5968;
pub const XED_IFORM_VPERMI2Q_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 5969;
pub const XED_IFORM_VPERMI2Q_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 5970;
pub const XED_IFORM_VPERMI2Q_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 5971;
pub const XED_IFORM_VPERMI2Q_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 5972;
pub const XED_IFORM_VPERMI2Q_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 5973;
pub const XED_IFORM_VPERMI2W_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 5974;
pub const XED_IFORM_VPERMI2W_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 5975;
pub const XED_IFORM_VPERMI2W_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 5976;
pub const XED_IFORM_VPERMI2W_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 5977;
pub const XED_IFORM_VPERMI2W_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 5978;
pub const XED_IFORM_VPERMI2W_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 5979;
pub const XED_IFORM_VPERMIL2PD_XMMdq_XMMdq_MEMdq_XMMdq_IMMb: xed_iform_enum_t = 5980;
pub const XED_IFORM_VPERMIL2PD_XMMdq_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5981;
pub const XED_IFORM_VPERMIL2PD_XMMdq_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5982;
pub const XED_IFORM_VPERMIL2PD_YMMqq_YMMqq_MEMqq_YMMqq_IMMb: xed_iform_enum_t = 5983;
pub const XED_IFORM_VPERMIL2PD_YMMqq_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 5984;
pub const XED_IFORM_VPERMIL2PD_YMMqq_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 5985;
pub const XED_IFORM_VPERMIL2PS_XMMdq_XMMdq_MEMdq_XMMdq_IMMb: xed_iform_enum_t = 5986;
pub const XED_IFORM_VPERMIL2PS_XMMdq_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5987;
pub const XED_IFORM_VPERMIL2PS_XMMdq_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5988;
pub const XED_IFORM_VPERMIL2PS_YMMqq_YMMqq_MEMqq_YMMqq_IMMb: xed_iform_enum_t = 5989;
pub const XED_IFORM_VPERMIL2PS_YMMqq_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 5990;
pub const XED_IFORM_VPERMIL2PS_YMMqq_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 5991;
pub const XED_IFORM_VPERMILPD_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 5992;
pub const XED_IFORM_VPERMILPD_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 5993;
pub const XED_IFORM_VPERMILPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 5994;
pub const XED_IFORM_VPERMILPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 5995;
pub const XED_IFORM_VPERMILPD_XMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 5996;
pub const XED_IFORM_VPERMILPD_XMMf64_MASKmskw_XMMf64_IMM8_AVX512: xed_iform_enum_t = 5997;
pub const XED_IFORM_VPERMILPD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 5998;
pub const XED_IFORM_VPERMILPD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 5999;
pub const XED_IFORM_VPERMILPD_YMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 6000;
pub const XED_IFORM_VPERMILPD_YMMf64_MASKmskw_YMMf64_IMM8_AVX512: xed_iform_enum_t = 6001;
pub const XED_IFORM_VPERMILPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 6002;
pub const XED_IFORM_VPERMILPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 6003;
pub const XED_IFORM_VPERMILPD_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 6004;
pub const XED_IFORM_VPERMILPD_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 6005;
pub const XED_IFORM_VPERMILPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6006;
pub const XED_IFORM_VPERMILPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6007;
pub const XED_IFORM_VPERMILPD_ZMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 6008;
pub const XED_IFORM_VPERMILPD_ZMMf64_MASKmskw_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 6009;
pub const XED_IFORM_VPERMILPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 6010;
pub const XED_IFORM_VPERMILPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 6011;
pub const XED_IFORM_VPERMILPS_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 6012;
pub const XED_IFORM_VPERMILPS_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 6013;
pub const XED_IFORM_VPERMILPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6014;
pub const XED_IFORM_VPERMILPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6015;
pub const XED_IFORM_VPERMILPS_XMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 6016;
pub const XED_IFORM_VPERMILPS_XMMf32_MASKmskw_XMMf32_IMM8_AVX512: xed_iform_enum_t = 6017;
pub const XED_IFORM_VPERMILPS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 6018;
pub const XED_IFORM_VPERMILPS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 6019;
pub const XED_IFORM_VPERMILPS_YMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 6020;
pub const XED_IFORM_VPERMILPS_YMMf32_MASKmskw_YMMf32_IMM8_AVX512: xed_iform_enum_t = 6021;
pub const XED_IFORM_VPERMILPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 6022;
pub const XED_IFORM_VPERMILPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 6023;
pub const XED_IFORM_VPERMILPS_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 6024;
pub const XED_IFORM_VPERMILPS_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 6025;
pub const XED_IFORM_VPERMILPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6026;
pub const XED_IFORM_VPERMILPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6027;
pub const XED_IFORM_VPERMILPS_ZMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 6028;
pub const XED_IFORM_VPERMILPS_ZMMf32_MASKmskw_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 6029;
pub const XED_IFORM_VPERMILPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 6030;
pub const XED_IFORM_VPERMILPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 6031;
pub const XED_IFORM_VPERMPD_YMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 6032;
pub const XED_IFORM_VPERMPD_YMMf64_MASKmskw_YMMf64_IMM8_AVX512: xed_iform_enum_t = 6033;
pub const XED_IFORM_VPERMPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 6034;
pub const XED_IFORM_VPERMPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 6035;
pub const XED_IFORM_VPERMPD_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 6036;
pub const XED_IFORM_VPERMPD_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 6037;
pub const XED_IFORM_VPERMPD_ZMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 6038;
pub const XED_IFORM_VPERMPD_ZMMf64_MASKmskw_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 6039;
pub const XED_IFORM_VPERMPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 6040;
pub const XED_IFORM_VPERMPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 6041;
pub const XED_IFORM_VPERMPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 6042;
pub const XED_IFORM_VPERMPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 6043;
pub const XED_IFORM_VPERMPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6044;
pub const XED_IFORM_VPERMPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6045;
pub const XED_IFORM_VPERMPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 6046;
pub const XED_IFORM_VPERMPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 6047;
pub const XED_IFORM_VPERMQ_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 6048;
pub const XED_IFORM_VPERMQ_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 6049;
pub const XED_IFORM_VPERMQ_YMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6050;
pub const XED_IFORM_VPERMQ_YMMu64_MASKmskw_YMMu64_IMM8_AVX512: xed_iform_enum_t = 6051;
pub const XED_IFORM_VPERMQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 6052;
pub const XED_IFORM_VPERMQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 6053;
pub const XED_IFORM_VPERMQ_ZMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6054;
pub const XED_IFORM_VPERMQ_ZMMu64_MASKmskw_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 6055;
pub const XED_IFORM_VPERMQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 6056;
pub const XED_IFORM_VPERMQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 6057;
pub const XED_IFORM_VPERMT2B_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 6058;
pub const XED_IFORM_VPERMT2B_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 6059;
pub const XED_IFORM_VPERMT2B_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 6060;
pub const XED_IFORM_VPERMT2B_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 6061;
pub const XED_IFORM_VPERMT2B_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 6062;
pub const XED_IFORM_VPERMT2B_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 6063;
pub const XED_IFORM_VPERMT2D_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 6064;
pub const XED_IFORM_VPERMT2D_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 6065;
pub const XED_IFORM_VPERMT2D_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 6066;
pub const XED_IFORM_VPERMT2D_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 6067;
pub const XED_IFORM_VPERMT2D_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 6068;
pub const XED_IFORM_VPERMT2D_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 6069;
pub const XED_IFORM_VPERMT2PD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 6070;
pub const XED_IFORM_VPERMT2PD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 6071;
pub const XED_IFORM_VPERMT2PD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 6072;
pub const XED_IFORM_VPERMT2PD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 6073;
pub const XED_IFORM_VPERMT2PD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 6074;
pub const XED_IFORM_VPERMT2PD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 6075;
pub const XED_IFORM_VPERMT2PS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 6076;
pub const XED_IFORM_VPERMT2PS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 6077;
pub const XED_IFORM_VPERMT2PS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 6078;
pub const XED_IFORM_VPERMT2PS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 6079;
pub const XED_IFORM_VPERMT2PS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 6080;
pub const XED_IFORM_VPERMT2PS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 6081;
pub const XED_IFORM_VPERMT2Q_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 6082;
pub const XED_IFORM_VPERMT2Q_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 6083;
pub const XED_IFORM_VPERMT2Q_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 6084;
pub const XED_IFORM_VPERMT2Q_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 6085;
pub const XED_IFORM_VPERMT2Q_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 6086;
pub const XED_IFORM_VPERMT2Q_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 6087;
pub const XED_IFORM_VPERMT2W_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 6088;
pub const XED_IFORM_VPERMT2W_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 6089;
pub const XED_IFORM_VPERMT2W_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 6090;
pub const XED_IFORM_VPERMT2W_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 6091;
pub const XED_IFORM_VPERMT2W_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 6092;
pub const XED_IFORM_VPERMT2W_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 6093;
pub const XED_IFORM_VPERMW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 6094;
pub const XED_IFORM_VPERMW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 6095;
pub const XED_IFORM_VPERMW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 6096;
pub const XED_IFORM_VPERMW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 6097;
pub const XED_IFORM_VPERMW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 6098;
pub const XED_IFORM_VPERMW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 6099;
pub const XED_IFORM_VPEXPANDB_XMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 6100;
pub const XED_IFORM_VPEXPANDB_XMMu8_MASKmskw_XMMu8_AVX512: xed_iform_enum_t = 6101;
pub const XED_IFORM_VPEXPANDB_YMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 6102;
pub const XED_IFORM_VPEXPANDB_YMMu8_MASKmskw_YMMu8_AVX512: xed_iform_enum_t = 6103;
pub const XED_IFORM_VPEXPANDB_ZMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 6104;
pub const XED_IFORM_VPEXPANDB_ZMMu8_MASKmskw_ZMMu8_AVX512: xed_iform_enum_t = 6105;
pub const XED_IFORM_VPEXPANDD_XMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 6106;
pub const XED_IFORM_VPEXPANDD_XMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6107;
pub const XED_IFORM_VPEXPANDD_YMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 6108;
pub const XED_IFORM_VPEXPANDD_YMMu32_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6109;
pub const XED_IFORM_VPEXPANDD_ZMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 6110;
pub const XED_IFORM_VPEXPANDD_ZMMu32_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 6111;
pub const XED_IFORM_VPEXPANDQ_XMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 6112;
pub const XED_IFORM_VPEXPANDQ_XMMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6113;
pub const XED_IFORM_VPEXPANDQ_YMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 6114;
pub const XED_IFORM_VPEXPANDQ_YMMu64_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6115;
pub const XED_IFORM_VPEXPANDQ_ZMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 6116;
pub const XED_IFORM_VPEXPANDQ_ZMMu64_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6117;
pub const XED_IFORM_VPEXPANDW_XMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 6118;
pub const XED_IFORM_VPEXPANDW_XMMu16_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 6119;
pub const XED_IFORM_VPEXPANDW_YMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 6120;
pub const XED_IFORM_VPEXPANDW_YMMu16_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 6121;
pub const XED_IFORM_VPEXPANDW_ZMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 6122;
pub const XED_IFORM_VPEXPANDW_ZMMu16_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 6123;
pub const XED_IFORM_VPEXTRB_GPR32d_XMMdq_IMMb: xed_iform_enum_t = 6124;
pub const XED_IFORM_VPEXTRB_GPR32u8_XMMu8_IMM8_AVX512: xed_iform_enum_t = 6125;
pub const XED_IFORM_VPEXTRB_MEMb_XMMdq_IMMb: xed_iform_enum_t = 6126;
pub const XED_IFORM_VPEXTRB_MEMu8_XMMu8_IMM8_AVX512: xed_iform_enum_t = 6127;
pub const XED_IFORM_VPEXTRD_GPR32d_XMMdq_IMMb: xed_iform_enum_t = 6128;
pub const XED_IFORM_VPEXTRD_GPR32u32_XMMu32_IMM8_AVX512: xed_iform_enum_t = 6129;
pub const XED_IFORM_VPEXTRD_MEMd_XMMdq_IMMb: xed_iform_enum_t = 6130;
pub const XED_IFORM_VPEXTRD_MEMu32_XMMu32_IMM8_AVX512: xed_iform_enum_t = 6131;
pub const XED_IFORM_VPEXTRQ_GPR64q_XMMdq_IMMb: xed_iform_enum_t = 6132;
pub const XED_IFORM_VPEXTRQ_GPR64u64_XMMu64_IMM8_AVX512: xed_iform_enum_t = 6133;
pub const XED_IFORM_VPEXTRQ_MEMq_XMMdq_IMMb: xed_iform_enum_t = 6134;
pub const XED_IFORM_VPEXTRQ_MEMu64_XMMu64_IMM8_AVX512: xed_iform_enum_t = 6135;
pub const XED_IFORM_VPEXTRW_GPR32d_XMMdq_IMMb_15: xed_iform_enum_t = 6136;
pub const XED_IFORM_VPEXTRW_GPR32d_XMMdq_IMMb_C5: xed_iform_enum_t = 6137;
pub const XED_IFORM_VPEXTRW_GPR32u16_XMMu16_IMM8_AVX512: xed_iform_enum_t = 6138;
pub const XED_IFORM_VPEXTRW_MEMu16_XMMu16_IMM8_AVX512: xed_iform_enum_t = 6139;
pub const XED_IFORM_VPEXTRW_MEMw_XMMdq_IMMb: xed_iform_enum_t = 6140;
pub const XED_IFORM_VPEXTRW_GPR32u16_XMMu16_IMM8_AVX512_C5: xed_iform_enum_t = 6141;
pub const XED_IFORM_VPGATHERDD_XMMu32_MASKmskw_MEMu32_AVX512_VL128: xed_iform_enum_t = 6142;
pub const XED_IFORM_VPGATHERDD_XMMu32_MEMd_XMMi32_VL128: xed_iform_enum_t = 6143;
pub const XED_IFORM_VPGATHERDD_YMMu32_MASKmskw_MEMu32_AVX512_VL256: xed_iform_enum_t = 6144;
pub const XED_IFORM_VPGATHERDD_YMMu32_MEMd_YMMi32_VL256: xed_iform_enum_t = 6145;
pub const XED_IFORM_VPGATHERDD_ZMMu32_MASKmskw_MEMu32_AVX512_VL512: xed_iform_enum_t = 6146;
pub const XED_IFORM_VPGATHERDQ_XMMu64_MASKmskw_MEMu64_AVX512_VL128: xed_iform_enum_t = 6147;
pub const XED_IFORM_VPGATHERDQ_XMMu64_MEMq_XMMi64_VL128: xed_iform_enum_t = 6148;
pub const XED_IFORM_VPGATHERDQ_YMMu64_MASKmskw_MEMu64_AVX512_VL256: xed_iform_enum_t = 6149;
pub const XED_IFORM_VPGATHERDQ_YMMu64_MEMq_YMMi64_VL256: xed_iform_enum_t = 6150;
pub const XED_IFORM_VPGATHERDQ_ZMMu64_MASKmskw_MEMu64_AVX512_VL512: xed_iform_enum_t = 6151;
pub const XED_IFORM_VPGATHERQD_XMMu32_MASKmskw_MEMu32_AVX512_VL128: xed_iform_enum_t = 6152;
pub const XED_IFORM_VPGATHERQD_XMMu32_MASKmskw_MEMu32_AVX512_VL256: xed_iform_enum_t = 6153;
pub const XED_IFORM_VPGATHERQD_XMMu32_MEMd_XMMi32_VL128: xed_iform_enum_t = 6154;
pub const XED_IFORM_VPGATHERQD_XMMu32_MEMd_XMMi32_VL256: xed_iform_enum_t = 6155;
pub const XED_IFORM_VPGATHERQD_YMMu32_MASKmskw_MEMu32_AVX512_VL512: xed_iform_enum_t = 6156;
pub const XED_IFORM_VPGATHERQQ_XMMu64_MASKmskw_MEMu64_AVX512_VL128: xed_iform_enum_t = 6157;
pub const XED_IFORM_VPGATHERQQ_XMMu64_MEMq_XMMi64_VL128: xed_iform_enum_t = 6158;
pub const XED_IFORM_VPGATHERQQ_YMMu64_MASKmskw_MEMu64_AVX512_VL256: xed_iform_enum_t = 6159;
pub const XED_IFORM_VPGATHERQQ_YMMu64_MEMq_YMMi64_VL256: xed_iform_enum_t = 6160;
pub const XED_IFORM_VPGATHERQQ_ZMMu64_MASKmskw_MEMu64_AVX512_VL512: xed_iform_enum_t = 6161;
pub const XED_IFORM_VPHADDBD_XMMdq_MEMdq: xed_iform_enum_t = 6162;
pub const XED_IFORM_VPHADDBD_XMMdq_XMMdq: xed_iform_enum_t = 6163;
pub const XED_IFORM_VPHADDBQ_XMMdq_MEMdq: xed_iform_enum_t = 6164;
pub const XED_IFORM_VPHADDBQ_XMMdq_XMMdq: xed_iform_enum_t = 6165;
pub const XED_IFORM_VPHADDBW_XMMdq_MEMdq: xed_iform_enum_t = 6166;
pub const XED_IFORM_VPHADDBW_XMMdq_XMMdq: xed_iform_enum_t = 6167;
pub const XED_IFORM_VPHADDD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6168;
pub const XED_IFORM_VPHADDD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6169;
pub const XED_IFORM_VPHADDD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6170;
pub const XED_IFORM_VPHADDD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6171;
pub const XED_IFORM_VPHADDDQ_XMMdq_MEMdq: xed_iform_enum_t = 6172;
pub const XED_IFORM_VPHADDDQ_XMMdq_XMMdq: xed_iform_enum_t = 6173;
pub const XED_IFORM_VPHADDSW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6174;
pub const XED_IFORM_VPHADDSW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6175;
pub const XED_IFORM_VPHADDSW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6176;
pub const XED_IFORM_VPHADDSW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6177;
pub const XED_IFORM_VPHADDUBD_XMMdq_MEMdq: xed_iform_enum_t = 6178;
pub const XED_IFORM_VPHADDUBD_XMMdq_XMMdq: xed_iform_enum_t = 6179;
pub const XED_IFORM_VPHADDUBQ_XMMdq_MEMdq: xed_iform_enum_t = 6180;
pub const XED_IFORM_VPHADDUBQ_XMMdq_XMMdq: xed_iform_enum_t = 6181;
pub const XED_IFORM_VPHADDUBW_XMMdq_MEMdq: xed_iform_enum_t = 6182;
pub const XED_IFORM_VPHADDUBW_XMMdq_XMMdq: xed_iform_enum_t = 6183;
pub const XED_IFORM_VPHADDUDQ_XMMdq_MEMdq: xed_iform_enum_t = 6184;
pub const XED_IFORM_VPHADDUDQ_XMMdq_XMMdq: xed_iform_enum_t = 6185;
pub const XED_IFORM_VPHADDUWD_XMMdq_MEMdq: xed_iform_enum_t = 6186;
pub const XED_IFORM_VPHADDUWD_XMMdq_XMMdq: xed_iform_enum_t = 6187;
pub const XED_IFORM_VPHADDUWQ_XMMdq_MEMdq: xed_iform_enum_t = 6188;
pub const XED_IFORM_VPHADDUWQ_XMMdq_XMMdq: xed_iform_enum_t = 6189;
pub const XED_IFORM_VPHADDW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6190;
pub const XED_IFORM_VPHADDW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6191;
pub const XED_IFORM_VPHADDW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6192;
pub const XED_IFORM_VPHADDW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6193;
pub const XED_IFORM_VPHADDWD_XMMdq_MEMdq: xed_iform_enum_t = 6194;
pub const XED_IFORM_VPHADDWD_XMMdq_XMMdq: xed_iform_enum_t = 6195;
pub const XED_IFORM_VPHADDWQ_XMMdq_MEMdq: xed_iform_enum_t = 6196;
pub const XED_IFORM_VPHADDWQ_XMMdq_XMMdq: xed_iform_enum_t = 6197;
pub const XED_IFORM_VPHMINPOSUW_XMMdq_MEMdq: xed_iform_enum_t = 6198;
pub const XED_IFORM_VPHMINPOSUW_XMMdq_XMMdq: xed_iform_enum_t = 6199;
pub const XED_IFORM_VPHSUBBW_XMMdq_MEMdq: xed_iform_enum_t = 6200;
pub const XED_IFORM_VPHSUBBW_XMMdq_XMMdq: xed_iform_enum_t = 6201;
pub const XED_IFORM_VPHSUBD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6202;
pub const XED_IFORM_VPHSUBD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6203;
pub const XED_IFORM_VPHSUBD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6204;
pub const XED_IFORM_VPHSUBD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6205;
pub const XED_IFORM_VPHSUBDQ_XMMdq_MEMdq: xed_iform_enum_t = 6206;
pub const XED_IFORM_VPHSUBDQ_XMMdq_XMMdq: xed_iform_enum_t = 6207;
pub const XED_IFORM_VPHSUBSW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6208;
pub const XED_IFORM_VPHSUBSW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6209;
pub const XED_IFORM_VPHSUBSW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6210;
pub const XED_IFORM_VPHSUBSW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6211;
pub const XED_IFORM_VPHSUBW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6212;
pub const XED_IFORM_VPHSUBW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6213;
pub const XED_IFORM_VPHSUBW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6214;
pub const XED_IFORM_VPHSUBW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6215;
pub const XED_IFORM_VPHSUBWD_XMMdq_MEMdq: xed_iform_enum_t = 6216;
pub const XED_IFORM_VPHSUBWD_XMMdq_XMMdq: xed_iform_enum_t = 6217;
pub const XED_IFORM_VPINSRB_XMMdq_XMMdq_GPR32d_IMMb: xed_iform_enum_t = 6218;
pub const XED_IFORM_VPINSRB_XMMdq_XMMdq_MEMb_IMMb: xed_iform_enum_t = 6219;
pub const XED_IFORM_VPINSRB_XMMu8_XMMu8_GPR32u8_IMM8_AVX512: xed_iform_enum_t = 6220;
pub const XED_IFORM_VPINSRB_XMMu8_XMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 6221;
pub const XED_IFORM_VPINSRD_XMMdq_XMMdq_GPR32d_IMMb: xed_iform_enum_t = 6222;
pub const XED_IFORM_VPINSRD_XMMdq_XMMdq_MEMd_IMMb: xed_iform_enum_t = 6223;
pub const XED_IFORM_VPINSRD_XMMu32_XMMu32_GPR32u32_IMM8_AVX512: xed_iform_enum_t = 6224;
pub const XED_IFORM_VPINSRD_XMMu32_XMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6225;
pub const XED_IFORM_VPINSRQ_XMMdq_XMMdq_GPR64q_IMMb: xed_iform_enum_t = 6226;
pub const XED_IFORM_VPINSRQ_XMMdq_XMMdq_MEMq_IMMb: xed_iform_enum_t = 6227;
pub const XED_IFORM_VPINSRQ_XMMu64_XMMu64_GPR64u64_IMM8_AVX512: xed_iform_enum_t = 6228;
pub const XED_IFORM_VPINSRQ_XMMu64_XMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6229;
pub const XED_IFORM_VPINSRW_XMMdq_XMMdq_GPR32d_IMMb: xed_iform_enum_t = 6230;
pub const XED_IFORM_VPINSRW_XMMdq_XMMdq_MEMw_IMMb: xed_iform_enum_t = 6231;
pub const XED_IFORM_VPINSRW_XMMu16_XMMu16_GPR32u16_IMM8_AVX512: xed_iform_enum_t = 6232;
pub const XED_IFORM_VPINSRW_XMMu16_XMMu16_MEMu16_IMM8_AVX512: xed_iform_enum_t = 6233;
pub const XED_IFORM_VPLZCNTD_XMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 6234;
pub const XED_IFORM_VPLZCNTD_XMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6235;
pub const XED_IFORM_VPLZCNTD_YMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 6236;
pub const XED_IFORM_VPLZCNTD_YMMu32_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6237;
pub const XED_IFORM_VPLZCNTD_ZMMu32_MASKmskw_MEMu32_AVX512CD: xed_iform_enum_t = 6238;
pub const XED_IFORM_VPLZCNTD_ZMMu32_MASKmskw_ZMMu32_AVX512CD: xed_iform_enum_t = 6239;
pub const XED_IFORM_VPLZCNTQ_XMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 6240;
pub const XED_IFORM_VPLZCNTQ_XMMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6241;
pub const XED_IFORM_VPLZCNTQ_YMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 6242;
pub const XED_IFORM_VPLZCNTQ_YMMu64_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6243;
pub const XED_IFORM_VPLZCNTQ_ZMMu64_MASKmskw_MEMu64_AVX512CD: xed_iform_enum_t = 6244;
pub const XED_IFORM_VPLZCNTQ_ZMMu64_MASKmskw_ZMMu64_AVX512CD: xed_iform_enum_t = 6245;
pub const XED_IFORM_VPMACSDD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6246;
pub const XED_IFORM_VPMACSDD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6247;
pub const XED_IFORM_VPMACSDQH_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6248;
pub const XED_IFORM_VPMACSDQH_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6249;
pub const XED_IFORM_VPMACSDQL_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6250;
pub const XED_IFORM_VPMACSDQL_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6251;
pub const XED_IFORM_VPMACSSDD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6252;
pub const XED_IFORM_VPMACSSDD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6253;
pub const XED_IFORM_VPMACSSDQH_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6254;
pub const XED_IFORM_VPMACSSDQH_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6255;
pub const XED_IFORM_VPMACSSDQL_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6256;
pub const XED_IFORM_VPMACSSDQL_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6257;
pub const XED_IFORM_VPMACSSWD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6258;
pub const XED_IFORM_VPMACSSWD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6259;
pub const XED_IFORM_VPMACSSWW_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6260;
pub const XED_IFORM_VPMACSSWW_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6261;
pub const XED_IFORM_VPMACSWD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6262;
pub const XED_IFORM_VPMACSWD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6263;
pub const XED_IFORM_VPMACSWW_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6264;
pub const XED_IFORM_VPMACSWW_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6265;
pub const XED_IFORM_VPMADCSSWD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6266;
pub const XED_IFORM_VPMADCSSWD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6267;
pub const XED_IFORM_VPMADCSWD_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6268;
pub const XED_IFORM_VPMADCSWD_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6269;
pub const XED_IFORM_VPMADD52HUQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 6270;
pub const XED_IFORM_VPMADD52HUQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 6271;
pub const XED_IFORM_VPMADD52HUQ_XMMu64_XMMu64_MEMu64: xed_iform_enum_t = 6272;
pub const XED_IFORM_VPMADD52HUQ_XMMu64_XMMu64_XMMu64: xed_iform_enum_t = 6273;
pub const XED_IFORM_VPMADD52HUQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 6274;
pub const XED_IFORM_VPMADD52HUQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 6275;
pub const XED_IFORM_VPMADD52HUQ_YMMu64_YMMu64_MEMu64: xed_iform_enum_t = 6276;
pub const XED_IFORM_VPMADD52HUQ_YMMu64_YMMu64_YMMu64: xed_iform_enum_t = 6277;
pub const XED_IFORM_VPMADD52HUQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 6278;
pub const XED_IFORM_VPMADD52HUQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 6279;
pub const XED_IFORM_VPMADD52LUQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 6280;
pub const XED_IFORM_VPMADD52LUQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 6281;
pub const XED_IFORM_VPMADD52LUQ_XMMu64_XMMu64_MEMu64: xed_iform_enum_t = 6282;
pub const XED_IFORM_VPMADD52LUQ_XMMu64_XMMu64_XMMu64: xed_iform_enum_t = 6283;
pub const XED_IFORM_VPMADD52LUQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 6284;
pub const XED_IFORM_VPMADD52LUQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 6285;
pub const XED_IFORM_VPMADD52LUQ_YMMu64_YMMu64_MEMu64: xed_iform_enum_t = 6286;
pub const XED_IFORM_VPMADD52LUQ_YMMu64_YMMu64_YMMu64: xed_iform_enum_t = 6287;
pub const XED_IFORM_VPMADD52LUQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 6288;
pub const XED_IFORM_VPMADD52LUQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 6289;
pub const XED_IFORM_VPMADDUBSW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6290;
pub const XED_IFORM_VPMADDUBSW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6291;
pub const XED_IFORM_VPMADDUBSW_XMMi16_MASKmskw_XMMi16_MEMi16_AVX512: xed_iform_enum_t = 6292;
pub const XED_IFORM_VPMADDUBSW_XMMi16_MASKmskw_XMMi16_XMMi16_AVX512: xed_iform_enum_t = 6293;
pub const XED_IFORM_VPMADDUBSW_YMMi16_MASKmskw_YMMi16_MEMi16_AVX512: xed_iform_enum_t = 6294;
pub const XED_IFORM_VPMADDUBSW_YMMi16_MASKmskw_YMMi16_YMMi16_AVX512: xed_iform_enum_t = 6295;
pub const XED_IFORM_VPMADDUBSW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6296;
pub const XED_IFORM_VPMADDUBSW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6297;
pub const XED_IFORM_VPMADDUBSW_ZMMi16_MASKmskw_ZMMi16_MEMi16_AVX512: xed_iform_enum_t = 6298;
pub const XED_IFORM_VPMADDUBSW_ZMMi16_MASKmskw_ZMMi16_ZMMi16_AVX512: xed_iform_enum_t = 6299;
pub const XED_IFORM_VPMADDWD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6300;
pub const XED_IFORM_VPMADDWD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6301;
pub const XED_IFORM_VPMADDWD_XMMi32_MASKmskw_XMMi16_MEMi16_AVX512: xed_iform_enum_t = 6302;
pub const XED_IFORM_VPMADDWD_XMMi32_MASKmskw_XMMi16_XMMi16_AVX512: xed_iform_enum_t = 6303;
pub const XED_IFORM_VPMADDWD_YMMi32_MASKmskw_YMMi16_MEMi16_AVX512: xed_iform_enum_t = 6304;
pub const XED_IFORM_VPMADDWD_YMMi32_MASKmskw_YMMi16_YMMi16_AVX512: xed_iform_enum_t = 6305;
pub const XED_IFORM_VPMADDWD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6306;
pub const XED_IFORM_VPMADDWD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6307;
pub const XED_IFORM_VPMADDWD_ZMMi32_MASKmskw_ZMMi16_MEMi16_AVX512: xed_iform_enum_t = 6308;
pub const XED_IFORM_VPMADDWD_ZMMi32_MASKmskw_ZMMi16_ZMMi16_AVX512: xed_iform_enum_t = 6309;
pub const XED_IFORM_VPMASKMOVD_MEMdq_XMMdq_XMMdq: xed_iform_enum_t = 6310;
pub const XED_IFORM_VPMASKMOVD_MEMqq_YMMqq_YMMqq: xed_iform_enum_t = 6311;
pub const XED_IFORM_VPMASKMOVD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6312;
pub const XED_IFORM_VPMASKMOVD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6313;
pub const XED_IFORM_VPMASKMOVQ_MEMdq_XMMdq_XMMdq: xed_iform_enum_t = 6314;
pub const XED_IFORM_VPMASKMOVQ_MEMqq_YMMqq_YMMqq: xed_iform_enum_t = 6315;
pub const XED_IFORM_VPMASKMOVQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6316;
pub const XED_IFORM_VPMASKMOVQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6317;
pub const XED_IFORM_VPMAXSB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6318;
pub const XED_IFORM_VPMAXSB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6319;
pub const XED_IFORM_VPMAXSB_XMMi8_MASKmskw_XMMi8_MEMi8_AVX512: xed_iform_enum_t = 6320;
pub const XED_IFORM_VPMAXSB_XMMi8_MASKmskw_XMMi8_XMMi8_AVX512: xed_iform_enum_t = 6321;
pub const XED_IFORM_VPMAXSB_YMMi8_MASKmskw_YMMi8_MEMi8_AVX512: xed_iform_enum_t = 6322;
pub const XED_IFORM_VPMAXSB_YMMi8_MASKmskw_YMMi8_YMMi8_AVX512: xed_iform_enum_t = 6323;
pub const XED_IFORM_VPMAXSB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6324;
pub const XED_IFORM_VPMAXSB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6325;
pub const XED_IFORM_VPMAXSB_ZMMi8_MASKmskw_ZMMi8_MEMi8_AVX512: xed_iform_enum_t = 6326;
pub const XED_IFORM_VPMAXSB_ZMMi8_MASKmskw_ZMMi8_ZMMi8_AVX512: xed_iform_enum_t = 6327;
pub const XED_IFORM_VPMAXSD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6328;
pub const XED_IFORM_VPMAXSD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6329;
pub const XED_IFORM_VPMAXSD_XMMi32_MASKmskw_XMMi32_MEMi32_AVX512: xed_iform_enum_t = 6330;
pub const XED_IFORM_VPMAXSD_XMMi32_MASKmskw_XMMi32_XMMi32_AVX512: xed_iform_enum_t = 6331;
pub const XED_IFORM_VPMAXSD_YMMi32_MASKmskw_YMMi32_MEMi32_AVX512: xed_iform_enum_t = 6332;
pub const XED_IFORM_VPMAXSD_YMMi32_MASKmskw_YMMi32_YMMi32_AVX512: xed_iform_enum_t = 6333;
pub const XED_IFORM_VPMAXSD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6334;
pub const XED_IFORM_VPMAXSD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6335;
pub const XED_IFORM_VPMAXSD_ZMMi32_MASKmskw_ZMMi32_MEMi32_AVX512: xed_iform_enum_t = 6336;
pub const XED_IFORM_VPMAXSD_ZMMi32_MASKmskw_ZMMi32_ZMMi32_AVX512: xed_iform_enum_t = 6337;
pub const XED_IFORM_VPMAXSQ_XMMi64_MASKmskw_XMMi64_MEMi64_AVX512: xed_iform_enum_t = 6338;
pub const XED_IFORM_VPMAXSQ_XMMi64_MASKmskw_XMMi64_XMMi64_AVX512: xed_iform_enum_t = 6339;
pub const XED_IFORM_VPMAXSQ_YMMi64_MASKmskw_YMMi64_MEMi64_AVX512: xed_iform_enum_t = 6340;
pub const XED_IFORM_VPMAXSQ_YMMi64_MASKmskw_YMMi64_YMMi64_AVX512: xed_iform_enum_t = 6341;
pub const XED_IFORM_VPMAXSQ_ZMMi64_MASKmskw_ZMMi64_MEMi64_AVX512: xed_iform_enum_t = 6342;
pub const XED_IFORM_VPMAXSQ_ZMMi64_MASKmskw_ZMMi64_ZMMi64_AVX512: xed_iform_enum_t = 6343;
pub const XED_IFORM_VPMAXSW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6344;
pub const XED_IFORM_VPMAXSW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6345;
pub const XED_IFORM_VPMAXSW_XMMi16_MASKmskw_XMMi16_MEMi16_AVX512: xed_iform_enum_t = 6346;
pub const XED_IFORM_VPMAXSW_XMMi16_MASKmskw_XMMi16_XMMi16_AVX512: xed_iform_enum_t = 6347;
pub const XED_IFORM_VPMAXSW_YMMi16_MASKmskw_YMMi16_MEMi16_AVX512: xed_iform_enum_t = 6348;
pub const XED_IFORM_VPMAXSW_YMMi16_MASKmskw_YMMi16_YMMi16_AVX512: xed_iform_enum_t = 6349;
pub const XED_IFORM_VPMAXSW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6350;
pub const XED_IFORM_VPMAXSW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6351;
pub const XED_IFORM_VPMAXSW_ZMMi16_MASKmskw_ZMMi16_MEMi16_AVX512: xed_iform_enum_t = 6352;
pub const XED_IFORM_VPMAXSW_ZMMi16_MASKmskw_ZMMi16_ZMMi16_AVX512: xed_iform_enum_t = 6353;
pub const XED_IFORM_VPMAXUB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6354;
pub const XED_IFORM_VPMAXUB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6355;
pub const XED_IFORM_VPMAXUB_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 6356;
pub const XED_IFORM_VPMAXUB_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 6357;
pub const XED_IFORM_VPMAXUB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6358;
pub const XED_IFORM_VPMAXUB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6359;
pub const XED_IFORM_VPMAXUB_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 6360;
pub const XED_IFORM_VPMAXUB_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 6361;
pub const XED_IFORM_VPMAXUB_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 6362;
pub const XED_IFORM_VPMAXUB_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 6363;
pub const XED_IFORM_VPMAXUD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6364;
pub const XED_IFORM_VPMAXUD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6365;
pub const XED_IFORM_VPMAXUD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 6366;
pub const XED_IFORM_VPMAXUD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 6367;
pub const XED_IFORM_VPMAXUD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6368;
pub const XED_IFORM_VPMAXUD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6369;
pub const XED_IFORM_VPMAXUD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 6370;
pub const XED_IFORM_VPMAXUD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 6371;
pub const XED_IFORM_VPMAXUD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 6372;
pub const XED_IFORM_VPMAXUD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 6373;
pub const XED_IFORM_VPMAXUQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 6374;
pub const XED_IFORM_VPMAXUQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 6375;
pub const XED_IFORM_VPMAXUQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 6376;
pub const XED_IFORM_VPMAXUQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 6377;
pub const XED_IFORM_VPMAXUQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 6378;
pub const XED_IFORM_VPMAXUQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 6379;
pub const XED_IFORM_VPMAXUW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6380;
pub const XED_IFORM_VPMAXUW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6381;
pub const XED_IFORM_VPMAXUW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 6382;
pub const XED_IFORM_VPMAXUW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 6383;
pub const XED_IFORM_VPMAXUW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6384;
pub const XED_IFORM_VPMAXUW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6385;
pub const XED_IFORM_VPMAXUW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 6386;
pub const XED_IFORM_VPMAXUW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 6387;
pub const XED_IFORM_VPMAXUW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 6388;
pub const XED_IFORM_VPMAXUW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 6389;
pub const XED_IFORM_VPMINSB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6390;
pub const XED_IFORM_VPMINSB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6391;
pub const XED_IFORM_VPMINSB_XMMi8_MASKmskw_XMMi8_MEMi8_AVX512: xed_iform_enum_t = 6392;
pub const XED_IFORM_VPMINSB_XMMi8_MASKmskw_XMMi8_XMMi8_AVX512: xed_iform_enum_t = 6393;
pub const XED_IFORM_VPMINSB_YMMi8_MASKmskw_YMMi8_MEMi8_AVX512: xed_iform_enum_t = 6394;
pub const XED_IFORM_VPMINSB_YMMi8_MASKmskw_YMMi8_YMMi8_AVX512: xed_iform_enum_t = 6395;
pub const XED_IFORM_VPMINSB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6396;
pub const XED_IFORM_VPMINSB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6397;
pub const XED_IFORM_VPMINSB_ZMMi8_MASKmskw_ZMMi8_MEMi8_AVX512: xed_iform_enum_t = 6398;
pub const XED_IFORM_VPMINSB_ZMMi8_MASKmskw_ZMMi8_ZMMi8_AVX512: xed_iform_enum_t = 6399;
pub const XED_IFORM_VPMINSD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6400;
pub const XED_IFORM_VPMINSD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6401;
pub const XED_IFORM_VPMINSD_XMMi32_MASKmskw_XMMi32_MEMi32_AVX512: xed_iform_enum_t = 6402;
pub const XED_IFORM_VPMINSD_XMMi32_MASKmskw_XMMi32_XMMi32_AVX512: xed_iform_enum_t = 6403;
pub const XED_IFORM_VPMINSD_YMMi32_MASKmskw_YMMi32_MEMi32_AVX512: xed_iform_enum_t = 6404;
pub const XED_IFORM_VPMINSD_YMMi32_MASKmskw_YMMi32_YMMi32_AVX512: xed_iform_enum_t = 6405;
pub const XED_IFORM_VPMINSD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6406;
pub const XED_IFORM_VPMINSD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6407;
pub const XED_IFORM_VPMINSD_ZMMi32_MASKmskw_ZMMi32_MEMi32_AVX512: xed_iform_enum_t = 6408;
pub const XED_IFORM_VPMINSD_ZMMi32_MASKmskw_ZMMi32_ZMMi32_AVX512: xed_iform_enum_t = 6409;
pub const XED_IFORM_VPMINSQ_XMMi64_MASKmskw_XMMi64_MEMi64_AVX512: xed_iform_enum_t = 6410;
pub const XED_IFORM_VPMINSQ_XMMi64_MASKmskw_XMMi64_XMMi64_AVX512: xed_iform_enum_t = 6411;
pub const XED_IFORM_VPMINSQ_YMMi64_MASKmskw_YMMi64_MEMi64_AVX512: xed_iform_enum_t = 6412;
pub const XED_IFORM_VPMINSQ_YMMi64_MASKmskw_YMMi64_YMMi64_AVX512: xed_iform_enum_t = 6413;
pub const XED_IFORM_VPMINSQ_ZMMi64_MASKmskw_ZMMi64_MEMi64_AVX512: xed_iform_enum_t = 6414;
pub const XED_IFORM_VPMINSQ_ZMMi64_MASKmskw_ZMMi64_ZMMi64_AVX512: xed_iform_enum_t = 6415;
pub const XED_IFORM_VPMINSW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6416;
pub const XED_IFORM_VPMINSW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6417;
pub const XED_IFORM_VPMINSW_XMMi16_MASKmskw_XMMi16_MEMi16_AVX512: xed_iform_enum_t = 6418;
pub const XED_IFORM_VPMINSW_XMMi16_MASKmskw_XMMi16_XMMi16_AVX512: xed_iform_enum_t = 6419;
pub const XED_IFORM_VPMINSW_YMMi16_MASKmskw_YMMi16_MEMi16_AVX512: xed_iform_enum_t = 6420;
pub const XED_IFORM_VPMINSW_YMMi16_MASKmskw_YMMi16_YMMi16_AVX512: xed_iform_enum_t = 6421;
pub const XED_IFORM_VPMINSW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6422;
pub const XED_IFORM_VPMINSW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6423;
pub const XED_IFORM_VPMINSW_ZMMi16_MASKmskw_ZMMi16_MEMi16_AVX512: xed_iform_enum_t = 6424;
pub const XED_IFORM_VPMINSW_ZMMi16_MASKmskw_ZMMi16_ZMMi16_AVX512: xed_iform_enum_t = 6425;
pub const XED_IFORM_VPMINUB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6426;
pub const XED_IFORM_VPMINUB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6427;
pub const XED_IFORM_VPMINUB_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 6428;
pub const XED_IFORM_VPMINUB_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 6429;
pub const XED_IFORM_VPMINUB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6430;
pub const XED_IFORM_VPMINUB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6431;
pub const XED_IFORM_VPMINUB_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 6432;
pub const XED_IFORM_VPMINUB_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 6433;
pub const XED_IFORM_VPMINUB_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 6434;
pub const XED_IFORM_VPMINUB_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 6435;
pub const XED_IFORM_VPMINUD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6436;
pub const XED_IFORM_VPMINUD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6437;
pub const XED_IFORM_VPMINUD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 6438;
pub const XED_IFORM_VPMINUD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 6439;
pub const XED_IFORM_VPMINUD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6440;
pub const XED_IFORM_VPMINUD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6441;
pub const XED_IFORM_VPMINUD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 6442;
pub const XED_IFORM_VPMINUD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 6443;
pub const XED_IFORM_VPMINUD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 6444;
pub const XED_IFORM_VPMINUD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 6445;
pub const XED_IFORM_VPMINUQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 6446;
pub const XED_IFORM_VPMINUQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 6447;
pub const XED_IFORM_VPMINUQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 6448;
pub const XED_IFORM_VPMINUQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 6449;
pub const XED_IFORM_VPMINUQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 6450;
pub const XED_IFORM_VPMINUQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 6451;
pub const XED_IFORM_VPMINUW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6452;
pub const XED_IFORM_VPMINUW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6453;
pub const XED_IFORM_VPMINUW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 6454;
pub const XED_IFORM_VPMINUW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 6455;
pub const XED_IFORM_VPMINUW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6456;
pub const XED_IFORM_VPMINUW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6457;
pub const XED_IFORM_VPMINUW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 6458;
pub const XED_IFORM_VPMINUW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 6459;
pub const XED_IFORM_VPMINUW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 6460;
pub const XED_IFORM_VPMINUW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 6461;
pub const XED_IFORM_VPMOVB2M_MASKmskw_XMMu8_AVX512: xed_iform_enum_t = 6462;
pub const XED_IFORM_VPMOVB2M_MASKmskw_YMMu8_AVX512: xed_iform_enum_t = 6463;
pub const XED_IFORM_VPMOVB2M_MASKmskw_ZMMu8_AVX512: xed_iform_enum_t = 6464;
pub const XED_IFORM_VPMOVD2M_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6465;
pub const XED_IFORM_VPMOVD2M_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6466;
pub const XED_IFORM_VPMOVD2M_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 6467;
pub const XED_IFORM_VPMOVDB_MEMu8_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6468;
pub const XED_IFORM_VPMOVDB_MEMu8_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6469;
pub const XED_IFORM_VPMOVDB_MEMu8_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 6470;
pub const XED_IFORM_VPMOVDB_XMMu8_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6471;
pub const XED_IFORM_VPMOVDB_XMMu8_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6472;
pub const XED_IFORM_VPMOVDB_XMMu8_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 6473;
pub const XED_IFORM_VPMOVDW_MEMu16_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6474;
pub const XED_IFORM_VPMOVDW_MEMu16_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6475;
pub const XED_IFORM_VPMOVDW_MEMu16_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 6476;
pub const XED_IFORM_VPMOVDW_XMMu16_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6477;
pub const XED_IFORM_VPMOVDW_XMMu16_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6478;
pub const XED_IFORM_VPMOVDW_YMMu16_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 6479;
pub const XED_IFORM_VPMOVM2B_XMMu8_MASKmskw_AVX512: xed_iform_enum_t = 6480;
pub const XED_IFORM_VPMOVM2B_YMMu8_MASKmskw_AVX512: xed_iform_enum_t = 6481;
pub const XED_IFORM_VPMOVM2B_ZMMu8_MASKmskw_AVX512: xed_iform_enum_t = 6482;
pub const XED_IFORM_VPMOVM2D_XMMu32_MASKmskw_AVX512: xed_iform_enum_t = 6483;
pub const XED_IFORM_VPMOVM2D_YMMu32_MASKmskw_AVX512: xed_iform_enum_t = 6484;
pub const XED_IFORM_VPMOVM2D_ZMMu32_MASKmskw_AVX512: xed_iform_enum_t = 6485;
pub const XED_IFORM_VPMOVM2Q_XMMu64_MASKmskw_AVX512: xed_iform_enum_t = 6486;
pub const XED_IFORM_VPMOVM2Q_YMMu64_MASKmskw_AVX512: xed_iform_enum_t = 6487;
pub const XED_IFORM_VPMOVM2Q_ZMMu64_MASKmskw_AVX512: xed_iform_enum_t = 6488;
pub const XED_IFORM_VPMOVM2W_XMMu16_MASKmskw_AVX512: xed_iform_enum_t = 6489;
pub const XED_IFORM_VPMOVM2W_YMMu16_MASKmskw_AVX512: xed_iform_enum_t = 6490;
pub const XED_IFORM_VPMOVM2W_ZMMu16_MASKmskw_AVX512: xed_iform_enum_t = 6491;
pub const XED_IFORM_VPMOVMSKB_GPR32d_XMMdq: xed_iform_enum_t = 6492;
pub const XED_IFORM_VPMOVMSKB_GPR32d_YMMqq: xed_iform_enum_t = 6493;
pub const XED_IFORM_VPMOVQ2M_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6494;
pub const XED_IFORM_VPMOVQ2M_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6495;
pub const XED_IFORM_VPMOVQ2M_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6496;
pub const XED_IFORM_VPMOVQB_MEMu8_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6497;
pub const XED_IFORM_VPMOVQB_MEMu8_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6498;
pub const XED_IFORM_VPMOVQB_MEMu8_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6499;
pub const XED_IFORM_VPMOVQB_XMMu8_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6500;
pub const XED_IFORM_VPMOVQB_XMMu8_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6501;
pub const XED_IFORM_VPMOVQB_XMMu8_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6502;
pub const XED_IFORM_VPMOVQD_MEMu32_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6503;
pub const XED_IFORM_VPMOVQD_MEMu32_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6504;
pub const XED_IFORM_VPMOVQD_MEMu32_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6505;
pub const XED_IFORM_VPMOVQD_XMMu32_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6506;
pub const XED_IFORM_VPMOVQD_XMMu32_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6507;
pub const XED_IFORM_VPMOVQD_YMMu32_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6508;
pub const XED_IFORM_VPMOVQW_MEMu16_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6509;
pub const XED_IFORM_VPMOVQW_MEMu16_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6510;
pub const XED_IFORM_VPMOVQW_MEMu16_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6511;
pub const XED_IFORM_VPMOVQW_XMMu16_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6512;
pub const XED_IFORM_VPMOVQW_XMMu16_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6513;
pub const XED_IFORM_VPMOVQW_XMMu16_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6514;
pub const XED_IFORM_VPMOVSDB_MEMi8_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 6515;
pub const XED_IFORM_VPMOVSDB_MEMi8_MASKmskw_YMMi32_AVX512: xed_iform_enum_t = 6516;
pub const XED_IFORM_VPMOVSDB_MEMi8_MASKmskw_ZMMi32_AVX512: xed_iform_enum_t = 6517;
pub const XED_IFORM_VPMOVSDB_XMMi8_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 6518;
pub const XED_IFORM_VPMOVSDB_XMMi8_MASKmskw_YMMi32_AVX512: xed_iform_enum_t = 6519;
pub const XED_IFORM_VPMOVSDB_XMMi8_MASKmskw_ZMMi32_AVX512: xed_iform_enum_t = 6520;
pub const XED_IFORM_VPMOVSDW_MEMi16_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 6521;
pub const XED_IFORM_VPMOVSDW_MEMi16_MASKmskw_YMMi32_AVX512: xed_iform_enum_t = 6522;
pub const XED_IFORM_VPMOVSDW_MEMi16_MASKmskw_ZMMi32_AVX512: xed_iform_enum_t = 6523;
pub const XED_IFORM_VPMOVSDW_XMMi16_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 6524;
pub const XED_IFORM_VPMOVSDW_XMMi16_MASKmskw_YMMi32_AVX512: xed_iform_enum_t = 6525;
pub const XED_IFORM_VPMOVSDW_YMMi16_MASKmskw_ZMMi32_AVX512: xed_iform_enum_t = 6526;
pub const XED_IFORM_VPMOVSQB_MEMi8_MASKmskw_XMMi64_AVX512: xed_iform_enum_t = 6527;
pub const XED_IFORM_VPMOVSQB_MEMi8_MASKmskw_YMMi64_AVX512: xed_iform_enum_t = 6528;
pub const XED_IFORM_VPMOVSQB_MEMi8_MASKmskw_ZMMi64_AVX512: xed_iform_enum_t = 6529;
pub const XED_IFORM_VPMOVSQB_XMMi8_MASKmskw_XMMi64_AVX512: xed_iform_enum_t = 6530;
pub const XED_IFORM_VPMOVSQB_XMMi8_MASKmskw_YMMi64_AVX512: xed_iform_enum_t = 6531;
pub const XED_IFORM_VPMOVSQB_XMMi8_MASKmskw_ZMMi64_AVX512: xed_iform_enum_t = 6532;
pub const XED_IFORM_VPMOVSQD_MEMi32_MASKmskw_XMMi64_AVX512: xed_iform_enum_t = 6533;
pub const XED_IFORM_VPMOVSQD_MEMi32_MASKmskw_YMMi64_AVX512: xed_iform_enum_t = 6534;
pub const XED_IFORM_VPMOVSQD_MEMi32_MASKmskw_ZMMi64_AVX512: xed_iform_enum_t = 6535;
pub const XED_IFORM_VPMOVSQD_XMMi32_MASKmskw_XMMi64_AVX512: xed_iform_enum_t = 6536;
pub const XED_IFORM_VPMOVSQD_XMMi32_MASKmskw_YMMi64_AVX512: xed_iform_enum_t = 6537;
pub const XED_IFORM_VPMOVSQD_YMMi32_MASKmskw_ZMMi64_AVX512: xed_iform_enum_t = 6538;
pub const XED_IFORM_VPMOVSQW_MEMi16_MASKmskw_XMMi64_AVX512: xed_iform_enum_t = 6539;
pub const XED_IFORM_VPMOVSQW_MEMi16_MASKmskw_YMMi64_AVX512: xed_iform_enum_t = 6540;
pub const XED_IFORM_VPMOVSQW_MEMi16_MASKmskw_ZMMi64_AVX512: xed_iform_enum_t = 6541;
pub const XED_IFORM_VPMOVSQW_XMMi16_MASKmskw_XMMi64_AVX512: xed_iform_enum_t = 6542;
pub const XED_IFORM_VPMOVSQW_XMMi16_MASKmskw_YMMi64_AVX512: xed_iform_enum_t = 6543;
pub const XED_IFORM_VPMOVSQW_XMMi16_MASKmskw_ZMMi64_AVX512: xed_iform_enum_t = 6544;
pub const XED_IFORM_VPMOVSWB_MEMi8_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6545;
pub const XED_IFORM_VPMOVSWB_MEMi8_MASKmskw_YMMi16_AVX512: xed_iform_enum_t = 6546;
pub const XED_IFORM_VPMOVSWB_MEMi8_MASKmskw_ZMMi16_AVX512: xed_iform_enum_t = 6547;
pub const XED_IFORM_VPMOVSWB_XMMi8_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6548;
pub const XED_IFORM_VPMOVSWB_XMMi8_MASKmskw_YMMi16_AVX512: xed_iform_enum_t = 6549;
pub const XED_IFORM_VPMOVSWB_YMMi8_MASKmskw_ZMMi16_AVX512: xed_iform_enum_t = 6550;
pub const XED_IFORM_VPMOVSXBD_XMMdq_MEMd: xed_iform_enum_t = 6551;
pub const XED_IFORM_VPMOVSXBD_XMMdq_XMMd: xed_iform_enum_t = 6552;
pub const XED_IFORM_VPMOVSXBD_XMMi32_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6553;
pub const XED_IFORM_VPMOVSXBD_XMMi32_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6554;
pub const XED_IFORM_VPMOVSXBD_YMMi32_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6555;
pub const XED_IFORM_VPMOVSXBD_YMMi32_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6556;
pub const XED_IFORM_VPMOVSXBD_YMMqq_MEMq: xed_iform_enum_t = 6557;
pub const XED_IFORM_VPMOVSXBD_YMMqq_XMMq: xed_iform_enum_t = 6558;
pub const XED_IFORM_VPMOVSXBD_ZMMi32_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6559;
pub const XED_IFORM_VPMOVSXBD_ZMMi32_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6560;
pub const XED_IFORM_VPMOVSXBQ_XMMdq_MEMw: xed_iform_enum_t = 6561;
pub const XED_IFORM_VPMOVSXBQ_XMMdq_XMMw: xed_iform_enum_t = 6562;
pub const XED_IFORM_VPMOVSXBQ_XMMi64_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6563;
pub const XED_IFORM_VPMOVSXBQ_XMMi64_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6564;
pub const XED_IFORM_VPMOVSXBQ_YMMi64_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6565;
pub const XED_IFORM_VPMOVSXBQ_YMMi64_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6566;
pub const XED_IFORM_VPMOVSXBQ_YMMqq_MEMd: xed_iform_enum_t = 6567;
pub const XED_IFORM_VPMOVSXBQ_YMMqq_XMMd: xed_iform_enum_t = 6568;
pub const XED_IFORM_VPMOVSXBQ_ZMMi64_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6569;
pub const XED_IFORM_VPMOVSXBQ_ZMMi64_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6570;
pub const XED_IFORM_VPMOVSXBW_XMMdq_MEMq: xed_iform_enum_t = 6571;
pub const XED_IFORM_VPMOVSXBW_XMMdq_XMMq: xed_iform_enum_t = 6572;
pub const XED_IFORM_VPMOVSXBW_XMMi16_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6573;
pub const XED_IFORM_VPMOVSXBW_XMMi16_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6574;
pub const XED_IFORM_VPMOVSXBW_YMMi16_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6575;
pub const XED_IFORM_VPMOVSXBW_YMMi16_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6576;
pub const XED_IFORM_VPMOVSXBW_YMMqq_MEMdq: xed_iform_enum_t = 6577;
pub const XED_IFORM_VPMOVSXBW_YMMqq_XMMdq: xed_iform_enum_t = 6578;
pub const XED_IFORM_VPMOVSXBW_ZMMi16_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6579;
pub const XED_IFORM_VPMOVSXBW_ZMMi16_MASKmskw_YMMi8_AVX512: xed_iform_enum_t = 6580;
pub const XED_IFORM_VPMOVSXDQ_XMMdq_MEMq: xed_iform_enum_t = 6581;
pub const XED_IFORM_VPMOVSXDQ_XMMdq_XMMq: xed_iform_enum_t = 6582;
pub const XED_IFORM_VPMOVSXDQ_XMMi64_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 6583;
pub const XED_IFORM_VPMOVSXDQ_XMMi64_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 6584;
pub const XED_IFORM_VPMOVSXDQ_YMMi64_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 6585;
pub const XED_IFORM_VPMOVSXDQ_YMMi64_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 6586;
pub const XED_IFORM_VPMOVSXDQ_YMMqq_MEMdq: xed_iform_enum_t = 6587;
pub const XED_IFORM_VPMOVSXDQ_YMMqq_XMMdq: xed_iform_enum_t = 6588;
pub const XED_IFORM_VPMOVSXDQ_ZMMi64_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 6589;
pub const XED_IFORM_VPMOVSXDQ_ZMMi64_MASKmskw_YMMi32_AVX512: xed_iform_enum_t = 6590;
pub const XED_IFORM_VPMOVSXWD_XMMdq_MEMq: xed_iform_enum_t = 6591;
pub const XED_IFORM_VPMOVSXWD_XMMdq_XMMq: xed_iform_enum_t = 6592;
pub const XED_IFORM_VPMOVSXWD_XMMi32_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6593;
pub const XED_IFORM_VPMOVSXWD_XMMi32_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6594;
pub const XED_IFORM_VPMOVSXWD_YMMi32_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6595;
pub const XED_IFORM_VPMOVSXWD_YMMi32_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6596;
pub const XED_IFORM_VPMOVSXWD_YMMqq_MEMdq: xed_iform_enum_t = 6597;
pub const XED_IFORM_VPMOVSXWD_YMMqq_XMMdq: xed_iform_enum_t = 6598;
pub const XED_IFORM_VPMOVSXWD_ZMMi32_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6599;
pub const XED_IFORM_VPMOVSXWD_ZMMi32_MASKmskw_YMMi16_AVX512: xed_iform_enum_t = 6600;
pub const XED_IFORM_VPMOVSXWQ_XMMdq_MEMd: xed_iform_enum_t = 6601;
pub const XED_IFORM_VPMOVSXWQ_XMMdq_XMMd: xed_iform_enum_t = 6602;
pub const XED_IFORM_VPMOVSXWQ_XMMi64_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6603;
pub const XED_IFORM_VPMOVSXWQ_XMMi64_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6604;
pub const XED_IFORM_VPMOVSXWQ_YMMi64_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6605;
pub const XED_IFORM_VPMOVSXWQ_YMMi64_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6606;
pub const XED_IFORM_VPMOVSXWQ_YMMqq_MEMq: xed_iform_enum_t = 6607;
pub const XED_IFORM_VPMOVSXWQ_YMMqq_XMMq: xed_iform_enum_t = 6608;
pub const XED_IFORM_VPMOVSXWQ_ZMMi64_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6609;
pub const XED_IFORM_VPMOVSXWQ_ZMMi64_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6610;
pub const XED_IFORM_VPMOVUSDB_MEMu8_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6611;
pub const XED_IFORM_VPMOVUSDB_MEMu8_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6612;
pub const XED_IFORM_VPMOVUSDB_MEMu8_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 6613;
pub const XED_IFORM_VPMOVUSDB_XMMu8_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6614;
pub const XED_IFORM_VPMOVUSDB_XMMu8_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6615;
pub const XED_IFORM_VPMOVUSDB_XMMu8_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 6616;
pub const XED_IFORM_VPMOVUSDW_MEMu16_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6617;
pub const XED_IFORM_VPMOVUSDW_MEMu16_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6618;
pub const XED_IFORM_VPMOVUSDW_MEMu16_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 6619;
pub const XED_IFORM_VPMOVUSDW_XMMu16_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6620;
pub const XED_IFORM_VPMOVUSDW_XMMu16_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6621;
pub const XED_IFORM_VPMOVUSDW_YMMu16_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 6622;
pub const XED_IFORM_VPMOVUSQB_MEMu8_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6623;
pub const XED_IFORM_VPMOVUSQB_MEMu8_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6624;
pub const XED_IFORM_VPMOVUSQB_MEMu8_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6625;
pub const XED_IFORM_VPMOVUSQB_XMMu8_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6626;
pub const XED_IFORM_VPMOVUSQB_XMMu8_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6627;
pub const XED_IFORM_VPMOVUSQB_XMMu8_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6628;
pub const XED_IFORM_VPMOVUSQD_MEMu32_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6629;
pub const XED_IFORM_VPMOVUSQD_MEMu32_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6630;
pub const XED_IFORM_VPMOVUSQD_MEMu32_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6631;
pub const XED_IFORM_VPMOVUSQD_XMMu32_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6632;
pub const XED_IFORM_VPMOVUSQD_XMMu32_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6633;
pub const XED_IFORM_VPMOVUSQD_YMMu32_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6634;
pub const XED_IFORM_VPMOVUSQW_MEMu16_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6635;
pub const XED_IFORM_VPMOVUSQW_MEMu16_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6636;
pub const XED_IFORM_VPMOVUSQW_MEMu16_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6637;
pub const XED_IFORM_VPMOVUSQW_XMMu16_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6638;
pub const XED_IFORM_VPMOVUSQW_XMMu16_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6639;
pub const XED_IFORM_VPMOVUSQW_XMMu16_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6640;
pub const XED_IFORM_VPMOVUSWB_MEMu8_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 6641;
pub const XED_IFORM_VPMOVUSWB_MEMu8_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 6642;
pub const XED_IFORM_VPMOVUSWB_MEMu8_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 6643;
pub const XED_IFORM_VPMOVUSWB_XMMu8_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 6644;
pub const XED_IFORM_VPMOVUSWB_XMMu8_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 6645;
pub const XED_IFORM_VPMOVUSWB_YMMu8_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 6646;
pub const XED_IFORM_VPMOVW2M_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 6647;
pub const XED_IFORM_VPMOVW2M_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 6648;
pub const XED_IFORM_VPMOVW2M_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 6649;
pub const XED_IFORM_VPMOVWB_MEMu8_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 6650;
pub const XED_IFORM_VPMOVWB_MEMu8_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 6651;
pub const XED_IFORM_VPMOVWB_MEMu8_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 6652;
pub const XED_IFORM_VPMOVWB_XMMu8_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 6653;
pub const XED_IFORM_VPMOVWB_XMMu8_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 6654;
pub const XED_IFORM_VPMOVWB_YMMu8_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 6655;
pub const XED_IFORM_VPMOVZXBD_XMMdq_MEMd: xed_iform_enum_t = 6656;
pub const XED_IFORM_VPMOVZXBD_XMMdq_XMMd: xed_iform_enum_t = 6657;
pub const XED_IFORM_VPMOVZXBD_XMMi32_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6658;
pub const XED_IFORM_VPMOVZXBD_XMMi32_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6659;
pub const XED_IFORM_VPMOVZXBD_YMMi32_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6660;
pub const XED_IFORM_VPMOVZXBD_YMMi32_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6661;
pub const XED_IFORM_VPMOVZXBD_YMMqq_MEMq: xed_iform_enum_t = 6662;
pub const XED_IFORM_VPMOVZXBD_YMMqq_XMMq: xed_iform_enum_t = 6663;
pub const XED_IFORM_VPMOVZXBD_ZMMi32_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6664;
pub const XED_IFORM_VPMOVZXBD_ZMMi32_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6665;
pub const XED_IFORM_VPMOVZXBQ_XMMdq_MEMw: xed_iform_enum_t = 6666;
pub const XED_IFORM_VPMOVZXBQ_XMMdq_XMMw: xed_iform_enum_t = 6667;
pub const XED_IFORM_VPMOVZXBQ_XMMi64_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6668;
pub const XED_IFORM_VPMOVZXBQ_XMMi64_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6669;
pub const XED_IFORM_VPMOVZXBQ_YMMi64_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6670;
pub const XED_IFORM_VPMOVZXBQ_YMMi64_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6671;
pub const XED_IFORM_VPMOVZXBQ_YMMqq_MEMd: xed_iform_enum_t = 6672;
pub const XED_IFORM_VPMOVZXBQ_YMMqq_XMMd: xed_iform_enum_t = 6673;
pub const XED_IFORM_VPMOVZXBQ_ZMMi64_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6674;
pub const XED_IFORM_VPMOVZXBQ_ZMMi64_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6675;
pub const XED_IFORM_VPMOVZXBW_XMMdq_MEMq: xed_iform_enum_t = 6676;
pub const XED_IFORM_VPMOVZXBW_XMMdq_XMMq: xed_iform_enum_t = 6677;
pub const XED_IFORM_VPMOVZXBW_XMMi16_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6678;
pub const XED_IFORM_VPMOVZXBW_XMMi16_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6679;
pub const XED_IFORM_VPMOVZXBW_YMMi16_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6680;
pub const XED_IFORM_VPMOVZXBW_YMMi16_MASKmskw_XMMi8_AVX512: xed_iform_enum_t = 6681;
pub const XED_IFORM_VPMOVZXBW_YMMqq_MEMdq: xed_iform_enum_t = 6682;
pub const XED_IFORM_VPMOVZXBW_YMMqq_XMMdq: xed_iform_enum_t = 6683;
pub const XED_IFORM_VPMOVZXBW_ZMMi16_MASKmskw_MEMi8_AVX512: xed_iform_enum_t = 6684;
pub const XED_IFORM_VPMOVZXBW_ZMMi16_MASKmskw_YMMi8_AVX512: xed_iform_enum_t = 6685;
pub const XED_IFORM_VPMOVZXDQ_XMMdq_MEMq: xed_iform_enum_t = 6686;
pub const XED_IFORM_VPMOVZXDQ_XMMdq_XMMq: xed_iform_enum_t = 6687;
pub const XED_IFORM_VPMOVZXDQ_XMMi64_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 6688;
pub const XED_IFORM_VPMOVZXDQ_XMMi64_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 6689;
pub const XED_IFORM_VPMOVZXDQ_YMMi64_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 6690;
pub const XED_IFORM_VPMOVZXDQ_YMMi64_MASKmskw_XMMi32_AVX512: xed_iform_enum_t = 6691;
pub const XED_IFORM_VPMOVZXDQ_YMMqq_MEMdq: xed_iform_enum_t = 6692;
pub const XED_IFORM_VPMOVZXDQ_YMMqq_XMMdq: xed_iform_enum_t = 6693;
pub const XED_IFORM_VPMOVZXDQ_ZMMi64_MASKmskw_MEMi32_AVX512: xed_iform_enum_t = 6694;
pub const XED_IFORM_VPMOVZXDQ_ZMMi64_MASKmskw_YMMi32_AVX512: xed_iform_enum_t = 6695;
pub const XED_IFORM_VPMOVZXWD_XMMdq_MEMq: xed_iform_enum_t = 6696;
pub const XED_IFORM_VPMOVZXWD_XMMdq_XMMq: xed_iform_enum_t = 6697;
pub const XED_IFORM_VPMOVZXWD_XMMi32_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6698;
pub const XED_IFORM_VPMOVZXWD_XMMi32_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6699;
pub const XED_IFORM_VPMOVZXWD_YMMi32_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6700;
pub const XED_IFORM_VPMOVZXWD_YMMi32_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6701;
pub const XED_IFORM_VPMOVZXWD_YMMqq_MEMdq: xed_iform_enum_t = 6702;
pub const XED_IFORM_VPMOVZXWD_YMMqq_XMMdq: xed_iform_enum_t = 6703;
pub const XED_IFORM_VPMOVZXWD_ZMMi32_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6704;
pub const XED_IFORM_VPMOVZXWD_ZMMi32_MASKmskw_YMMi16_AVX512: xed_iform_enum_t = 6705;
pub const XED_IFORM_VPMOVZXWQ_XMMdq_MEMd: xed_iform_enum_t = 6706;
pub const XED_IFORM_VPMOVZXWQ_XMMdq_XMMd: xed_iform_enum_t = 6707;
pub const XED_IFORM_VPMOVZXWQ_XMMi64_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6708;
pub const XED_IFORM_VPMOVZXWQ_XMMi64_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6709;
pub const XED_IFORM_VPMOVZXWQ_YMMi64_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6710;
pub const XED_IFORM_VPMOVZXWQ_YMMi64_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6711;
pub const XED_IFORM_VPMOVZXWQ_YMMqq_MEMq: xed_iform_enum_t = 6712;
pub const XED_IFORM_VPMOVZXWQ_YMMqq_XMMq: xed_iform_enum_t = 6713;
pub const XED_IFORM_VPMOVZXWQ_ZMMi64_MASKmskw_MEMi16_AVX512: xed_iform_enum_t = 6714;
pub const XED_IFORM_VPMOVZXWQ_ZMMi64_MASKmskw_XMMi16_AVX512: xed_iform_enum_t = 6715;
pub const XED_IFORM_VPMULDQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6716;
pub const XED_IFORM_VPMULDQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6717;
pub const XED_IFORM_VPMULDQ_XMMi64_MASKmskw_XMMi32_MEMi32_AVX512: xed_iform_enum_t = 6718;
pub const XED_IFORM_VPMULDQ_XMMi64_MASKmskw_XMMi32_XMMi32_AVX512: xed_iform_enum_t = 6719;
pub const XED_IFORM_VPMULDQ_YMMi64_MASKmskw_YMMi32_MEMi32_AVX512: xed_iform_enum_t = 6720;
pub const XED_IFORM_VPMULDQ_YMMi64_MASKmskw_YMMi32_YMMi32_AVX512: xed_iform_enum_t = 6721;
pub const XED_IFORM_VPMULDQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6722;
pub const XED_IFORM_VPMULDQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6723;
pub const XED_IFORM_VPMULDQ_ZMMi64_MASKmskw_ZMMi32_MEMi32_AVX512: xed_iform_enum_t = 6724;
pub const XED_IFORM_VPMULDQ_ZMMi64_MASKmskw_ZMMi32_ZMMi32_AVX512: xed_iform_enum_t = 6725;
pub const XED_IFORM_VPMULHRSW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6726;
pub const XED_IFORM_VPMULHRSW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6727;
pub const XED_IFORM_VPMULHRSW_XMMi16_MASKmskw_XMMi16_MEMi16_AVX512: xed_iform_enum_t = 6728;
pub const XED_IFORM_VPMULHRSW_XMMi16_MASKmskw_XMMi16_XMMi16_AVX512: xed_iform_enum_t = 6729;
pub const XED_IFORM_VPMULHRSW_YMMi16_MASKmskw_YMMi16_MEMi16_AVX512: xed_iform_enum_t = 6730;
pub const XED_IFORM_VPMULHRSW_YMMi16_MASKmskw_YMMi16_YMMi16_AVX512: xed_iform_enum_t = 6731;
pub const XED_IFORM_VPMULHRSW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6732;
pub const XED_IFORM_VPMULHRSW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6733;
pub const XED_IFORM_VPMULHRSW_ZMMi16_MASKmskw_ZMMi16_MEMi16_AVX512: xed_iform_enum_t = 6734;
pub const XED_IFORM_VPMULHRSW_ZMMi16_MASKmskw_ZMMi16_ZMMi16_AVX512: xed_iform_enum_t = 6735;
pub const XED_IFORM_VPMULHUW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6736;
pub const XED_IFORM_VPMULHUW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6737;
pub const XED_IFORM_VPMULHUW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 6738;
pub const XED_IFORM_VPMULHUW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 6739;
pub const XED_IFORM_VPMULHUW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6740;
pub const XED_IFORM_VPMULHUW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6741;
pub const XED_IFORM_VPMULHUW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 6742;
pub const XED_IFORM_VPMULHUW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 6743;
pub const XED_IFORM_VPMULHUW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 6744;
pub const XED_IFORM_VPMULHUW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 6745;
pub const XED_IFORM_VPMULHW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6746;
pub const XED_IFORM_VPMULHW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6747;
pub const XED_IFORM_VPMULHW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 6748;
pub const XED_IFORM_VPMULHW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 6749;
pub const XED_IFORM_VPMULHW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6750;
pub const XED_IFORM_VPMULHW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6751;
pub const XED_IFORM_VPMULHW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 6752;
pub const XED_IFORM_VPMULHW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 6753;
pub const XED_IFORM_VPMULHW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 6754;
pub const XED_IFORM_VPMULHW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 6755;
pub const XED_IFORM_VPMULLD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6756;
pub const XED_IFORM_VPMULLD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6757;
pub const XED_IFORM_VPMULLD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 6758;
pub const XED_IFORM_VPMULLD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 6759;
pub const XED_IFORM_VPMULLD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6760;
pub const XED_IFORM_VPMULLD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6761;
pub const XED_IFORM_VPMULLD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 6762;
pub const XED_IFORM_VPMULLD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 6763;
pub const XED_IFORM_VPMULLD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 6764;
pub const XED_IFORM_VPMULLD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 6765;
pub const XED_IFORM_VPMULLQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 6766;
pub const XED_IFORM_VPMULLQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 6767;
pub const XED_IFORM_VPMULLQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 6768;
pub const XED_IFORM_VPMULLQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 6769;
pub const XED_IFORM_VPMULLQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 6770;
pub const XED_IFORM_VPMULLQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 6771;
pub const XED_IFORM_VPMULLW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6772;
pub const XED_IFORM_VPMULLW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6773;
pub const XED_IFORM_VPMULLW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 6774;
pub const XED_IFORM_VPMULLW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 6775;
pub const XED_IFORM_VPMULLW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6776;
pub const XED_IFORM_VPMULLW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6777;
pub const XED_IFORM_VPMULLW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 6778;
pub const XED_IFORM_VPMULLW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 6779;
pub const XED_IFORM_VPMULLW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 6780;
pub const XED_IFORM_VPMULLW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 6781;
pub const XED_IFORM_VPMULTISHIFTQB_XMMu8_MASKmskw_XMMu8_MEMu64_AVX512: xed_iform_enum_t = 6782;
pub const XED_IFORM_VPMULTISHIFTQB_XMMu8_MASKmskw_XMMu8_XMMu64_AVX512: xed_iform_enum_t = 6783;
pub const XED_IFORM_VPMULTISHIFTQB_YMMu8_MASKmskw_YMMu8_MEMu64_AVX512: xed_iform_enum_t = 6784;
pub const XED_IFORM_VPMULTISHIFTQB_YMMu8_MASKmskw_YMMu8_YMMu64_AVX512: xed_iform_enum_t = 6785;
pub const XED_IFORM_VPMULTISHIFTQB_ZMMu8_MASKmskw_ZMMu8_MEMu64_AVX512: xed_iform_enum_t = 6786;
pub const XED_IFORM_VPMULTISHIFTQB_ZMMu8_MASKmskw_ZMMu8_ZMMu64_AVX512: xed_iform_enum_t = 6787;
pub const XED_IFORM_VPMULUDQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6788;
pub const XED_IFORM_VPMULUDQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6789;
pub const XED_IFORM_VPMULUDQ_XMMu64_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 6790;
pub const XED_IFORM_VPMULUDQ_XMMu64_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 6791;
pub const XED_IFORM_VPMULUDQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6792;
pub const XED_IFORM_VPMULUDQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6793;
pub const XED_IFORM_VPMULUDQ_YMMu64_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 6794;
pub const XED_IFORM_VPMULUDQ_YMMu64_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 6795;
pub const XED_IFORM_VPMULUDQ_ZMMu64_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 6796;
pub const XED_IFORM_VPMULUDQ_ZMMu64_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 6797;
pub const XED_IFORM_VPOPCNTB_XMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 6798;
pub const XED_IFORM_VPOPCNTB_XMMu8_MASKmskw_XMMu8_AVX512: xed_iform_enum_t = 6799;
pub const XED_IFORM_VPOPCNTB_YMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 6800;
pub const XED_IFORM_VPOPCNTB_YMMu8_MASKmskw_YMMu8_AVX512: xed_iform_enum_t = 6801;
pub const XED_IFORM_VPOPCNTB_ZMMu8_MASKmskw_MEMu8_AVX512: xed_iform_enum_t = 6802;
pub const XED_IFORM_VPOPCNTB_ZMMu8_MASKmskw_ZMMu8_AVX512: xed_iform_enum_t = 6803;
pub const XED_IFORM_VPOPCNTD_XMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 6804;
pub const XED_IFORM_VPOPCNTD_XMMu32_MASKmskw_XMMu32_AVX512: xed_iform_enum_t = 6805;
pub const XED_IFORM_VPOPCNTD_YMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 6806;
pub const XED_IFORM_VPOPCNTD_YMMu32_MASKmskw_YMMu32_AVX512: xed_iform_enum_t = 6807;
pub const XED_IFORM_VPOPCNTD_ZMMu32_MASKmskw_MEMu32_AVX512: xed_iform_enum_t = 6808;
pub const XED_IFORM_VPOPCNTD_ZMMu32_MASKmskw_ZMMu32_AVX512: xed_iform_enum_t = 6809;
pub const XED_IFORM_VPOPCNTQ_XMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 6810;
pub const XED_IFORM_VPOPCNTQ_XMMu64_MASKmskw_XMMu64_AVX512: xed_iform_enum_t = 6811;
pub const XED_IFORM_VPOPCNTQ_YMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 6812;
pub const XED_IFORM_VPOPCNTQ_YMMu64_MASKmskw_YMMu64_AVX512: xed_iform_enum_t = 6813;
pub const XED_IFORM_VPOPCNTQ_ZMMu64_MASKmskw_MEMu64_AVX512: xed_iform_enum_t = 6814;
pub const XED_IFORM_VPOPCNTQ_ZMMu64_MASKmskw_ZMMu64_AVX512: xed_iform_enum_t = 6815;
pub const XED_IFORM_VPOPCNTW_XMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 6816;
pub const XED_IFORM_VPOPCNTW_XMMu16_MASKmskw_XMMu16_AVX512: xed_iform_enum_t = 6817;
pub const XED_IFORM_VPOPCNTW_YMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 6818;
pub const XED_IFORM_VPOPCNTW_YMMu16_MASKmskw_YMMu16_AVX512: xed_iform_enum_t = 6819;
pub const XED_IFORM_VPOPCNTW_ZMMu16_MASKmskw_MEMu16_AVX512: xed_iform_enum_t = 6820;
pub const XED_IFORM_VPOPCNTW_ZMMu16_MASKmskw_ZMMu16_AVX512: xed_iform_enum_t = 6821;
pub const XED_IFORM_VPOR_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6822;
pub const XED_IFORM_VPOR_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6823;
pub const XED_IFORM_VPOR_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6824;
pub const XED_IFORM_VPOR_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6825;
pub const XED_IFORM_VPORD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 6826;
pub const XED_IFORM_VPORD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 6827;
pub const XED_IFORM_VPORD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 6828;
pub const XED_IFORM_VPORD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 6829;
pub const XED_IFORM_VPORD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 6830;
pub const XED_IFORM_VPORD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 6831;
pub const XED_IFORM_VPORQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 6832;
pub const XED_IFORM_VPORQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 6833;
pub const XED_IFORM_VPORQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 6834;
pub const XED_IFORM_VPORQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 6835;
pub const XED_IFORM_VPORQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 6836;
pub const XED_IFORM_VPORQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 6837;
pub const XED_IFORM_VPPERM_XMMdq_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6838;
pub const XED_IFORM_VPPERM_XMMdq_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6839;
pub const XED_IFORM_VPPERM_XMMdq_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6840;
pub const XED_IFORM_VPROLD_XMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6841;
pub const XED_IFORM_VPROLD_XMMu32_MASKmskw_XMMu32_IMM8_AVX512: xed_iform_enum_t = 6842;
pub const XED_IFORM_VPROLD_YMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6843;
pub const XED_IFORM_VPROLD_YMMu32_MASKmskw_YMMu32_IMM8_AVX512: xed_iform_enum_t = 6844;
pub const XED_IFORM_VPROLD_ZMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6845;
pub const XED_IFORM_VPROLD_ZMMu32_MASKmskw_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 6846;
pub const XED_IFORM_VPROLQ_XMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6847;
pub const XED_IFORM_VPROLQ_XMMu64_MASKmskw_XMMu64_IMM8_AVX512: xed_iform_enum_t = 6848;
pub const XED_IFORM_VPROLQ_YMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6849;
pub const XED_IFORM_VPROLQ_YMMu64_MASKmskw_YMMu64_IMM8_AVX512: xed_iform_enum_t = 6850;
pub const XED_IFORM_VPROLQ_ZMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6851;
pub const XED_IFORM_VPROLQ_ZMMu64_MASKmskw_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 6852;
pub const XED_IFORM_VPROLVD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 6853;
pub const XED_IFORM_VPROLVD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 6854;
pub const XED_IFORM_VPROLVD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 6855;
pub const XED_IFORM_VPROLVD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 6856;
pub const XED_IFORM_VPROLVD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 6857;
pub const XED_IFORM_VPROLVD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 6858;
pub const XED_IFORM_VPROLVQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 6859;
pub const XED_IFORM_VPROLVQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 6860;
pub const XED_IFORM_VPROLVQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 6861;
pub const XED_IFORM_VPROLVQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 6862;
pub const XED_IFORM_VPROLVQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 6863;
pub const XED_IFORM_VPROLVQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 6864;
pub const XED_IFORM_VPRORD_XMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6865;
pub const XED_IFORM_VPRORD_XMMu32_MASKmskw_XMMu32_IMM8_AVX512: xed_iform_enum_t = 6866;
pub const XED_IFORM_VPRORD_YMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6867;
pub const XED_IFORM_VPRORD_YMMu32_MASKmskw_YMMu32_IMM8_AVX512: xed_iform_enum_t = 6868;
pub const XED_IFORM_VPRORD_ZMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6869;
pub const XED_IFORM_VPRORD_ZMMu32_MASKmskw_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 6870;
pub const XED_IFORM_VPRORQ_XMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6871;
pub const XED_IFORM_VPRORQ_XMMu64_MASKmskw_XMMu64_IMM8_AVX512: xed_iform_enum_t = 6872;
pub const XED_IFORM_VPRORQ_YMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6873;
pub const XED_IFORM_VPRORQ_YMMu64_MASKmskw_YMMu64_IMM8_AVX512: xed_iform_enum_t = 6874;
pub const XED_IFORM_VPRORQ_ZMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6875;
pub const XED_IFORM_VPRORQ_ZMMu64_MASKmskw_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 6876;
pub const XED_IFORM_VPRORVD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 6877;
pub const XED_IFORM_VPRORVD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 6878;
pub const XED_IFORM_VPRORVD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 6879;
pub const XED_IFORM_VPRORVD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 6880;
pub const XED_IFORM_VPRORVD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 6881;
pub const XED_IFORM_VPRORVD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 6882;
pub const XED_IFORM_VPRORVQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 6883;
pub const XED_IFORM_VPRORVQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 6884;
pub const XED_IFORM_VPRORVQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 6885;
pub const XED_IFORM_VPRORVQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 6886;
pub const XED_IFORM_VPRORVQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 6887;
pub const XED_IFORM_VPRORVQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 6888;
pub const XED_IFORM_VPROTB_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 6889;
pub const XED_IFORM_VPROTB_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6890;
pub const XED_IFORM_VPROTB_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 6891;
pub const XED_IFORM_VPROTB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6892;
pub const XED_IFORM_VPROTB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6893;
pub const XED_IFORM_VPROTD_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 6894;
pub const XED_IFORM_VPROTD_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6895;
pub const XED_IFORM_VPROTD_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 6896;
pub const XED_IFORM_VPROTD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6897;
pub const XED_IFORM_VPROTD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6898;
pub const XED_IFORM_VPROTQ_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 6899;
pub const XED_IFORM_VPROTQ_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6900;
pub const XED_IFORM_VPROTQ_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 6901;
pub const XED_IFORM_VPROTQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6902;
pub const XED_IFORM_VPROTQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6903;
pub const XED_IFORM_VPROTW_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 6904;
pub const XED_IFORM_VPROTW_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6905;
pub const XED_IFORM_VPROTW_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 6906;
pub const XED_IFORM_VPROTW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6907;
pub const XED_IFORM_VPROTW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6908;
pub const XED_IFORM_VPSADBW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6909;
pub const XED_IFORM_VPSADBW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6910;
pub const XED_IFORM_VPSADBW_XMMu16_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 6911;
pub const XED_IFORM_VPSADBW_XMMu16_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 6912;
pub const XED_IFORM_VPSADBW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 6913;
pub const XED_IFORM_VPSADBW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 6914;
pub const XED_IFORM_VPSADBW_YMMu16_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 6915;
pub const XED_IFORM_VPSADBW_YMMu16_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 6916;
pub const XED_IFORM_VPSADBW_ZMMu16_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 6917;
pub const XED_IFORM_VPSADBW_ZMMu16_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 6918;
pub const XED_IFORM_VPSCATTERDD_MEMu32_MASKmskw_XMMu32_AVX512_VL128: xed_iform_enum_t = 6919;
pub const XED_IFORM_VPSCATTERDD_MEMu32_MASKmskw_YMMu32_AVX512_VL256: xed_iform_enum_t = 6920;
pub const XED_IFORM_VPSCATTERDD_MEMu32_MASKmskw_ZMMu32_AVX512_VL512: xed_iform_enum_t = 6921;
pub const XED_IFORM_VPSCATTERDQ_MEMu64_MASKmskw_XMMu64_AVX512_VL128: xed_iform_enum_t = 6922;
pub const XED_IFORM_VPSCATTERDQ_MEMu64_MASKmskw_YMMu64_AVX512_VL256: xed_iform_enum_t = 6923;
pub const XED_IFORM_VPSCATTERDQ_MEMu64_MASKmskw_ZMMu64_AVX512_VL512: xed_iform_enum_t = 6924;
pub const XED_IFORM_VPSCATTERQD_MEMu32_MASKmskw_XMMu32_AVX512_VL128: xed_iform_enum_t = 6925;
pub const XED_IFORM_VPSCATTERQD_MEMu32_MASKmskw_XMMu32_AVX512_VL256: xed_iform_enum_t = 6926;
pub const XED_IFORM_VPSCATTERQD_MEMu32_MASKmskw_YMMu32_AVX512_VL512: xed_iform_enum_t = 6927;
pub const XED_IFORM_VPSCATTERQQ_MEMu64_MASKmskw_XMMu64_AVX512_VL128: xed_iform_enum_t = 6928;
pub const XED_IFORM_VPSCATTERQQ_MEMu64_MASKmskw_YMMu64_AVX512_VL256: xed_iform_enum_t = 6929;
pub const XED_IFORM_VPSCATTERQQ_MEMu64_MASKmskw_ZMMu64_AVX512_VL512: xed_iform_enum_t = 6930;
pub const XED_IFORM_VPSHAB_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6931;
pub const XED_IFORM_VPSHAB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6932;
pub const XED_IFORM_VPSHAB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6933;
pub const XED_IFORM_VPSHAD_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6934;
pub const XED_IFORM_VPSHAD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6935;
pub const XED_IFORM_VPSHAD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6936;
pub const XED_IFORM_VPSHAQ_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6937;
pub const XED_IFORM_VPSHAQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6938;
pub const XED_IFORM_VPSHAQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6939;
pub const XED_IFORM_VPSHAW_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6940;
pub const XED_IFORM_VPSHAW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6941;
pub const XED_IFORM_VPSHAW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6942;
pub const XED_IFORM_VPSHLB_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6943;
pub const XED_IFORM_VPSHLB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6944;
pub const XED_IFORM_VPSHLB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6945;
pub const XED_IFORM_VPSHLD_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6946;
pub const XED_IFORM_VPSHLD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6947;
pub const XED_IFORM_VPSHLD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6948;
pub const XED_IFORM_VPSHLDD_XMMu32_MASKmskw_XMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6949;
pub const XED_IFORM_VPSHLDD_XMMu32_MASKmskw_XMMu32_XMMu32_IMM8_AVX512: xed_iform_enum_t = 6950;
pub const XED_IFORM_VPSHLDD_YMMu32_MASKmskw_YMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6951;
pub const XED_IFORM_VPSHLDD_YMMu32_MASKmskw_YMMu32_YMMu32_IMM8_AVX512: xed_iform_enum_t = 6952;
pub const XED_IFORM_VPSHLDD_ZMMu32_MASKmskw_ZMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6953;
pub const XED_IFORM_VPSHLDD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 6954;
pub const XED_IFORM_VPSHLDQ_XMMu64_MASKmskw_XMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6955;
pub const XED_IFORM_VPSHLDQ_XMMu64_MASKmskw_XMMu64_XMMu64_IMM8_AVX512: xed_iform_enum_t = 6956;
pub const XED_IFORM_VPSHLDQ_YMMu64_MASKmskw_YMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6957;
pub const XED_IFORM_VPSHLDQ_YMMu64_MASKmskw_YMMu64_YMMu64_IMM8_AVX512: xed_iform_enum_t = 6958;
pub const XED_IFORM_VPSHLDQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6959;
pub const XED_IFORM_VPSHLDQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 6960;
pub const XED_IFORM_VPSHLDVD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 6961;
pub const XED_IFORM_VPSHLDVD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 6962;
pub const XED_IFORM_VPSHLDVD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 6963;
pub const XED_IFORM_VPSHLDVD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 6964;
pub const XED_IFORM_VPSHLDVD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 6965;
pub const XED_IFORM_VPSHLDVD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 6966;
pub const XED_IFORM_VPSHLDVQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 6967;
pub const XED_IFORM_VPSHLDVQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 6968;
pub const XED_IFORM_VPSHLDVQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 6969;
pub const XED_IFORM_VPSHLDVQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 6970;
pub const XED_IFORM_VPSHLDVQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 6971;
pub const XED_IFORM_VPSHLDVQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 6972;
pub const XED_IFORM_VPSHLDVW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 6973;
pub const XED_IFORM_VPSHLDVW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 6974;
pub const XED_IFORM_VPSHLDVW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 6975;
pub const XED_IFORM_VPSHLDVW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 6976;
pub const XED_IFORM_VPSHLDVW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 6977;
pub const XED_IFORM_VPSHLDVW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 6978;
pub const XED_IFORM_VPSHLDW_XMMu16_MASKmskw_XMMu16_MEMu16_IMM8_AVX512: xed_iform_enum_t = 6979;
pub const XED_IFORM_VPSHLDW_XMMu16_MASKmskw_XMMu16_XMMu16_IMM8_AVX512: xed_iform_enum_t = 6980;
pub const XED_IFORM_VPSHLDW_YMMu16_MASKmskw_YMMu16_MEMu16_IMM8_AVX512: xed_iform_enum_t = 6981;
pub const XED_IFORM_VPSHLDW_YMMu16_MASKmskw_YMMu16_YMMu16_IMM8_AVX512: xed_iform_enum_t = 6982;
pub const XED_IFORM_VPSHLDW_ZMMu16_MASKmskw_ZMMu16_MEMu16_IMM8_AVX512: xed_iform_enum_t = 6983;
pub const XED_IFORM_VPSHLDW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_IMM8_AVX512: xed_iform_enum_t = 6984;
pub const XED_IFORM_VPSHLQ_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6985;
pub const XED_IFORM_VPSHLQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6986;
pub const XED_IFORM_VPSHLQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6987;
pub const XED_IFORM_VPSHLW_XMMdq_MEMdq_XMMdq: xed_iform_enum_t = 6988;
pub const XED_IFORM_VPSHLW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 6989;
pub const XED_IFORM_VPSHLW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 6990;
pub const XED_IFORM_VPSHRDD_XMMu32_MASKmskw_XMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6991;
pub const XED_IFORM_VPSHRDD_XMMu32_MASKmskw_XMMu32_XMMu32_IMM8_AVX512: xed_iform_enum_t = 6992;
pub const XED_IFORM_VPSHRDD_YMMu32_MASKmskw_YMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6993;
pub const XED_IFORM_VPSHRDD_YMMu32_MASKmskw_YMMu32_YMMu32_IMM8_AVX512: xed_iform_enum_t = 6994;
pub const XED_IFORM_VPSHRDD_ZMMu32_MASKmskw_ZMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 6995;
pub const XED_IFORM_VPSHRDD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 6996;
pub const XED_IFORM_VPSHRDQ_XMMu64_MASKmskw_XMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6997;
pub const XED_IFORM_VPSHRDQ_XMMu64_MASKmskw_XMMu64_XMMu64_IMM8_AVX512: xed_iform_enum_t = 6998;
pub const XED_IFORM_VPSHRDQ_YMMu64_MASKmskw_YMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 6999;
pub const XED_IFORM_VPSHRDQ_YMMu64_MASKmskw_YMMu64_YMMu64_IMM8_AVX512: xed_iform_enum_t = 7000;
pub const XED_IFORM_VPSHRDQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7001;
pub const XED_IFORM_VPSHRDQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 7002;
pub const XED_IFORM_VPSHRDVD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7003;
pub const XED_IFORM_VPSHRDVD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7004;
pub const XED_IFORM_VPSHRDVD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7005;
pub const XED_IFORM_VPSHRDVD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 7006;
pub const XED_IFORM_VPSHRDVD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7007;
pub const XED_IFORM_VPSHRDVD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 7008;
pub const XED_IFORM_VPSHRDVQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7009;
pub const XED_IFORM_VPSHRDVQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7010;
pub const XED_IFORM_VPSHRDVQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7011;
pub const XED_IFORM_VPSHRDVQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 7012;
pub const XED_IFORM_VPSHRDVQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7013;
pub const XED_IFORM_VPSHRDVQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 7014;
pub const XED_IFORM_VPSHRDVW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7015;
pub const XED_IFORM_VPSHRDVW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7016;
pub const XED_IFORM_VPSHRDVW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7017;
pub const XED_IFORM_VPSHRDVW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 7018;
pub const XED_IFORM_VPSHRDVW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7019;
pub const XED_IFORM_VPSHRDVW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 7020;
pub const XED_IFORM_VPSHRDW_XMMu16_MASKmskw_XMMu16_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7021;
pub const XED_IFORM_VPSHRDW_XMMu16_MASKmskw_XMMu16_XMMu16_IMM8_AVX512: xed_iform_enum_t = 7022;
pub const XED_IFORM_VPSHRDW_YMMu16_MASKmskw_YMMu16_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7023;
pub const XED_IFORM_VPSHRDW_YMMu16_MASKmskw_YMMu16_YMMu16_IMM8_AVX512: xed_iform_enum_t = 7024;
pub const XED_IFORM_VPSHRDW_ZMMu16_MASKmskw_ZMMu16_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7025;
pub const XED_IFORM_VPSHRDW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_IMM8_AVX512: xed_iform_enum_t = 7026;
pub const XED_IFORM_VPSHUFB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7027;
pub const XED_IFORM_VPSHUFB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7028;
pub const XED_IFORM_VPSHUFB_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 7029;
pub const XED_IFORM_VPSHUFB_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 7030;
pub const XED_IFORM_VPSHUFB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7031;
pub const XED_IFORM_VPSHUFB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7032;
pub const XED_IFORM_VPSHUFB_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 7033;
pub const XED_IFORM_VPSHUFB_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 7034;
pub const XED_IFORM_VPSHUFB_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 7035;
pub const XED_IFORM_VPSHUFB_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 7036;
pub const XED_IFORM_VPSHUFBITQMB_MASKmskw_MASKmskw_XMMu64_MEMu8_AVX512: xed_iform_enum_t = 7037;
pub const XED_IFORM_VPSHUFBITQMB_MASKmskw_MASKmskw_XMMu64_XMMu8_AVX512: xed_iform_enum_t = 7038;
pub const XED_IFORM_VPSHUFBITQMB_MASKmskw_MASKmskw_YMMu64_MEMu8_AVX512: xed_iform_enum_t = 7039;
pub const XED_IFORM_VPSHUFBITQMB_MASKmskw_MASKmskw_YMMu64_YMMu8_AVX512: xed_iform_enum_t = 7040;
pub const XED_IFORM_VPSHUFBITQMB_MASKmskw_MASKmskw_ZMMu64_MEMu8_AVX512: xed_iform_enum_t = 7041;
pub const XED_IFORM_VPSHUFBITQMB_MASKmskw_MASKmskw_ZMMu64_ZMMu8_AVX512: xed_iform_enum_t = 7042;
pub const XED_IFORM_VPSHUFD_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 7043;
pub const XED_IFORM_VPSHUFD_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7044;
pub const XED_IFORM_VPSHUFD_XMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7045;
pub const XED_IFORM_VPSHUFD_XMMu32_MASKmskw_XMMu32_IMM8_AVX512: xed_iform_enum_t = 7046;
pub const XED_IFORM_VPSHUFD_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 7047;
pub const XED_IFORM_VPSHUFD_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7048;
pub const XED_IFORM_VPSHUFD_YMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7049;
pub const XED_IFORM_VPSHUFD_YMMu32_MASKmskw_YMMu32_IMM8_AVX512: xed_iform_enum_t = 7050;
pub const XED_IFORM_VPSHUFD_ZMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7051;
pub const XED_IFORM_VPSHUFD_ZMMu32_MASKmskw_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 7052;
pub const XED_IFORM_VPSHUFHW_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 7053;
pub const XED_IFORM_VPSHUFHW_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7054;
pub const XED_IFORM_VPSHUFHW_XMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7055;
pub const XED_IFORM_VPSHUFHW_XMMu16_MASKmskw_XMMu16_IMM8_AVX512: xed_iform_enum_t = 7056;
pub const XED_IFORM_VPSHUFHW_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 7057;
pub const XED_IFORM_VPSHUFHW_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7058;
pub const XED_IFORM_VPSHUFHW_YMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7059;
pub const XED_IFORM_VPSHUFHW_YMMu16_MASKmskw_YMMu16_IMM8_AVX512: xed_iform_enum_t = 7060;
pub const XED_IFORM_VPSHUFHW_ZMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7061;
pub const XED_IFORM_VPSHUFHW_ZMMu16_MASKmskw_ZMMu16_IMM8_AVX512: xed_iform_enum_t = 7062;
pub const XED_IFORM_VPSHUFLW_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 7063;
pub const XED_IFORM_VPSHUFLW_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7064;
pub const XED_IFORM_VPSHUFLW_XMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7065;
pub const XED_IFORM_VPSHUFLW_XMMu16_MASKmskw_XMMu16_IMM8_AVX512: xed_iform_enum_t = 7066;
pub const XED_IFORM_VPSHUFLW_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 7067;
pub const XED_IFORM_VPSHUFLW_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7068;
pub const XED_IFORM_VPSHUFLW_YMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7069;
pub const XED_IFORM_VPSHUFLW_YMMu16_MASKmskw_YMMu16_IMM8_AVX512: xed_iform_enum_t = 7070;
pub const XED_IFORM_VPSHUFLW_ZMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7071;
pub const XED_IFORM_VPSHUFLW_ZMMu16_MASKmskw_ZMMu16_IMM8_AVX512: xed_iform_enum_t = 7072;
pub const XED_IFORM_VPSIGNB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7073;
pub const XED_IFORM_VPSIGNB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7074;
pub const XED_IFORM_VPSIGNB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7075;
pub const XED_IFORM_VPSIGNB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7076;
pub const XED_IFORM_VPSIGND_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7077;
pub const XED_IFORM_VPSIGND_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7078;
pub const XED_IFORM_VPSIGND_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7079;
pub const XED_IFORM_VPSIGND_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7080;
pub const XED_IFORM_VPSIGNW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7081;
pub const XED_IFORM_VPSIGNW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7082;
pub const XED_IFORM_VPSIGNW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7083;
pub const XED_IFORM_VPSIGNW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7084;
pub const XED_IFORM_VPSLLD_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7085;
pub const XED_IFORM_VPSLLD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7086;
pub const XED_IFORM_VPSLLD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7087;
pub const XED_IFORM_VPSLLD_XMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7088;
pub const XED_IFORM_VPSLLD_XMMu32_MASKmskw_XMMu32_IMM8_AVX512: xed_iform_enum_t = 7089;
pub const XED_IFORM_VPSLLD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7090;
pub const XED_IFORM_VPSLLD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7091;
pub const XED_IFORM_VPSLLD_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7092;
pub const XED_IFORM_VPSLLD_YMMqq_YMMqq_MEMdq: xed_iform_enum_t = 7093;
pub const XED_IFORM_VPSLLD_YMMqq_YMMqq_XMMq: xed_iform_enum_t = 7094;
pub const XED_IFORM_VPSLLD_YMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7095;
pub const XED_IFORM_VPSLLD_YMMu32_MASKmskw_YMMu32_IMM8_AVX512: xed_iform_enum_t = 7096;
pub const XED_IFORM_VPSLLD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7097;
pub const XED_IFORM_VPSLLD_YMMu32_MASKmskw_YMMu32_XMMu32_AVX512: xed_iform_enum_t = 7098;
pub const XED_IFORM_VPSLLD_ZMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7099;
pub const XED_IFORM_VPSLLD_ZMMu32_MASKmskw_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 7100;
pub const XED_IFORM_VPSLLD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7101;
pub const XED_IFORM_VPSLLD_ZMMu32_MASKmskw_ZMMu32_XMMu32_AVX512: xed_iform_enum_t = 7102;
pub const XED_IFORM_VPSLLDQ_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7103;
pub const XED_IFORM_VPSLLDQ_XMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 7104;
pub const XED_IFORM_VPSLLDQ_XMMu8_XMMu8_IMM8_AVX512: xed_iform_enum_t = 7105;
pub const XED_IFORM_VPSLLDQ_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7106;
pub const XED_IFORM_VPSLLDQ_YMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 7107;
pub const XED_IFORM_VPSLLDQ_YMMu8_YMMu8_IMM8_AVX512: xed_iform_enum_t = 7108;
pub const XED_IFORM_VPSLLDQ_ZMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 7109;
pub const XED_IFORM_VPSLLDQ_ZMMu8_ZMMu8_IMM8_AVX512: xed_iform_enum_t = 7110;
pub const XED_IFORM_VPSLLQ_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7111;
pub const XED_IFORM_VPSLLQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7112;
pub const XED_IFORM_VPSLLQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7113;
pub const XED_IFORM_VPSLLQ_XMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7114;
pub const XED_IFORM_VPSLLQ_XMMu64_MASKmskw_XMMu64_IMM8_AVX512: xed_iform_enum_t = 7115;
pub const XED_IFORM_VPSLLQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7116;
pub const XED_IFORM_VPSLLQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7117;
pub const XED_IFORM_VPSLLQ_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7118;
pub const XED_IFORM_VPSLLQ_YMMqq_YMMqq_MEMdq: xed_iform_enum_t = 7119;
pub const XED_IFORM_VPSLLQ_YMMqq_YMMqq_XMMq: xed_iform_enum_t = 7120;
pub const XED_IFORM_VPSLLQ_YMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7121;
pub const XED_IFORM_VPSLLQ_YMMu64_MASKmskw_YMMu64_IMM8_AVX512: xed_iform_enum_t = 7122;
pub const XED_IFORM_VPSLLQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7123;
pub const XED_IFORM_VPSLLQ_YMMu64_MASKmskw_YMMu64_XMMu64_AVX512: xed_iform_enum_t = 7124;
pub const XED_IFORM_VPSLLQ_ZMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7125;
pub const XED_IFORM_VPSLLQ_ZMMu64_MASKmskw_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 7126;
pub const XED_IFORM_VPSLLQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7127;
pub const XED_IFORM_VPSLLQ_ZMMu64_MASKmskw_ZMMu64_XMMu64_AVX512: xed_iform_enum_t = 7128;
pub const XED_IFORM_VPSLLVD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7129;
pub const XED_IFORM_VPSLLVD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7130;
pub const XED_IFORM_VPSLLVD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7131;
pub const XED_IFORM_VPSLLVD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7132;
pub const XED_IFORM_VPSLLVD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7133;
pub const XED_IFORM_VPSLLVD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7134;
pub const XED_IFORM_VPSLLVD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7135;
pub const XED_IFORM_VPSLLVD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 7136;
pub const XED_IFORM_VPSLLVD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7137;
pub const XED_IFORM_VPSLLVD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 7138;
pub const XED_IFORM_VPSLLVQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7139;
pub const XED_IFORM_VPSLLVQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7140;
pub const XED_IFORM_VPSLLVQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7141;
pub const XED_IFORM_VPSLLVQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7142;
pub const XED_IFORM_VPSLLVQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7143;
pub const XED_IFORM_VPSLLVQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7144;
pub const XED_IFORM_VPSLLVQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7145;
pub const XED_IFORM_VPSLLVQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 7146;
pub const XED_IFORM_VPSLLVQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7147;
pub const XED_IFORM_VPSLLVQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 7148;
pub const XED_IFORM_VPSLLVW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7149;
pub const XED_IFORM_VPSLLVW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7150;
pub const XED_IFORM_VPSLLVW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7151;
pub const XED_IFORM_VPSLLVW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 7152;
pub const XED_IFORM_VPSLLVW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7153;
pub const XED_IFORM_VPSLLVW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 7154;
pub const XED_IFORM_VPSLLW_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7155;
pub const XED_IFORM_VPSLLW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7156;
pub const XED_IFORM_VPSLLW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7157;
pub const XED_IFORM_VPSLLW_XMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7158;
pub const XED_IFORM_VPSLLW_XMMu16_MASKmskw_XMMu16_IMM8_AVX512: xed_iform_enum_t = 7159;
pub const XED_IFORM_VPSLLW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7160;
pub const XED_IFORM_VPSLLW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7161;
pub const XED_IFORM_VPSLLW_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7162;
pub const XED_IFORM_VPSLLW_YMMqq_YMMqq_MEMdq: xed_iform_enum_t = 7163;
pub const XED_IFORM_VPSLLW_YMMqq_YMMqq_XMMq: xed_iform_enum_t = 7164;
pub const XED_IFORM_VPSLLW_YMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7165;
pub const XED_IFORM_VPSLLW_YMMu16_MASKmskw_YMMu16_IMM8_AVX512: xed_iform_enum_t = 7166;
pub const XED_IFORM_VPSLLW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7167;
pub const XED_IFORM_VPSLLW_YMMu16_MASKmskw_YMMu16_XMMu16_AVX512: xed_iform_enum_t = 7168;
pub const XED_IFORM_VPSLLW_ZMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7169;
pub const XED_IFORM_VPSLLW_ZMMu16_MASKmskw_ZMMu16_IMM8_AVX512: xed_iform_enum_t = 7170;
pub const XED_IFORM_VPSLLW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7171;
pub const XED_IFORM_VPSLLW_ZMMu16_MASKmskw_ZMMu16_XMMu16_AVX512: xed_iform_enum_t = 7172;
pub const XED_IFORM_VPSRAD_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7173;
pub const XED_IFORM_VPSRAD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7174;
pub const XED_IFORM_VPSRAD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7175;
pub const XED_IFORM_VPSRAD_XMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7176;
pub const XED_IFORM_VPSRAD_XMMu32_MASKmskw_XMMu32_IMM8_AVX512: xed_iform_enum_t = 7177;
pub const XED_IFORM_VPSRAD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7178;
pub const XED_IFORM_VPSRAD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7179;
pub const XED_IFORM_VPSRAD_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7180;
pub const XED_IFORM_VPSRAD_YMMqq_YMMqq_MEMdq: xed_iform_enum_t = 7181;
pub const XED_IFORM_VPSRAD_YMMqq_YMMqq_XMMq: xed_iform_enum_t = 7182;
pub const XED_IFORM_VPSRAD_YMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7183;
pub const XED_IFORM_VPSRAD_YMMu32_MASKmskw_YMMu32_IMM8_AVX512: xed_iform_enum_t = 7184;
pub const XED_IFORM_VPSRAD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7185;
pub const XED_IFORM_VPSRAD_YMMu32_MASKmskw_YMMu32_XMMu32_AVX512: xed_iform_enum_t = 7186;
pub const XED_IFORM_VPSRAD_ZMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7187;
pub const XED_IFORM_VPSRAD_ZMMu32_MASKmskw_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 7188;
pub const XED_IFORM_VPSRAD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7189;
pub const XED_IFORM_VPSRAD_ZMMu32_MASKmskw_ZMMu32_XMMu32_AVX512: xed_iform_enum_t = 7190;
pub const XED_IFORM_VPSRAQ_XMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7191;
pub const XED_IFORM_VPSRAQ_XMMu64_MASKmskw_XMMu64_IMM8_AVX512: xed_iform_enum_t = 7192;
pub const XED_IFORM_VPSRAQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7193;
pub const XED_IFORM_VPSRAQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7194;
pub const XED_IFORM_VPSRAQ_YMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7195;
pub const XED_IFORM_VPSRAQ_YMMu64_MASKmskw_YMMu64_IMM8_AVX512: xed_iform_enum_t = 7196;
pub const XED_IFORM_VPSRAQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7197;
pub const XED_IFORM_VPSRAQ_YMMu64_MASKmskw_YMMu64_XMMu64_AVX512: xed_iform_enum_t = 7198;
pub const XED_IFORM_VPSRAQ_ZMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7199;
pub const XED_IFORM_VPSRAQ_ZMMu64_MASKmskw_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 7200;
pub const XED_IFORM_VPSRAQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7201;
pub const XED_IFORM_VPSRAQ_ZMMu64_MASKmskw_ZMMu64_XMMu64_AVX512: xed_iform_enum_t = 7202;
pub const XED_IFORM_VPSRAVD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7203;
pub const XED_IFORM_VPSRAVD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7204;
pub const XED_IFORM_VPSRAVD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7205;
pub const XED_IFORM_VPSRAVD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7206;
pub const XED_IFORM_VPSRAVD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7207;
pub const XED_IFORM_VPSRAVD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7208;
pub const XED_IFORM_VPSRAVD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7209;
pub const XED_IFORM_VPSRAVD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 7210;
pub const XED_IFORM_VPSRAVD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7211;
pub const XED_IFORM_VPSRAVD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 7212;
pub const XED_IFORM_VPSRAVQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7213;
pub const XED_IFORM_VPSRAVQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7214;
pub const XED_IFORM_VPSRAVQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7215;
pub const XED_IFORM_VPSRAVQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 7216;
pub const XED_IFORM_VPSRAVQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7217;
pub const XED_IFORM_VPSRAVQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 7218;
pub const XED_IFORM_VPSRAVW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7219;
pub const XED_IFORM_VPSRAVW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7220;
pub const XED_IFORM_VPSRAVW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7221;
pub const XED_IFORM_VPSRAVW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 7222;
pub const XED_IFORM_VPSRAVW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7223;
pub const XED_IFORM_VPSRAVW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 7224;
pub const XED_IFORM_VPSRAW_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7225;
pub const XED_IFORM_VPSRAW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7226;
pub const XED_IFORM_VPSRAW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7227;
pub const XED_IFORM_VPSRAW_XMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7228;
pub const XED_IFORM_VPSRAW_XMMu16_MASKmskw_XMMu16_IMM8_AVX512: xed_iform_enum_t = 7229;
pub const XED_IFORM_VPSRAW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7230;
pub const XED_IFORM_VPSRAW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7231;
pub const XED_IFORM_VPSRAW_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7232;
pub const XED_IFORM_VPSRAW_YMMqq_YMMqq_MEMdq: xed_iform_enum_t = 7233;
pub const XED_IFORM_VPSRAW_YMMqq_YMMqq_XMMq: xed_iform_enum_t = 7234;
pub const XED_IFORM_VPSRAW_YMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7235;
pub const XED_IFORM_VPSRAW_YMMu16_MASKmskw_YMMu16_IMM8_AVX512: xed_iform_enum_t = 7236;
pub const XED_IFORM_VPSRAW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7237;
pub const XED_IFORM_VPSRAW_YMMu16_MASKmskw_YMMu16_XMMu16_AVX512: xed_iform_enum_t = 7238;
pub const XED_IFORM_VPSRAW_ZMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7239;
pub const XED_IFORM_VPSRAW_ZMMu16_MASKmskw_ZMMu16_IMM8_AVX512: xed_iform_enum_t = 7240;
pub const XED_IFORM_VPSRAW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7241;
pub const XED_IFORM_VPSRAW_ZMMu16_MASKmskw_ZMMu16_XMMu16_AVX512: xed_iform_enum_t = 7242;
pub const XED_IFORM_VPSRLD_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7243;
pub const XED_IFORM_VPSRLD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7244;
pub const XED_IFORM_VPSRLD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7245;
pub const XED_IFORM_VPSRLD_XMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7246;
pub const XED_IFORM_VPSRLD_XMMu32_MASKmskw_XMMu32_IMM8_AVX512: xed_iform_enum_t = 7247;
pub const XED_IFORM_VPSRLD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7248;
pub const XED_IFORM_VPSRLD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7249;
pub const XED_IFORM_VPSRLD_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7250;
pub const XED_IFORM_VPSRLD_YMMqq_YMMqq_MEMdq: xed_iform_enum_t = 7251;
pub const XED_IFORM_VPSRLD_YMMqq_YMMqq_XMMq: xed_iform_enum_t = 7252;
pub const XED_IFORM_VPSRLD_YMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7253;
pub const XED_IFORM_VPSRLD_YMMu32_MASKmskw_YMMu32_IMM8_AVX512: xed_iform_enum_t = 7254;
pub const XED_IFORM_VPSRLD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7255;
pub const XED_IFORM_VPSRLD_YMMu32_MASKmskw_YMMu32_XMMu32_AVX512: xed_iform_enum_t = 7256;
pub const XED_IFORM_VPSRLD_ZMMu32_MASKmskw_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7257;
pub const XED_IFORM_VPSRLD_ZMMu32_MASKmskw_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 7258;
pub const XED_IFORM_VPSRLD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7259;
pub const XED_IFORM_VPSRLD_ZMMu32_MASKmskw_ZMMu32_XMMu32_AVX512: xed_iform_enum_t = 7260;
pub const XED_IFORM_VPSRLDQ_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7261;
pub const XED_IFORM_VPSRLDQ_XMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 7262;
pub const XED_IFORM_VPSRLDQ_XMMu8_XMMu8_IMM8_AVX512: xed_iform_enum_t = 7263;
pub const XED_IFORM_VPSRLDQ_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7264;
pub const XED_IFORM_VPSRLDQ_YMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 7265;
pub const XED_IFORM_VPSRLDQ_YMMu8_YMMu8_IMM8_AVX512: xed_iform_enum_t = 7266;
pub const XED_IFORM_VPSRLDQ_ZMMu8_MEMu8_IMM8_AVX512: xed_iform_enum_t = 7267;
pub const XED_IFORM_VPSRLDQ_ZMMu8_ZMMu8_IMM8_AVX512: xed_iform_enum_t = 7268;
pub const XED_IFORM_VPSRLQ_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7269;
pub const XED_IFORM_VPSRLQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7270;
pub const XED_IFORM_VPSRLQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7271;
pub const XED_IFORM_VPSRLQ_XMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7272;
pub const XED_IFORM_VPSRLQ_XMMu64_MASKmskw_XMMu64_IMM8_AVX512: xed_iform_enum_t = 7273;
pub const XED_IFORM_VPSRLQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7274;
pub const XED_IFORM_VPSRLQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7275;
pub const XED_IFORM_VPSRLQ_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7276;
pub const XED_IFORM_VPSRLQ_YMMqq_YMMqq_MEMdq: xed_iform_enum_t = 7277;
pub const XED_IFORM_VPSRLQ_YMMqq_YMMqq_XMMq: xed_iform_enum_t = 7278;
pub const XED_IFORM_VPSRLQ_YMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7279;
pub const XED_IFORM_VPSRLQ_YMMu64_MASKmskw_YMMu64_IMM8_AVX512: xed_iform_enum_t = 7280;
pub const XED_IFORM_VPSRLQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7281;
pub const XED_IFORM_VPSRLQ_YMMu64_MASKmskw_YMMu64_XMMu64_AVX512: xed_iform_enum_t = 7282;
pub const XED_IFORM_VPSRLQ_ZMMu64_MASKmskw_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7283;
pub const XED_IFORM_VPSRLQ_ZMMu64_MASKmskw_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 7284;
pub const XED_IFORM_VPSRLQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7285;
pub const XED_IFORM_VPSRLQ_ZMMu64_MASKmskw_ZMMu64_XMMu64_AVX512: xed_iform_enum_t = 7286;
pub const XED_IFORM_VPSRLVD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7287;
pub const XED_IFORM_VPSRLVD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7288;
pub const XED_IFORM_VPSRLVD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7289;
pub const XED_IFORM_VPSRLVD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7290;
pub const XED_IFORM_VPSRLVD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7291;
pub const XED_IFORM_VPSRLVD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7292;
pub const XED_IFORM_VPSRLVD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7293;
pub const XED_IFORM_VPSRLVD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 7294;
pub const XED_IFORM_VPSRLVD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7295;
pub const XED_IFORM_VPSRLVD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 7296;
pub const XED_IFORM_VPSRLVQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7297;
pub const XED_IFORM_VPSRLVQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7298;
pub const XED_IFORM_VPSRLVQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7299;
pub const XED_IFORM_VPSRLVQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7300;
pub const XED_IFORM_VPSRLVQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7301;
pub const XED_IFORM_VPSRLVQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7302;
pub const XED_IFORM_VPSRLVQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7303;
pub const XED_IFORM_VPSRLVQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 7304;
pub const XED_IFORM_VPSRLVQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7305;
pub const XED_IFORM_VPSRLVQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 7306;
pub const XED_IFORM_VPSRLVW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7307;
pub const XED_IFORM_VPSRLVW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7308;
pub const XED_IFORM_VPSRLVW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7309;
pub const XED_IFORM_VPSRLVW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 7310;
pub const XED_IFORM_VPSRLVW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7311;
pub const XED_IFORM_VPSRLVW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 7312;
pub const XED_IFORM_VPSRLW_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7313;
pub const XED_IFORM_VPSRLW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7314;
pub const XED_IFORM_VPSRLW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7315;
pub const XED_IFORM_VPSRLW_XMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7316;
pub const XED_IFORM_VPSRLW_XMMu16_MASKmskw_XMMu16_IMM8_AVX512: xed_iform_enum_t = 7317;
pub const XED_IFORM_VPSRLW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7318;
pub const XED_IFORM_VPSRLW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7319;
pub const XED_IFORM_VPSRLW_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7320;
pub const XED_IFORM_VPSRLW_YMMqq_YMMqq_MEMdq: xed_iform_enum_t = 7321;
pub const XED_IFORM_VPSRLW_YMMqq_YMMqq_XMMq: xed_iform_enum_t = 7322;
pub const XED_IFORM_VPSRLW_YMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7323;
pub const XED_IFORM_VPSRLW_YMMu16_MASKmskw_YMMu16_IMM8_AVX512: xed_iform_enum_t = 7324;
pub const XED_IFORM_VPSRLW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7325;
pub const XED_IFORM_VPSRLW_YMMu16_MASKmskw_YMMu16_XMMu16_AVX512: xed_iform_enum_t = 7326;
pub const XED_IFORM_VPSRLW_ZMMu16_MASKmskw_MEMu16_IMM8_AVX512: xed_iform_enum_t = 7327;
pub const XED_IFORM_VPSRLW_ZMMu16_MASKmskw_ZMMu16_IMM8_AVX512: xed_iform_enum_t = 7328;
pub const XED_IFORM_VPSRLW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7329;
pub const XED_IFORM_VPSRLW_ZMMu16_MASKmskw_ZMMu16_XMMu16_AVX512: xed_iform_enum_t = 7330;
pub const XED_IFORM_VPSUBB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7331;
pub const XED_IFORM_VPSUBB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7332;
pub const XED_IFORM_VPSUBB_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 7333;
pub const XED_IFORM_VPSUBB_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 7334;
pub const XED_IFORM_VPSUBB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7335;
pub const XED_IFORM_VPSUBB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7336;
pub const XED_IFORM_VPSUBB_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 7337;
pub const XED_IFORM_VPSUBB_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 7338;
pub const XED_IFORM_VPSUBB_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 7339;
pub const XED_IFORM_VPSUBB_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 7340;
pub const XED_IFORM_VPSUBD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7341;
pub const XED_IFORM_VPSUBD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7342;
pub const XED_IFORM_VPSUBD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7343;
pub const XED_IFORM_VPSUBD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7344;
pub const XED_IFORM_VPSUBD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7345;
pub const XED_IFORM_VPSUBD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7346;
pub const XED_IFORM_VPSUBD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7347;
pub const XED_IFORM_VPSUBD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 7348;
pub const XED_IFORM_VPSUBD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7349;
pub const XED_IFORM_VPSUBD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 7350;
pub const XED_IFORM_VPSUBQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7351;
pub const XED_IFORM_VPSUBQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7352;
pub const XED_IFORM_VPSUBQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7353;
pub const XED_IFORM_VPSUBQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7354;
pub const XED_IFORM_VPSUBQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7355;
pub const XED_IFORM_VPSUBQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7356;
pub const XED_IFORM_VPSUBQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7357;
pub const XED_IFORM_VPSUBQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 7358;
pub const XED_IFORM_VPSUBQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7359;
pub const XED_IFORM_VPSUBQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 7360;
pub const XED_IFORM_VPSUBSB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7361;
pub const XED_IFORM_VPSUBSB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7362;
pub const XED_IFORM_VPSUBSB_XMMi8_MASKmskw_XMMi8_MEMi8_AVX512: xed_iform_enum_t = 7363;
pub const XED_IFORM_VPSUBSB_XMMi8_MASKmskw_XMMi8_XMMi8_AVX512: xed_iform_enum_t = 7364;
pub const XED_IFORM_VPSUBSB_YMMi8_MASKmskw_YMMi8_MEMi8_AVX512: xed_iform_enum_t = 7365;
pub const XED_IFORM_VPSUBSB_YMMi8_MASKmskw_YMMi8_YMMi8_AVX512: xed_iform_enum_t = 7366;
pub const XED_IFORM_VPSUBSB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7367;
pub const XED_IFORM_VPSUBSB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7368;
pub const XED_IFORM_VPSUBSB_ZMMi8_MASKmskw_ZMMi8_MEMi8_AVX512: xed_iform_enum_t = 7369;
pub const XED_IFORM_VPSUBSB_ZMMi8_MASKmskw_ZMMi8_ZMMi8_AVX512: xed_iform_enum_t = 7370;
pub const XED_IFORM_VPSUBSW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7371;
pub const XED_IFORM_VPSUBSW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7372;
pub const XED_IFORM_VPSUBSW_XMMi16_MASKmskw_XMMi16_MEMi16_AVX512: xed_iform_enum_t = 7373;
pub const XED_IFORM_VPSUBSW_XMMi16_MASKmskw_XMMi16_XMMi16_AVX512: xed_iform_enum_t = 7374;
pub const XED_IFORM_VPSUBSW_YMMi16_MASKmskw_YMMi16_MEMi16_AVX512: xed_iform_enum_t = 7375;
pub const XED_IFORM_VPSUBSW_YMMi16_MASKmskw_YMMi16_YMMi16_AVX512: xed_iform_enum_t = 7376;
pub const XED_IFORM_VPSUBSW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7377;
pub const XED_IFORM_VPSUBSW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7378;
pub const XED_IFORM_VPSUBSW_ZMMi16_MASKmskw_ZMMi16_MEMi16_AVX512: xed_iform_enum_t = 7379;
pub const XED_IFORM_VPSUBSW_ZMMi16_MASKmskw_ZMMi16_ZMMi16_AVX512: xed_iform_enum_t = 7380;
pub const XED_IFORM_VPSUBUSB_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7381;
pub const XED_IFORM_VPSUBUSB_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7382;
pub const XED_IFORM_VPSUBUSB_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 7383;
pub const XED_IFORM_VPSUBUSB_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 7384;
pub const XED_IFORM_VPSUBUSB_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7385;
pub const XED_IFORM_VPSUBUSB_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7386;
pub const XED_IFORM_VPSUBUSB_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 7387;
pub const XED_IFORM_VPSUBUSB_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 7388;
pub const XED_IFORM_VPSUBUSB_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 7389;
pub const XED_IFORM_VPSUBUSB_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 7390;
pub const XED_IFORM_VPSUBUSW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7391;
pub const XED_IFORM_VPSUBUSW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7392;
pub const XED_IFORM_VPSUBUSW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7393;
pub const XED_IFORM_VPSUBUSW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7394;
pub const XED_IFORM_VPSUBUSW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7395;
pub const XED_IFORM_VPSUBUSW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7396;
pub const XED_IFORM_VPSUBUSW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7397;
pub const XED_IFORM_VPSUBUSW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 7398;
pub const XED_IFORM_VPSUBUSW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7399;
pub const XED_IFORM_VPSUBUSW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 7400;
pub const XED_IFORM_VPSUBW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7401;
pub const XED_IFORM_VPSUBW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7402;
pub const XED_IFORM_VPSUBW_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7403;
pub const XED_IFORM_VPSUBW_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7404;
pub const XED_IFORM_VPSUBW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7405;
pub const XED_IFORM_VPSUBW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7406;
pub const XED_IFORM_VPSUBW_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7407;
pub const XED_IFORM_VPSUBW_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 7408;
pub const XED_IFORM_VPSUBW_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7409;
pub const XED_IFORM_VPSUBW_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 7410;
pub const XED_IFORM_VPTERNLOGD_XMMu32_MASKmskw_XMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7411;
pub const XED_IFORM_VPTERNLOGD_XMMu32_MASKmskw_XMMu32_XMMu32_IMM8_AVX512: xed_iform_enum_t = 7412;
pub const XED_IFORM_VPTERNLOGD_YMMu32_MASKmskw_YMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7413;
pub const XED_IFORM_VPTERNLOGD_YMMu32_MASKmskw_YMMu32_YMMu32_IMM8_AVX512: xed_iform_enum_t = 7414;
pub const XED_IFORM_VPTERNLOGD_ZMMu32_MASKmskw_ZMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7415;
pub const XED_IFORM_VPTERNLOGD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 7416;
pub const XED_IFORM_VPTERNLOGQ_XMMu64_MASKmskw_XMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7417;
pub const XED_IFORM_VPTERNLOGQ_XMMu64_MASKmskw_XMMu64_XMMu64_IMM8_AVX512: xed_iform_enum_t = 7418;
pub const XED_IFORM_VPTERNLOGQ_YMMu64_MASKmskw_YMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7419;
pub const XED_IFORM_VPTERNLOGQ_YMMu64_MASKmskw_YMMu64_YMMu64_IMM8_AVX512: xed_iform_enum_t = 7420;
pub const XED_IFORM_VPTERNLOGQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7421;
pub const XED_IFORM_VPTERNLOGQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 7422;
pub const XED_IFORM_VPTEST_XMMdq_MEMdq: xed_iform_enum_t = 7423;
pub const XED_IFORM_VPTEST_XMMdq_XMMdq: xed_iform_enum_t = 7424;
pub const XED_IFORM_VPTEST_YMMqq_MEMqq: xed_iform_enum_t = 7425;
pub const XED_IFORM_VPTEST_YMMqq_YMMqq: xed_iform_enum_t = 7426;
pub const XED_IFORM_VPTESTMB_MASKmskw_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 7427;
pub const XED_IFORM_VPTESTMB_MASKmskw_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 7428;
pub const XED_IFORM_VPTESTMB_MASKmskw_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 7429;
pub const XED_IFORM_VPTESTMB_MASKmskw_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 7430;
pub const XED_IFORM_VPTESTMB_MASKmskw_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 7431;
pub const XED_IFORM_VPTESTMB_MASKmskw_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 7432;
pub const XED_IFORM_VPTESTMD_MASKmskw_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7433;
pub const XED_IFORM_VPTESTMD_MASKmskw_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7434;
pub const XED_IFORM_VPTESTMD_MASKmskw_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7435;
pub const XED_IFORM_VPTESTMD_MASKmskw_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 7436;
pub const XED_IFORM_VPTESTMD_MASKmskw_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7437;
pub const XED_IFORM_VPTESTMD_MASKmskw_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 7438;
pub const XED_IFORM_VPTESTMQ_MASKmskw_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7439;
pub const XED_IFORM_VPTESTMQ_MASKmskw_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7440;
pub const XED_IFORM_VPTESTMQ_MASKmskw_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7441;
pub const XED_IFORM_VPTESTMQ_MASKmskw_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 7442;
pub const XED_IFORM_VPTESTMQ_MASKmskw_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7443;
pub const XED_IFORM_VPTESTMQ_MASKmskw_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 7444;
pub const XED_IFORM_VPTESTMW_MASKmskw_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7445;
pub const XED_IFORM_VPTESTMW_MASKmskw_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7446;
pub const XED_IFORM_VPTESTMW_MASKmskw_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7447;
pub const XED_IFORM_VPTESTMW_MASKmskw_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 7448;
pub const XED_IFORM_VPTESTMW_MASKmskw_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7449;
pub const XED_IFORM_VPTESTMW_MASKmskw_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 7450;
pub const XED_IFORM_VPTESTNMB_MASKmskw_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 7451;
pub const XED_IFORM_VPTESTNMB_MASKmskw_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 7452;
pub const XED_IFORM_VPTESTNMB_MASKmskw_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 7453;
pub const XED_IFORM_VPTESTNMB_MASKmskw_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 7454;
pub const XED_IFORM_VPTESTNMB_MASKmskw_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 7455;
pub const XED_IFORM_VPTESTNMB_MASKmskw_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 7456;
pub const XED_IFORM_VPTESTNMD_MASKmskw_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7457;
pub const XED_IFORM_VPTESTNMD_MASKmskw_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7458;
pub const XED_IFORM_VPTESTNMD_MASKmskw_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7459;
pub const XED_IFORM_VPTESTNMD_MASKmskw_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 7460;
pub const XED_IFORM_VPTESTNMD_MASKmskw_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7461;
pub const XED_IFORM_VPTESTNMD_MASKmskw_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 7462;
pub const XED_IFORM_VPTESTNMQ_MASKmskw_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7463;
pub const XED_IFORM_VPTESTNMQ_MASKmskw_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7464;
pub const XED_IFORM_VPTESTNMQ_MASKmskw_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7465;
pub const XED_IFORM_VPTESTNMQ_MASKmskw_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 7466;
pub const XED_IFORM_VPTESTNMQ_MASKmskw_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7467;
pub const XED_IFORM_VPTESTNMQ_MASKmskw_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 7468;
pub const XED_IFORM_VPTESTNMW_MASKmskw_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7469;
pub const XED_IFORM_VPTESTNMW_MASKmskw_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7470;
pub const XED_IFORM_VPTESTNMW_MASKmskw_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7471;
pub const XED_IFORM_VPTESTNMW_MASKmskw_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 7472;
pub const XED_IFORM_VPTESTNMW_MASKmskw_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7473;
pub const XED_IFORM_VPTESTNMW_MASKmskw_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 7474;
pub const XED_IFORM_VPUNPCKHBW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7475;
pub const XED_IFORM_VPUNPCKHBW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7476;
pub const XED_IFORM_VPUNPCKHBW_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 7477;
pub const XED_IFORM_VPUNPCKHBW_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 7478;
pub const XED_IFORM_VPUNPCKHBW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7479;
pub const XED_IFORM_VPUNPCKHBW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7480;
pub const XED_IFORM_VPUNPCKHBW_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 7481;
pub const XED_IFORM_VPUNPCKHBW_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 7482;
pub const XED_IFORM_VPUNPCKHBW_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 7483;
pub const XED_IFORM_VPUNPCKHBW_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 7484;
pub const XED_IFORM_VPUNPCKHDQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7485;
pub const XED_IFORM_VPUNPCKHDQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7486;
pub const XED_IFORM_VPUNPCKHDQ_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7487;
pub const XED_IFORM_VPUNPCKHDQ_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7488;
pub const XED_IFORM_VPUNPCKHDQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7489;
pub const XED_IFORM_VPUNPCKHDQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7490;
pub const XED_IFORM_VPUNPCKHDQ_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7491;
pub const XED_IFORM_VPUNPCKHDQ_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 7492;
pub const XED_IFORM_VPUNPCKHDQ_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7493;
pub const XED_IFORM_VPUNPCKHDQ_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 7494;
pub const XED_IFORM_VPUNPCKHQDQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7495;
pub const XED_IFORM_VPUNPCKHQDQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7496;
pub const XED_IFORM_VPUNPCKHQDQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7497;
pub const XED_IFORM_VPUNPCKHQDQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7498;
pub const XED_IFORM_VPUNPCKHQDQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7499;
pub const XED_IFORM_VPUNPCKHQDQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7500;
pub const XED_IFORM_VPUNPCKHQDQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7501;
pub const XED_IFORM_VPUNPCKHQDQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 7502;
pub const XED_IFORM_VPUNPCKHQDQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7503;
pub const XED_IFORM_VPUNPCKHQDQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 7504;
pub const XED_IFORM_VPUNPCKHWD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7505;
pub const XED_IFORM_VPUNPCKHWD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7506;
pub const XED_IFORM_VPUNPCKHWD_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7507;
pub const XED_IFORM_VPUNPCKHWD_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7508;
pub const XED_IFORM_VPUNPCKHWD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7509;
pub const XED_IFORM_VPUNPCKHWD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7510;
pub const XED_IFORM_VPUNPCKHWD_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7511;
pub const XED_IFORM_VPUNPCKHWD_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 7512;
pub const XED_IFORM_VPUNPCKHWD_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7513;
pub const XED_IFORM_VPUNPCKHWD_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 7514;
pub const XED_IFORM_VPUNPCKLBW_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7515;
pub const XED_IFORM_VPUNPCKLBW_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7516;
pub const XED_IFORM_VPUNPCKLBW_XMMu8_MASKmskw_XMMu8_MEMu8_AVX512: xed_iform_enum_t = 7517;
pub const XED_IFORM_VPUNPCKLBW_XMMu8_MASKmskw_XMMu8_XMMu8_AVX512: xed_iform_enum_t = 7518;
pub const XED_IFORM_VPUNPCKLBW_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7519;
pub const XED_IFORM_VPUNPCKLBW_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7520;
pub const XED_IFORM_VPUNPCKLBW_YMMu8_MASKmskw_YMMu8_MEMu8_AVX512: xed_iform_enum_t = 7521;
pub const XED_IFORM_VPUNPCKLBW_YMMu8_MASKmskw_YMMu8_YMMu8_AVX512: xed_iform_enum_t = 7522;
pub const XED_IFORM_VPUNPCKLBW_ZMMu8_MASKmskw_ZMMu8_MEMu8_AVX512: xed_iform_enum_t = 7523;
pub const XED_IFORM_VPUNPCKLBW_ZMMu8_MASKmskw_ZMMu8_ZMMu8_AVX512: xed_iform_enum_t = 7524;
pub const XED_IFORM_VPUNPCKLDQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7525;
pub const XED_IFORM_VPUNPCKLDQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7526;
pub const XED_IFORM_VPUNPCKLDQ_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7527;
pub const XED_IFORM_VPUNPCKLDQ_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7528;
pub const XED_IFORM_VPUNPCKLDQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7529;
pub const XED_IFORM_VPUNPCKLDQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7530;
pub const XED_IFORM_VPUNPCKLDQ_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7531;
pub const XED_IFORM_VPUNPCKLDQ_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 7532;
pub const XED_IFORM_VPUNPCKLDQ_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7533;
pub const XED_IFORM_VPUNPCKLDQ_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 7534;
pub const XED_IFORM_VPUNPCKLQDQ_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7535;
pub const XED_IFORM_VPUNPCKLQDQ_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7536;
pub const XED_IFORM_VPUNPCKLQDQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7537;
pub const XED_IFORM_VPUNPCKLQDQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7538;
pub const XED_IFORM_VPUNPCKLQDQ_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7539;
pub const XED_IFORM_VPUNPCKLQDQ_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7540;
pub const XED_IFORM_VPUNPCKLQDQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7541;
pub const XED_IFORM_VPUNPCKLQDQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 7542;
pub const XED_IFORM_VPUNPCKLQDQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7543;
pub const XED_IFORM_VPUNPCKLQDQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 7544;
pub const XED_IFORM_VPUNPCKLWD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7545;
pub const XED_IFORM_VPUNPCKLWD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7546;
pub const XED_IFORM_VPUNPCKLWD_XMMu16_MASKmskw_XMMu16_MEMu16_AVX512: xed_iform_enum_t = 7547;
pub const XED_IFORM_VPUNPCKLWD_XMMu16_MASKmskw_XMMu16_XMMu16_AVX512: xed_iform_enum_t = 7548;
pub const XED_IFORM_VPUNPCKLWD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7549;
pub const XED_IFORM_VPUNPCKLWD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7550;
pub const XED_IFORM_VPUNPCKLWD_YMMu16_MASKmskw_YMMu16_MEMu16_AVX512: xed_iform_enum_t = 7551;
pub const XED_IFORM_VPUNPCKLWD_YMMu16_MASKmskw_YMMu16_YMMu16_AVX512: xed_iform_enum_t = 7552;
pub const XED_IFORM_VPUNPCKLWD_ZMMu16_MASKmskw_ZMMu16_MEMu16_AVX512: xed_iform_enum_t = 7553;
pub const XED_IFORM_VPUNPCKLWD_ZMMu16_MASKmskw_ZMMu16_ZMMu16_AVX512: xed_iform_enum_t = 7554;
pub const XED_IFORM_VPXOR_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7555;
pub const XED_IFORM_VPXOR_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7556;
pub const XED_IFORM_VPXOR_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7557;
pub const XED_IFORM_VPXOR_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7558;
pub const XED_IFORM_VPXORD_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7559;
pub const XED_IFORM_VPXORD_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7560;
pub const XED_IFORM_VPXORD_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7561;
pub const XED_IFORM_VPXORD_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 7562;
pub const XED_IFORM_VPXORD_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7563;
pub const XED_IFORM_VPXORD_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 7564;
pub const XED_IFORM_VPXORQ_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7565;
pub const XED_IFORM_VPXORQ_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7566;
pub const XED_IFORM_VPXORQ_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7567;
pub const XED_IFORM_VPXORQ_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 7568;
pub const XED_IFORM_VPXORQ_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7569;
pub const XED_IFORM_VPXORQ_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 7570;
pub const XED_IFORM_VRANGEPD_XMMf64_MASKmskw_XMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7571;
pub const XED_IFORM_VRANGEPD_XMMf64_MASKmskw_XMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 7572;
pub const XED_IFORM_VRANGEPD_YMMf64_MASKmskw_YMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7573;
pub const XED_IFORM_VRANGEPD_YMMf64_MASKmskw_YMMf64_YMMf64_IMM8_AVX512: xed_iform_enum_t = 7574;
pub const XED_IFORM_VRANGEPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7575;
pub const XED_IFORM_VRANGEPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 7576;
pub const XED_IFORM_VRANGEPS_XMMf32_MASKmskw_XMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7577;
pub const XED_IFORM_VRANGEPS_XMMf32_MASKmskw_XMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 7578;
pub const XED_IFORM_VRANGEPS_YMMf32_MASKmskw_YMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7579;
pub const XED_IFORM_VRANGEPS_YMMf32_MASKmskw_YMMf32_YMMf32_IMM8_AVX512: xed_iform_enum_t = 7580;
pub const XED_IFORM_VRANGEPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7581;
pub const XED_IFORM_VRANGEPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 7582;
pub const XED_IFORM_VRANGESD_XMMf64_MASKmskw_XMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7583;
pub const XED_IFORM_VRANGESD_XMMf64_MASKmskw_XMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 7584;
pub const XED_IFORM_VRANGESS_XMMf32_MASKmskw_XMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7585;
pub const XED_IFORM_VRANGESS_XMMf32_MASKmskw_XMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 7586;
pub const XED_IFORM_VRCP14PD_XMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 7587;
pub const XED_IFORM_VRCP14PD_XMMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 7588;
pub const XED_IFORM_VRCP14PD_YMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 7589;
pub const XED_IFORM_VRCP14PD_YMMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 7590;
pub const XED_IFORM_VRCP14PD_ZMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 7591;
pub const XED_IFORM_VRCP14PD_ZMMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 7592;
pub const XED_IFORM_VRCP14PS_XMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 7593;
pub const XED_IFORM_VRCP14PS_XMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 7594;
pub const XED_IFORM_VRCP14PS_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 7595;
pub const XED_IFORM_VRCP14PS_YMMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 7596;
pub const XED_IFORM_VRCP14PS_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 7597;
pub const XED_IFORM_VRCP14PS_ZMMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 7598;
pub const XED_IFORM_VRCP14SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 7599;
pub const XED_IFORM_VRCP14SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 7600;
pub const XED_IFORM_VRCP14SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 7601;
pub const XED_IFORM_VRCP14SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 7602;
pub const XED_IFORM_VRCP28PD_ZMMf64_MASKmskw_MEMf64_AVX512ER: xed_iform_enum_t = 7603;
pub const XED_IFORM_VRCP28PD_ZMMf64_MASKmskw_ZMMf64_AVX512ER: xed_iform_enum_t = 7604;
pub const XED_IFORM_VRCP28PS_ZMMf32_MASKmskw_MEMf32_AVX512ER: xed_iform_enum_t = 7605;
pub const XED_IFORM_VRCP28PS_ZMMf32_MASKmskw_ZMMf32_AVX512ER: xed_iform_enum_t = 7606;
pub const XED_IFORM_VRCP28SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512ER: xed_iform_enum_t = 7607;
pub const XED_IFORM_VRCP28SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512ER: xed_iform_enum_t = 7608;
pub const XED_IFORM_VRCP28SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512ER: xed_iform_enum_t = 7609;
pub const XED_IFORM_VRCP28SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512ER: xed_iform_enum_t = 7610;
pub const XED_IFORM_VRCPPH_XMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 7611;
pub const XED_IFORM_VRCPPH_XMMf16_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 7612;
pub const XED_IFORM_VRCPPH_YMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 7613;
pub const XED_IFORM_VRCPPH_YMMf16_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 7614;
pub const XED_IFORM_VRCPPH_ZMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 7615;
pub const XED_IFORM_VRCPPH_ZMMf16_MASKmskw_ZMMf16_AVX512: xed_iform_enum_t = 7616;
pub const XED_IFORM_VRCPPS_XMMdq_MEMdq: xed_iform_enum_t = 7617;
pub const XED_IFORM_VRCPPS_XMMdq_XMMdq: xed_iform_enum_t = 7618;
pub const XED_IFORM_VRCPPS_YMMqq_MEMqq: xed_iform_enum_t = 7619;
pub const XED_IFORM_VRCPPS_YMMqq_YMMqq: xed_iform_enum_t = 7620;
pub const XED_IFORM_VRCPSH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 7621;
pub const XED_IFORM_VRCPSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 7622;
pub const XED_IFORM_VRCPSS_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 7623;
pub const XED_IFORM_VRCPSS_XMMdq_XMMdq_XMMd: xed_iform_enum_t = 7624;
pub const XED_IFORM_VREDUCEPD_XMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7625;
pub const XED_IFORM_VREDUCEPD_XMMf64_MASKmskw_XMMf64_IMM8_AVX512: xed_iform_enum_t = 7626;
pub const XED_IFORM_VREDUCEPD_YMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7627;
pub const XED_IFORM_VREDUCEPD_YMMf64_MASKmskw_YMMf64_IMM8_AVX512: xed_iform_enum_t = 7628;
pub const XED_IFORM_VREDUCEPD_ZMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7629;
pub const XED_IFORM_VREDUCEPD_ZMMf64_MASKmskw_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 7630;
pub const XED_IFORM_VREDUCEPH_XMMf16_MASKmskw_MEMf16_IMM8_AVX512: xed_iform_enum_t = 7631;
pub const XED_IFORM_VREDUCEPH_XMMf16_MASKmskw_XMMf16_IMM8_AVX512: xed_iform_enum_t = 7632;
pub const XED_IFORM_VREDUCEPH_YMMf16_MASKmskw_MEMf16_IMM8_AVX512: xed_iform_enum_t = 7633;
pub const XED_IFORM_VREDUCEPH_YMMf16_MASKmskw_YMMf16_IMM8_AVX512: xed_iform_enum_t = 7634;
pub const XED_IFORM_VREDUCEPH_ZMMf16_MASKmskw_MEMf16_IMM8_AVX512: xed_iform_enum_t = 7635;
pub const XED_IFORM_VREDUCEPH_ZMMf16_MASKmskw_ZMMf16_IMM8_AVX512: xed_iform_enum_t = 7636;
pub const XED_IFORM_VREDUCEPS_XMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7637;
pub const XED_IFORM_VREDUCEPS_XMMf32_MASKmskw_XMMf32_IMM8_AVX512: xed_iform_enum_t = 7638;
pub const XED_IFORM_VREDUCEPS_YMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7639;
pub const XED_IFORM_VREDUCEPS_YMMf32_MASKmskw_YMMf32_IMM8_AVX512: xed_iform_enum_t = 7640;
pub const XED_IFORM_VREDUCEPS_ZMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7641;
pub const XED_IFORM_VREDUCEPS_ZMMf32_MASKmskw_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 7642;
pub const XED_IFORM_VREDUCESD_XMMf64_MASKmskw_XMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7643;
pub const XED_IFORM_VREDUCESD_XMMf64_MASKmskw_XMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 7644;
pub const XED_IFORM_VREDUCESH_XMMf16_MASKmskw_XMMf16_MEMf16_IMM8_AVX512: xed_iform_enum_t = 7645;
pub const XED_IFORM_VREDUCESH_XMMf16_MASKmskw_XMMf16_XMMf16_IMM8_AVX512: xed_iform_enum_t = 7646;
pub const XED_IFORM_VREDUCESS_XMMf32_MASKmskw_XMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7647;
pub const XED_IFORM_VREDUCESS_XMMf32_MASKmskw_XMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 7648;
pub const XED_IFORM_VRNDSCALEPD_XMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7649;
pub const XED_IFORM_VRNDSCALEPD_XMMf64_MASKmskw_XMMf64_IMM8_AVX512: xed_iform_enum_t = 7650;
pub const XED_IFORM_VRNDSCALEPD_YMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7651;
pub const XED_IFORM_VRNDSCALEPD_YMMf64_MASKmskw_YMMf64_IMM8_AVX512: xed_iform_enum_t = 7652;
pub const XED_IFORM_VRNDSCALEPD_ZMMf64_MASKmskw_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7653;
pub const XED_IFORM_VRNDSCALEPD_ZMMf64_MASKmskw_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 7654;
pub const XED_IFORM_VRNDSCALEPH_XMMf16_MASKmskw_MEMf16_IMM8_AVX512: xed_iform_enum_t = 7655;
pub const XED_IFORM_VRNDSCALEPH_XMMf16_MASKmskw_XMMf16_IMM8_AVX512: xed_iform_enum_t = 7656;
pub const XED_IFORM_VRNDSCALEPH_YMMf16_MASKmskw_MEMf16_IMM8_AVX512: xed_iform_enum_t = 7657;
pub const XED_IFORM_VRNDSCALEPH_YMMf16_MASKmskw_YMMf16_IMM8_AVX512: xed_iform_enum_t = 7658;
pub const XED_IFORM_VRNDSCALEPH_ZMMf16_MASKmskw_MEMf16_IMM8_AVX512: xed_iform_enum_t = 7659;
pub const XED_IFORM_VRNDSCALEPH_ZMMf16_MASKmskw_ZMMf16_IMM8_AVX512: xed_iform_enum_t = 7660;
pub const XED_IFORM_VRNDSCALEPS_XMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7661;
pub const XED_IFORM_VRNDSCALEPS_XMMf32_MASKmskw_XMMf32_IMM8_AVX512: xed_iform_enum_t = 7662;
pub const XED_IFORM_VRNDSCALEPS_YMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7663;
pub const XED_IFORM_VRNDSCALEPS_YMMf32_MASKmskw_YMMf32_IMM8_AVX512: xed_iform_enum_t = 7664;
pub const XED_IFORM_VRNDSCALEPS_ZMMf32_MASKmskw_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7665;
pub const XED_IFORM_VRNDSCALEPS_ZMMf32_MASKmskw_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 7666;
pub const XED_IFORM_VRNDSCALESD_XMMf64_MASKmskw_XMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7667;
pub const XED_IFORM_VRNDSCALESD_XMMf64_MASKmskw_XMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 7668;
pub const XED_IFORM_VRNDSCALESH_XMMf16_MASKmskw_XMMf16_MEMf16_IMM8_AVX512: xed_iform_enum_t = 7669;
pub const XED_IFORM_VRNDSCALESH_XMMf16_MASKmskw_XMMf16_XMMf16_IMM8_AVX512: xed_iform_enum_t = 7670;
pub const XED_IFORM_VRNDSCALESS_XMMf32_MASKmskw_XMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7671;
pub const XED_IFORM_VRNDSCALESS_XMMf32_MASKmskw_XMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 7672;
pub const XED_IFORM_VROUNDPD_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 7673;
pub const XED_IFORM_VROUNDPD_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7674;
pub const XED_IFORM_VROUNDPD_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 7675;
pub const XED_IFORM_VROUNDPD_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7676;
pub const XED_IFORM_VROUNDPS_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 7677;
pub const XED_IFORM_VROUNDPS_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7678;
pub const XED_IFORM_VROUNDPS_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 7679;
pub const XED_IFORM_VROUNDPS_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7680;
pub const XED_IFORM_VROUNDSD_XMMdq_XMMdq_MEMq_IMMb: xed_iform_enum_t = 7681;
pub const XED_IFORM_VROUNDSD_XMMdq_XMMdq_XMMq_IMMb: xed_iform_enum_t = 7682;
pub const XED_IFORM_VROUNDSS_XMMdq_XMMdq_MEMd_IMMb: xed_iform_enum_t = 7683;
pub const XED_IFORM_VROUNDSS_XMMdq_XMMdq_XMMd_IMMb: xed_iform_enum_t = 7684;
pub const XED_IFORM_VRSQRT14PD_XMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 7685;
pub const XED_IFORM_VRSQRT14PD_XMMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 7686;
pub const XED_IFORM_VRSQRT14PD_YMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 7687;
pub const XED_IFORM_VRSQRT14PD_YMMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 7688;
pub const XED_IFORM_VRSQRT14PD_ZMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 7689;
pub const XED_IFORM_VRSQRT14PD_ZMMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 7690;
pub const XED_IFORM_VRSQRT14PS_XMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 7691;
pub const XED_IFORM_VRSQRT14PS_XMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 7692;
pub const XED_IFORM_VRSQRT14PS_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 7693;
pub const XED_IFORM_VRSQRT14PS_YMMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 7694;
pub const XED_IFORM_VRSQRT14PS_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 7695;
pub const XED_IFORM_VRSQRT14PS_ZMMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 7696;
pub const XED_IFORM_VRSQRT14SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 7697;
pub const XED_IFORM_VRSQRT14SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 7698;
pub const XED_IFORM_VRSQRT14SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 7699;
pub const XED_IFORM_VRSQRT14SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 7700;
pub const XED_IFORM_VRSQRT28PD_ZMMf64_MASKmskw_MEMf64_AVX512ER: xed_iform_enum_t = 7701;
pub const XED_IFORM_VRSQRT28PD_ZMMf64_MASKmskw_ZMMf64_AVX512ER: xed_iform_enum_t = 7702;
pub const XED_IFORM_VRSQRT28PS_ZMMf32_MASKmskw_MEMf32_AVX512ER: xed_iform_enum_t = 7703;
pub const XED_IFORM_VRSQRT28PS_ZMMf32_MASKmskw_ZMMf32_AVX512ER: xed_iform_enum_t = 7704;
pub const XED_IFORM_VRSQRT28SD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512ER: xed_iform_enum_t = 7705;
pub const XED_IFORM_VRSQRT28SD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512ER: xed_iform_enum_t = 7706;
pub const XED_IFORM_VRSQRT28SS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512ER: xed_iform_enum_t = 7707;
pub const XED_IFORM_VRSQRT28SS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512ER: xed_iform_enum_t = 7708;
pub const XED_IFORM_VRSQRTPH_XMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 7709;
pub const XED_IFORM_VRSQRTPH_XMMf16_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 7710;
pub const XED_IFORM_VRSQRTPH_YMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 7711;
pub const XED_IFORM_VRSQRTPH_YMMf16_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 7712;
pub const XED_IFORM_VRSQRTPH_ZMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 7713;
pub const XED_IFORM_VRSQRTPH_ZMMf16_MASKmskw_ZMMf16_AVX512: xed_iform_enum_t = 7714;
pub const XED_IFORM_VRSQRTPS_XMMdq_MEMdq: xed_iform_enum_t = 7715;
pub const XED_IFORM_VRSQRTPS_XMMdq_XMMdq: xed_iform_enum_t = 7716;
pub const XED_IFORM_VRSQRTPS_YMMqq_MEMqq: xed_iform_enum_t = 7717;
pub const XED_IFORM_VRSQRTPS_YMMqq_YMMqq: xed_iform_enum_t = 7718;
pub const XED_IFORM_VRSQRTSH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 7719;
pub const XED_IFORM_VRSQRTSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 7720;
pub const XED_IFORM_VRSQRTSS_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 7721;
pub const XED_IFORM_VRSQRTSS_XMMdq_XMMdq_XMMd: xed_iform_enum_t = 7722;
pub const XED_IFORM_VSCALEFPD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 7723;
pub const XED_IFORM_VSCALEFPD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 7724;
pub const XED_IFORM_VSCALEFPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 7725;
pub const XED_IFORM_VSCALEFPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 7726;
pub const XED_IFORM_VSCALEFPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 7727;
pub const XED_IFORM_VSCALEFPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 7728;
pub const XED_IFORM_VSCALEFPH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 7729;
pub const XED_IFORM_VSCALEFPH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 7730;
pub const XED_IFORM_VSCALEFPH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 7731;
pub const XED_IFORM_VSCALEFPH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 7732;
pub const XED_IFORM_VSCALEFPH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 7733;
pub const XED_IFORM_VSCALEFPH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 7734;
pub const XED_IFORM_VSCALEFPS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 7735;
pub const XED_IFORM_VSCALEFPS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 7736;
pub const XED_IFORM_VSCALEFPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 7737;
pub const XED_IFORM_VSCALEFPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 7738;
pub const XED_IFORM_VSCALEFPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 7739;
pub const XED_IFORM_VSCALEFPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 7740;
pub const XED_IFORM_VSCALEFSD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 7741;
pub const XED_IFORM_VSCALEFSD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 7742;
pub const XED_IFORM_VSCALEFSH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 7743;
pub const XED_IFORM_VSCALEFSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 7744;
pub const XED_IFORM_VSCALEFSS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 7745;
pub const XED_IFORM_VSCALEFSS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 7746;
pub const XED_IFORM_VSCATTERDPD_MEMf64_MASKmskw_XMMf64_AVX512_VL128: xed_iform_enum_t = 7747;
pub const XED_IFORM_VSCATTERDPD_MEMf64_MASKmskw_YMMf64_AVX512_VL256: xed_iform_enum_t = 7748;
pub const XED_IFORM_VSCATTERDPD_MEMf64_MASKmskw_ZMMf64_AVX512_VL512: xed_iform_enum_t = 7749;
pub const XED_IFORM_VSCATTERDPS_MEMf32_MASKmskw_XMMf32_AVX512_VL128: xed_iform_enum_t = 7750;
pub const XED_IFORM_VSCATTERDPS_MEMf32_MASKmskw_YMMf32_AVX512_VL256: xed_iform_enum_t = 7751;
pub const XED_IFORM_VSCATTERDPS_MEMf32_MASKmskw_ZMMf32_AVX512_VL512: xed_iform_enum_t = 7752;
pub const XED_IFORM_VSCATTERPF0DPD_MEMf64_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 7753;
pub const XED_IFORM_VSCATTERPF0DPS_MEMf32_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 7754;
pub const XED_IFORM_VSCATTERPF0QPD_MEMf64_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 7755;
pub const XED_IFORM_VSCATTERPF0QPS_MEMf32_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 7756;
pub const XED_IFORM_VSCATTERPF1DPD_MEMf64_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 7757;
pub const XED_IFORM_VSCATTERPF1DPS_MEMf32_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 7758;
pub const XED_IFORM_VSCATTERPF1QPD_MEMf64_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 7759;
pub const XED_IFORM_VSCATTERPF1QPS_MEMf32_MASKmskw_AVX512PF_VL512: xed_iform_enum_t = 7760;
pub const XED_IFORM_VSCATTERQPD_MEMf64_MASKmskw_XMMf64_AVX512_VL128: xed_iform_enum_t = 7761;
pub const XED_IFORM_VSCATTERQPD_MEMf64_MASKmskw_YMMf64_AVX512_VL256: xed_iform_enum_t = 7762;
pub const XED_IFORM_VSCATTERQPD_MEMf64_MASKmskw_ZMMf64_AVX512_VL512: xed_iform_enum_t = 7763;
pub const XED_IFORM_VSCATTERQPS_MEMf32_MASKmskw_XMMf32_AVX512_VL128: xed_iform_enum_t = 7764;
pub const XED_IFORM_VSCATTERQPS_MEMf32_MASKmskw_XMMf32_AVX512_VL256: xed_iform_enum_t = 7765;
pub const XED_IFORM_VSCATTERQPS_MEMf32_MASKmskw_YMMf32_AVX512_VL512: xed_iform_enum_t = 7766;
pub const XED_IFORM_VSHA512MSG1_YMMu64_XMMu64: xed_iform_enum_t = 7767;
pub const XED_IFORM_VSHA512MSG2_YMMu64_YMMu64: xed_iform_enum_t = 7768;
pub const XED_IFORM_VSHA512RNDS2_YMMu64_YMMu64_XMMu64: xed_iform_enum_t = 7769;
pub const XED_IFORM_VSHUFF32X4_YMMf32_MASKmskw_YMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7770;
pub const XED_IFORM_VSHUFF32X4_YMMf32_MASKmskw_YMMf32_YMMf32_IMM8_AVX512: xed_iform_enum_t = 7771;
pub const XED_IFORM_VSHUFF32X4_ZMMf32_MASKmskw_ZMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7772;
pub const XED_IFORM_VSHUFF32X4_ZMMf32_MASKmskw_ZMMf32_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 7773;
pub const XED_IFORM_VSHUFF64X2_YMMf64_MASKmskw_YMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7774;
pub const XED_IFORM_VSHUFF64X2_YMMf64_MASKmskw_YMMf64_YMMf64_IMM8_AVX512: xed_iform_enum_t = 7775;
pub const XED_IFORM_VSHUFF64X2_ZMMf64_MASKmskw_ZMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7776;
pub const XED_IFORM_VSHUFF64X2_ZMMf64_MASKmskw_ZMMf64_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 7777;
pub const XED_IFORM_VSHUFI32X4_YMMu32_MASKmskw_YMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7778;
pub const XED_IFORM_VSHUFI32X4_YMMu32_MASKmskw_YMMu32_YMMu32_IMM8_AVX512: xed_iform_enum_t = 7779;
pub const XED_IFORM_VSHUFI32X4_ZMMu32_MASKmskw_ZMMu32_MEMu32_IMM8_AVX512: xed_iform_enum_t = 7780;
pub const XED_IFORM_VSHUFI32X4_ZMMu32_MASKmskw_ZMMu32_ZMMu32_IMM8_AVX512: xed_iform_enum_t = 7781;
pub const XED_IFORM_VSHUFI64X2_YMMu64_MASKmskw_YMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7782;
pub const XED_IFORM_VSHUFI64X2_YMMu64_MASKmskw_YMMu64_YMMu64_IMM8_AVX512: xed_iform_enum_t = 7783;
pub const XED_IFORM_VSHUFI64X2_ZMMu64_MASKmskw_ZMMu64_MEMu64_IMM8_AVX512: xed_iform_enum_t = 7784;
pub const XED_IFORM_VSHUFI64X2_ZMMu64_MASKmskw_ZMMu64_ZMMu64_IMM8_AVX512: xed_iform_enum_t = 7785;
pub const XED_IFORM_VSHUFPD_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 7786;
pub const XED_IFORM_VSHUFPD_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7787;
pub const XED_IFORM_VSHUFPD_XMMf64_MASKmskw_XMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7788;
pub const XED_IFORM_VSHUFPD_XMMf64_MASKmskw_XMMf64_XMMf64_IMM8_AVX512: xed_iform_enum_t = 7789;
pub const XED_IFORM_VSHUFPD_YMMf64_MASKmskw_YMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7790;
pub const XED_IFORM_VSHUFPD_YMMf64_MASKmskw_YMMf64_YMMf64_IMM8_AVX512: xed_iform_enum_t = 7791;
pub const XED_IFORM_VSHUFPD_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 7792;
pub const XED_IFORM_VSHUFPD_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7793;
pub const XED_IFORM_VSHUFPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_IMM8_AVX512: xed_iform_enum_t = 7794;
pub const XED_IFORM_VSHUFPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_IMM8_AVX512: xed_iform_enum_t = 7795;
pub const XED_IFORM_VSHUFPS_XMMdq_XMMdq_MEMdq_IMMb: xed_iform_enum_t = 7796;
pub const XED_IFORM_VSHUFPS_XMMdq_XMMdq_XMMdq_IMMb: xed_iform_enum_t = 7797;
pub const XED_IFORM_VSHUFPS_XMMf32_MASKmskw_XMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7798;
pub const XED_IFORM_VSHUFPS_XMMf32_MASKmskw_XMMf32_XMMf32_IMM8_AVX512: xed_iform_enum_t = 7799;
pub const XED_IFORM_VSHUFPS_YMMf32_MASKmskw_YMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7800;
pub const XED_IFORM_VSHUFPS_YMMf32_MASKmskw_YMMf32_YMMf32_IMM8_AVX512: xed_iform_enum_t = 7801;
pub const XED_IFORM_VSHUFPS_YMMqq_YMMqq_MEMqq_IMMb: xed_iform_enum_t = 7802;
pub const XED_IFORM_VSHUFPS_YMMqq_YMMqq_YMMqq_IMMb: xed_iform_enum_t = 7803;
pub const XED_IFORM_VSHUFPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_IMM8_AVX512: xed_iform_enum_t = 7804;
pub const XED_IFORM_VSHUFPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_IMM8_AVX512: xed_iform_enum_t = 7805;
pub const XED_IFORM_VSM3MSG1_XMMu32_XMMu32_MEMu32: xed_iform_enum_t = 7806;
pub const XED_IFORM_VSM3MSG1_XMMu32_XMMu32_XMMu32: xed_iform_enum_t = 7807;
pub const XED_IFORM_VSM3MSG2_XMMu32_XMMu32_MEMu32: xed_iform_enum_t = 7808;
pub const XED_IFORM_VSM3MSG2_XMMu32_XMMu32_XMMu32: xed_iform_enum_t = 7809;
pub const XED_IFORM_VSM3RNDS2_XMMu32_XMMu32_MEMu32_IMM8: xed_iform_enum_t = 7810;
pub const XED_IFORM_VSM3RNDS2_XMMu32_XMMu32_XMMu32_IMM8: xed_iform_enum_t = 7811;
pub const XED_IFORM_VSM4KEY4_XMMu32_XMMu32_MEMu32: xed_iform_enum_t = 7812;
pub const XED_IFORM_VSM4KEY4_XMMu32_XMMu32_XMMu32: xed_iform_enum_t = 7813;
pub const XED_IFORM_VSM4KEY4_YMMu32_YMMu32_MEMu32: xed_iform_enum_t = 7814;
pub const XED_IFORM_VSM4KEY4_YMMu32_YMMu32_YMMu32: xed_iform_enum_t = 7815;
pub const XED_IFORM_VSM4RNDS4_XMMu32_XMMu32_MEMu32: xed_iform_enum_t = 7816;
pub const XED_IFORM_VSM4RNDS4_XMMu32_XMMu32_XMMu32: xed_iform_enum_t = 7817;
pub const XED_IFORM_VSM4RNDS4_YMMu32_YMMu32_MEMu32: xed_iform_enum_t = 7818;
pub const XED_IFORM_VSM4RNDS4_YMMu32_YMMu32_YMMu32: xed_iform_enum_t = 7819;
pub const XED_IFORM_VSQRTPD_XMMdq_MEMdq: xed_iform_enum_t = 7820;
pub const XED_IFORM_VSQRTPD_XMMdq_XMMdq: xed_iform_enum_t = 7821;
pub const XED_IFORM_VSQRTPD_XMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 7822;
pub const XED_IFORM_VSQRTPD_XMMf64_MASKmskw_XMMf64_AVX512: xed_iform_enum_t = 7823;
pub const XED_IFORM_VSQRTPD_YMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 7824;
pub const XED_IFORM_VSQRTPD_YMMf64_MASKmskw_YMMf64_AVX512: xed_iform_enum_t = 7825;
pub const XED_IFORM_VSQRTPD_YMMqq_MEMqq: xed_iform_enum_t = 7826;
pub const XED_IFORM_VSQRTPD_YMMqq_YMMqq: xed_iform_enum_t = 7827;
pub const XED_IFORM_VSQRTPD_ZMMf64_MASKmskw_MEMf64_AVX512: xed_iform_enum_t = 7828;
pub const XED_IFORM_VSQRTPD_ZMMf64_MASKmskw_ZMMf64_AVX512: xed_iform_enum_t = 7829;
pub const XED_IFORM_VSQRTPH_XMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 7830;
pub const XED_IFORM_VSQRTPH_XMMf16_MASKmskw_XMMf16_AVX512: xed_iform_enum_t = 7831;
pub const XED_IFORM_VSQRTPH_YMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 7832;
pub const XED_IFORM_VSQRTPH_YMMf16_MASKmskw_YMMf16_AVX512: xed_iform_enum_t = 7833;
pub const XED_IFORM_VSQRTPH_ZMMf16_MASKmskw_MEMf16_AVX512: xed_iform_enum_t = 7834;
pub const XED_IFORM_VSQRTPH_ZMMf16_MASKmskw_ZMMf16_AVX512: xed_iform_enum_t = 7835;
pub const XED_IFORM_VSQRTPS_XMMdq_MEMdq: xed_iform_enum_t = 7836;
pub const XED_IFORM_VSQRTPS_XMMdq_XMMdq: xed_iform_enum_t = 7837;
pub const XED_IFORM_VSQRTPS_XMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 7838;
pub const XED_IFORM_VSQRTPS_XMMf32_MASKmskw_XMMf32_AVX512: xed_iform_enum_t = 7839;
pub const XED_IFORM_VSQRTPS_YMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 7840;
pub const XED_IFORM_VSQRTPS_YMMf32_MASKmskw_YMMf32_AVX512: xed_iform_enum_t = 7841;
pub const XED_IFORM_VSQRTPS_YMMqq_MEMqq: xed_iform_enum_t = 7842;
pub const XED_IFORM_VSQRTPS_YMMqq_YMMqq: xed_iform_enum_t = 7843;
pub const XED_IFORM_VSQRTPS_ZMMf32_MASKmskw_MEMf32_AVX512: xed_iform_enum_t = 7844;
pub const XED_IFORM_VSQRTPS_ZMMf32_MASKmskw_ZMMf32_AVX512: xed_iform_enum_t = 7845;
pub const XED_IFORM_VSQRTSD_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 7846;
pub const XED_IFORM_VSQRTSD_XMMdq_XMMdq_XMMq: xed_iform_enum_t = 7847;
pub const XED_IFORM_VSQRTSD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 7848;
pub const XED_IFORM_VSQRTSD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 7849;
pub const XED_IFORM_VSQRTSH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 7850;
pub const XED_IFORM_VSQRTSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 7851;
pub const XED_IFORM_VSQRTSS_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 7852;
pub const XED_IFORM_VSQRTSS_XMMdq_XMMdq_XMMd: xed_iform_enum_t = 7853;
pub const XED_IFORM_VSQRTSS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 7854;
pub const XED_IFORM_VSQRTSS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 7855;
pub const XED_IFORM_VSTMXCSR_MEMd: xed_iform_enum_t = 7856;
pub const XED_IFORM_VSUBPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7857;
pub const XED_IFORM_VSUBPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7858;
pub const XED_IFORM_VSUBPD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 7859;
pub const XED_IFORM_VSUBPD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 7860;
pub const XED_IFORM_VSUBPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 7861;
pub const XED_IFORM_VSUBPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 7862;
pub const XED_IFORM_VSUBPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7863;
pub const XED_IFORM_VSUBPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7864;
pub const XED_IFORM_VSUBPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 7865;
pub const XED_IFORM_VSUBPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 7866;
pub const XED_IFORM_VSUBPH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 7867;
pub const XED_IFORM_VSUBPH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 7868;
pub const XED_IFORM_VSUBPH_YMMf16_MASKmskw_YMMf16_MEMf16_AVX512: xed_iform_enum_t = 7869;
pub const XED_IFORM_VSUBPH_YMMf16_MASKmskw_YMMf16_YMMf16_AVX512: xed_iform_enum_t = 7870;
pub const XED_IFORM_VSUBPH_ZMMf16_MASKmskw_ZMMf16_MEMf16_AVX512: xed_iform_enum_t = 7871;
pub const XED_IFORM_VSUBPH_ZMMf16_MASKmskw_ZMMf16_ZMMf16_AVX512: xed_iform_enum_t = 7872;
pub const XED_IFORM_VSUBPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7873;
pub const XED_IFORM_VSUBPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7874;
pub const XED_IFORM_VSUBPS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 7875;
pub const XED_IFORM_VSUBPS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 7876;
pub const XED_IFORM_VSUBPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 7877;
pub const XED_IFORM_VSUBPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 7878;
pub const XED_IFORM_VSUBPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7879;
pub const XED_IFORM_VSUBPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7880;
pub const XED_IFORM_VSUBPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 7881;
pub const XED_IFORM_VSUBPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 7882;
pub const XED_IFORM_VSUBSD_XMMdq_XMMdq_MEMq: xed_iform_enum_t = 7883;
pub const XED_IFORM_VSUBSD_XMMdq_XMMdq_XMMq: xed_iform_enum_t = 7884;
pub const XED_IFORM_VSUBSD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 7885;
pub const XED_IFORM_VSUBSD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 7886;
pub const XED_IFORM_VSUBSH_XMMf16_MASKmskw_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 7887;
pub const XED_IFORM_VSUBSH_XMMf16_MASKmskw_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 7888;
pub const XED_IFORM_VSUBSS_XMMdq_XMMdq_MEMd: xed_iform_enum_t = 7889;
pub const XED_IFORM_VSUBSS_XMMdq_XMMdq_XMMd: xed_iform_enum_t = 7890;
pub const XED_IFORM_VSUBSS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 7891;
pub const XED_IFORM_VSUBSS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 7892;
pub const XED_IFORM_VTESTPD_XMMdq_MEMdq: xed_iform_enum_t = 7893;
pub const XED_IFORM_VTESTPD_XMMdq_XMMdq: xed_iform_enum_t = 7894;
pub const XED_IFORM_VTESTPD_YMMqq_MEMqq: xed_iform_enum_t = 7895;
pub const XED_IFORM_VTESTPD_YMMqq_YMMqq: xed_iform_enum_t = 7896;
pub const XED_IFORM_VTESTPS_XMMdq_MEMdq: xed_iform_enum_t = 7897;
pub const XED_IFORM_VTESTPS_XMMdq_XMMdq: xed_iform_enum_t = 7898;
pub const XED_IFORM_VTESTPS_YMMqq_MEMqq: xed_iform_enum_t = 7899;
pub const XED_IFORM_VTESTPS_YMMqq_YMMqq: xed_iform_enum_t = 7900;
pub const XED_IFORM_VUCOMISD_XMMdq_MEMq: xed_iform_enum_t = 7901;
pub const XED_IFORM_VUCOMISD_XMMdq_XMMq: xed_iform_enum_t = 7902;
pub const XED_IFORM_VUCOMISD_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 7903;
pub const XED_IFORM_VUCOMISD_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 7904;
pub const XED_IFORM_VUCOMISH_XMMf16_MEMf16_AVX512: xed_iform_enum_t = 7905;
pub const XED_IFORM_VUCOMISH_XMMf16_XMMf16_AVX512: xed_iform_enum_t = 7906;
pub const XED_IFORM_VUCOMISS_XMMdq_MEMd: xed_iform_enum_t = 7907;
pub const XED_IFORM_VUCOMISS_XMMdq_XMMd: xed_iform_enum_t = 7908;
pub const XED_IFORM_VUCOMISS_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 7909;
pub const XED_IFORM_VUCOMISS_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 7910;
pub const XED_IFORM_VUNPCKHPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7911;
pub const XED_IFORM_VUNPCKHPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7912;
pub const XED_IFORM_VUNPCKHPD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 7913;
pub const XED_IFORM_VUNPCKHPD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 7914;
pub const XED_IFORM_VUNPCKHPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 7915;
pub const XED_IFORM_VUNPCKHPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 7916;
pub const XED_IFORM_VUNPCKHPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7917;
pub const XED_IFORM_VUNPCKHPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7918;
pub const XED_IFORM_VUNPCKHPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 7919;
pub const XED_IFORM_VUNPCKHPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 7920;
pub const XED_IFORM_VUNPCKHPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7921;
pub const XED_IFORM_VUNPCKHPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7922;
pub const XED_IFORM_VUNPCKHPS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 7923;
pub const XED_IFORM_VUNPCKHPS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 7924;
pub const XED_IFORM_VUNPCKHPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 7925;
pub const XED_IFORM_VUNPCKHPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 7926;
pub const XED_IFORM_VUNPCKHPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7927;
pub const XED_IFORM_VUNPCKHPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7928;
pub const XED_IFORM_VUNPCKHPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 7929;
pub const XED_IFORM_VUNPCKHPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 7930;
pub const XED_IFORM_VUNPCKLPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7931;
pub const XED_IFORM_VUNPCKLPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7932;
pub const XED_IFORM_VUNPCKLPD_XMMf64_MASKmskw_XMMf64_MEMf64_AVX512: xed_iform_enum_t = 7933;
pub const XED_IFORM_VUNPCKLPD_XMMf64_MASKmskw_XMMf64_XMMf64_AVX512: xed_iform_enum_t = 7934;
pub const XED_IFORM_VUNPCKLPD_YMMf64_MASKmskw_YMMf64_MEMf64_AVX512: xed_iform_enum_t = 7935;
pub const XED_IFORM_VUNPCKLPD_YMMf64_MASKmskw_YMMf64_YMMf64_AVX512: xed_iform_enum_t = 7936;
pub const XED_IFORM_VUNPCKLPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7937;
pub const XED_IFORM_VUNPCKLPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7938;
pub const XED_IFORM_VUNPCKLPD_ZMMf64_MASKmskw_ZMMf64_MEMf64_AVX512: xed_iform_enum_t = 7939;
pub const XED_IFORM_VUNPCKLPD_ZMMf64_MASKmskw_ZMMf64_ZMMf64_AVX512: xed_iform_enum_t = 7940;
pub const XED_IFORM_VUNPCKLPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7941;
pub const XED_IFORM_VUNPCKLPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7942;
pub const XED_IFORM_VUNPCKLPS_XMMf32_MASKmskw_XMMf32_MEMf32_AVX512: xed_iform_enum_t = 7943;
pub const XED_IFORM_VUNPCKLPS_XMMf32_MASKmskw_XMMf32_XMMf32_AVX512: xed_iform_enum_t = 7944;
pub const XED_IFORM_VUNPCKLPS_YMMf32_MASKmskw_YMMf32_MEMf32_AVX512: xed_iform_enum_t = 7945;
pub const XED_IFORM_VUNPCKLPS_YMMf32_MASKmskw_YMMf32_YMMf32_AVX512: xed_iform_enum_t = 7946;
pub const XED_IFORM_VUNPCKLPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7947;
pub const XED_IFORM_VUNPCKLPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7948;
pub const XED_IFORM_VUNPCKLPS_ZMMf32_MASKmskw_ZMMf32_MEMf32_AVX512: xed_iform_enum_t = 7949;
pub const XED_IFORM_VUNPCKLPS_ZMMf32_MASKmskw_ZMMf32_ZMMf32_AVX512: xed_iform_enum_t = 7950;
pub const XED_IFORM_VXORPD_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7951;
pub const XED_IFORM_VXORPD_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7952;
pub const XED_IFORM_VXORPD_XMMu64_MASKmskw_XMMu64_MEMu64_AVX512: xed_iform_enum_t = 7953;
pub const XED_IFORM_VXORPD_XMMu64_MASKmskw_XMMu64_XMMu64_AVX512: xed_iform_enum_t = 7954;
pub const XED_IFORM_VXORPD_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7955;
pub const XED_IFORM_VXORPD_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7956;
pub const XED_IFORM_VXORPD_YMMu64_MASKmskw_YMMu64_MEMu64_AVX512: xed_iform_enum_t = 7957;
pub const XED_IFORM_VXORPD_YMMu64_MASKmskw_YMMu64_YMMu64_AVX512: xed_iform_enum_t = 7958;
pub const XED_IFORM_VXORPD_ZMMu64_MASKmskw_ZMMu64_MEMu64_AVX512: xed_iform_enum_t = 7959;
pub const XED_IFORM_VXORPD_ZMMu64_MASKmskw_ZMMu64_ZMMu64_AVX512: xed_iform_enum_t = 7960;
pub const XED_IFORM_VXORPS_XMMdq_XMMdq_MEMdq: xed_iform_enum_t = 7961;
pub const XED_IFORM_VXORPS_XMMdq_XMMdq_XMMdq: xed_iform_enum_t = 7962;
pub const XED_IFORM_VXORPS_XMMu32_MASKmskw_XMMu32_MEMu32_AVX512: xed_iform_enum_t = 7963;
pub const XED_IFORM_VXORPS_XMMu32_MASKmskw_XMMu32_XMMu32_AVX512: xed_iform_enum_t = 7964;
pub const XED_IFORM_VXORPS_YMMqq_YMMqq_MEMqq: xed_iform_enum_t = 7965;
pub const XED_IFORM_VXORPS_YMMqq_YMMqq_YMMqq: xed_iform_enum_t = 7966;
pub const XED_IFORM_VXORPS_YMMu32_MASKmskw_YMMu32_MEMu32_AVX512: xed_iform_enum_t = 7967;
pub const XED_IFORM_VXORPS_YMMu32_MASKmskw_YMMu32_YMMu32_AVX512: xed_iform_enum_t = 7968;
pub const XED_IFORM_VXORPS_ZMMu32_MASKmskw_ZMMu32_MEMu32_AVX512: xed_iform_enum_t = 7969;
pub const XED_IFORM_VXORPS_ZMMu32_MASKmskw_ZMMu32_ZMMu32_AVX512: xed_iform_enum_t = 7970;
pub const XED_IFORM_VZEROALL: xed_iform_enum_t = 7971;
pub const XED_IFORM_VZEROUPPER: xed_iform_enum_t = 7972;
pub const XED_IFORM_WBINVD: xed_iform_enum_t = 7973;
pub const XED_IFORM_WBNOINVD: xed_iform_enum_t = 7974;
pub const XED_IFORM_WRFSBASE_GPRy: xed_iform_enum_t = 7975;
pub const XED_IFORM_WRGSBASE_GPRy: xed_iform_enum_t = 7976;
pub const XED_IFORM_WRMSR: xed_iform_enum_t = 7977;
pub const XED_IFORM_WRMSRLIST: xed_iform_enum_t = 7978;
pub const XED_IFORM_WRMSRNS: xed_iform_enum_t = 7979;
pub const XED_IFORM_WRPKRU: xed_iform_enum_t = 7980;
pub const XED_IFORM_WRSSD_MEMu32_GPR32u32: xed_iform_enum_t = 7981;
pub const XED_IFORM_WRSSD_MEMu32_GPR32u32_APX: xed_iform_enum_t = 7982;
pub const XED_IFORM_WRSSQ_MEMu64_GPR64u64: xed_iform_enum_t = 7983;
pub const XED_IFORM_WRSSQ_MEMu64_GPR64u64_APX: xed_iform_enum_t = 7984;
pub const XED_IFORM_WRUSSD_MEMu32_GPR32u32: xed_iform_enum_t = 7985;
pub const XED_IFORM_WRUSSD_MEMu32_GPR32u32_APX: xed_iform_enum_t = 7986;
pub const XED_IFORM_WRUSSQ_MEMu64_GPR64u64: xed_iform_enum_t = 7987;
pub const XED_IFORM_WRUSSQ_MEMu64_GPR64u64_APX: xed_iform_enum_t = 7988;
pub const XED_IFORM_XABORT_IMMb: xed_iform_enum_t = 7989;
pub const XED_IFORM_XADD_GPR8_GPR8: xed_iform_enum_t = 7990;
pub const XED_IFORM_XADD_GPRv_GPRv: xed_iform_enum_t = 7991;
pub const XED_IFORM_XADD_MEMb_GPR8: xed_iform_enum_t = 7992;
pub const XED_IFORM_XADD_MEMv_GPRv: xed_iform_enum_t = 7993;
pub const XED_IFORM_XADD_LOCK_MEMb_GPR8: xed_iform_enum_t = 7994;
pub const XED_IFORM_XADD_LOCK_MEMv_GPRv: xed_iform_enum_t = 7995;
pub const XED_IFORM_XBEGIN_RELBRz: xed_iform_enum_t = 7996;
pub const XED_IFORM_XCHG_GPR8_GPR8: xed_iform_enum_t = 7997;
pub const XED_IFORM_XCHG_GPRv_GPRv: xed_iform_enum_t = 7998;
pub const XED_IFORM_XCHG_GPRv_OrAX: xed_iform_enum_t = 7999;
pub const XED_IFORM_XCHG_MEMb_GPR8: xed_iform_enum_t = 8000;
pub const XED_IFORM_XCHG_MEMv_GPRv: xed_iform_enum_t = 8001;
pub const XED_IFORM_XEND: xed_iform_enum_t = 8002;
pub const XED_IFORM_XGETBV: xed_iform_enum_t = 8003;
pub const XED_IFORM_XLAT: xed_iform_enum_t = 8004;
pub const XED_IFORM_XOR_AL_IMMb: xed_iform_enum_t = 8005;
pub const XED_IFORM_XOR_GPR8_GPR8_30: xed_iform_enum_t = 8006;
pub const XED_IFORM_XOR_GPR8_GPR8_32: xed_iform_enum_t = 8007;
pub const XED_IFORM_XOR_GPR8_IMMb_80r6: xed_iform_enum_t = 8008;
pub const XED_IFORM_XOR_GPR8_IMMb_82r6: xed_iform_enum_t = 8009;
pub const XED_IFORM_XOR_GPR8_MEMb: xed_iform_enum_t = 8010;
pub const XED_IFORM_XOR_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 8011;
pub const XED_IFORM_XOR_GPR8i8_GPR8i8_GPR8i8_APX: xed_iform_enum_t = 8012;
pub const XED_IFORM_XOR_GPR8i8_GPR8i8_IMM8_APX: xed_iform_enum_t = 8013;
pub const XED_IFORM_XOR_GPR8i8_GPR8i8_MEMi8_APX: xed_iform_enum_t = 8014;
pub const XED_IFORM_XOR_GPR8i8_IMM8_APX: xed_iform_enum_t = 8015;
pub const XED_IFORM_XOR_GPR8i8_MEMi8_APX: xed_iform_enum_t = 8016;
pub const XED_IFORM_XOR_GPR8i8_MEMi8_GPR8i8_APX: xed_iform_enum_t = 8017;
pub const XED_IFORM_XOR_GPR8i8_MEMi8_IMM8_APX: xed_iform_enum_t = 8018;
pub const XED_IFORM_XOR_GPRv_GPRv_31: xed_iform_enum_t = 8019;
pub const XED_IFORM_XOR_GPRv_GPRv_33: xed_iform_enum_t = 8020;
pub const XED_IFORM_XOR_GPRv_GPRv_APX: xed_iform_enum_t = 8021;
pub const XED_IFORM_XOR_GPRv_GPRv_GPRv_APX: xed_iform_enum_t = 8022;
pub const XED_IFORM_XOR_GPRv_GPRv_IMM8_APX: xed_iform_enum_t = 8023;
pub const XED_IFORM_XOR_GPRv_GPRv_IMMz_APX: xed_iform_enum_t = 8024;
pub const XED_IFORM_XOR_GPRv_GPRv_MEMv_APX: xed_iform_enum_t = 8025;
pub const XED_IFORM_XOR_GPRv_IMM8_APX: xed_iform_enum_t = 8026;
pub const XED_IFORM_XOR_GPRv_IMMb: xed_iform_enum_t = 8027;
pub const XED_IFORM_XOR_GPRv_IMMz: xed_iform_enum_t = 8028;
pub const XED_IFORM_XOR_GPRv_IMMz_APX: xed_iform_enum_t = 8029;
pub const XED_IFORM_XOR_GPRv_MEMv: xed_iform_enum_t = 8030;
pub const XED_IFORM_XOR_GPRv_MEMv_APX: xed_iform_enum_t = 8031;
pub const XED_IFORM_XOR_GPRv_MEMv_GPRv_APX: xed_iform_enum_t = 8032;
pub const XED_IFORM_XOR_GPRv_MEMv_IMM8_APX: xed_iform_enum_t = 8033;
pub const XED_IFORM_XOR_GPRv_MEMv_IMMz_APX: xed_iform_enum_t = 8034;
pub const XED_IFORM_XOR_MEMb_GPR8: xed_iform_enum_t = 8035;
pub const XED_IFORM_XOR_MEMb_IMMb_80r6: xed_iform_enum_t = 8036;
pub const XED_IFORM_XOR_MEMb_IMMb_82r6: xed_iform_enum_t = 8037;
pub const XED_IFORM_XOR_MEMi8_GPR8i8_APX: xed_iform_enum_t = 8038;
pub const XED_IFORM_XOR_MEMi8_IMM8_APX: xed_iform_enum_t = 8039;
pub const XED_IFORM_XOR_MEMv_GPRv: xed_iform_enum_t = 8040;
pub const XED_IFORM_XOR_MEMv_GPRv_APX: xed_iform_enum_t = 8041;
pub const XED_IFORM_XOR_MEMv_IMM8_APX: xed_iform_enum_t = 8042;
pub const XED_IFORM_XOR_MEMv_IMMb: xed_iform_enum_t = 8043;
pub const XED_IFORM_XOR_MEMv_IMMz: xed_iform_enum_t = 8044;
pub const XED_IFORM_XOR_MEMv_IMMz_APX: xed_iform_enum_t = 8045;
pub const XED_IFORM_XOR_OrAX_IMMz: xed_iform_enum_t = 8046;
pub const XED_IFORM_XORPD_XMMxuq_MEMxuq: xed_iform_enum_t = 8047;
pub const XED_IFORM_XORPD_XMMxuq_XMMxuq: xed_iform_enum_t = 8048;
pub const XED_IFORM_XORPS_XMMxud_MEMxud: xed_iform_enum_t = 8049;
pub const XED_IFORM_XORPS_XMMxud_XMMxud: xed_iform_enum_t = 8050;
pub const XED_IFORM_XOR_LOCK_MEMb_GPR8: xed_iform_enum_t = 8051;
pub const XED_IFORM_XOR_LOCK_MEMb_IMMb_80r6: xed_iform_enum_t = 8052;
pub const XED_IFORM_XOR_LOCK_MEMb_IMMb_82r6: xed_iform_enum_t = 8053;
pub const XED_IFORM_XOR_LOCK_MEMv_GPRv: xed_iform_enum_t = 8054;
pub const XED_IFORM_XOR_LOCK_MEMv_IMMb: xed_iform_enum_t = 8055;
pub const XED_IFORM_XOR_LOCK_MEMv_IMMz: xed_iform_enum_t = 8056;
pub const XED_IFORM_XRESLDTRK: xed_iform_enum_t = 8057;
pub const XED_IFORM_XRSTOR_MEMmxsave: xed_iform_enum_t = 8058;
pub const XED_IFORM_XRSTOR64_MEMmxsave: xed_iform_enum_t = 8059;
pub const XED_IFORM_XRSTORS_MEMmxsave: xed_iform_enum_t = 8060;
pub const XED_IFORM_XRSTORS64_MEMmxsave: xed_iform_enum_t = 8061;
pub const XED_IFORM_XSAVE_MEMmxsave: xed_iform_enum_t = 8062;
pub const XED_IFORM_XSAVE64_MEMmxsave: xed_iform_enum_t = 8063;
pub const XED_IFORM_XSAVEC_MEMmxsave: xed_iform_enum_t = 8064;
pub const XED_IFORM_XSAVEC64_MEMmxsave: xed_iform_enum_t = 8065;
pub const XED_IFORM_XSAVEOPT_MEMmxsave: xed_iform_enum_t = 8066;
pub const XED_IFORM_XSAVEOPT64_MEMmxsave: xed_iform_enum_t = 8067;
pub const XED_IFORM_XSAVES_MEMmxsave: xed_iform_enum_t = 8068;
pub const XED_IFORM_XSAVES64_MEMmxsave: xed_iform_enum_t = 8069;
pub const XED_IFORM_XSETBV: xed_iform_enum_t = 8070;
pub const XED_IFORM_XSTORE: xed_iform_enum_t = 8071;
pub const XED_IFORM_XSUSLDTRK: xed_iform_enum_t = 8072;
pub const XED_IFORM_XTEST: xed_iform_enum_t = 8073;
pub const XED_IFORM_LAST: xed_iform_enum_t = 8074;
pub type xed_iform_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_iform_enum_t types.\n @param s A C-string.\n @return #xed_iform_enum_t\n @ingroup ENUM"]
    pub fn str2xed_iform_enum_t(s: *const ::core::ffi::c_char) -> xed_iform_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_iform_enum_t types.\n @param p An enumeration element of type xed_iform_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_iform_enum_t2str(p: xed_iform_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_iform_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_iform_enum_t_last() -> xed_iform_enum_t;
}
pub const XED_ISA_SET_INVALID: xed_isa_set_enum_t = 0;
pub const XED_ISA_SET_3DNOW: xed_isa_set_enum_t = 1;
pub const XED_ISA_SET_ADOX_ADCX: xed_isa_set_enum_t = 2;
pub const XED_ISA_SET_AES: xed_isa_set_enum_t = 3;
pub const XED_ISA_SET_AMD: xed_isa_set_enum_t = 4;
pub const XED_ISA_SET_AMD_INVLPGB: xed_isa_set_enum_t = 5;
pub const XED_ISA_SET_AMX_BF16: xed_isa_set_enum_t = 6;
pub const XED_ISA_SET_AMX_COMPLEX: xed_isa_set_enum_t = 7;
pub const XED_ISA_SET_AMX_FP16: xed_isa_set_enum_t = 8;
pub const XED_ISA_SET_AMX_INT8: xed_isa_set_enum_t = 9;
pub const XED_ISA_SET_AMX_TILE: xed_isa_set_enum_t = 10;
pub const XED_ISA_SET_APX_F: xed_isa_set_enum_t = 11;
pub const XED_ISA_SET_APX_F_ADX: xed_isa_set_enum_t = 12;
pub const XED_ISA_SET_APX_F_AMX: xed_isa_set_enum_t = 13;
pub const XED_ISA_SET_APX_F_BMI1: xed_isa_set_enum_t = 14;
pub const XED_ISA_SET_APX_F_BMI2: xed_isa_set_enum_t = 15;
pub const XED_ISA_SET_APX_F_CET: xed_isa_set_enum_t = 16;
pub const XED_ISA_SET_APX_F_CMPCCXADD: xed_isa_set_enum_t = 17;
pub const XED_ISA_SET_APX_F_ENQCMD: xed_isa_set_enum_t = 18;
pub const XED_ISA_SET_APX_F_INVPCID: xed_isa_set_enum_t = 19;
pub const XED_ISA_SET_APX_F_KEYLOCKER: xed_isa_set_enum_t = 20;
pub const XED_ISA_SET_APX_F_KEYLOCKER_WIDE: xed_isa_set_enum_t = 21;
pub const XED_ISA_SET_APX_F_KOPB: xed_isa_set_enum_t = 22;
pub const XED_ISA_SET_APX_F_KOPD: xed_isa_set_enum_t = 23;
pub const XED_ISA_SET_APX_F_KOPQ: xed_isa_set_enum_t = 24;
pub const XED_ISA_SET_APX_F_KOPW: xed_isa_set_enum_t = 25;
pub const XED_ISA_SET_APX_F_LZCNT: xed_isa_set_enum_t = 26;
pub const XED_ISA_SET_APX_F_MOVBE: xed_isa_set_enum_t = 27;
pub const XED_ISA_SET_APX_F_MOVDIR64B: xed_isa_set_enum_t = 28;
pub const XED_ISA_SET_APX_F_MOVDIRI: xed_isa_set_enum_t = 29;
pub const XED_ISA_SET_APX_F_RAO_INT: xed_isa_set_enum_t = 30;
pub const XED_ISA_SET_APX_F_SHA: xed_isa_set_enum_t = 31;
pub const XED_ISA_SET_APX_F_USER_MSR: xed_isa_set_enum_t = 32;
pub const XED_ISA_SET_APX_F_VMX: xed_isa_set_enum_t = 33;
pub const XED_ISA_SET_AVX: xed_isa_set_enum_t = 34;
pub const XED_ISA_SET_AVX2: xed_isa_set_enum_t = 35;
pub const XED_ISA_SET_AVX2GATHER: xed_isa_set_enum_t = 36;
pub const XED_ISA_SET_AVX512BW_128: xed_isa_set_enum_t = 37;
pub const XED_ISA_SET_AVX512BW_128N: xed_isa_set_enum_t = 38;
pub const XED_ISA_SET_AVX512BW_256: xed_isa_set_enum_t = 39;
pub const XED_ISA_SET_AVX512BW_512: xed_isa_set_enum_t = 40;
pub const XED_ISA_SET_AVX512BW_KOPD: xed_isa_set_enum_t = 41;
pub const XED_ISA_SET_AVX512BW_KOPQ: xed_isa_set_enum_t = 42;
pub const XED_ISA_SET_AVX512CD_128: xed_isa_set_enum_t = 43;
pub const XED_ISA_SET_AVX512CD_256: xed_isa_set_enum_t = 44;
pub const XED_ISA_SET_AVX512CD_512: xed_isa_set_enum_t = 45;
pub const XED_ISA_SET_AVX512DQ_128: xed_isa_set_enum_t = 46;
pub const XED_ISA_SET_AVX512DQ_128N: xed_isa_set_enum_t = 47;
pub const XED_ISA_SET_AVX512DQ_256: xed_isa_set_enum_t = 48;
pub const XED_ISA_SET_AVX512DQ_512: xed_isa_set_enum_t = 49;
pub const XED_ISA_SET_AVX512DQ_KOPB: xed_isa_set_enum_t = 50;
pub const XED_ISA_SET_AVX512DQ_KOPW: xed_isa_set_enum_t = 51;
pub const XED_ISA_SET_AVX512DQ_SCALAR: xed_isa_set_enum_t = 52;
pub const XED_ISA_SET_AVX512ER_512: xed_isa_set_enum_t = 53;
pub const XED_ISA_SET_AVX512ER_SCALAR: xed_isa_set_enum_t = 54;
pub const XED_ISA_SET_AVX512F_128: xed_isa_set_enum_t = 55;
pub const XED_ISA_SET_AVX512F_128N: xed_isa_set_enum_t = 56;
pub const XED_ISA_SET_AVX512F_256: xed_isa_set_enum_t = 57;
pub const XED_ISA_SET_AVX512F_512: xed_isa_set_enum_t = 58;
pub const XED_ISA_SET_AVX512F_KOPW: xed_isa_set_enum_t = 59;
pub const XED_ISA_SET_AVX512F_SCALAR: xed_isa_set_enum_t = 60;
pub const XED_ISA_SET_AVX512PF_512: xed_isa_set_enum_t = 61;
pub const XED_ISA_SET_AVX512_4FMAPS_512: xed_isa_set_enum_t = 62;
pub const XED_ISA_SET_AVX512_4FMAPS_SCALAR: xed_isa_set_enum_t = 63;
pub const XED_ISA_SET_AVX512_4VNNIW_512: xed_isa_set_enum_t = 64;
pub const XED_ISA_SET_AVX512_BF16_128: xed_isa_set_enum_t = 65;
pub const XED_ISA_SET_AVX512_BF16_256: xed_isa_set_enum_t = 66;
pub const XED_ISA_SET_AVX512_BF16_512: xed_isa_set_enum_t = 67;
pub const XED_ISA_SET_AVX512_BITALG_128: xed_isa_set_enum_t = 68;
pub const XED_ISA_SET_AVX512_BITALG_256: xed_isa_set_enum_t = 69;
pub const XED_ISA_SET_AVX512_BITALG_512: xed_isa_set_enum_t = 70;
pub const XED_ISA_SET_AVX512_FP16_128: xed_isa_set_enum_t = 71;
pub const XED_ISA_SET_AVX512_FP16_128N: xed_isa_set_enum_t = 72;
pub const XED_ISA_SET_AVX512_FP16_256: xed_isa_set_enum_t = 73;
pub const XED_ISA_SET_AVX512_FP16_512: xed_isa_set_enum_t = 74;
pub const XED_ISA_SET_AVX512_FP16_SCALAR: xed_isa_set_enum_t = 75;
pub const XED_ISA_SET_AVX512_GFNI_128: xed_isa_set_enum_t = 76;
pub const XED_ISA_SET_AVX512_GFNI_256: xed_isa_set_enum_t = 77;
pub const XED_ISA_SET_AVX512_GFNI_512: xed_isa_set_enum_t = 78;
pub const XED_ISA_SET_AVX512_IFMA_128: xed_isa_set_enum_t = 79;
pub const XED_ISA_SET_AVX512_IFMA_256: xed_isa_set_enum_t = 80;
pub const XED_ISA_SET_AVX512_IFMA_512: xed_isa_set_enum_t = 81;
pub const XED_ISA_SET_AVX512_VAES_128: xed_isa_set_enum_t = 82;
pub const XED_ISA_SET_AVX512_VAES_256: xed_isa_set_enum_t = 83;
pub const XED_ISA_SET_AVX512_VAES_512: xed_isa_set_enum_t = 84;
pub const XED_ISA_SET_AVX512_VBMI2_128: xed_isa_set_enum_t = 85;
pub const XED_ISA_SET_AVX512_VBMI2_256: xed_isa_set_enum_t = 86;
pub const XED_ISA_SET_AVX512_VBMI2_512: xed_isa_set_enum_t = 87;
pub const XED_ISA_SET_AVX512_VBMI_128: xed_isa_set_enum_t = 88;
pub const XED_ISA_SET_AVX512_VBMI_256: xed_isa_set_enum_t = 89;
pub const XED_ISA_SET_AVX512_VBMI_512: xed_isa_set_enum_t = 90;
pub const XED_ISA_SET_AVX512_VNNI_128: xed_isa_set_enum_t = 91;
pub const XED_ISA_SET_AVX512_VNNI_256: xed_isa_set_enum_t = 92;
pub const XED_ISA_SET_AVX512_VNNI_512: xed_isa_set_enum_t = 93;
pub const XED_ISA_SET_AVX512_VP2INTERSECT_128: xed_isa_set_enum_t = 94;
pub const XED_ISA_SET_AVX512_VP2INTERSECT_256: xed_isa_set_enum_t = 95;
pub const XED_ISA_SET_AVX512_VP2INTERSECT_512: xed_isa_set_enum_t = 96;
pub const XED_ISA_SET_AVX512_VPCLMULQDQ_128: xed_isa_set_enum_t = 97;
pub const XED_ISA_SET_AVX512_VPCLMULQDQ_256: xed_isa_set_enum_t = 98;
pub const XED_ISA_SET_AVX512_VPCLMULQDQ_512: xed_isa_set_enum_t = 99;
pub const XED_ISA_SET_AVX512_VPOPCNTDQ_128: xed_isa_set_enum_t = 100;
pub const XED_ISA_SET_AVX512_VPOPCNTDQ_256: xed_isa_set_enum_t = 101;
pub const XED_ISA_SET_AVX512_VPOPCNTDQ_512: xed_isa_set_enum_t = 102;
pub const XED_ISA_SET_AVXAES: xed_isa_set_enum_t = 103;
pub const XED_ISA_SET_AVX_GFNI: xed_isa_set_enum_t = 104;
pub const XED_ISA_SET_AVX_IFMA: xed_isa_set_enum_t = 105;
pub const XED_ISA_SET_AVX_NE_CONVERT: xed_isa_set_enum_t = 106;
pub const XED_ISA_SET_AVX_VNNI: xed_isa_set_enum_t = 107;
pub const XED_ISA_SET_AVX_VNNI_INT16: xed_isa_set_enum_t = 108;
pub const XED_ISA_SET_AVX_VNNI_INT8: xed_isa_set_enum_t = 109;
pub const XED_ISA_SET_BMI1: xed_isa_set_enum_t = 110;
pub const XED_ISA_SET_BMI2: xed_isa_set_enum_t = 111;
pub const XED_ISA_SET_CET: xed_isa_set_enum_t = 112;
pub const XED_ISA_SET_CLDEMOTE: xed_isa_set_enum_t = 113;
pub const XED_ISA_SET_CLFLUSHOPT: xed_isa_set_enum_t = 114;
pub const XED_ISA_SET_CLFSH: xed_isa_set_enum_t = 115;
pub const XED_ISA_SET_CLWB: xed_isa_set_enum_t = 116;
pub const XED_ISA_SET_CLZERO: xed_isa_set_enum_t = 117;
pub const XED_ISA_SET_CMOV: xed_isa_set_enum_t = 118;
pub const XED_ISA_SET_CMPCCXADD: xed_isa_set_enum_t = 119;
pub const XED_ISA_SET_CMPXCHG16B: xed_isa_set_enum_t = 120;
pub const XED_ISA_SET_ENQCMD: xed_isa_set_enum_t = 121;
pub const XED_ISA_SET_F16C: xed_isa_set_enum_t = 122;
pub const XED_ISA_SET_FAT_NOP: xed_isa_set_enum_t = 123;
pub const XED_ISA_SET_FCMOV: xed_isa_set_enum_t = 124;
pub const XED_ISA_SET_FCOMI: xed_isa_set_enum_t = 125;
pub const XED_ISA_SET_FMA: xed_isa_set_enum_t = 126;
pub const XED_ISA_SET_FMA4: xed_isa_set_enum_t = 127;
pub const XED_ISA_SET_FRED: xed_isa_set_enum_t = 128;
pub const XED_ISA_SET_FXSAVE: xed_isa_set_enum_t = 129;
pub const XED_ISA_SET_FXSAVE64: xed_isa_set_enum_t = 130;
pub const XED_ISA_SET_GFNI: xed_isa_set_enum_t = 131;
pub const XED_ISA_SET_HRESET: xed_isa_set_enum_t = 132;
pub const XED_ISA_SET_I186: xed_isa_set_enum_t = 133;
pub const XED_ISA_SET_I286PROTECTED: xed_isa_set_enum_t = 134;
pub const XED_ISA_SET_I286REAL: xed_isa_set_enum_t = 135;
pub const XED_ISA_SET_I386: xed_isa_set_enum_t = 136;
pub const XED_ISA_SET_I486: xed_isa_set_enum_t = 137;
pub const XED_ISA_SET_I486REAL: xed_isa_set_enum_t = 138;
pub const XED_ISA_SET_I86: xed_isa_set_enum_t = 139;
pub const XED_ISA_SET_ICACHE_PREFETCH: xed_isa_set_enum_t = 140;
pub const XED_ISA_SET_INVPCID: xed_isa_set_enum_t = 141;
pub const XED_ISA_SET_KEYLOCKER: xed_isa_set_enum_t = 142;
pub const XED_ISA_SET_KEYLOCKER_WIDE: xed_isa_set_enum_t = 143;
pub const XED_ISA_SET_LAHF: xed_isa_set_enum_t = 144;
pub const XED_ISA_SET_LKGS: xed_isa_set_enum_t = 145;
pub const XED_ISA_SET_LONGMODE: xed_isa_set_enum_t = 146;
pub const XED_ISA_SET_LWP: xed_isa_set_enum_t = 147;
pub const XED_ISA_SET_LZCNT: xed_isa_set_enum_t = 148;
pub const XED_ISA_SET_MCOMMIT: xed_isa_set_enum_t = 149;
pub const XED_ISA_SET_MONITOR: xed_isa_set_enum_t = 150;
pub const XED_ISA_SET_MONITORX: xed_isa_set_enum_t = 151;
pub const XED_ISA_SET_MOVBE: xed_isa_set_enum_t = 152;
pub const XED_ISA_SET_MOVDIR64B: xed_isa_set_enum_t = 153;
pub const XED_ISA_SET_MOVDIRI: xed_isa_set_enum_t = 154;
pub const XED_ISA_SET_MPX: xed_isa_set_enum_t = 155;
pub const XED_ISA_SET_MSRLIST: xed_isa_set_enum_t = 156;
pub const XED_ISA_SET_PAUSE: xed_isa_set_enum_t = 157;
pub const XED_ISA_SET_PBNDKB: xed_isa_set_enum_t = 158;
pub const XED_ISA_SET_PCLMULQDQ: xed_isa_set_enum_t = 159;
pub const XED_ISA_SET_PCONFIG: xed_isa_set_enum_t = 160;
pub const XED_ISA_SET_PENTIUMMMX: xed_isa_set_enum_t = 161;
pub const XED_ISA_SET_PENTIUMREAL: xed_isa_set_enum_t = 162;
pub const XED_ISA_SET_PKU: xed_isa_set_enum_t = 163;
pub const XED_ISA_SET_POPCNT: xed_isa_set_enum_t = 164;
pub const XED_ISA_SET_PPRO: xed_isa_set_enum_t = 165;
pub const XED_ISA_SET_PPRO_UD0_LONG: xed_isa_set_enum_t = 166;
pub const XED_ISA_SET_PPRO_UD0_SHORT: xed_isa_set_enum_t = 167;
pub const XED_ISA_SET_PREFETCHW: xed_isa_set_enum_t = 168;
pub const XED_ISA_SET_PREFETCHWT1: xed_isa_set_enum_t = 169;
pub const XED_ISA_SET_PREFETCH_NOP: xed_isa_set_enum_t = 170;
pub const XED_ISA_SET_PTWRITE: xed_isa_set_enum_t = 171;
pub const XED_ISA_SET_RAO_INT: xed_isa_set_enum_t = 172;
pub const XED_ISA_SET_RDPID: xed_isa_set_enum_t = 173;
pub const XED_ISA_SET_RDPMC: xed_isa_set_enum_t = 174;
pub const XED_ISA_SET_RDPRU: xed_isa_set_enum_t = 175;
pub const XED_ISA_SET_RDRAND: xed_isa_set_enum_t = 176;
pub const XED_ISA_SET_RDSEED: xed_isa_set_enum_t = 177;
pub const XED_ISA_SET_RDTSCP: xed_isa_set_enum_t = 178;
pub const XED_ISA_SET_RDWRFSGS: xed_isa_set_enum_t = 179;
pub const XED_ISA_SET_RTM: xed_isa_set_enum_t = 180;
pub const XED_ISA_SET_SERIALIZE: xed_isa_set_enum_t = 181;
pub const XED_ISA_SET_SGX: xed_isa_set_enum_t = 182;
pub const XED_ISA_SET_SGX_ENCLV: xed_isa_set_enum_t = 183;
pub const XED_ISA_SET_SHA: xed_isa_set_enum_t = 184;
pub const XED_ISA_SET_SHA512: xed_isa_set_enum_t = 185;
pub const XED_ISA_SET_SM3: xed_isa_set_enum_t = 186;
pub const XED_ISA_SET_SM4: xed_isa_set_enum_t = 187;
pub const XED_ISA_SET_SMAP: xed_isa_set_enum_t = 188;
pub const XED_ISA_SET_SMX: xed_isa_set_enum_t = 189;
pub const XED_ISA_SET_SNP: xed_isa_set_enum_t = 190;
pub const XED_ISA_SET_SSE: xed_isa_set_enum_t = 191;
pub const XED_ISA_SET_SSE2: xed_isa_set_enum_t = 192;
pub const XED_ISA_SET_SSE2MMX: xed_isa_set_enum_t = 193;
pub const XED_ISA_SET_SSE3: xed_isa_set_enum_t = 194;
pub const XED_ISA_SET_SSE3X87: xed_isa_set_enum_t = 195;
pub const XED_ISA_SET_SSE4: xed_isa_set_enum_t = 196;
pub const XED_ISA_SET_SSE42: xed_isa_set_enum_t = 197;
pub const XED_ISA_SET_SSE4A: xed_isa_set_enum_t = 198;
pub const XED_ISA_SET_SSEMXCSR: xed_isa_set_enum_t = 199;
pub const XED_ISA_SET_SSE_PREFETCH: xed_isa_set_enum_t = 200;
pub const XED_ISA_SET_SSSE3: xed_isa_set_enum_t = 201;
pub const XED_ISA_SET_SSSE3MMX: xed_isa_set_enum_t = 202;
pub const XED_ISA_SET_SVM: xed_isa_set_enum_t = 203;
pub const XED_ISA_SET_TBM: xed_isa_set_enum_t = 204;
pub const XED_ISA_SET_TDX: xed_isa_set_enum_t = 205;
pub const XED_ISA_SET_TSX_LDTRK: xed_isa_set_enum_t = 206;
pub const XED_ISA_SET_UINTR: xed_isa_set_enum_t = 207;
pub const XED_ISA_SET_USER_MSR: xed_isa_set_enum_t = 208;
pub const XED_ISA_SET_VAES: xed_isa_set_enum_t = 209;
pub const XED_ISA_SET_VIA_PADLOCK_AES: xed_isa_set_enum_t = 210;
pub const XED_ISA_SET_VIA_PADLOCK_MONTMUL: xed_isa_set_enum_t = 211;
pub const XED_ISA_SET_VIA_PADLOCK_RNG: xed_isa_set_enum_t = 212;
pub const XED_ISA_SET_VIA_PADLOCK_SHA: xed_isa_set_enum_t = 213;
pub const XED_ISA_SET_VMFUNC: xed_isa_set_enum_t = 214;
pub const XED_ISA_SET_VPCLMULQDQ: xed_isa_set_enum_t = 215;
pub const XED_ISA_SET_VTX: xed_isa_set_enum_t = 216;
pub const XED_ISA_SET_WAITPKG: xed_isa_set_enum_t = 217;
pub const XED_ISA_SET_WBNOINVD: xed_isa_set_enum_t = 218;
pub const XED_ISA_SET_WRMSRNS: xed_isa_set_enum_t = 219;
pub const XED_ISA_SET_X87: xed_isa_set_enum_t = 220;
pub const XED_ISA_SET_XOP: xed_isa_set_enum_t = 221;
pub const XED_ISA_SET_XSAVE: xed_isa_set_enum_t = 222;
pub const XED_ISA_SET_XSAVEC: xed_isa_set_enum_t = 223;
pub const XED_ISA_SET_XSAVEOPT: xed_isa_set_enum_t = 224;
pub const XED_ISA_SET_XSAVES: xed_isa_set_enum_t = 225;
pub const XED_ISA_SET_LAST: xed_isa_set_enum_t = 226;
pub type xed_isa_set_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_isa_set_enum_t types.\n @param s A C-string.\n @return #xed_isa_set_enum_t\n @ingroup ENUM"]
    pub fn str2xed_isa_set_enum_t(s: *const ::core::ffi::c_char) -> xed_isa_set_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_isa_set_enum_t types.\n @param p An enumeration element of type xed_isa_set_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_isa_set_enum_t2str(p: xed_isa_set_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_isa_set_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_isa_set_enum_t_last() -> xed_isa_set_enum_t;
}
#[doc = " @ingroup IFORM\n Statically available information about iforms.\n Values are returned by #xed_iform_map()."]
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct xed_iform_info_s {
    pub _bitfield_align_1: [u16; 0],
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 8usize]>,
}
#[test]
fn bindgen_test_layout_xed_iform_info_s() {
    assert_eq!(
        ::core::mem::size_of::<xed_iform_info_s>(),
        8usize,
        concat!("Size of: ", stringify!(xed_iform_info_s))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_iform_info_s>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_iform_info_s))
    );
}
impl xed_iform_info_s {
    #[inline]
    pub fn iclass(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(0usize, 16u8) as u32) }
    }
    #[inline]
    pub fn set_iclass(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(0usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub fn category(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(16usize, 8u8) as u32) }
    }
    #[inline]
    pub fn set_category(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(16usize, 8u8, val as u64)
        }
    }
    #[inline]
    pub fn extension(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(24usize, 8u8) as u32) }
    }
    #[inline]
    pub fn set_extension(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(24usize, 8u8, val as u64)
        }
    }
    #[inline]
    pub fn isa_set(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(32usize, 16u8) as u32) }
    }
    #[inline]
    pub fn set_isa_set(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(32usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub fn string_table_idx(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(48usize, 16u8) as u32) }
    }
    #[inline]
    pub fn set_string_table_idx(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(48usize, 16u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        iclass: u32,
        category: u32,
        extension: u32,
        isa_set: u32,
        string_table_idx: u32,
    ) -> __BindgenBitfieldUnit<[u8; 8usize]> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 8usize]> = Default::default();
        __bindgen_bitfield_unit.set(0usize, 16u8, {
            let iclass: u32 = unsafe { ::core::mem::transmute(iclass) };
            iclass as u64
        });
        __bindgen_bitfield_unit.set(16usize, 8u8, {
            let category: u32 = unsafe { ::core::mem::transmute(category) };
            category as u64
        });
        __bindgen_bitfield_unit.set(24usize, 8u8, {
            let extension: u32 = unsafe { ::core::mem::transmute(extension) };
            extension as u64
        });
        __bindgen_bitfield_unit.set(32usize, 16u8, {
            let isa_set: u32 = unsafe { ::core::mem::transmute(isa_set) };
            isa_set as u64
        });
        __bindgen_bitfield_unit.set(48usize, 16u8, {
            let string_table_idx: u32 = unsafe { ::core::mem::transmute(string_table_idx) };
            string_table_idx as u64
        });
        __bindgen_bitfield_unit
    }
}
#[doc = " @ingroup IFORM\n Statically available information about iforms.\n Values are returned by #xed_iform_map()."]
pub type xed_iform_info_t = xed_iform_info_s;
extern "C" {
    #[doc = " @ingroup IFORM\n Map the #xed_iform_enum_t to a pointer to a #xed_iform_info_t which\n indicates the #xed_iclass_enum_t, the #xed_category_enum_t and the\n #xed_extension_enum_t for the iform. Returns 0 if the iform is not a\n valid iform."]
    pub fn xed_iform_map(iform: xed_iform_enum_t) -> *const xed_iform_info_t;
}
extern "C" {
    #[doc = " @ingroup IFORM\n Return the maximum number of iforms for a particular iclass.  This\n function returns valid data as soon as global data is\n initialized. (This function does not require a decoded instruction as\n input)."]
    pub fn xed_iform_max_per_iclass(iclass: xed_iclass_enum_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup IFORM\n Return the first of the iforms for a particular iclass.  This function\n returns valid data as soon as global data is initialized. (This\n function does not require a decoded instruction as input)."]
    pub fn xed_iform_first_per_iclass(iclass: xed_iclass_enum_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup IFORM\n Return the iclass for a given iform. This\n function returns valid data as soon as global data is initialized. (This\n function does not require a decoded instruction as input)."]
    #[link_name = "xed_iform_to_iclass_xed_sys_inline"]
    pub fn xed_iform_to_iclass(iform: xed_iform_enum_t) -> xed_iclass_enum_t;
}
extern "C" {
    #[doc = " @ingroup IFORM\n Return the category for a given iform. This\n function returns valid data as soon as global data is initialized. (This\n function does not require a decoded instruction as input)."]
    pub fn xed_iform_to_category(iform: xed_iform_enum_t) -> xed_category_enum_t;
}
extern "C" {
    #[doc = " @ingroup IFORM\n Return the extension for a given iform. This function returns valid\n data as soon as global data is initialized. (This function does not\n require a decoded instruction as input)."]
    pub fn xed_iform_to_extension(iform: xed_iform_enum_t) -> xed_extension_enum_t;
}
extern "C" {
    #[doc = " @ingroup IFORM\n Return the isa_set for a given iform. This function returns valid data\n as soon as global data is initialized. (This function does not require\n a decoded instruction as input)."]
    pub fn xed_iform_to_isa_set(iform: xed_iform_enum_t) -> xed_isa_set_enum_t;
}
extern "C" {
    #[doc = " @ingroup IFORM\n Return a pointer to a character string of the iclass. This\n translates the internal disambiguated names to the more ambiguous\n names that people like to see. This returns the ATT SYSV-syntax name."]
    pub fn xed_iform_to_iclass_string_att(iform: xed_iform_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " @ingroup IFORM\n Return a pointer to a character string of the iclass. This\n translates the internal disambiguated names to the more ambiguous\n names that people like to see. This returns the Intel-syntax name."]
    pub fn xed_iform_to_iclass_string_intel(iform: xed_iform_enum_t) -> *const ::core::ffi::c_char;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_attributes_t {
    pub a1: u64,
    pub a2: u64,
}
#[test]
fn bindgen_test_layout_xed_attributes_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_attributes_t> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_attributes_t>(),
        16usize,
        concat!("Size of: ", stringify!(xed_attributes_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_attributes_t>(),
        8usize,
        concat!("Alignment of ", stringify!(xed_attributes_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).a1) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_attributes_t),
            "::",
            stringify!(a1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).a2) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_attributes_t),
            "::",
            stringify!(a2)
        )
    );
}
pub type xed_operand_extractor_fn_t =
    ::core::option::Option<unsafe extern "C" fn(xds: *mut xed_decoded_inst_s)>;
#[doc = " @ingroup DEC\n Constant information about an individual generic operand, like an\noperand template, describing the operand properties. See @ref DEC for\nAPI information."]
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xed_operand_s {
    pub _name: u8,
    pub _operand_visibility: u8,
    pub _rw: u8,
    pub _oc2: u8,
    pub _type: u8,
    pub _xtype: u8,
    pub _cvt_idx: u8,
    pub _nt: u8,
    pub _u: xed_operand_s__bindgen_ty_1,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xed_operand_s__bindgen_ty_1 {
    pub _imm: u32,
    pub _nt: xed_nonterminal_enum_t,
    pub _reg: xed_reg_enum_t,
}
#[test]
fn bindgen_test_layout_xed_operand_s__bindgen_ty_1() {
    const UNINIT: ::core::mem::MaybeUninit<xed_operand_s__bindgen_ty_1> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_operand_s__bindgen_ty_1>(),
        4usize,
        concat!("Size of: ", stringify!(xed_operand_s__bindgen_ty_1))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_operand_s__bindgen_ty_1>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_operand_s__bindgen_ty_1))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._imm) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s__bindgen_ty_1),
            "::",
            stringify!(_imm)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._nt) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s__bindgen_ty_1),
            "::",
            stringify!(_nt)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._reg) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s__bindgen_ty_1),
            "::",
            stringify!(_reg)
        )
    );
}
impl ::core::fmt::Debug for xed_operand_s__bindgen_ty_1 {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_operand_s__bindgen_ty_1 {{ union }}")
    }
}
#[test]
fn bindgen_test_layout_xed_operand_s() {
    const UNINIT: ::core::mem::MaybeUninit<xed_operand_s> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_operand_s>(),
        12usize,
        concat!("Size of: ", stringify!(xed_operand_s))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_operand_s>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_operand_s))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._name) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s),
            "::",
            stringify!(_name)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._operand_visibility) as usize - ptr as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s),
            "::",
            stringify!(_operand_visibility)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._rw) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s),
            "::",
            stringify!(_rw)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._oc2) as usize - ptr as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s),
            "::",
            stringify!(_oc2)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._type) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s),
            "::",
            stringify!(_type)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._xtype) as usize - ptr as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s),
            "::",
            stringify!(_xtype)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._cvt_idx) as usize - ptr as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s),
            "::",
            stringify!(_cvt_idx)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._nt) as usize - ptr as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s),
            "::",
            stringify!(_nt)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._u) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_s),
            "::",
            stringify!(_u)
        )
    );
}
impl ::core::fmt::Debug for xed_operand_s {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_operand_s {{ _u: {:?} }}", self._u)
    }
}
#[doc = " @ingroup DEC\n Constant information about an individual generic operand, like an\noperand template, describing the operand properties. See @ref DEC for\nAPI information."]
pub type xed_operand_t = xed_operand_s;
extern "C" {
    #[doc = " @ingroup DEC"]
    #[link_name = "xed_operand_name_xed_sys_inline"]
    pub fn xed_operand_name(p: *const xed_operand_t) -> xed_operand_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    #[link_name = "xed_operand_operand_visibility_xed_sys_inline"]
    pub fn xed_operand_operand_visibility(p: *const xed_operand_t)
        -> xed_operand_visibility_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n @return The #xed_operand_type_enum_t of the operand template.\n This is probably not what you want."]
    #[link_name = "xed_operand_type_xed_sys_inline"]
    pub fn xed_operand_type(p: *const xed_operand_t) -> xed_operand_type_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n @return The #xed_operand_element_xtype_enum_t of the operand template.\n This is probably not what you want."]
    #[link_name = "xed_operand_xtype_xed_sys_inline"]
    pub fn xed_operand_xtype(p: *const xed_operand_t) -> xed_operand_element_xtype_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    #[link_name = "xed_operand_width_xed_sys_inline"]
    pub fn xed_operand_width(p: *const xed_operand_t) -> xed_operand_width_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n @param p  an operand template,  #xed_operand_t.\n @param eosz  effective operand size of the instruction,  1 | 2 | 3 for\n  16 | 32 | 64 bits respectively. 0 is invalid.\n @return  the actual width of operand in bits.\n See xed_decoded_inst_operand_length_bits() for a more general solution."]
    pub fn xed_operand_width_bits(p: *const xed_operand_t, eosz: u32) -> u32;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    #[link_name = "xed_operand_nonterminal_name_xed_sys_inline"]
    pub fn xed_operand_nonterminal_name(p: *const xed_operand_t) -> xed_nonterminal_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Careful with this one -- use #xed_decoded_inst_get_reg()! This one is\n probably not what you think it is. It is only used for hard-coded\n registers implicit in the instruction encoding. Most likely you want to\n get the #xed_operand_enum_t and then look up the instruction using\n #xed_decoded_inst_get_reg(). The hard-coded registers are also available\n that way.\n @param p  an operand template,  #xed_operand_t.\n @return  the implicit or suppressed registers, type #xed_reg_enum_t"]
    #[link_name = "xed_operand_reg_xed_sys_inline"]
    pub fn xed_operand_reg(p: *const xed_operand_t) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Careful with this one; See #xed_operand_is_register().\n @param p  an operand template,  #xed_operand_t.\n @return 1 if the operand template represents are register-type\n operand.\n\n  Related functions:\n   Use #xed_decoded_inst_get_reg() to get the decoded name of /// the\n   register, #xed_reg_enum_t. Use #xed_operand_is_register() to test\n   #xed_operand_enum_t names."]
    #[link_name = "xed_operand_template_is_register_xed_sys_inline"]
    pub fn xed_operand_template_is_register(p: *const xed_operand_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n @param p  an operand template,  #xed_operand_t.\n These operands represent branch displacements, memory displacements and\n various immediates"]
    #[link_name = "xed_operand_imm_xed_sys_inline"]
    pub fn xed_operand_imm(p: *const xed_operand_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup DEC\n Print the operand p into the buffer buf, of length buflen.\n @param p  an operand template,  #xed_operand_t.\n @param buf buffer that gets filled in\n @param buflen maximum buffer length"]
    pub fn xed_operand_print(
        p: *const xed_operand_t,
        buf: *mut ::core::ffi::c_char,
        buflen: ::core::ffi::c_int,
    );
}
extern "C" {
    #[doc = " @ingroup DEC\n Tests the enum for inclusion in XED_OPERAND_REG0 through XED_OPERAND_REG9.\n @param name the operand name, type #xed_operand_enum_t\n @return 1 if the operand name is REG0...REG9, 0 otherwise.\n\nNote there are other registers for memory addressing; See\n #xed_operand_is_memory_addressing_register ."]
    #[link_name = "xed_operand_is_register_xed_sys_inline"]
    pub fn xed_operand_is_register(name: xed_operand_enum_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Tests the enum for inclusion in XED_OPERAND_{BASE0,BASE1,INDEX,SEG0,SEG1}\n @param name the operand name, type #xed_operand_enum_t\n @return 1 if the operand name is for a memory addressing register operand, 0\n otherwise. See also #xed_operand_is_register ."]
    #[link_name = "xed_operand_is_memory_addressing_register_xed_sys_inline"]
    pub fn xed_operand_is_memory_addressing_register(name: xed_operand_enum_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n DEPRECATED: Returns the raw R/W action. There are many cases for conditional reads\n and writes. See #xed_decoded_inst_operand_action()."]
    #[link_name = "xed_operand_rw_xed_sys_inline"]
    pub fn xed_operand_rw(p: *const xed_operand_t) -> xed_operand_action_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n If the operand is read, including conditional reads"]
    pub fn xed_operand_read(p: *const xed_operand_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n If the operand is read-only, including conditional reads"]
    pub fn xed_operand_read_only(p: *const xed_operand_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n If the operand is written, including conditional writes"]
    pub fn xed_operand_written(p: *const xed_operand_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n If the operand is written-only, including conditional writes"]
    pub fn xed_operand_written_only(p: *const xed_operand_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n If the operand is read-and-written, conditional reads and conditional writes"]
    pub fn xed_operand_read_and_written(p: *const xed_operand_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n If the operand has a conditional read (may also write)"]
    pub fn xed_operand_conditional_read(p: *const xed_operand_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n If the operand has a conditional write (may also read)"]
    pub fn xed_operand_conditional_write(p: *const xed_operand_t) -> xed_uint_t;
}
#[doc = " @ingroup DEC\n constant information about a decoded instruction form, including\n the pointer to the constant operand properties #xed_operand_t for this\n instruction form."]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_inst_s {
    pub _noperands: u8,
    pub _cpl: u8,
    pub _flag_complex: u8,
    pub _exceptions: u8,
    pub _flag_info_index: u16,
    pub _iform_enum: u16,
    pub _operand_base: u16,
    pub _attributes: u16,
}
#[test]
fn bindgen_test_layout_xed_inst_s() {
    const UNINIT: ::core::mem::MaybeUninit<xed_inst_s> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_inst_s>(),
        12usize,
        concat!("Size of: ", stringify!(xed_inst_s))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_inst_s>(),
        2usize,
        concat!("Alignment of ", stringify!(xed_inst_s))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._noperands) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_inst_s),
            "::",
            stringify!(_noperands)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._cpl) as usize - ptr as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_inst_s),
            "::",
            stringify!(_cpl)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._flag_complex) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_inst_s),
            "::",
            stringify!(_flag_complex)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._exceptions) as usize - ptr as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_inst_s),
            "::",
            stringify!(_exceptions)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._flag_info_index) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_inst_s),
            "::",
            stringify!(_flag_info_index)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._iform_enum) as usize - ptr as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_inst_s),
            "::",
            stringify!(_iform_enum)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._operand_base) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_inst_s),
            "::",
            stringify!(_operand_base)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._attributes) as usize - ptr as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_inst_s),
            "::",
            stringify!(_attributes)
        )
    );
}
#[doc = " @ingroup DEC\n constant information about a decoded instruction form, including\n the pointer to the constant operand properties #xed_operand_t for this\n instruction form."]
pub type xed_inst_t = xed_inst_s;
extern "C" {
    #[doc = " @ingroup DEC\n xed_inst_cpl() is DEPRECATED. Please use\n     \"xed_decoded_inst_get_attribute(xedd, XED_ATTRIBUTE_RING0)\"\n instead.\nReturn the current privilege level (CPL) required for execution, 0 or\n3. If the value is zero, then the instruction can only execute in ring 0."]
    pub fn xed_inst_cpl(p: *const xed_inst_t) -> ::core::ffi::c_uint;
}
extern "C" {
    #[link_name = "xed_inst_iform_enum_xed_sys_inline"]
    pub fn xed_inst_iform_enum(p: *const xed_inst_t) -> xed_iform_enum_t;
}
extern "C" {
    #[link_name = "xed_inst_iclass_xed_sys_inline"]
    pub fn xed_inst_iclass(p: *const xed_inst_t) -> xed_iclass_enum_t;
}
extern "C" {
    #[link_name = "xed_inst_category_xed_sys_inline"]
    pub fn xed_inst_category(p: *const xed_inst_t) -> xed_category_enum_t;
}
extern "C" {
    #[link_name = "xed_inst_extension_xed_sys_inline"]
    pub fn xed_inst_extension(p: *const xed_inst_t) -> xed_extension_enum_t;
}
extern "C" {
    #[link_name = "xed_inst_isa_set_xed_sys_inline"]
    pub fn xed_inst_isa_set(p: *const xed_inst_t) -> xed_isa_set_enum_t;
}
extern "C" {
    #[doc = "@ingroup DEC\n Number of instruction operands"]
    #[link_name = "xed_inst_noperands_xed_sys_inline"]
    pub fn xed_inst_noperands(p: *const xed_inst_t) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = "@ingroup DEC\n Obtain a pointer to an individual operand"]
    pub fn xed_inst_operand(p: *const xed_inst_t, i: ::core::ffi::c_uint) -> *const xed_operand_t;
}
extern "C" {
    pub fn xed_inst_flag_info_index(p: *const xed_inst_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup DEC\n Scan for the attribute attr and return 1 if it is found, 0 otherwise."]
    pub fn xed_inst_get_attribute(p: *const xed_inst_t, attr: xed_attribute_enum_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the attributes bit vector"]
    pub fn xed_inst_get_attributes(p: *const xed_inst_t) -> xed_attributes_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the maximum number of defined attributes, independent of any\n instruction."]
    pub fn xed_attribute_max() -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the i'th global attribute in a linear sequence, independent of\n any instruction. This is used for scanning and printing all attributes."]
    pub fn xed_attribute(i: ::core::ffi::c_uint) -> xed_attribute_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return #xed_exception_enum_t if present for the specified instruction.\n This is currently only used for SSE and AVX instructions."]
    #[link_name = "xed_inst_exception_xed_sys_inline"]
    pub fn xed_inst_exception(p: *const xed_inst_t) -> xed_exception_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the base of instruction table."]
    pub fn xed_inst_table_base() -> *const xed_inst_t;
}
pub const XED_FLAG_INVALID: xed_flag_enum_t = 0;
#[doc = "<< overflow flag"]
pub const XED_FLAG_of: xed_flag_enum_t = 1;
#[doc = "< sign flag"]
pub const XED_FLAG_sf: xed_flag_enum_t = 2;
#[doc = "< zero flag"]
pub const XED_FLAG_zf: xed_flag_enum_t = 3;
#[doc = "< auxiliary flag"]
pub const XED_FLAG_af: xed_flag_enum_t = 4;
#[doc = "< parity flag"]
pub const XED_FLAG_pf: xed_flag_enum_t = 5;
#[doc = "< carry flag"]
pub const XED_FLAG_cf: xed_flag_enum_t = 6;
#[doc = "< direction flag"]
pub const XED_FLAG_df: xed_flag_enum_t = 7;
#[doc = "< virtual interrupt flag"]
pub const XED_FLAG_vif: xed_flag_enum_t = 8;
#[doc = "< I/O privilege level"]
pub const XED_FLAG_iopl: xed_flag_enum_t = 9;
#[doc = "< interrupt flag"]
pub const XED_FLAG_if: xed_flag_enum_t = 10;
#[doc = "< alignment check"]
pub const XED_FLAG_ac: xed_flag_enum_t = 11;
#[doc = "< virtual-8086 mode"]
pub const XED_FLAG_vm: xed_flag_enum_t = 12;
#[doc = "< resume flag"]
pub const XED_FLAG_rf: xed_flag_enum_t = 13;
#[doc = "< nested task"]
pub const XED_FLAG_nt: xed_flag_enum_t = 14;
#[doc = "< traf flag"]
pub const XED_FLAG_tf: xed_flag_enum_t = 15;
#[doc = "< ID flag"]
pub const XED_FLAG_id: xed_flag_enum_t = 16;
#[doc = "< virtual interrupt pending"]
pub const XED_FLAG_vip: xed_flag_enum_t = 17;
#[doc = "< x87 FC0 flag"]
pub const XED_FLAG_fc0: xed_flag_enum_t = 18;
#[doc = "< x87 FC1 flag"]
pub const XED_FLAG_fc1: xed_flag_enum_t = 19;
#[doc = "< x87 FC2 flag"]
pub const XED_FLAG_fc2: xed_flag_enum_t = 20;
#[doc = "< x87 FC3 flag"]
pub const XED_FLAG_fc3: xed_flag_enum_t = 21;
pub const XED_FLAG_LAST: xed_flag_enum_t = 22;
pub type xed_flag_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_flag_enum_t types.\n @param s A C-string.\n @return #xed_flag_enum_t\n @ingroup ENUM"]
    pub fn str2xed_flag_enum_t(s: *const ::core::ffi::c_char) -> xed_flag_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_flag_enum_t types.\n @param p An enumeration element of type xed_flag_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_flag_enum_t2str(p: xed_flag_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_flag_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_flag_enum_t_last() -> xed_flag_enum_t;
}
pub const XED_FLAG_ACTION_INVALID: xed_flag_action_enum_t = 0;
#[doc = "< undefined (treated as a write)"]
pub const XED_FLAG_ACTION_u: xed_flag_action_enum_t = 1;
#[doc = "< test (read)"]
pub const XED_FLAG_ACTION_tst: xed_flag_action_enum_t = 2;
#[doc = "< modification (write)"]
pub const XED_FLAG_ACTION_mod: xed_flag_action_enum_t = 3;
#[doc = "< value will be zero (write)"]
pub const XED_FLAG_ACTION_0: xed_flag_action_enum_t = 4;
#[doc = "< value comes from the stack (write)"]
pub const XED_FLAG_ACTION_pop: xed_flag_action_enum_t = 5;
#[doc = "< value comes from AH (write)"]
pub const XED_FLAG_ACTION_ah: xed_flag_action_enum_t = 6;
#[doc = "< value will be 1 (write)"]
pub const XED_FLAG_ACTION_1: xed_flag_action_enum_t = 7;
pub const XED_FLAG_ACTION_LAST: xed_flag_action_enum_t = 8;
pub type xed_flag_action_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_flag_action_enum_t types.\n @param s A C-string.\n @return #xed_flag_action_enum_t\n @ingroup ENUM"]
    pub fn str2xed_flag_action_enum_t(s: *const ::core::ffi::c_char) -> xed_flag_action_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_flag_action_enum_t types.\n @param p An enumeration element of type xed_flag_action_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_flag_action_enum_t2str(p: xed_flag_action_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_flag_action_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_flag_action_enum_t_last() -> xed_flag_action_enum_t;
}
#[doc = "\n @ingroup FLAGS\n a struct representing an instruction's default flags values"]
#[repr(C)]
#[derive(Copy, Clone)]
pub union xed_flag_dfv_s {
    pub flat: u8,
    pub s: xed_flag_dfv_s__bindgen_ty_1,
}
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct xed_flag_dfv_s__bindgen_ty_1 {
    pub _bitfield_align_1: [u8; 0],
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize]>,
    pub __bindgen_padding_0: [u8; 3usize],
}
#[test]
fn bindgen_test_layout_xed_flag_dfv_s__bindgen_ty_1() {
    assert_eq!(
        ::core::mem::size_of::<xed_flag_dfv_s__bindgen_ty_1>(),
        4usize,
        concat!("Size of: ", stringify!(xed_flag_dfv_s__bindgen_ty_1))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_flag_dfv_s__bindgen_ty_1>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_flag_dfv_s__bindgen_ty_1))
    );
}
impl xed_flag_dfv_s__bindgen_ty_1 {
    #[inline]
    pub fn of(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_of(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn sf(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_sf(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn zf(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_zf(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn cf(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_cf(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn pad(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(4usize, 4u8) as u32) }
    }
    #[inline]
    pub fn set_pad(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(4usize, 4u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        of: u32,
        sf: u32,
        zf: u32,
        cf: u32,
        pad: u32,
    ) -> __BindgenBitfieldUnit<[u8; 1usize]> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize]> = Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let of: u32 = unsafe { ::core::mem::transmute(of) };
            of as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let sf: u32 = unsafe { ::core::mem::transmute(sf) };
            sf as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let zf: u32 = unsafe { ::core::mem::transmute(zf) };
            zf as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let cf: u32 = unsafe { ::core::mem::transmute(cf) };
            cf as u64
        });
        __bindgen_bitfield_unit.set(4usize, 4u8, {
            let pad: u32 = unsafe { ::core::mem::transmute(pad) };
            pad as u64
        });
        __bindgen_bitfield_unit
    }
}
#[test]
fn bindgen_test_layout_xed_flag_dfv_s() {
    const UNINIT: ::core::mem::MaybeUninit<xed_flag_dfv_s> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_flag_dfv_s>(),
        4usize,
        concat!("Size of: ", stringify!(xed_flag_dfv_s))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_flag_dfv_s>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_flag_dfv_s))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).flat) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_flag_dfv_s),
            "::",
            stringify!(flat)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_flag_dfv_s),
            "::",
            stringify!(s)
        )
    );
}
impl ::core::fmt::Debug for xed_flag_dfv_s {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_flag_dfv_s {{ union }}")
    }
}
#[doc = "\n @ingroup FLAGS\n a struct representing an instruction's default flags values"]
pub type xed_flag_dfv_t = xed_flag_dfv_s;
extern "C" {
    #[doc = " @ingroup FLAGS\n extracts the default flags values from XED DFV pseudo-register to a given xed_flag_dfv_t pointer\n If the given DFV enumeration is invalid, the function returns 0"]
    pub fn xed_flag_dfv_get_default_flags_values(
        dfv_reg: xed_reg_enum_t,
        p: *mut xed_flag_dfv_t,
    ) -> xed_bool_t;
}
#[doc = " @ingroup FLAGS\n a union of flags bits"]
#[repr(C)]
#[derive(Copy, Clone)]
pub union xed_flag_set_s {
    pub flat: u32,
    pub s: xed_flag_set_s__bindgen_ty_1,
}
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct xed_flag_set_s__bindgen_ty_1 {
    pub _bitfield_align_1: [u8; 0],
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 4usize]>,
}
#[test]
fn bindgen_test_layout_xed_flag_set_s__bindgen_ty_1() {
    assert_eq!(
        ::core::mem::size_of::<xed_flag_set_s__bindgen_ty_1>(),
        4usize,
        concat!("Size of: ", stringify!(xed_flag_set_s__bindgen_ty_1))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_flag_set_s__bindgen_ty_1>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_flag_set_s__bindgen_ty_1))
    );
}
impl xed_flag_set_s__bindgen_ty_1 {
    #[inline]
    pub fn cf(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_cf(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn must_be_1(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_must_be_1(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn pf(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_pf(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn must_be_0a(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_must_be_0a(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn af(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(4usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_af(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(4usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn must_be_0b(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(5usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_must_be_0b(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(5usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn zf(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(6usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_zf(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(6usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn sf(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(7usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_sf(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(7usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn tf(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(8usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_tf(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(8usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn _if(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(9usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set__if(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(9usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn df(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(10usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_df(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(10usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn of(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(11usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_of(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(11usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn iopl(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(12usize, 2u8) as u32) }
    }
    #[inline]
    pub fn set_iopl(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(12usize, 2u8, val as u64)
        }
    }
    #[inline]
    pub fn nt(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(14usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_nt(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(14usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn must_be_0c(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(15usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_must_be_0c(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(15usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn rf(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(16usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_rf(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(16usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn vm(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(17usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_vm(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(17usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn ac(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(18usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_ac(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(18usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn vif(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(19usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_vif(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(19usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn vip(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(20usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_vip(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(20usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn id(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(21usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_id(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(21usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn must_be_0d(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(22usize, 2u8) as u32) }
    }
    #[inline]
    pub fn set_must_be_0d(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(22usize, 2u8, val as u64)
        }
    }
    #[inline]
    pub fn must_be_0e(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(24usize, 4u8) as u32) }
    }
    #[inline]
    pub fn set_must_be_0e(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(24usize, 4u8, val as u64)
        }
    }
    #[inline]
    pub fn fc0(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(28usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_fc0(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(28usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn fc1(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(29usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_fc1(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(29usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn fc2(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(30usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_fc2(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(30usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn fc3(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(31usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_fc3(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(31usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        cf: u32,
        must_be_1: u32,
        pf: u32,
        must_be_0a: u32,
        af: u32,
        must_be_0b: u32,
        zf: u32,
        sf: u32,
        tf: u32,
        _if: u32,
        df: u32,
        of: u32,
        iopl: u32,
        nt: u32,
        must_be_0c: u32,
        rf: u32,
        vm: u32,
        ac: u32,
        vif: u32,
        vip: u32,
        id: u32,
        must_be_0d: u32,
        must_be_0e: u32,
        fc0: u32,
        fc1: u32,
        fc2: u32,
        fc3: u32,
    ) -> __BindgenBitfieldUnit<[u8; 4usize]> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 4usize]> = Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let cf: u32 = unsafe { ::core::mem::transmute(cf) };
            cf as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let must_be_1: u32 = unsafe { ::core::mem::transmute(must_be_1) };
            must_be_1 as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let pf: u32 = unsafe { ::core::mem::transmute(pf) };
            pf as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let must_be_0a: u32 = unsafe { ::core::mem::transmute(must_be_0a) };
            must_be_0a as u64
        });
        __bindgen_bitfield_unit.set(4usize, 1u8, {
            let af: u32 = unsafe { ::core::mem::transmute(af) };
            af as u64
        });
        __bindgen_bitfield_unit.set(5usize, 1u8, {
            let must_be_0b: u32 = unsafe { ::core::mem::transmute(must_be_0b) };
            must_be_0b as u64
        });
        __bindgen_bitfield_unit.set(6usize, 1u8, {
            let zf: u32 = unsafe { ::core::mem::transmute(zf) };
            zf as u64
        });
        __bindgen_bitfield_unit.set(7usize, 1u8, {
            let sf: u32 = unsafe { ::core::mem::transmute(sf) };
            sf as u64
        });
        __bindgen_bitfield_unit.set(8usize, 1u8, {
            let tf: u32 = unsafe { ::core::mem::transmute(tf) };
            tf as u64
        });
        __bindgen_bitfield_unit.set(9usize, 1u8, {
            let _if: u32 = unsafe { ::core::mem::transmute(_if) };
            _if as u64
        });
        __bindgen_bitfield_unit.set(10usize, 1u8, {
            let df: u32 = unsafe { ::core::mem::transmute(df) };
            df as u64
        });
        __bindgen_bitfield_unit.set(11usize, 1u8, {
            let of: u32 = unsafe { ::core::mem::transmute(of) };
            of as u64
        });
        __bindgen_bitfield_unit.set(12usize, 2u8, {
            let iopl: u32 = unsafe { ::core::mem::transmute(iopl) };
            iopl as u64
        });
        __bindgen_bitfield_unit.set(14usize, 1u8, {
            let nt: u32 = unsafe { ::core::mem::transmute(nt) };
            nt as u64
        });
        __bindgen_bitfield_unit.set(15usize, 1u8, {
            let must_be_0c: u32 = unsafe { ::core::mem::transmute(must_be_0c) };
            must_be_0c as u64
        });
        __bindgen_bitfield_unit.set(16usize, 1u8, {
            let rf: u32 = unsafe { ::core::mem::transmute(rf) };
            rf as u64
        });
        __bindgen_bitfield_unit.set(17usize, 1u8, {
            let vm: u32 = unsafe { ::core::mem::transmute(vm) };
            vm as u64
        });
        __bindgen_bitfield_unit.set(18usize, 1u8, {
            let ac: u32 = unsafe { ::core::mem::transmute(ac) };
            ac as u64
        });
        __bindgen_bitfield_unit.set(19usize, 1u8, {
            let vif: u32 = unsafe { ::core::mem::transmute(vif) };
            vif as u64
        });
        __bindgen_bitfield_unit.set(20usize, 1u8, {
            let vip: u32 = unsafe { ::core::mem::transmute(vip) };
            vip as u64
        });
        __bindgen_bitfield_unit.set(21usize, 1u8, {
            let id: u32 = unsafe { ::core::mem::transmute(id) };
            id as u64
        });
        __bindgen_bitfield_unit.set(22usize, 2u8, {
            let must_be_0d: u32 = unsafe { ::core::mem::transmute(must_be_0d) };
            must_be_0d as u64
        });
        __bindgen_bitfield_unit.set(24usize, 4u8, {
            let must_be_0e: u32 = unsafe { ::core::mem::transmute(must_be_0e) };
            must_be_0e as u64
        });
        __bindgen_bitfield_unit.set(28usize, 1u8, {
            let fc0: u32 = unsafe { ::core::mem::transmute(fc0) };
            fc0 as u64
        });
        __bindgen_bitfield_unit.set(29usize, 1u8, {
            let fc1: u32 = unsafe { ::core::mem::transmute(fc1) };
            fc1 as u64
        });
        __bindgen_bitfield_unit.set(30usize, 1u8, {
            let fc2: u32 = unsafe { ::core::mem::transmute(fc2) };
            fc2 as u64
        });
        __bindgen_bitfield_unit.set(31usize, 1u8, {
            let fc3: u32 = unsafe { ::core::mem::transmute(fc3) };
            fc3 as u64
        });
        __bindgen_bitfield_unit
    }
}
#[test]
fn bindgen_test_layout_xed_flag_set_s() {
    const UNINIT: ::core::mem::MaybeUninit<xed_flag_set_s> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_flag_set_s>(),
        4usize,
        concat!("Size of: ", stringify!(xed_flag_set_s))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_flag_set_s>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_flag_set_s))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).flat) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_flag_set_s),
            "::",
            stringify!(flat)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_flag_set_s),
            "::",
            stringify!(s)
        )
    );
}
impl ::core::fmt::Debug for xed_flag_set_s {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_flag_set_s {{ union }}")
    }
}
#[doc = " @ingroup FLAGS\n a union of flags bits"]
pub type xed_flag_set_t = xed_flag_set_s;
extern "C" {
    #[doc = " @ingroup FLAGS\n print the flag set in the supplied buffer"]
    pub fn xed_flag_set_print(
        p: *const xed_flag_set_t,
        buf: *mut ::core::ffi::c_char,
        buflen: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n returns true if this object has a subset of the flags of the\n \"other\" object."]
    pub fn xed_flag_set_is_subset_of(
        p: *const xed_flag_set_t,
        other: *const xed_flag_set_t,
    ) -> xed_bool_t;
}
#[doc = " @ingroup FLAGS\n Associated with each flag field there can be one action."]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_flag_enum_s {
    pub flag: xed_flag_enum_t,
    pub action: xed_flag_action_enum_t,
}
#[test]
fn bindgen_test_layout_xed_flag_enum_s() {
    const UNINIT: ::core::mem::MaybeUninit<xed_flag_enum_s> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_flag_enum_s>(),
        8usize,
        concat!("Size of: ", stringify!(xed_flag_enum_s))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_flag_enum_s>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_flag_enum_s))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).flag) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_flag_enum_s),
            "::",
            stringify!(flag)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).action) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_flag_enum_s),
            "::",
            stringify!(action)
        )
    );
}
#[doc = " @ingroup FLAGS\n Associated with each flag field there can be one action."]
pub type xed_flag_action_t = xed_flag_enum_s;
extern "C" {
    #[doc = " @ingroup FLAGS\n get the name of the flag"]
    pub fn xed_flag_action_get_flag_name(p: *const xed_flag_action_t) -> xed_flag_enum_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n return the action"]
    pub fn xed_flag_action_get_action(
        p: *const xed_flag_action_t,
        i: ::core::ffi::c_uint,
    ) -> xed_flag_action_enum_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n returns true if the specified action is invalid. Only the 2nd flag might be invalid."]
    pub fn xed_flag_action_action_invalid(a: xed_flag_action_enum_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n print the flag & actions"]
    pub fn xed_flag_action_print(
        p: *const xed_flag_action_t,
        buf: *mut ::core::ffi::c_char,
        buflen: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n returns true if either action is a read"]
    pub fn xed_flag_action_read_flag(p: *const xed_flag_action_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n returns true if either action is a write"]
    pub fn xed_flag_action_writes_flag(p: *const xed_flag_action_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n test to see if the specific action is a read"]
    pub fn xed_flag_action_read_action(a: xed_flag_action_enum_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n test to see if a specific action is a write"]
    pub fn xed_flag_action_write_action(a: xed_flag_action_enum_t) -> xed_bool_t;
}
#[doc = " @ingroup FLAGS\n A collection of #xed_flag_action_t's and unions of read and written flags"]
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xed_simple_flag_s {
    #[doc = "number of flag actions associated with this record"]
    pub nflags: u8,
    pub may_write: u8,
    pub must_write: u8,
    #[doc = "union of read flags"]
    pub read: xed_flag_set_t,
    #[doc = " union of written flags (includes undefined flags);"]
    pub written: xed_flag_set_t,
    #[doc = " union of undefined flags;"]
    pub undefined: xed_flag_set_t,
    pub fa_index: u16,
}
#[test]
fn bindgen_test_layout_xed_simple_flag_s() {
    const UNINIT: ::core::mem::MaybeUninit<xed_simple_flag_s> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_simple_flag_s>(),
        20usize,
        concat!("Size of: ", stringify!(xed_simple_flag_s))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_simple_flag_s>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_simple_flag_s))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).nflags) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_simple_flag_s),
            "::",
            stringify!(nflags)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).may_write) as usize - ptr as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_simple_flag_s),
            "::",
            stringify!(may_write)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).must_write) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_simple_flag_s),
            "::",
            stringify!(must_write)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).read) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_simple_flag_s),
            "::",
            stringify!(read)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).written) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_simple_flag_s),
            "::",
            stringify!(written)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).undefined) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_simple_flag_s),
            "::",
            stringify!(undefined)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).fa_index) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_simple_flag_s),
            "::",
            stringify!(fa_index)
        )
    );
}
impl ::core::fmt::Debug for xed_simple_flag_s {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(
            f,
            "xed_simple_flag_s {{ read: {:?}, written: {:?}, undefined: {:?} }}",
            self.read, self.written, self.undefined
        )
    }
}
#[doc = " @ingroup FLAGS\n A collection of #xed_flag_action_t's and unions of read and written flags"]
pub type xed_simple_flag_t = xed_simple_flag_s;
extern "C" {
    #[doc = " @ingroup FLAGS\n returns the number of flag-actions"]
    pub fn xed_simple_flag_get_nflags(p: *const xed_simple_flag_t) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n return union of bits for read flags"]
    pub fn xed_simple_flag_get_read_flag_set(p: *const xed_simple_flag_t) -> *const xed_flag_set_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n return union of bits for written flags"]
    pub fn xed_simple_flag_get_written_flag_set(
        p: *const xed_simple_flag_t,
    ) -> *const xed_flag_set_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n return union of bits for undefined flags"]
    pub fn xed_simple_flag_get_undefined_flag_set(
        p: *const xed_simple_flag_t,
    ) -> *const xed_flag_set_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n Indicates the flags are only conditionally written. Usually MAY-writes\n of the flags instructions that are dependent on a REP count."]
    pub fn xed_simple_flag_get_may_write(p: *const xed_simple_flag_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n the flags always written"]
    pub fn xed_simple_flag_get_must_write(p: *const xed_simple_flag_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n return the specific flag-action. Very detailed low level information"]
    pub fn xed_simple_flag_get_flag_action(
        p: *const xed_simple_flag_t,
        i: ::core::ffi::c_uint,
    ) -> *const xed_flag_action_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n boolean test to see if flags are read, scans the flags"]
    pub fn xed_simple_flag_reads_flags(p: *const xed_simple_flag_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n boolean test to see if flags are written, scans the flags"]
    pub fn xed_simple_flag_writes_flags(p: *const xed_simple_flag_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n print the flags"]
    pub fn xed_simple_flag_print(
        p: *const xed_simple_flag_t,
        buf: *mut ::core::ffi::c_char,
        buflen: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
extern "C" {
    #[doc = " @ingroup FLAGS\n Return the flags as a mask"]
    #[link_name = "xed_flag_set_mask_xed_sys_inline"]
    pub fn xed_flag_set_mask(p: *const xed_flag_set_t) -> ::core::ffi::c_uint;
}
pub const XED_CHIP_INVALID: xed_chip_enum_t = 0;
pub const XED_CHIP_I86: xed_chip_enum_t = 1;
pub const XED_CHIP_I86FP: xed_chip_enum_t = 2;
pub const XED_CHIP_I186: xed_chip_enum_t = 3;
pub const XED_CHIP_I186FP: xed_chip_enum_t = 4;
pub const XED_CHIP_I286REAL: xed_chip_enum_t = 5;
pub const XED_CHIP_I286: xed_chip_enum_t = 6;
pub const XED_CHIP_I2186FP: xed_chip_enum_t = 7;
pub const XED_CHIP_I386REAL: xed_chip_enum_t = 8;
pub const XED_CHIP_I386: xed_chip_enum_t = 9;
pub const XED_CHIP_I386FP: xed_chip_enum_t = 10;
pub const XED_CHIP_I486REAL: xed_chip_enum_t = 11;
pub const XED_CHIP_I486: xed_chip_enum_t = 12;
pub const XED_CHIP_PENTIUMREAL: xed_chip_enum_t = 13;
pub const XED_CHIP_PENTIUM: xed_chip_enum_t = 14;
pub const XED_CHIP_QUARK: xed_chip_enum_t = 15;
pub const XED_CHIP_PENTIUMMMXREAL: xed_chip_enum_t = 16;
pub const XED_CHIP_PENTIUMMMX: xed_chip_enum_t = 17;
pub const XED_CHIP_ALLREAL: xed_chip_enum_t = 18;
pub const XED_CHIP_PENTIUMPRO: xed_chip_enum_t = 19;
pub const XED_CHIP_PENTIUM2: xed_chip_enum_t = 20;
pub const XED_CHIP_PENTIUM3: xed_chip_enum_t = 21;
pub const XED_CHIP_PENTIUM4: xed_chip_enum_t = 22;
pub const XED_CHIP_P4PRESCOTT: xed_chip_enum_t = 23;
pub const XED_CHIP_P4PRESCOTT_NOLAHF: xed_chip_enum_t = 24;
pub const XED_CHIP_P4PRESCOTT_VTX: xed_chip_enum_t = 25;
pub const XED_CHIP_MEROM: xed_chip_enum_t = 26;
pub const XED_CHIP_PENRYN: xed_chip_enum_t = 27;
pub const XED_CHIP_PENRYN_E: xed_chip_enum_t = 28;
pub const XED_CHIP_NEHALEM: xed_chip_enum_t = 29;
pub const XED_CHIP_WESTMERE: xed_chip_enum_t = 30;
pub const XED_CHIP_BONNELL: xed_chip_enum_t = 31;
pub const XED_CHIP_SALTWELL: xed_chip_enum_t = 32;
pub const XED_CHIP_SILVERMONT: xed_chip_enum_t = 33;
pub const XED_CHIP_VIA: xed_chip_enum_t = 34;
pub const XED_CHIP_AMD_K10: xed_chip_enum_t = 35;
pub const XED_CHIP_AMD_BULLDOZER: xed_chip_enum_t = 36;
pub const XED_CHIP_AMD_PILEDRIVER: xed_chip_enum_t = 37;
pub const XED_CHIP_AMD_ZEN: xed_chip_enum_t = 38;
pub const XED_CHIP_AMD_ZENPLUS: xed_chip_enum_t = 39;
pub const XED_CHIP_AMD_ZEN2: xed_chip_enum_t = 40;
pub const XED_CHIP_AMD_FUTURE: xed_chip_enum_t = 41;
pub const XED_CHIP_GOLDMONT: xed_chip_enum_t = 42;
pub const XED_CHIP_GOLDMONT_PLUS: xed_chip_enum_t = 43;
pub const XED_CHIP_TREMONT: xed_chip_enum_t = 44;
pub const XED_CHIP_SNOW_RIDGE: xed_chip_enum_t = 45;
pub const XED_CHIP_LAKEFIELD: xed_chip_enum_t = 46;
pub const XED_CHIP_SANDYBRIDGE: xed_chip_enum_t = 47;
pub const XED_CHIP_IVYBRIDGE: xed_chip_enum_t = 48;
pub const XED_CHIP_HASWELL: xed_chip_enum_t = 49;
pub const XED_CHIP_BROADWELL: xed_chip_enum_t = 50;
pub const XED_CHIP_SKYLAKE: xed_chip_enum_t = 51;
pub const XED_CHIP_COMET_LAKE: xed_chip_enum_t = 52;
pub const XED_CHIP_SKYLAKE_SERVER: xed_chip_enum_t = 53;
pub const XED_CHIP_CASCADE_LAKE: xed_chip_enum_t = 54;
pub const XED_CHIP_COOPER_LAKE: xed_chip_enum_t = 55;
pub const XED_CHIP_KNL: xed_chip_enum_t = 56;
pub const XED_CHIP_KNM: xed_chip_enum_t = 57;
pub const XED_CHIP_CANNONLAKE: xed_chip_enum_t = 58;
pub const XED_CHIP_ICE_LAKE: xed_chip_enum_t = 59;
pub const XED_CHIP_ICE_LAKE_SERVER: xed_chip_enum_t = 60;
pub const XED_CHIP_TIGER_LAKE: xed_chip_enum_t = 61;
pub const XED_CHIP_ALDER_LAKE: xed_chip_enum_t = 62;
pub const XED_CHIP_SAPPHIRE_RAPIDS: xed_chip_enum_t = 63;
pub const XED_CHIP_EMERALD_RAPIDS: xed_chip_enum_t = 64;
pub const XED_CHIP_GRANITE_RAPIDS: xed_chip_enum_t = 65;
pub const XED_CHIP_SIERRA_FOREST: xed_chip_enum_t = 66;
pub const XED_CHIP_CLEARWATER_FOREST: xed_chip_enum_t = 67;
pub const XED_CHIP_ARROW_LAKE: xed_chip_enum_t = 68;
pub const XED_CHIP_LUNAR_LAKE: xed_chip_enum_t = 69;
pub const XED_CHIP_PANTHER_LAKE: xed_chip_enum_t = 70;
pub const XED_CHIP_FUTURE: xed_chip_enum_t = 71;
pub const XED_CHIP_ALL: xed_chip_enum_t = 72;
pub const XED_CHIP_LAST: xed_chip_enum_t = 73;
pub type xed_chip_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_chip_enum_t types.\n @param s A C-string.\n @return #xed_chip_enum_t\n @ingroup ENUM"]
    pub fn str2xed_chip_enum_t(s: *const ::core::ffi::c_char) -> xed_chip_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_chip_enum_t types.\n @param p An enumeration element of type xed_chip_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_chip_enum_t2str(p: xed_chip_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_chip_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_chip_enum_t_last() -> xed_chip_enum_t;
}
pub const XED_OPERAND_ELEMENT_TYPE_INVALID: xed_operand_element_type_enum_t = 0;
#[doc = "< Unsigned integer"]
pub const XED_OPERAND_ELEMENT_TYPE_UINT: xed_operand_element_type_enum_t = 1;
#[doc = "< Signed integer"]
pub const XED_OPERAND_ELEMENT_TYPE_INT: xed_operand_element_type_enum_t = 2;
#[doc = "< 32b FP single precision"]
pub const XED_OPERAND_ELEMENT_TYPE_SINGLE: xed_operand_element_type_enum_t = 3;
#[doc = "< 64b FP double precision"]
pub const XED_OPERAND_ELEMENT_TYPE_DOUBLE: xed_operand_element_type_enum_t = 4;
#[doc = "< 80b FP x87"]
pub const XED_OPERAND_ELEMENT_TYPE_LONGDOUBLE: xed_operand_element_type_enum_t = 5;
#[doc = "< 80b decimal BCD"]
pub const XED_OPERAND_ELEMENT_TYPE_LONGBCD: xed_operand_element_type_enum_t = 6;
#[doc = "< a structure of various fields"]
pub const XED_OPERAND_ELEMENT_TYPE_STRUCT: xed_operand_element_type_enum_t = 7;
#[doc = "< depends on other fields in the instruction"]
pub const XED_OPERAND_ELEMENT_TYPE_VARIABLE: xed_operand_element_type_enum_t = 8;
#[doc = "< 16b floating point"]
pub const XED_OPERAND_ELEMENT_TYPE_FLOAT16: xed_operand_element_type_enum_t = 9;
#[doc = "< bfloat16 floating point"]
pub const XED_OPERAND_ELEMENT_TYPE_BFLOAT16: xed_operand_element_type_enum_t = 10;
#[doc = "< 8 bit integer"]
pub const XED_OPERAND_ELEMENT_TYPE_INT8: xed_operand_element_type_enum_t = 11;
#[doc = "< 8 bit unsigned integer"]
pub const XED_OPERAND_ELEMENT_TYPE_UINT8: xed_operand_element_type_enum_t = 12;
pub const XED_OPERAND_ELEMENT_TYPE_LAST: xed_operand_element_type_enum_t = 13;
pub type xed_operand_element_type_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_operand_element_type_enum_t types.\n @param s A C-string.\n @return #xed_operand_element_type_enum_t\n @ingroup ENUM"]
    pub fn str2xed_operand_element_type_enum_t(
        s: *const ::core::ffi::c_char,
    ) -> xed_operand_element_type_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_operand_element_type_enum_t types.\n @param p An enumeration element of type xed_operand_element_type_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_operand_element_type_enum_t2str(
        p: xed_operand_element_type_enum_t,
    ) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_operand_element_type_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_operand_element_type_enum_t_last() -> xed_operand_element_type_enum_t;
}
#[doc = "< There was no error"]
pub const XED_ERROR_NONE: xed_error_enum_t = 0;
#[doc = "< There were not enough bytes in the given buffer"]
pub const XED_ERROR_BUFFER_TOO_SHORT: xed_error_enum_t = 1;
#[doc = "< XED could not decode the given instruction"]
pub const XED_ERROR_GENERAL_ERROR: xed_error_enum_t = 2;
#[doc = "< The instruciton is not valid for the specified chip"]
pub const XED_ERROR_INVALID_FOR_CHIP: xed_error_enum_t = 3;
#[doc = "< XED could not decode the given instruction because an invalid register encoding was used."]
pub const XED_ERROR_BAD_REGISTER: xed_error_enum_t = 4;
#[doc = "< A lock prefix was found where none is allowed."]
pub const XED_ERROR_BAD_LOCK_PREFIX: xed_error_enum_t = 5;
#[doc = "< An F2 or F3 prefix was found where none is allowed."]
pub const XED_ERROR_BAD_REP_PREFIX: xed_error_enum_t = 6;
#[doc = "< A 66, F2 or F3 prefix was found where none is allowed."]
pub const XED_ERROR_BAD_LEGACY_PREFIX: xed_error_enum_t = 7;
#[doc = "< A REX prefix was found where none is allowed."]
pub const XED_ERROR_BAD_REX_PREFIX: xed_error_enum_t = 8;
#[doc = "< An illegal value for the MAP field was detected in the instruction."]
pub const XED_ERROR_BAD_MAP: xed_error_enum_t = 9;
#[doc = "< EVEX.V'=0 was detected in a non-64b mode instruction."]
pub const XED_ERROR_BAD_EVEX_V_PRIME: xed_error_enum_t = 10;
#[doc = "< EVEX.Z!=0 when EVEX.aaa==0"]
pub const XED_ERROR_BAD_EVEX_Z_NO_MASKING: xed_error_enum_t = 11;
#[doc = "< The output pointer for xed_agen was zero"]
pub const XED_ERROR_NO_OUTPUT_POINTER: xed_error_enum_t = 12;
#[doc = "< One or both of the callbacks for xed_agen were missing."]
pub const XED_ERROR_NO_AGEN_CALL_BACK_REGISTERED: xed_error_enum_t = 13;
#[doc = "< Memop indices must be 0 or 1."]
pub const XED_ERROR_BAD_MEMOP_INDEX: xed_error_enum_t = 14;
#[doc = "< The register or segment callback for xed_agen experienced a problem"]
pub const XED_ERROR_CALLBACK_PROBLEM: xed_error_enum_t = 15;
#[doc = "< The index, dest and mask regs for AVX2 gathers must be different."]
pub const XED_ERROR_GATHER_REGS: xed_error_enum_t = 16;
#[doc = "< Full decode of instruction would exeed 15B."]
pub const XED_ERROR_INSTR_TOO_LONG: xed_error_enum_t = 17;
#[doc = "< The instruction was not valid for the specified mode"]
pub const XED_ERROR_INVALID_MODE: xed_error_enum_t = 18;
#[doc = "< EVEX.LL must not ==3 unless using embedded rounding"]
pub const XED_ERROR_BAD_EVEX_LL: xed_error_enum_t = 19;
#[doc = "< Some registers must not match for this instruction (e.g. source with dest or dest with dest)."]
pub const XED_ERROR_BAD_REG_MATCH: xed_error_enum_t = 20;
pub const XED_ERROR_LAST: xed_error_enum_t = 21;
pub type xed_error_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_error_enum_t types.\n @param s A C-string.\n @return #xed_error_enum_t\n @ingroup ENUM"]
    pub fn str2xed_error_enum_t(s: *const ::core::ffi::c_char) -> xed_error_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_error_enum_t types.\n @param p An enumeration element of type xed_error_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_error_enum_t2str(p: xed_error_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_error_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_error_enum_t_last() -> xed_error_enum_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_operand_storage_s {
    pub absbr: u8,
    pub agen: u8,
    pub amd3dnow: u8,
    pub asz: u8,
    pub bcrc: u8,
    pub cet: u8,
    pub cldemote: u8,
    pub df32: u8,
    pub df64: u8,
    pub dummy: u8,
    pub encoder_preferred: u8,
    pub encode_force: u8,
    pub has_egpr: u8,
    pub has_sib: u8,
    pub ild_f2: u8,
    pub ild_f3: u8,
    pub imm0: u8,
    pub imm0signed: u8,
    pub imm1: u8,
    pub lock: u8,
    pub lzcnt: u8,
    pub mem0: u8,
    pub mem1: u8,
    pub modep5: u8,
    pub modep55c: u8,
    pub mode_first_prefix: u8,
    pub mode_short_ud0: u8,
    pub mpxmode: u8,
    pub must_use_evex: u8,
    pub nd: u8,
    pub needrex: u8,
    pub need_sib: u8,
    pub nf: u8,
    pub norex: u8,
    pub norex2: u8,
    pub no_apx: u8,
    pub no_evex: u8,
    pub no_vex: u8,
    pub osz: u8,
    pub out_of_bytes: u8,
    pub p4: u8,
    pub prefix66: u8,
    pub ptr: u8,
    pub realmode: u8,
    pub relbr: u8,
    pub rex: u8,
    pub rex2: u8,
    pub rexb: u8,
    pub rexb4: u8,
    pub rexr: u8,
    pub rexr4: u8,
    pub rexw: u8,
    pub rexx: u8,
    pub rexx4: u8,
    pub sae: u8,
    pub skip_osz: u8,
    pub tzcnt: u8,
    pub ubit: u8,
    pub using_default_segment0: u8,
    pub using_default_segment1: u8,
    pub vexdest3: u8,
    pub vexdest4: u8,
    pub vex_c4: u8,
    pub vl_ign: u8,
    pub wbnoinvd: u8,
    pub zeroing: u8,
    pub default_seg: u8,
    pub easz: u8,
    pub eosz: u8,
    pub evvspace: u8,
    pub first_f2f3: u8,
    pub has_modrm: u8,
    pub last_f2f3: u8,
    pub llrc: u8,
    pub mod_: u8,
    pub mode: u8,
    pub rep: u8,
    pub sibscale: u8,
    pub smode: u8,
    pub vex_prefix: u8,
    pub vl: u8,
    pub hint: u8,
    pub mask: u8,
    pub reg: u8,
    pub rm: u8,
    pub roundc: u8,
    pub seg_ovd: u8,
    pub sibbase: u8,
    pub sibindex: u8,
    pub srm: u8,
    pub vexdest210: u8,
    pub vexvalid: u8,
    pub error: u8,
    pub esrc: u8,
    pub map: u8,
    pub nelem: u8,
    pub scale: u8,
    pub scc: u8,
    pub bcast: u8,
    pub need_memdisp: u8,
    pub chip: u8,
    pub brdisp_width: u8,
    pub disp_width: u8,
    pub ild_seg: u8,
    pub imm1_bytes: u8,
    pub imm_width: u8,
    pub max_bytes: u8,
    pub modrm_byte: u8,
    pub nominal_opcode: u8,
    pub nprefixes: u8,
    pub nrexes: u8,
    pub nseg_prefixes: u8,
    pub pos_disp: u8,
    pub pos_imm: u8,
    pub pos_imm1: u8,
    pub pos_modrm: u8,
    pub pos_nominal_opcode: u8,
    pub pos_sib: u8,
    pub uimm1: u8,
    pub base0: u16,
    pub base1: u16,
    pub element_size: u16,
    pub index: u16,
    pub outreg: u16,
    pub reg0: u16,
    pub reg1: u16,
    pub reg2: u16,
    pub reg3: u16,
    pub reg4: u16,
    pub reg5: u16,
    pub reg6: u16,
    pub reg7: u16,
    pub reg8: u16,
    pub reg9: u16,
    pub seg0: u16,
    pub seg1: u16,
    pub iclass: u16,
    pub mem_width: u16,
    pub disp: u64,
    pub uimm0: u64,
}
#[test]
fn bindgen_test_layout_xed_operand_storage_s() {
    const UNINIT: ::core::mem::MaybeUninit<xed_operand_storage_s> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_operand_storage_s>(),
        176usize,
        concat!("Size of: ", stringify!(xed_operand_storage_s))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_operand_storage_s>(),
        8usize,
        concat!("Alignment of ", stringify!(xed_operand_storage_s))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).absbr) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(absbr)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).agen) as usize - ptr as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(agen)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).amd3dnow) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(amd3dnow)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).asz) as usize - ptr as usize },
        3usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(asz)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).bcrc) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(bcrc)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).cet) as usize - ptr as usize },
        5usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(cet)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).cldemote) as usize - ptr as usize },
        6usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(cldemote)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).df32) as usize - ptr as usize },
        7usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(df32)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).df64) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(df64)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).dummy) as usize - ptr as usize },
        9usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(dummy)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).encoder_preferred) as usize - ptr as usize },
        10usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(encoder_preferred)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).encode_force) as usize - ptr as usize },
        11usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(encode_force)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).has_egpr) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(has_egpr)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).has_sib) as usize - ptr as usize },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(has_sib)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).ild_f2) as usize - ptr as usize },
        14usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(ild_f2)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).ild_f3) as usize - ptr as usize },
        15usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(ild_f3)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).imm0) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(imm0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).imm0signed) as usize - ptr as usize },
        17usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(imm0signed)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).imm1) as usize - ptr as usize },
        18usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(imm1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).lock) as usize - ptr as usize },
        19usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(lock)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).lzcnt) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(lzcnt)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mem0) as usize - ptr as usize },
        21usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(mem0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mem1) as usize - ptr as usize },
        22usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(mem1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).modep5) as usize - ptr as usize },
        23usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(modep5)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).modep55c) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(modep55c)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mode_first_prefix) as usize - ptr as usize },
        25usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(mode_first_prefix)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mode_short_ud0) as usize - ptr as usize },
        26usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(mode_short_ud0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mpxmode) as usize - ptr as usize },
        27usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(mpxmode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).must_use_evex) as usize - ptr as usize },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(must_use_evex)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).nd) as usize - ptr as usize },
        29usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(nd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).needrex) as usize - ptr as usize },
        30usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(needrex)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).need_sib) as usize - ptr as usize },
        31usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(need_sib)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).nf) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(nf)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).norex) as usize - ptr as usize },
        33usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(norex)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).norex2) as usize - ptr as usize },
        34usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(norex2)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).no_apx) as usize - ptr as usize },
        35usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(no_apx)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).no_evex) as usize - ptr as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(no_evex)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).no_vex) as usize - ptr as usize },
        37usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(no_vex)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).osz) as usize - ptr as usize },
        38usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(osz)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).out_of_bytes) as usize - ptr as usize },
        39usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(out_of_bytes)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).p4) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(p4)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).prefix66) as usize - ptr as usize },
        41usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(prefix66)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).ptr) as usize - ptr as usize },
        42usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(ptr)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).realmode) as usize - ptr as usize },
        43usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(realmode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).relbr) as usize - ptr as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(relbr)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rex) as usize - ptr as usize },
        45usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(rex)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rex2) as usize - ptr as usize },
        46usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(rex2)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rexb) as usize - ptr as usize },
        47usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(rexb)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rexb4) as usize - ptr as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(rexb4)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rexr) as usize - ptr as usize },
        49usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(rexr)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rexr4) as usize - ptr as usize },
        50usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(rexr4)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rexw) as usize - ptr as usize },
        51usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(rexw)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rexx) as usize - ptr as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(rexx)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rexx4) as usize - ptr as usize },
        53usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(rexx4)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).sae) as usize - ptr as usize },
        54usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(sae)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).skip_osz) as usize - ptr as usize },
        55usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(skip_osz)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).tzcnt) as usize - ptr as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(tzcnt)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).ubit) as usize - ptr as usize },
        57usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(ubit)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).using_default_segment0) as usize - ptr as usize },
        58usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(using_default_segment0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).using_default_segment1) as usize - ptr as usize },
        59usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(using_default_segment1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).vexdest3) as usize - ptr as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(vexdest3)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).vexdest4) as usize - ptr as usize },
        61usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(vexdest4)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).vex_c4) as usize - ptr as usize },
        62usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(vex_c4)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).vl_ign) as usize - ptr as usize },
        63usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(vl_ign)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).wbnoinvd) as usize - ptr as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(wbnoinvd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).zeroing) as usize - ptr as usize },
        65usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(zeroing)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).default_seg) as usize - ptr as usize },
        66usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(default_seg)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).easz) as usize - ptr as usize },
        67usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(easz)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).eosz) as usize - ptr as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(eosz)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).evvspace) as usize - ptr as usize },
        69usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(evvspace)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).first_f2f3) as usize - ptr as usize },
        70usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(first_f2f3)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).has_modrm) as usize - ptr as usize },
        71usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(has_modrm)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).last_f2f3) as usize - ptr as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(last_f2f3)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).llrc) as usize - ptr as usize },
        73usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(llrc)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mod_) as usize - ptr as usize },
        74usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(mod_)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mode) as usize - ptr as usize },
        75usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(mode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rep) as usize - ptr as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(rep)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).sibscale) as usize - ptr as usize },
        77usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(sibscale)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).smode) as usize - ptr as usize },
        78usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(smode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).vex_prefix) as usize - ptr as usize },
        79usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(vex_prefix)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).vl) as usize - ptr as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(vl)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).hint) as usize - ptr as usize },
        81usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(hint)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mask) as usize - ptr as usize },
        82usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(mask)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg) as usize - ptr as usize },
        83usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(reg)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).rm) as usize - ptr as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(rm)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).roundc) as usize - ptr as usize },
        85usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(roundc)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).seg_ovd) as usize - ptr as usize },
        86usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(seg_ovd)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).sibbase) as usize - ptr as usize },
        87usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(sibbase)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).sibindex) as usize - ptr as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(sibindex)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).srm) as usize - ptr as usize },
        89usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(srm)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).vexdest210) as usize - ptr as usize },
        90usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(vexdest210)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).vexvalid) as usize - ptr as usize },
        91usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(vexvalid)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).error) as usize - ptr as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(error)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).esrc) as usize - ptr as usize },
        93usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(esrc)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).map) as usize - ptr as usize },
        94usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(map)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).nelem) as usize - ptr as usize },
        95usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(nelem)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).scale) as usize - ptr as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).scc) as usize - ptr as usize },
        97usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(scc)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).bcast) as usize - ptr as usize },
        98usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(bcast)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).need_memdisp) as usize - ptr as usize },
        99usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(need_memdisp)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).chip) as usize - ptr as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(chip)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).brdisp_width) as usize - ptr as usize },
        101usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(brdisp_width)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).disp_width) as usize - ptr as usize },
        102usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(disp_width)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).ild_seg) as usize - ptr as usize },
        103usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(ild_seg)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).imm1_bytes) as usize - ptr as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(imm1_bytes)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).imm_width) as usize - ptr as usize },
        105usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(imm_width)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).max_bytes) as usize - ptr as usize },
        106usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(max_bytes)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).modrm_byte) as usize - ptr as usize },
        107usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(modrm_byte)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).nominal_opcode) as usize - ptr as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(nominal_opcode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).nprefixes) as usize - ptr as usize },
        109usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(nprefixes)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).nrexes) as usize - ptr as usize },
        110usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(nrexes)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).nseg_prefixes) as usize - ptr as usize },
        111usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(nseg_prefixes)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).pos_disp) as usize - ptr as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(pos_disp)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).pos_imm) as usize - ptr as usize },
        113usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(pos_imm)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).pos_imm1) as usize - ptr as usize },
        114usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(pos_imm1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).pos_modrm) as usize - ptr as usize },
        115usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(pos_modrm)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).pos_nominal_opcode) as usize - ptr as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(pos_nominal_opcode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).pos_sib) as usize - ptr as usize },
        117usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(pos_sib)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).uimm1) as usize - ptr as usize },
        118usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(uimm1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).base0) as usize - ptr as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(base0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).base1) as usize - ptr as usize },
        122usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(base1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).element_size) as usize - ptr as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(element_size)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).index) as usize - ptr as usize },
        126usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(index)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).outreg) as usize - ptr as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(outreg)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg0) as usize - ptr as usize },
        130usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(reg0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg1) as usize - ptr as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(reg1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg2) as usize - ptr as usize },
        134usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(reg2)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg3) as usize - ptr as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(reg3)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg4) as usize - ptr as usize },
        138usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(reg4)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg5) as usize - ptr as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(reg5)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg6) as usize - ptr as usize },
        142usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(reg6)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg7) as usize - ptr as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(reg7)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg8) as usize - ptr as usize },
        146usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(reg8)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg9) as usize - ptr as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(reg9)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).seg0) as usize - ptr as usize },
        150usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(seg0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).seg1) as usize - ptr as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(seg1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).iclass) as usize - ptr as usize },
        154usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(iclass)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mem_width) as usize - ptr as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(mem_width)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).disp) as usize - ptr as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(disp)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).uimm0) as usize - ptr as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_operand_storage_s),
            "::",
            stringify!(uimm0)
        )
    );
}
pub type xed_operand_storage_t = xed_operand_storage_s;
#[repr(C)]
#[derive(Copy, Clone)]
pub union xed_ild_vars_t {
    pub i: u32,
    pub s: xed_ild_vars_t__bindgen_ty_1,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_ild_vars_t__bindgen_ty_1 {
    pub has_modrm: u8,
    pub has_disp: u8,
    pub has_imm: u8,
}
#[test]
fn bindgen_test_layout_xed_ild_vars_t__bindgen_ty_1() {
    const UNINIT: ::core::mem::MaybeUninit<xed_ild_vars_t__bindgen_ty_1> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_ild_vars_t__bindgen_ty_1>(),
        3usize,
        concat!("Size of: ", stringify!(xed_ild_vars_t__bindgen_ty_1))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_ild_vars_t__bindgen_ty_1>(),
        1usize,
        concat!("Alignment of ", stringify!(xed_ild_vars_t__bindgen_ty_1))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).has_modrm) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_ild_vars_t__bindgen_ty_1),
            "::",
            stringify!(has_modrm)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).has_disp) as usize - ptr as usize },
        1usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_ild_vars_t__bindgen_ty_1),
            "::",
            stringify!(has_disp)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).has_imm) as usize - ptr as usize },
        2usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_ild_vars_t__bindgen_ty_1),
            "::",
            stringify!(has_imm)
        )
    );
}
#[test]
fn bindgen_test_layout_xed_ild_vars_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_ild_vars_t> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_ild_vars_t>(),
        4usize,
        concat!("Size of: ", stringify!(xed_ild_vars_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_ild_vars_t>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_ild_vars_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).i) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_ild_vars_t),
            "::",
            stringify!(i)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_ild_vars_t),
            "::",
            stringify!(s)
        )
    );
}
impl ::core::fmt::Debug for xed_ild_vars_t {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_ild_vars_t {{ union }}")
    }
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_encoder_vars_s {
    _unused: [u8; 0],
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_decoder_vars_s {
    _unused: [u8; 0],
}
#[doc = " @ingroup DEC\n The main container for instructions. After decode, it holds an array of\n operands with derived information from decode and also valid\n #xed_inst_t pointer which describes the operand templates and the\n operand order.  See @ref DEC for API documentation."]
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xed_decoded_inst_s {
    #[doc = " The _operands are storage for information discovered during\n decoding. They are also used by encode.  The accessors for these\n operands all have the form xed3_operand_{get,set}_*(). They should\n be considered internal and subject to change over time. It is\n preferred that you use xed_decoded_inst_*() or the\n xed_operand_values_*() functions when available."]
    pub _operands: xed_operand_storage_t,
    #[doc = " Used for encode operand ordering. Not set by decode."]
    pub _operand_order: [u8; 5usize],
    #[doc = " Length of the _operand_order[] array."]
    pub _n_operand_order: u8,
    pub _decoded_length: u8,
    #[doc = " when we decode an instruction, we set the _inst and get the\n properites of that instruction here. This also points to the\n operands template array."]
    pub _inst: *const xed_inst_t,
    pub _byte_array: xed_decoded_inst_s__bindgen_ty_1,
    pub u: xed_decoded_inst_s__bindgen_ty_2,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xed_decoded_inst_s__bindgen_ty_1 {
    pub _enc: *mut u8,
    pub _dec: *const u8,
}
#[test]
fn bindgen_test_layout_xed_decoded_inst_s__bindgen_ty_1() {
    const UNINIT: ::core::mem::MaybeUninit<xed_decoded_inst_s__bindgen_ty_1> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_decoded_inst_s__bindgen_ty_1>(),
        8usize,
        concat!("Size of: ", stringify!(xed_decoded_inst_s__bindgen_ty_1))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_decoded_inst_s__bindgen_ty_1>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(xed_decoded_inst_s__bindgen_ty_1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._enc) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s__bindgen_ty_1),
            "::",
            stringify!(_enc)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._dec) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s__bindgen_ty_1),
            "::",
            stringify!(_dec)
        )
    );
}
impl ::core::fmt::Debug for xed_decoded_inst_s__bindgen_ty_1 {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_decoded_inst_s__bindgen_ty_1 {{ union }}")
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xed_decoded_inst_s__bindgen_ty_2 {
    pub user_data: u64,
    pub ild_data: xed_ild_vars_t,
    pub ev: *mut xed_encoder_vars_s,
}
#[test]
fn bindgen_test_layout_xed_decoded_inst_s__bindgen_ty_2() {
    const UNINIT: ::core::mem::MaybeUninit<xed_decoded_inst_s__bindgen_ty_2> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_decoded_inst_s__bindgen_ty_2>(),
        8usize,
        concat!("Size of: ", stringify!(xed_decoded_inst_s__bindgen_ty_2))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_decoded_inst_s__bindgen_ty_2>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(xed_decoded_inst_s__bindgen_ty_2)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).user_data) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s__bindgen_ty_2),
            "::",
            stringify!(user_data)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).ild_data) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s__bindgen_ty_2),
            "::",
            stringify!(ild_data)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).ev) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s__bindgen_ty_2),
            "::",
            stringify!(ev)
        )
    );
}
impl ::core::fmt::Debug for xed_decoded_inst_s__bindgen_ty_2 {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_decoded_inst_s__bindgen_ty_2 {{ union }}")
    }
}
#[test]
fn bindgen_test_layout_xed_decoded_inst_s() {
    const UNINIT: ::core::mem::MaybeUninit<xed_decoded_inst_s> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_decoded_inst_s>(),
        208usize,
        concat!("Size of: ", stringify!(xed_decoded_inst_s))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_decoded_inst_s>(),
        8usize,
        concat!("Alignment of ", stringify!(xed_decoded_inst_s))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._operands) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s),
            "::",
            stringify!(_operands)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._operand_order) as usize - ptr as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s),
            "::",
            stringify!(_operand_order)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._n_operand_order) as usize - ptr as usize },
        181usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s),
            "::",
            stringify!(_n_operand_order)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._decoded_length) as usize - ptr as usize },
        182usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s),
            "::",
            stringify!(_decoded_length)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._inst) as usize - ptr as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s),
            "::",
            stringify!(_inst)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr)._byte_array) as usize - ptr as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s),
            "::",
            stringify!(_byte_array)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).u) as usize - ptr as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_decoded_inst_s),
            "::",
            stringify!(u)
        )
    );
}
impl ::core::fmt::Debug for xed_decoded_inst_s {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write ! (f , "xed_decoded_inst_s {{ _operands: {:?}, _operand_order: {:?}, _inst: {:?}, _byte_array: {:?}, u: {:?} }}" , self . _operands , self . _operand_order , self . _inst , self . _byte_array , self . u)
    }
}
#[doc = " @ingroup DEC\n The main container for instructions. After decode, it holds an array of\n operands with derived information from decode and also valid\n #xed_inst_t pointer which describes the operand templates and the\n operand order.  See @ref DEC for API documentation."]
pub type xed_decoded_inst_t = xed_decoded_inst_s;
#[doc = " @ingroup DEC\n The main container for instructions. After decode, it holds an array of\n operands with derived information from decode and also valid\n #xed_inst_t pointer which describes the operand templates and the\n operand order.  See @ref DEC for API documentation."]
pub type xed_operand_values_t = xed_decoded_inst_t;
#[doc = " @ingroup ISASET"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_chip_features_t {
    pub f: [u64; 6usize],
}
#[test]
fn bindgen_test_layout_xed_chip_features_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_chip_features_t> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_chip_features_t>(),
        48usize,
        concat!("Size of: ", stringify!(xed_chip_features_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_chip_features_t>(),
        8usize,
        concat!("Alignment of ", stringify!(xed_chip_features_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).f) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_chip_features_t),
            "::",
            stringify!(f)
        )
    );
}
extern "C" {
    #[doc = " fill in the contents of p with the vector of chip features."]
    pub fn xed_get_chip_features(p: *mut xed_chip_features_t, chip: xed_chip_enum_t);
}
extern "C" {
    #[doc = " present = 1 to turn the feature on. present=0 to remove the feature."]
    pub fn xed_modify_chip_features(
        p: *mut xed_chip_features_t,
        isa_set: xed_isa_set_enum_t,
        present: xed_bool_t,
    );
}
extern "C" {
    #[doc = " This is the main interface to the decoder.\n  @param xedd the decoded instruction of type #xed_decoded_inst_t . Mode/state sent in via xedd; See the #xed_state_t\n  @param itext the pointer to the array of instruction text bytes\n  @param bytes  the length of the itext input array. 1 to 15 bytes, anything more is ignored.\n  @return #xed_error_enum_t indicating success (#XED_ERROR_NONE) or failure. Note failure can be due to not\n  enough bytes in the input array.\n\n The maximum instruction is 15B and XED will tell you how long the\n actual instruction is via an API function call\n xed_decoded_inst_get_length().  However, it is not always safe or\n advisable for XED to read 15 bytes if the decode location is at the\n boundary of some sort of protection limit. For example, if one is\n decoding near the end of a page and the XED user does not want to cause\n extra page faults, one might send in the number of bytes that would\n stop at the page boundary. In this case, XED might not be able to\n decode the instruction and would return an error. The XED user would\n then have to decide if it was safe to touch the next page and try again\n to decode with more bytes.  Also sometimes the user process does not\n have read access to the next page and this allows the user to prevent\n XED from causing process termination by limiting the memory range that\n XED will access.\n\n @ingroup DEC"]
    pub fn xed_decode(
        xedd: *mut xed_decoded_inst_t,
        itext: *const u8,
        bytes: ::core::ffi::c_uint,
    ) -> xed_error_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n See #xed_decode(). This version of the decode API adds a CPUID feature\n vector to support restricting decode based on both a specified chip via\n #xed_decoded_inst_set_input_chip() and a modify-able cpuid feature\n vector obtained from #xed_get_chip_features()."]
    pub fn xed_decode_with_features(
        xedd: *mut xed_decoded_inst_t,
        itext: *const u8,
        bytes: ::core::ffi::c_uint,
        features: *mut xed_chip_features_t,
    ) -> xed_error_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_get_seg_ovd_xed_sys_inline"]
    pub fn xed3_operand_get_seg_ovd(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_seg_ovd_xed_sys_inline"]
    pub fn xed3_operand_set_seg_ovd(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_hint_xed_sys_inline"]
    pub fn xed3_operand_get_hint(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_hint_xed_sys_inline"]
    pub fn xed3_operand_set_hint(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_encode_force_xed_sys_inline"]
    pub fn xed3_operand_get_encode_force(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_encode_force_xed_sys_inline"]
    pub fn xed3_operand_set_encode_force(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_lock_xed_sys_inline"]
    pub fn xed3_operand_get_lock(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_lock_xed_sys_inline"]
    pub fn xed3_operand_set_lock(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_need_memdisp_xed_sys_inline"]
    pub fn xed3_operand_get_need_memdisp(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_need_memdisp_xed_sys_inline"]
    pub fn xed3_operand_set_need_memdisp(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_disp_xed_sys_inline"]
    pub fn xed3_operand_get_disp(d: *const xed_decoded_inst_t) -> i64;
}
extern "C" {
    #[link_name = "xed3_operand_set_disp_xed_sys_inline"]
    pub fn xed3_operand_set_disp(d: *mut xed_decoded_inst_t, opval: i64);
}
extern "C" {
    #[link_name = "xed3_operand_get_disp_width_xed_sys_inline"]
    pub fn xed3_operand_get_disp_width(d: *const xed_decoded_inst_t) -> u8;
}
extern "C" {
    #[link_name = "xed3_operand_set_disp_width_xed_sys_inline"]
    pub fn xed3_operand_set_disp_width(d: *mut xed_decoded_inst_t, opval: u8);
}
extern "C" {
    #[link_name = "xed3_operand_get_brdisp_width_xed_sys_inline"]
    pub fn xed3_operand_get_brdisp_width(d: *const xed_decoded_inst_t) -> u8;
}
extern "C" {
    #[link_name = "xed3_operand_set_brdisp_width_xed_sys_inline"]
    pub fn xed3_operand_set_brdisp_width(d: *mut xed_decoded_inst_t, opval: u8);
}
extern "C" {
    #[link_name = "xed3_operand_get_df32_xed_sys_inline"]
    pub fn xed3_operand_get_df32(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_df32_xed_sys_inline"]
    pub fn xed3_operand_set_df32(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_df64_xed_sys_inline"]
    pub fn xed3_operand_get_df64(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_df64_xed_sys_inline"]
    pub fn xed3_operand_set_df64(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_norex_xed_sys_inline"]
    pub fn xed3_operand_get_norex(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_norex_xed_sys_inline"]
    pub fn xed3_operand_set_norex(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_norex2_xed_sys_inline"]
    pub fn xed3_operand_get_norex2(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_norex2_xed_sys_inline"]
    pub fn xed3_operand_set_norex2(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_needrex_xed_sys_inline"]
    pub fn xed3_operand_get_needrex(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_needrex_xed_sys_inline"]
    pub fn xed3_operand_set_needrex(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_rex_xed_sys_inline"]
    pub fn xed3_operand_get_rex(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_rex_xed_sys_inline"]
    pub fn xed3_operand_set_rex(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_rexw_xed_sys_inline"]
    pub fn xed3_operand_get_rexw(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_rexw_xed_sys_inline"]
    pub fn xed3_operand_set_rexw(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_rexr_xed_sys_inline"]
    pub fn xed3_operand_get_rexr(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_rexr_xed_sys_inline"]
    pub fn xed3_operand_set_rexr(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_rexx_xed_sys_inline"]
    pub fn xed3_operand_get_rexx(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_rexx_xed_sys_inline"]
    pub fn xed3_operand_set_rexx(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_rexb_xed_sys_inline"]
    pub fn xed3_operand_get_rexb(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_rexb_xed_sys_inline"]
    pub fn xed3_operand_set_rexb(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_rex2_xed_sys_inline"]
    pub fn xed3_operand_get_rex2(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_rex2_xed_sys_inline"]
    pub fn xed3_operand_set_rex2(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_rexb4_xed_sys_inline"]
    pub fn xed3_operand_get_rexb4(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_rexb4_xed_sys_inline"]
    pub fn xed3_operand_set_rexb4(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_rexx4_xed_sys_inline"]
    pub fn xed3_operand_get_rexx4(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_rexx4_xed_sys_inline"]
    pub fn xed3_operand_set_rexx4(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_rexr4_xed_sys_inline"]
    pub fn xed3_operand_get_rexr4(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_rexr4_xed_sys_inline"]
    pub fn xed3_operand_set_rexr4(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_has_egpr_xed_sys_inline"]
    pub fn xed3_operand_get_has_egpr(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_has_egpr_xed_sys_inline"]
    pub fn xed3_operand_set_has_egpr(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_rep_xed_sys_inline"]
    pub fn xed3_operand_get_rep(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_rep_xed_sys_inline"]
    pub fn xed3_operand_set_rep(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_osz_xed_sys_inline"]
    pub fn xed3_operand_get_osz(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_osz_xed_sys_inline"]
    pub fn xed3_operand_set_osz(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_prefix66_xed_sys_inline"]
    pub fn xed3_operand_get_prefix66(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_prefix66_xed_sys_inline"]
    pub fn xed3_operand_set_prefix66(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_asz_xed_sys_inline"]
    pub fn xed3_operand_get_asz(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_asz_xed_sys_inline"]
    pub fn xed3_operand_set_asz(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_eosz_xed_sys_inline"]
    pub fn xed3_operand_get_eosz(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_eosz_xed_sys_inline"]
    pub fn xed3_operand_set_eosz(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_easz_xed_sys_inline"]
    pub fn xed3_operand_get_easz(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_easz_xed_sys_inline"]
    pub fn xed3_operand_set_easz(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_skip_osz_xed_sys_inline"]
    pub fn xed3_operand_get_skip_osz(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_skip_osz_xed_sys_inline"]
    pub fn xed3_operand_set_skip_osz(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_mod_xed_sys_inline"]
    pub fn xed3_operand_get_mod(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_mod_xed_sys_inline"]
    pub fn xed3_operand_set_mod(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_reg_xed_sys_inline"]
    pub fn xed3_operand_get_reg(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_reg_xed_sys_inline"]
    pub fn xed3_operand_set_reg(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_srm_xed_sys_inline"]
    pub fn xed3_operand_get_srm(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_srm_xed_sys_inline"]
    pub fn xed3_operand_set_srm(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_rm_xed_sys_inline"]
    pub fn xed3_operand_get_rm(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_rm_xed_sys_inline"]
    pub fn xed3_operand_set_rm(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_realmode_xed_sys_inline"]
    pub fn xed3_operand_get_realmode(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_realmode_xed_sys_inline"]
    pub fn xed3_operand_set_realmode(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_chip_xed_sys_inline"]
    pub fn xed3_operand_get_chip(d: *const xed_decoded_inst_t) -> xed_chip_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_chip_xed_sys_inline"]
    pub fn xed3_operand_set_chip(d: *mut xed_decoded_inst_t, opval: xed_chip_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_mode_xed_sys_inline"]
    pub fn xed3_operand_get_mode(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_mode_xed_sys_inline"]
    pub fn xed3_operand_set_mode(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_smode_xed_sys_inline"]
    pub fn xed3_operand_get_smode(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_smode_xed_sys_inline"]
    pub fn xed3_operand_set_smode(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_modep5_xed_sys_inline"]
    pub fn xed3_operand_get_modep5(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_modep5_xed_sys_inline"]
    pub fn xed3_operand_set_modep5(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_modep55c_xed_sys_inline"]
    pub fn xed3_operand_get_modep55c(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_modep55c_xed_sys_inline"]
    pub fn xed3_operand_set_modep55c(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_p4_xed_sys_inline"]
    pub fn xed3_operand_get_p4(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_p4_xed_sys_inline"]
    pub fn xed3_operand_set_p4(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_lzcnt_xed_sys_inline"]
    pub fn xed3_operand_get_lzcnt(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_lzcnt_xed_sys_inline"]
    pub fn xed3_operand_set_lzcnt(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_tzcnt_xed_sys_inline"]
    pub fn xed3_operand_get_tzcnt(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_tzcnt_xed_sys_inline"]
    pub fn xed3_operand_set_tzcnt(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_mode_first_prefix_xed_sys_inline"]
    pub fn xed3_operand_get_mode_first_prefix(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_mode_first_prefix_xed_sys_inline"]
    pub fn xed3_operand_set_mode_first_prefix(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_mode_short_ud0_xed_sys_inline"]
    pub fn xed3_operand_get_mode_short_ud0(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_mode_short_ud0_xed_sys_inline"]
    pub fn xed3_operand_set_mode_short_ud0(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_imm0_xed_sys_inline"]
    pub fn xed3_operand_get_imm0(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_imm0_xed_sys_inline"]
    pub fn xed3_operand_set_imm0(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_imm1_xed_sys_inline"]
    pub fn xed3_operand_get_imm1(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_imm1_xed_sys_inline"]
    pub fn xed3_operand_set_imm1(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_imm0signed_xed_sys_inline"]
    pub fn xed3_operand_get_imm0signed(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_imm0signed_xed_sys_inline"]
    pub fn xed3_operand_set_imm0signed(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_uimm0_xed_sys_inline"]
    pub fn xed3_operand_get_uimm0(d: *const xed_decoded_inst_t) -> u64;
}
extern "C" {
    #[link_name = "xed3_operand_set_uimm0_xed_sys_inline"]
    pub fn xed3_operand_set_uimm0(d: *mut xed_decoded_inst_t, opval: u64);
}
extern "C" {
    #[link_name = "xed3_operand_get_uimm1_xed_sys_inline"]
    pub fn xed3_operand_get_uimm1(d: *const xed_decoded_inst_t) -> u8;
}
extern "C" {
    #[link_name = "xed3_operand_set_uimm1_xed_sys_inline"]
    pub fn xed3_operand_set_uimm1(d: *mut xed_decoded_inst_t, opval: u8);
}
extern "C" {
    #[link_name = "xed3_operand_get_imm_width_xed_sys_inline"]
    pub fn xed3_operand_get_imm_width(d: *const xed_decoded_inst_t) -> u8;
}
extern "C" {
    #[link_name = "xed3_operand_set_imm_width_xed_sys_inline"]
    pub fn xed3_operand_set_imm_width(d: *mut xed_decoded_inst_t, opval: u8);
}
extern "C" {
    #[link_name = "xed3_operand_get_using_default_segment0_xed_sys_inline"]
    pub fn xed3_operand_get_using_default_segment0(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_using_default_segment0_xed_sys_inline"]
    pub fn xed3_operand_set_using_default_segment0(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_using_default_segment1_xed_sys_inline"]
    pub fn xed3_operand_get_using_default_segment1(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_using_default_segment1_xed_sys_inline"]
    pub fn xed3_operand_set_using_default_segment1(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_default_seg_xed_sys_inline"]
    pub fn xed3_operand_get_default_seg(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_default_seg_xed_sys_inline"]
    pub fn xed3_operand_set_default_seg(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_seg0_xed_sys_inline"]
    pub fn xed3_operand_get_seg0(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_seg0_xed_sys_inline"]
    pub fn xed3_operand_set_seg0(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_base0_xed_sys_inline"]
    pub fn xed3_operand_get_base0(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_base0_xed_sys_inline"]
    pub fn xed3_operand_set_base0(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_index_xed_sys_inline"]
    pub fn xed3_operand_get_index(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_index_xed_sys_inline"]
    pub fn xed3_operand_set_index(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_scale_xed_sys_inline"]
    pub fn xed3_operand_get_scale(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_scale_xed_sys_inline"]
    pub fn xed3_operand_set_scale(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_need_sib_xed_sys_inline"]
    pub fn xed3_operand_get_need_sib(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_need_sib_xed_sys_inline"]
    pub fn xed3_operand_set_need_sib(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_sibscale_xed_sys_inline"]
    pub fn xed3_operand_get_sibscale(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_sibscale_xed_sys_inline"]
    pub fn xed3_operand_set_sibscale(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_sibbase_xed_sys_inline"]
    pub fn xed3_operand_get_sibbase(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_sibbase_xed_sys_inline"]
    pub fn xed3_operand_set_sibbase(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_sibindex_xed_sys_inline"]
    pub fn xed3_operand_get_sibindex(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_sibindex_xed_sys_inline"]
    pub fn xed3_operand_set_sibindex(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_seg1_xed_sys_inline"]
    pub fn xed3_operand_get_seg1(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_seg1_xed_sys_inline"]
    pub fn xed3_operand_set_seg1(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_base1_xed_sys_inline"]
    pub fn xed3_operand_get_base1(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_base1_xed_sys_inline"]
    pub fn xed3_operand_set_base1(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_mem0_xed_sys_inline"]
    pub fn xed3_operand_get_mem0(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_mem0_xed_sys_inline"]
    pub fn xed3_operand_set_mem0(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_mem1_xed_sys_inline"]
    pub fn xed3_operand_get_mem1(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_mem1_xed_sys_inline"]
    pub fn xed3_operand_set_mem1(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_mem_width_xed_sys_inline"]
    pub fn xed3_operand_get_mem_width(d: *const xed_decoded_inst_t) -> u16;
}
extern "C" {
    #[link_name = "xed3_operand_set_mem_width_xed_sys_inline"]
    pub fn xed3_operand_set_mem_width(d: *mut xed_decoded_inst_t, opval: u16);
}
extern "C" {
    #[link_name = "xed3_operand_get_agen_xed_sys_inline"]
    pub fn xed3_operand_get_agen(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_agen_xed_sys_inline"]
    pub fn xed3_operand_set_agen(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_relbr_xed_sys_inline"]
    pub fn xed3_operand_get_relbr(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_relbr_xed_sys_inline"]
    pub fn xed3_operand_set_relbr(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_absbr_xed_sys_inline"]
    pub fn xed3_operand_get_absbr(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_absbr_xed_sys_inline"]
    pub fn xed3_operand_set_absbr(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_ptr_xed_sys_inline"]
    pub fn xed3_operand_get_ptr(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_ptr_xed_sys_inline"]
    pub fn xed3_operand_set_ptr(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_reg0_xed_sys_inline"]
    pub fn xed3_operand_get_reg0(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_reg0_xed_sys_inline"]
    pub fn xed3_operand_set_reg0(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_reg1_xed_sys_inline"]
    pub fn xed3_operand_get_reg1(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_reg1_xed_sys_inline"]
    pub fn xed3_operand_set_reg1(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_reg2_xed_sys_inline"]
    pub fn xed3_operand_get_reg2(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_reg2_xed_sys_inline"]
    pub fn xed3_operand_set_reg2(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_reg3_xed_sys_inline"]
    pub fn xed3_operand_get_reg3(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_reg3_xed_sys_inline"]
    pub fn xed3_operand_set_reg3(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_reg4_xed_sys_inline"]
    pub fn xed3_operand_get_reg4(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_reg4_xed_sys_inline"]
    pub fn xed3_operand_set_reg4(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_reg5_xed_sys_inline"]
    pub fn xed3_operand_get_reg5(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_reg5_xed_sys_inline"]
    pub fn xed3_operand_set_reg5(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_reg6_xed_sys_inline"]
    pub fn xed3_operand_get_reg6(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_reg6_xed_sys_inline"]
    pub fn xed3_operand_set_reg6(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_reg7_xed_sys_inline"]
    pub fn xed3_operand_get_reg7(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_reg7_xed_sys_inline"]
    pub fn xed3_operand_set_reg7(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_reg8_xed_sys_inline"]
    pub fn xed3_operand_get_reg8(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_reg8_xed_sys_inline"]
    pub fn xed3_operand_set_reg8(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_reg9_xed_sys_inline"]
    pub fn xed3_operand_get_reg9(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_reg9_xed_sys_inline"]
    pub fn xed3_operand_set_reg9(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_outreg_xed_sys_inline"]
    pub fn xed3_operand_get_outreg(d: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_outreg_xed_sys_inline"]
    pub fn xed3_operand_set_outreg(d: *mut xed_decoded_inst_t, opval: xed_reg_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_encoder_preferred_xed_sys_inline"]
    pub fn xed3_operand_get_encoder_preferred(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_encoder_preferred_xed_sys_inline"]
    pub fn xed3_operand_set_encoder_preferred(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_error_xed_sys_inline"]
    pub fn xed3_operand_get_error(d: *const xed_decoded_inst_t) -> xed_error_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_error_xed_sys_inline"]
    pub fn xed3_operand_set_error(d: *mut xed_decoded_inst_t, opval: xed_error_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_iclass_xed_sys_inline"]
    pub fn xed3_operand_get_iclass(d: *const xed_decoded_inst_t) -> xed_iclass_enum_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_iclass_xed_sys_inline"]
    pub fn xed3_operand_set_iclass(d: *mut xed_decoded_inst_t, opval: xed_iclass_enum_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_nelem_xed_sys_inline"]
    pub fn xed3_operand_get_nelem(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_nelem_xed_sys_inline"]
    pub fn xed3_operand_set_nelem(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_element_size_xed_sys_inline"]
    pub fn xed3_operand_get_element_size(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_element_size_xed_sys_inline"]
    pub fn xed3_operand_set_element_size(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_map_xed_sys_inline"]
    pub fn xed3_operand_get_map(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_map_xed_sys_inline"]
    pub fn xed3_operand_set_map(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_out_of_bytes_xed_sys_inline"]
    pub fn xed3_operand_get_out_of_bytes(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_out_of_bytes_xed_sys_inline"]
    pub fn xed3_operand_set_out_of_bytes(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_first_f2f3_xed_sys_inline"]
    pub fn xed3_operand_get_first_f2f3(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_first_f2f3_xed_sys_inline"]
    pub fn xed3_operand_set_first_f2f3(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_last_f2f3_xed_sys_inline"]
    pub fn xed3_operand_get_last_f2f3(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_last_f2f3_xed_sys_inline"]
    pub fn xed3_operand_set_last_f2f3(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_ild_f2_xed_sys_inline"]
    pub fn xed3_operand_get_ild_f2(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_ild_f2_xed_sys_inline"]
    pub fn xed3_operand_set_ild_f2(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_ild_f3_xed_sys_inline"]
    pub fn xed3_operand_get_ild_f3(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_ild_f3_xed_sys_inline"]
    pub fn xed3_operand_set_ild_f3(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_max_bytes_xed_sys_inline"]
    pub fn xed3_operand_get_max_bytes(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_max_bytes_xed_sys_inline"]
    pub fn xed3_operand_set_max_bytes(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_ild_seg_xed_sys_inline"]
    pub fn xed3_operand_get_ild_seg(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_ild_seg_xed_sys_inline"]
    pub fn xed3_operand_set_ild_seg(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_nseg_prefixes_xed_sys_inline"]
    pub fn xed3_operand_get_nseg_prefixes(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_nseg_prefixes_xed_sys_inline"]
    pub fn xed3_operand_set_nseg_prefixes(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_nrexes_xed_sys_inline"]
    pub fn xed3_operand_get_nrexes(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_nrexes_xed_sys_inline"]
    pub fn xed3_operand_set_nrexes(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_nprefixes_xed_sys_inline"]
    pub fn xed3_operand_get_nprefixes(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_nprefixes_xed_sys_inline"]
    pub fn xed3_operand_set_nprefixes(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_nominal_opcode_xed_sys_inline"]
    pub fn xed3_operand_get_nominal_opcode(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_nominal_opcode_xed_sys_inline"]
    pub fn xed3_operand_set_nominal_opcode(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_pos_nominal_opcode_xed_sys_inline"]
    pub fn xed3_operand_get_pos_nominal_opcode(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_pos_nominal_opcode_xed_sys_inline"]
    pub fn xed3_operand_set_pos_nominal_opcode(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_has_modrm_xed_sys_inline"]
    pub fn xed3_operand_get_has_modrm(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_has_modrm_xed_sys_inline"]
    pub fn xed3_operand_set_has_modrm(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_has_sib_xed_sys_inline"]
    pub fn xed3_operand_get_has_sib(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_has_sib_xed_sys_inline"]
    pub fn xed3_operand_set_has_sib(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_pos_modrm_xed_sys_inline"]
    pub fn xed3_operand_get_pos_modrm(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_pos_modrm_xed_sys_inline"]
    pub fn xed3_operand_set_pos_modrm(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_pos_sib_xed_sys_inline"]
    pub fn xed3_operand_get_pos_sib(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_pos_sib_xed_sys_inline"]
    pub fn xed3_operand_set_pos_sib(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_pos_disp_xed_sys_inline"]
    pub fn xed3_operand_get_pos_disp(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_pos_disp_xed_sys_inline"]
    pub fn xed3_operand_set_pos_disp(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_pos_imm_xed_sys_inline"]
    pub fn xed3_operand_get_pos_imm(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_pos_imm_xed_sys_inline"]
    pub fn xed3_operand_set_pos_imm(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_pos_imm1_xed_sys_inline"]
    pub fn xed3_operand_get_pos_imm1(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_pos_imm1_xed_sys_inline"]
    pub fn xed3_operand_set_pos_imm1(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_imm1_bytes_xed_sys_inline"]
    pub fn xed3_operand_get_imm1_bytes(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_imm1_bytes_xed_sys_inline"]
    pub fn xed3_operand_set_imm1_bytes(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_modrm_byte_xed_sys_inline"]
    pub fn xed3_operand_get_modrm_byte(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_modrm_byte_xed_sys_inline"]
    pub fn xed3_operand_set_modrm_byte(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_esrc_xed_sys_inline"]
    pub fn xed3_operand_get_esrc(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_esrc_xed_sys_inline"]
    pub fn xed3_operand_set_esrc(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_vexvalid_xed_sys_inline"]
    pub fn xed3_operand_get_vexvalid(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_vexvalid_xed_sys_inline"]
    pub fn xed3_operand_set_vexvalid(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_dummy_xed_sys_inline"]
    pub fn xed3_operand_get_dummy(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_dummy_xed_sys_inline"]
    pub fn xed3_operand_set_dummy(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_no_evex_xed_sys_inline"]
    pub fn xed3_operand_get_no_evex(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_no_evex_xed_sys_inline"]
    pub fn xed3_operand_set_no_evex(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_no_vex_xed_sys_inline"]
    pub fn xed3_operand_get_no_vex(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_no_vex_xed_sys_inline"]
    pub fn xed3_operand_set_no_vex(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_no_apx_xed_sys_inline"]
    pub fn xed3_operand_get_no_apx(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_no_apx_xed_sys_inline"]
    pub fn xed3_operand_set_no_apx(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_amd3dnow_xed_sys_inline"]
    pub fn xed3_operand_get_amd3dnow(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_amd3dnow_xed_sys_inline"]
    pub fn xed3_operand_set_amd3dnow(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_mpxmode_xed_sys_inline"]
    pub fn xed3_operand_get_mpxmode(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_mpxmode_xed_sys_inline"]
    pub fn xed3_operand_set_mpxmode(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_cet_xed_sys_inline"]
    pub fn xed3_operand_get_cet(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_cet_xed_sys_inline"]
    pub fn xed3_operand_set_cet(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_cldemote_xed_sys_inline"]
    pub fn xed3_operand_get_cldemote(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_cldemote_xed_sys_inline"]
    pub fn xed3_operand_set_cldemote(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_vexdest3_xed_sys_inline"]
    pub fn xed3_operand_get_vexdest3(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_vexdest3_xed_sys_inline"]
    pub fn xed3_operand_set_vexdest3(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_vexdest210_xed_sys_inline"]
    pub fn xed3_operand_get_vexdest210(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_vexdest210_xed_sys_inline"]
    pub fn xed3_operand_set_vexdest210(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_vl_xed_sys_inline"]
    pub fn xed3_operand_get_vl(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_vl_xed_sys_inline"]
    pub fn xed3_operand_set_vl(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_vex_prefix_xed_sys_inline"]
    pub fn xed3_operand_get_vex_prefix(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_vex_prefix_xed_sys_inline"]
    pub fn xed3_operand_set_vex_prefix(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_vex_c4_xed_sys_inline"]
    pub fn xed3_operand_get_vex_c4(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_vex_c4_xed_sys_inline"]
    pub fn xed3_operand_set_vex_c4(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_bcast_xed_sys_inline"]
    pub fn xed3_operand_get_bcast(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_bcast_xed_sys_inline"]
    pub fn xed3_operand_set_bcast(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_must_use_evex_xed_sys_inline"]
    pub fn xed3_operand_get_must_use_evex(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_must_use_evex_xed_sys_inline"]
    pub fn xed3_operand_set_must_use_evex(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_zeroing_xed_sys_inline"]
    pub fn xed3_operand_get_zeroing(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_zeroing_xed_sys_inline"]
    pub fn xed3_operand_set_zeroing(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_llrc_xed_sys_inline"]
    pub fn xed3_operand_get_llrc(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_llrc_xed_sys_inline"]
    pub fn xed3_operand_set_llrc(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_bcrc_xed_sys_inline"]
    pub fn xed3_operand_get_bcrc(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_bcrc_xed_sys_inline"]
    pub fn xed3_operand_set_bcrc(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_vexdest4_xed_sys_inline"]
    pub fn xed3_operand_get_vexdest4(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_vexdest4_xed_sys_inline"]
    pub fn xed3_operand_set_vexdest4(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_mask_xed_sys_inline"]
    pub fn xed3_operand_get_mask(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_mask_xed_sys_inline"]
    pub fn xed3_operand_set_mask(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_roundc_xed_sys_inline"]
    pub fn xed3_operand_get_roundc(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_roundc_xed_sys_inline"]
    pub fn xed3_operand_set_roundc(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_sae_xed_sys_inline"]
    pub fn xed3_operand_get_sae(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_sae_xed_sys_inline"]
    pub fn xed3_operand_set_sae(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_vl_ign_xed_sys_inline"]
    pub fn xed3_operand_get_vl_ign(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_vl_ign_xed_sys_inline"]
    pub fn xed3_operand_set_vl_ign(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_ubit_xed_sys_inline"]
    pub fn xed3_operand_get_ubit(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_ubit_xed_sys_inline"]
    pub fn xed3_operand_set_ubit(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_wbnoinvd_xed_sys_inline"]
    pub fn xed3_operand_get_wbnoinvd(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_wbnoinvd_xed_sys_inline"]
    pub fn xed3_operand_set_wbnoinvd(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_evvspace_xed_sys_inline"]
    pub fn xed3_operand_get_evvspace(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_evvspace_xed_sys_inline"]
    pub fn xed3_operand_set_evvspace(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_nd_xed_sys_inline"]
    pub fn xed3_operand_get_nd(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_nd_xed_sys_inline"]
    pub fn xed3_operand_set_nd(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_nf_xed_sys_inline"]
    pub fn xed3_operand_get_nf(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_nf_xed_sys_inline"]
    pub fn xed3_operand_set_nf(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    #[link_name = "xed3_operand_get_scc_xed_sys_inline"]
    pub fn xed3_operand_get_scc(d: *const xed_decoded_inst_t) -> xed_bits_t;
}
extern "C" {
    #[link_name = "xed3_operand_set_scc_xed_sys_inline"]
    pub fn xed3_operand_set_scc(d: *mut xed_decoded_inst_t, opval: xed_bits_t);
}
extern "C" {
    pub fn xed3_get_generic_operand(
        d: *const xed_decoded_inst_t,
        operand: xed_operand_enum_t,
        ret_arg: *mut ::core::ffi::c_void,
    );
}
extern "C" {
    pub fn xed3_set_generic_operand(
        d: *mut xed_decoded_inst_t,
        operand: xed_operand_enum_t,
        val: u32,
    );
}
extern "C" {
    #[doc = " This function just does instruction length decoding.\n It does not return a fully decoded instruction.\n  @param xedd  the decoded instruction of type #xed_decoded_inst_t .\n               Mode/state sent in via xedd; See the #xed_state_t .\n  @param itext the pointer to the array of instruction text bytes\n  @param bytes the length of the itext input array.\n              1 to 15 bytes, anything more is ignored.\n @return #xed_error_enum_t indicating success (#XED_ERROR_NONE) or\n       failure.\n Only two failure codes are valid for this function:\n  #XED_ERROR_BUFFER_TOO_SHORT and #XED_ERROR_GENERAL_ERROR.\n In general this function cannot tell if the instruction is valid or\n not. For valid instructions, XED can figure out if enough bytes were\n provided to decode the instruction. If not enough were provided,\n XED returns #XED_ERROR_BUFFER_TOO_SHORT.\n From this function, the #XED_ERROR_GENERAL_ERROR is an indication\n that XED could not decode the instruction's length because  the\n instruction was so invalid that even its length\n may across implmentations.\n\n @ingroup DEC"]
    pub fn xed_ild_decode(
        xedd: *mut xed_decoded_inst_t,
        itext: *const u8,
        bytes: ::core::ffi::c_uint,
    ) -> xed_error_enum_t;
}
pub const XED_ADDRESS_WIDTH_INVALID: xed_address_width_enum_t = 0;
#[doc = "< 16b addressing"]
pub const XED_ADDRESS_WIDTH_16b: xed_address_width_enum_t = 2;
#[doc = "< 32b addressing"]
pub const XED_ADDRESS_WIDTH_32b: xed_address_width_enum_t = 4;
#[doc = "< 64b addressing"]
pub const XED_ADDRESS_WIDTH_64b: xed_address_width_enum_t = 8;
pub const XED_ADDRESS_WIDTH_LAST: xed_address_width_enum_t = 9;
pub type xed_address_width_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_address_width_enum_t types.\n @param s A C-string.\n @return #xed_address_width_enum_t\n @ingroup ENUM"]
    pub fn str2xed_address_width_enum_t(s: *const ::core::ffi::c_char) -> xed_address_width_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_address_width_enum_t types.\n @param p An enumeration element of type xed_address_width_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_address_width_enum_t2str(p: xed_address_width_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_address_width_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_address_width_enum_t_last() -> xed_address_width_enum_t;
}
pub const XED_MACHINE_MODE_INVALID: xed_machine_mode_enum_t = 0;
#[doc = "< 64b operating mode"]
pub const XED_MACHINE_MODE_LONG_64: xed_machine_mode_enum_t = 1;
#[doc = "< 32b protected mode"]
pub const XED_MACHINE_MODE_LONG_COMPAT_32: xed_machine_mode_enum_t = 2;
#[doc = "< 16b protected mode"]
pub const XED_MACHINE_MODE_LONG_COMPAT_16: xed_machine_mode_enum_t = 3;
#[doc = "< 32b protected mode"]
pub const XED_MACHINE_MODE_LEGACY_32: xed_machine_mode_enum_t = 4;
#[doc = "< 16b protected mode"]
pub const XED_MACHINE_MODE_LEGACY_16: xed_machine_mode_enum_t = 5;
#[doc = "< 16b real mode"]
pub const XED_MACHINE_MODE_REAL_16: xed_machine_mode_enum_t = 6;
#[doc = "< 32b real mode (CS.D bit = 1)"]
pub const XED_MACHINE_MODE_REAL_32: xed_machine_mode_enum_t = 7;
pub const XED_MACHINE_MODE_LAST: xed_machine_mode_enum_t = 8;
pub type xed_machine_mode_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_machine_mode_enum_t types.\n @param s A C-string.\n @return #xed_machine_mode_enum_t\n @ingroup ENUM"]
    pub fn str2xed_machine_mode_enum_t(s: *const ::core::ffi::c_char) -> xed_machine_mode_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_machine_mode_enum_t types.\n @param p An enumeration element of type xed_machine_mode_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_machine_mode_enum_t2str(p: xed_machine_mode_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_machine_mode_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_machine_mode_enum_t_last() -> xed_machine_mode_enum_t;
}
#[doc = " Encapsulates machine modes for decoder/encoder requests.\n It specifies the machine operating mode as a\n #xed_machine_mode_enum_t\n for decoding and encoding. The machine mode corresponds to the default\n data operand width for that mode. For all modes other than the 64b long\n mode (XED_MACHINE_MODE_LONG_64), a default addressing width, and a\n stack addressing width must be supplied of type\n #xed_address_width_enum_t .  @ingroup INIT"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_state_s {
    #[doc = " real architected machine modes"]
    pub mmode: xed_machine_mode_enum_t,
    #[doc = " for 16b/32b modes"]
    pub stack_addr_width: xed_address_width_enum_t,
}
#[test]
fn bindgen_test_layout_xed_state_s() {
    const UNINIT: ::core::mem::MaybeUninit<xed_state_s> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_state_s>(),
        8usize,
        concat!("Size of: ", stringify!(xed_state_s))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_state_s>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_state_s))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mmode) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_state_s),
            "::",
            stringify!(mmode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).stack_addr_width) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_state_s),
            "::",
            stringify!(stack_addr_width)
        )
    );
}
#[doc = " Encapsulates machine modes for decoder/encoder requests.\n It specifies the machine operating mode as a\n #xed_machine_mode_enum_t\n for decoding and encoding. The machine mode corresponds to the default\n data operand width for that mode. For all modes other than the 64b long\n mode (XED_MACHINE_MODE_LONG_64), a default addressing width, and a\n stack addressing width must be supplied of type\n #xed_address_width_enum_t .  @ingroup INIT"]
pub type xed_state_t = xed_state_s;
extern "C" {
    #[doc = " Constructor.\n DEPRECATED: use #xed_state_init2().\n The mode, and addresses widths are enumerations that specify the number\n of bits.  In 64b mode (#XED_MACHINE_MODE_LONG_64) the address width and\n stack address widths are 64b (#XED_ADDRESS_WIDTH_64b). In other machine\n modes, you must specify valid addressing widths.\n\n @param p the pointer to the #xed_state_t type\n @param arg_mmode the machine mode of type #xed_machine_mode_enum_t\n @param arg_ignored Ignored. The addressing width is now implied by the machine mode implied by arg_mmmode.\n @param arg_stack_addr_width the stack address width of type #xed_address_width_enum_t (only required if not the mode is not #XED_MACHINE_MODE_LONG_64)\n @ingroup INIT"]
    #[link_name = "xed_state_init_xed_sys_inline"]
    pub fn xed_state_init(
        p: *mut xed_state_t,
        arg_mmode: xed_machine_mode_enum_t,
        arg_ignored: xed_address_width_enum_t,
        arg_stack_addr_width: xed_address_width_enum_t,
    );
}
extern "C" {
    #[doc = " Constructor.\n The mode, and addresses widths are enumerations that specify the number\n of bits.  In 64b mode (#XED_MACHINE_MODE_LONG_64) the address width and\n stack address widths are 64b (#XED_ADDRESS_WIDTH_64b). In other machine\n modes, you must specify valid addressing widths.\n\n @param p the pointer to the #xed_state_t type\n @param arg_mmode the machine mode of type #xed_machine_mode_enum_t\n @param arg_stack_addr_width the stack address width of type #xed_address_width_enum_t (only required if not the mode is not #XED_MACHINE_MODE_LONG_64)\n @ingroup INIT"]
    #[link_name = "xed_state_init2_xed_sys_inline"]
    pub fn xed_state_init2(
        p: *mut xed_state_t,
        arg_mmode: xed_machine_mode_enum_t,
        arg_stack_addr_width: xed_address_width_enum_t,
    );
}
extern "C" {
    #[doc = " clear the xed_state_t\n @ingroup INIT"]
    #[link_name = "xed_state_zero_xed_sys_inline"]
    pub fn xed_state_zero(p: *mut xed_state_t);
}
extern "C" {
    #[doc = " return the machine mode\n @ingroup INIT"]
    #[link_name = "xed_state_get_machine_mode_xed_sys_inline"]
    pub fn xed_state_get_machine_mode(p: *const xed_state_t) -> xed_machine_mode_enum_t;
}
extern "C" {
    #[doc = " true iff the machine is in LONG_64 mode\n @ingroup INIT"]
    #[link_name = "xed_state_long64_mode_xed_sys_inline"]
    pub fn xed_state_long64_mode(p: *const xed_state_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup INIT"]
    #[link_name = "xed_state_real_mode_xed_sys_inline"]
    pub fn xed_state_real_mode(p: *const xed_state_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup INIT"]
    #[link_name = "xed_state_mode_width_16_xed_sys_inline"]
    pub fn xed_state_mode_width_16(p: *const xed_state_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup INIT"]
    #[link_name = "xed_state_mode_width_32_xed_sys_inline"]
    pub fn xed_state_mode_width_32(p: *const xed_state_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " Set the machine mode which corresponds to the default data operand size\n @ingroup INIT"]
    #[link_name = "xed_state_set_machine_mode_xed_sys_inline"]
    pub fn xed_state_set_machine_mode(p: *mut xed_state_t, arg_mode: xed_machine_mode_enum_t);
}
extern "C" {
    #[doc = " return the address width\n @ingroup INIT"]
    #[link_name = "xed_state_get_address_width_xed_sys_inline"]
    pub fn xed_state_get_address_width(p: *const xed_state_t) -> xed_address_width_enum_t;
}
extern "C" {
    #[doc = " set the STACK address width\n @ingroup INIT"]
    #[link_name = "xed_state_set_stack_address_width_xed_sys_inline"]
    pub fn xed_state_set_stack_address_width(
        p: *mut xed_state_t,
        arg_addr_width: xed_address_width_enum_t,
    );
}
extern "C" {
    #[doc = " Return the STACK address width\n @ingroup INIT"]
    #[link_name = "xed_state_get_stack_address_width_xed_sys_inline"]
    pub fn xed_state_get_stack_address_width(p: *const xed_state_t) -> xed_address_width_enum_t;
}
extern "C" {
    #[doc = " @ingroup INIT"]
    pub fn xed_state_print(
        p: *const xed_state_t,
        buf: *mut ::core::ffi::c_char,
        buflen: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
pub const XED_SYNTAX_INVALID: xed_syntax_enum_t = 0;
#[doc = "< XED disassembly syntax"]
pub const XED_SYNTAX_XED: xed_syntax_enum_t = 1;
#[doc = "< ATT SYSV disassembly syntax"]
pub const XED_SYNTAX_ATT: xed_syntax_enum_t = 2;
#[doc = "< Intel disassembly syntax"]
pub const XED_SYNTAX_INTEL: xed_syntax_enum_t = 3;
pub const XED_SYNTAX_LAST: xed_syntax_enum_t = 4;
pub type xed_syntax_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_syntax_enum_t types.\n @param s A C-string.\n @return #xed_syntax_enum_t\n @ingroup ENUM"]
    pub fn str2xed_syntax_enum_t(s: *const ::core::ffi::c_char) -> xed_syntax_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_syntax_enum_t types.\n @param p An enumeration element of type xed_syntax_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_syntax_enum_t2str(p: xed_syntax_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_syntax_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_syntax_enum_t_last() -> xed_syntax_enum_t;
}
pub const XED_REG_CLASS_INVALID: xed_reg_class_enum_t = 0;
pub const XED_REG_CLASS_BNDCFG: xed_reg_class_enum_t = 1;
pub const XED_REG_CLASS_BNDSTAT: xed_reg_class_enum_t = 2;
pub const XED_REG_CLASS_BOUND: xed_reg_class_enum_t = 3;
pub const XED_REG_CLASS_CR: xed_reg_class_enum_t = 4;
pub const XED_REG_CLASS_DR: xed_reg_class_enum_t = 5;
pub const XED_REG_CLASS_FLAGS: xed_reg_class_enum_t = 6;
pub const XED_REG_CLASS_GPR: xed_reg_class_enum_t = 7;
pub const XED_REG_CLASS_GPR16: xed_reg_class_enum_t = 8;
pub const XED_REG_CLASS_GPR32: xed_reg_class_enum_t = 9;
pub const XED_REG_CLASS_GPR64: xed_reg_class_enum_t = 10;
pub const XED_REG_CLASS_GPR8: xed_reg_class_enum_t = 11;
pub const XED_REG_CLASS_IP: xed_reg_class_enum_t = 12;
pub const XED_REG_CLASS_MASK: xed_reg_class_enum_t = 13;
pub const XED_REG_CLASS_MMX: xed_reg_class_enum_t = 14;
pub const XED_REG_CLASS_MSR: xed_reg_class_enum_t = 15;
pub const XED_REG_CLASS_MXCSR: xed_reg_class_enum_t = 16;
pub const XED_REG_CLASS_PSEUDO: xed_reg_class_enum_t = 17;
pub const XED_REG_CLASS_PSEUDOX87: xed_reg_class_enum_t = 18;
pub const XED_REG_CLASS_SR: xed_reg_class_enum_t = 19;
pub const XED_REG_CLASS_TMP: xed_reg_class_enum_t = 20;
pub const XED_REG_CLASS_TREG: xed_reg_class_enum_t = 21;
pub const XED_REG_CLASS_UIF: xed_reg_class_enum_t = 22;
pub const XED_REG_CLASS_X87: xed_reg_class_enum_t = 23;
pub const XED_REG_CLASS_XCR: xed_reg_class_enum_t = 24;
pub const XED_REG_CLASS_XMM: xed_reg_class_enum_t = 25;
pub const XED_REG_CLASS_YMM: xed_reg_class_enum_t = 26;
pub const XED_REG_CLASS_ZMM: xed_reg_class_enum_t = 27;
pub const XED_REG_CLASS_LAST: xed_reg_class_enum_t = 28;
pub type xed_reg_class_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_reg_class_enum_t types.\n @param s A C-string.\n @return #xed_reg_class_enum_t\n @ingroup ENUM"]
    pub fn str2xed_reg_class_enum_t(s: *const ::core::ffi::c_char) -> xed_reg_class_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_reg_class_enum_t types.\n @param p An enumeration element of type xed_reg_class_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_reg_class_enum_t2str(p: xed_reg_class_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_reg_class_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_reg_class_enum_t_last() -> xed_reg_class_enum_t;
}
extern "C" {
    #[doc = " Returns the register class of the given input register.\n@ingroup REGINTFC"]
    pub fn xed_reg_class(r: xed_reg_enum_t) -> xed_reg_class_enum_t;
}
extern "C" {
    #[doc = " Returns the specific width GPR reg class (like XED_REG_CLASS_GPR32 or\n  XED_REG_CLASS_GPR64)\n  for a given GPR register. Or XED_REG_INVALID if not a GPR.\n@ingroup REGINTFC"]
    pub fn xed_gpr_reg_class(r: xed_reg_enum_t) -> xed_reg_class_enum_t;
}
extern "C" {
    #[doc = " Returns the largest enclosing register for any kind of register; This\n is mostly useful for GPRs. (64b mode assumed)\n@ingroup REGINTFC"]
    pub fn xed_get_largest_enclosing_register(r: xed_reg_enum_t) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " Returns the largest enclosing register for any kind of register; This\n is mostly useful for GPRs in 32b mode.\n@ingroup REGINTFC"]
    pub fn xed_get_largest_enclosing_register32(r: xed_reg_enum_t) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " Returns the  width, in bits, of the named register. 32b mode\n@ingroup REGINTFC"]
    pub fn xed_get_register_width_bits(r: xed_reg_enum_t) -> u32;
}
extern "C" {
    #[doc = " Returns the  width, in bits, of the named register. 64b mode.\n@ingroup REGINTFC"]
    pub fn xed_get_register_width_bits64(r: xed_reg_enum_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Initializes operand structure"]
    pub fn xed_operand_values_init(p: *mut xed_operand_values_t);
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Initializes the operand storage and sets mode values."]
    pub fn xed_operand_values_init_set_mode(
        p: *mut xed_operand_values_t,
        dstate: *const xed_state_t,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Set the mode values"]
    pub fn xed_operand_values_set_mode(p: *mut xed_operand_values_t, dstate: *const xed_state_t);
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Initializes dst operand structure but preserves the existing\n MODE/SMODE values from the src operand structure."]
    pub fn xed_operand_values_init_keep_mode(
        dst: *mut xed_operand_values_t,
        src: *const xed_operand_values_t,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Dump all the information about the operands to buf."]
    pub fn xed_operand_values_dump(
        ov: *const xed_operand_values_t,
        buf: *mut ::core::ffi::c_char,
        buflen: ::core::ffi::c_int,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n More tersely dump all the information about the operands to buf."]
    pub fn xed_operand_values_print_short(
        ov: *const xed_operand_values_t,
        buf: *mut ::core::ffi::c_char,
        buflen: ::core::ffi::c_int,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n True if the instruction has a real REP prefix. This returns false if\n there is no F2/F3 prefix or the F2/F3 prefix is used to refine the\n opcode as in some SSE operations."]
    pub fn xed_operand_values_has_real_rep(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n True if the instruction as a F3 REP prefix (used for opcode refining,\n for rep for string operations, or ignored)."]
    pub fn xed_operand_values_has_rep_prefix(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n True if the instruction as a F2 REP prefix (used for opcode refining,\n for rep for string operations, or ignored)."]
    pub fn xed_operand_values_has_repne_prefix(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n DO NOT USE - DEPRECATED. The  correct way to do remove a rep prefix is by changing the iclass"]
    pub fn xed_operand_values_clear_rep(p: *mut xed_operand_values_t);
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns true if the memory operation has atomic read-modify-write\n semantics. An XCHG accessing memory is atomic with or without a\n LOCK prefix."]
    pub fn xed_operand_values_get_atomic(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns true if the memory operation has a valid lock prefix."]
    pub fn xed_operand_values_has_lock_prefix(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns true if the instruction could be re-encoded to have a lock\n prefix but does not have one currently."]
    pub fn xed_operand_values_lockable(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Indicates if the default segment is being used.\n @param[in] p   the pointer to the #xed_operand_values_t structure.\n @param[in] i   0 or 1, indicating which memory operation.\n @return true if the memory operation is using the default segment for\n the associated addressing mode base register."]
    pub fn xed_operand_values_using_default_segment(
        p: *const xed_operand_values_t,
        i: ::core::ffi::c_uint,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns The effective operand width in bits: 16/32/64. Note this is not\n the same as the width of the operand which can vary! For 8 bit\n operations, the effective operand width is the machine mode's default\n width. If you also want to identify byte operations use the higher\n level function #xed_decoded_inst_get_operand_width() ."]
    pub fn xed_operand_values_get_effective_operand_width(p: *const xed_operand_values_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns The effective address width in bits: 16/32/64."]
    pub fn xed_operand_values_get_effective_address_width(p: *const xed_operand_values_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns The stack address width in bits: 16/32/64."]
    pub fn xed_operand_values_get_stack_address_width(p: *const xed_operand_values_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n True if there is a memory displacement"]
    pub fn xed_operand_values_has_memory_displacement(p: *const xed_operand_values_t)
        -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n True if there is a branch displacement"]
    pub fn xed_operand_values_has_branch_displacement(p: *const xed_operand_values_t)
        -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n True if there is a memory or branch displacement"]
    pub fn xed_operand_values_has_displacement(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Deprecated. Compatibility function for XED0. See has_memory_displacement()."]
    pub fn xed_operand_values_get_displacement_for_memop(
        p: *const xed_operand_values_t,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Return true if there is an immediate operand"]
    pub fn xed_operand_values_has_immediate(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n ALIAS for has_displacement().\n Deprecated. See has_memory_displacement() and\n has_branch_displacement()."]
    pub fn xed_operand_values_has_disp(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n This indicates the presence of a 67 prefix."]
    pub fn xed_operand_values_has_address_size_prefix(p: *const xed_operand_values_t)
        -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n This does not include the cases when the 66 prefix is used an\n opcode-refining prefix for multibyte opcodes."]
    pub fn xed_operand_values_has_operand_size_prefix(p: *const xed_operand_values_t)
        -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n This includes any 66 prefix that shows up even if it is ignored."]
    pub fn xed_operand_values_has_66_prefix(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n This is exclusive to cases whereby the 66 prefix is mandatory."]
    pub fn xed_operand_values_mandatory_66_prefix(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n This instruction has a REX prefix with the W bit set."]
    pub fn xed_operand_values_has_rexw_prefix(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_has_segment_prefix(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Return the segment prefix, if any, as a #xed_reg_enum_t value."]
    pub fn xed_operand_values_segment_prefix(p: *const xed_operand_values_t) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_is_prefetch(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_long_mode(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_real_mode(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Return the [VEX,EVEX].PP encoding value (2 bits)"]
    pub fn xed_operand_values_get_pp_vex_prefix(p: *const xed_operand_values_t) -> xed_bits_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_accesses_memory(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_number_of_memory_operands(
        p: *const xed_operand_values_t,
    ) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " return bytes\n @ingroup OPERANDS"]
    pub fn xed_operand_values_get_memory_operand_length(
        p: *const xed_operand_values_t,
        memop_idx: ::core::ffi::c_uint,
    ) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_base_reg(
        p: *const xed_operand_values_t,
        memop_idx: ::core::ffi::c_uint,
    ) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_index_reg(
        p: *const xed_operand_values_t,
        memop_idx: ::core::ffi::c_uint,
    ) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_seg_reg(
        p: *const xed_operand_values_t,
        memop_idx: ::core::ffi::c_uint,
    ) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_scale(p: *const xed_operand_values_t) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns true if the instruction access memory but without using a MODRM\n byte limiting its addressing modes."]
    pub fn xed_operand_values_memop_without_modrm(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns true if the instruction has a MODRM byte."]
    pub fn xed_operand_values_has_modrm_byte(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns true if the instruction has a SIB byte."]
    pub fn xed_operand_values_has_sib_byte(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns  true if 0x2E prefix on Jcc"]
    pub fn xed_operand_values_branch_not_taken_hint(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns  true if 0x3E prefix on Jcc"]
    pub fn xed_operand_values_branch_taken_hint(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Returns true for indirect call/jmp with 0x3E prefix (if the legacy prefix rules are obeyed)"]
    pub fn xed_operand_values_cet_no_track(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_is_nop(p: *const xed_operand_values_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_immediate_int64(p: *const xed_operand_values_t) -> i64;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_immediate_uint64(p: *const xed_operand_values_t) -> u64;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Return true if the first immediate (IMM0) is signed"]
    pub fn xed_operand_values_get_immediate_is_signed(p: *const xed_operand_values_t)
        -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Return the i'th byte of the immediate"]
    pub fn xed_operand_values_get_immediate_byte(
        p: *const xed_operand_values_t,
        i: ::core::ffi::c_uint,
    ) -> u8;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_second_immediate(p: *const xed_operand_values_t) -> u8;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Return the memory displacement width in BYTES"]
    pub fn xed_operand_values_get_memory_displacement_length(p: *const xed_operand_values_t)
        -> u32;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Return the memory displacement width in BITS"]
    pub fn xed_operand_values_get_memory_displacement_length_bits(
        p: *const xed_operand_values_t,
    ) -> u32;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Return the raw memory displacement width in BITS(ignores scaling)"]
    pub fn xed_operand_values_get_memory_displacement_length_bits_raw(
        p: *const xed_operand_values_t,
    ) -> u32;
}
extern "C" {
    #[doc = " Returns the potentially scaled value of the memory\n displacement. Certain AVX512 memory displacements are scaled before\n they are used.  @ingroup OPERANDS"]
    pub fn xed_operand_values_get_memory_displacement_int64(p: *const xed_operand_values_t) -> i64;
}
extern "C" {
    #[doc = " Returns the unscaled (raw) memory displacement. Certain AVX512 memory\n displacements are scaled before they are used.  @ingroup OPERANDS"]
    pub fn xed_operand_values_get_memory_displacement_int64_raw(
        p: *const xed_operand_values_t,
    ) -> i64;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_memory_displacement_byte(
        p: *const xed_operand_values_t,
        i: ::core::ffi::c_uint,
    ) -> u8;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Return the branch displacement width in bytes"]
    pub fn xed_operand_values_get_branch_displacement_length(p: *const xed_operand_values_t)
        -> u32;
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Return the branch displacement width in bits"]
    pub fn xed_operand_values_get_branch_displacement_length_bits(
        p: *const xed_operand_values_t,
    ) -> u32;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_branch_displacement_int64(p: *const xed_operand_values_t) -> i64;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_branch_displacement_byte(
        p: *const xed_operand_values_t,
        i: ::core::ffi::c_uint,
    ) -> u8;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_get_iclass(p: *const xed_operand_values_t) -> xed_iclass_enum_t;
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_zero_immediate(p: *mut xed_operand_values_t);
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_zero_branch_displacement(p: *mut xed_operand_values_t);
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_zero_memory_displacement(p: *mut xed_operand_values_t);
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_set_lock(p: *mut xed_operand_values_t);
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_zero_segment_override(p: *mut xed_operand_values_t);
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_set_iclass(p: *mut xed_operand_values_t, iclass: xed_iclass_enum_t);
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n width is bits 8, 16, 32, 64"]
    pub fn xed_operand_values_set_effective_operand_width(
        p: *mut xed_operand_values_t,
        width: ::core::ffi::c_uint,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n width is bits 16, 32, 64"]
    pub fn xed_operand_values_set_effective_address_width(
        p: *mut xed_operand_values_t,
        width: ::core::ffi::c_uint,
    );
}
extern "C" {
    #[doc = " takes bytes, not bits, as an argument\n @ingroup OPERANDS"]
    pub fn xed_operand_values_set_memory_operand_length(
        p: *mut xed_operand_values_t,
        memop_length: ::core::ffi::c_uint,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Set the memory displacement using a BYTES length"]
    pub fn xed_operand_values_set_memory_displacement(
        p: *mut xed_operand_values_t,
        x: i64,
        len: ::core::ffi::c_uint,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Set the memory displacement using a BITS length"]
    pub fn xed_operand_values_set_memory_displacement_bits(
        p: *mut xed_operand_values_t,
        x: i64,
        len_bits: ::core::ffi::c_uint,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Indicate that we have a relative branch."]
    pub fn xed_operand_values_set_relbr(p: *mut xed_operand_values_t);
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Indicate that we have an absolute branch."]
    pub fn xed_operand_values_set_absbr(p: *mut xed_operand_values_t);
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Set the branch displacement using a BYTES length"]
    pub fn xed_operand_values_set_branch_displacement(
        p: *mut xed_operand_values_t,
        x: i64,
        len: ::core::ffi::c_uint,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Set the branch displacement using a BITS length"]
    pub fn xed_operand_values_set_branch_displacement_bits(
        p: *mut xed_operand_values_t,
        x: i64,
        len_bits: ::core::ffi::c_uint,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Set the signed immediate using a BYTES length"]
    pub fn xed_operand_values_set_immediate_signed(
        p: *mut xed_operand_values_t,
        x: i32,
        bytes: ::core::ffi::c_uint,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Set the signed immediate using a BITS length"]
    pub fn xed_operand_values_set_immediate_signed_bits(
        p: *mut xed_operand_values_t,
        x: i32,
        bits: ::core::ffi::c_uint,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Set the unsigned immediate using a BYTE length."]
    pub fn xed_operand_values_set_immediate_unsigned(
        p: *mut xed_operand_values_t,
        x: u64,
        bytes: ::core::ffi::c_uint,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Set the unsigned immediate using a BIT length."]
    pub fn xed_operand_values_set_immediate_unsigned_bits(
        p: *mut xed_operand_values_t,
        x: u64,
        bits: ::core::ffi::c_uint,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_set_base_reg(
        p: *mut xed_operand_values_t,
        memop_idx: ::core::ffi::c_uint,
        new_base: xed_reg_enum_t,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_set_seg_reg(
        p: *mut xed_operand_values_t,
        memop_idx: ::core::ffi::c_uint,
        new_seg: xed_reg_enum_t,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_set_index_reg(
        p: *mut xed_operand_values_t,
        memop_idx: ::core::ffi::c_uint,
        new_index: xed_reg_enum_t,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS"]
    pub fn xed_operand_values_set_scale(
        p: *mut xed_operand_values_t,
        memop_idx: xed_uint_t,
        new_scale: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup OPERANDS\n Set the operand storage field entry named 'operand_name' to the\n register value specified by 'reg_name'."]
    pub fn xed_operand_values_set_operand_reg(
        p: *mut xed_operand_values_t,
        operand_name: xed_operand_enum_t,
        reg_name: xed_reg_enum_t,
    );
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_encoder_iforms_s {
    pub x_SIBBASE_ENCODE: u32,
    pub x_SIBBASE_ENCODE_SIB1: u32,
    pub x_SIBINDEX_ENCODE: u32,
    pub x_MODRM_MOD_ENCODE: u32,
    pub x_MODRM_RM_ENCODE: u32,
    pub x_MODRM_RM_ENCODE_EA16_SIB0: u32,
    pub x_MODRM_RM_ENCODE_EA64_SIB0: u32,
    pub x_MODRM_RM_ENCODE_EA32_SIB0: u32,
    pub x_SIB_NT: u32,
    pub x_DISP_NT: u32,
    pub x_REMOVE_SEGMENT: u32,
    pub x_REX_PREFIX_ENC: u32,
    pub x_PREFIX_ENC: u32,
    pub x_VEXED_REX: u32,
    pub x_XOP_TYPE_ENC: u32,
    pub x_XOP_MAP_ENC: u32,
    pub x_XOP_REXXB_ENC: u32,
    pub x_VEX_TYPE_ENC: u32,
    pub x_VEX_REXR_ENC: u32,
    pub x_VEX_REXXB_ENC: u32,
    pub x_VEX_MAP_ENC: u32,
    pub x_VEX_REG_ENC: u32,
    pub x_VEX_ESCVL_ENC: u32,
    pub x_SE_IMM8: u32,
    pub x_VSIB_ENC_BASE: u32,
    pub x_VSIB_ENC: u32,
    pub x_EVEX_62_REXR_ENC: u32,
    pub x_EVEX_REXX_ENC: u32,
    pub x_EVEX_REXB_ENC: u32,
    pub x_EVEX_REXR4_ENC: u32,
    pub x_EVEX_REXB4_MAP_ENC: u32,
    pub x_EVEX_REXW_VVVV_ENC: u32,
    pub x_EVEX_U_ENC: u32,
    pub x_EVEX_PP_ENC: u32,
    pub x_AVX512_EVEX_BYTE3_ENC: u32,
    pub x_EVEX_BYTE3_ENC: u32,
    pub x_APX_EVEX_BYTE3_ENC: u32,
    pub x_APX_CC_EVEX_BYTE3_ENC: u32,
    pub x_UIMMv: u32,
    pub x_SIMMz: u32,
    pub x_SIMM8: u32,
    pub x_UIMM8: u32,
    pub x_UIMM8_1: u32,
    pub x_UIMM16: u32,
    pub x_UIMM32: u32,
    pub x_BRDISP8: u32,
    pub x_BRDISP32: u32,
    pub x_BRDISP64: u32,
    pub x_BRDISPz: u32,
    pub x_MEMDISPv: u32,
    pub x_MEMDISP32: u32,
    pub x_MEMDISP16: u32,
    pub x_MEMDISP8: u32,
    pub x_MEMDISP: u32,
}
#[test]
fn bindgen_test_layout_xed_encoder_iforms_s() {
    const UNINIT: ::core::mem::MaybeUninit<xed_encoder_iforms_s> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_encoder_iforms_s>(),
        216usize,
        concat!("Size of: ", stringify!(xed_encoder_iforms_s))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_encoder_iforms_s>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_encoder_iforms_s))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_SIBBASE_ENCODE) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_SIBBASE_ENCODE)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_SIBBASE_ENCODE_SIB1) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_SIBBASE_ENCODE_SIB1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_SIBINDEX_ENCODE) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_SIBINDEX_ENCODE)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_MODRM_MOD_ENCODE) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_MODRM_MOD_ENCODE)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_MODRM_RM_ENCODE) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_MODRM_RM_ENCODE)
        )
    );
    assert_eq!(
        unsafe {
            ::core::ptr::addr_of!((*ptr).x_MODRM_RM_ENCODE_EA16_SIB0) as usize - ptr as usize
        },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_MODRM_RM_ENCODE_EA16_SIB0)
        )
    );
    assert_eq!(
        unsafe {
            ::core::ptr::addr_of!((*ptr).x_MODRM_RM_ENCODE_EA64_SIB0) as usize - ptr as usize
        },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_MODRM_RM_ENCODE_EA64_SIB0)
        )
    );
    assert_eq!(
        unsafe {
            ::core::ptr::addr_of!((*ptr).x_MODRM_RM_ENCODE_EA32_SIB0) as usize - ptr as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_MODRM_RM_ENCODE_EA32_SIB0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_SIB_NT) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_SIB_NT)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_DISP_NT) as usize - ptr as usize },
        36usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_DISP_NT)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_REMOVE_SEGMENT) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_REMOVE_SEGMENT)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_REX_PREFIX_ENC) as usize - ptr as usize },
        44usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_REX_PREFIX_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_PREFIX_ENC) as usize - ptr as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_PREFIX_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_VEXED_REX) as usize - ptr as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_VEXED_REX)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_XOP_TYPE_ENC) as usize - ptr as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_XOP_TYPE_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_XOP_MAP_ENC) as usize - ptr as usize },
        60usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_XOP_MAP_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_XOP_REXXB_ENC) as usize - ptr as usize },
        64usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_XOP_REXXB_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_VEX_TYPE_ENC) as usize - ptr as usize },
        68usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_VEX_TYPE_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_VEX_REXR_ENC) as usize - ptr as usize },
        72usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_VEX_REXR_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_VEX_REXXB_ENC) as usize - ptr as usize },
        76usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_VEX_REXXB_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_VEX_MAP_ENC) as usize - ptr as usize },
        80usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_VEX_MAP_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_VEX_REG_ENC) as usize - ptr as usize },
        84usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_VEX_REG_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_VEX_ESCVL_ENC) as usize - ptr as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_VEX_ESCVL_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_SE_IMM8) as usize - ptr as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_SE_IMM8)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_VSIB_ENC_BASE) as usize - ptr as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_VSIB_ENC_BASE)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_VSIB_ENC) as usize - ptr as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_VSIB_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_EVEX_62_REXR_ENC) as usize - ptr as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_EVEX_62_REXR_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_EVEX_REXX_ENC) as usize - ptr as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_EVEX_REXX_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_EVEX_REXB_ENC) as usize - ptr as usize },
        112usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_EVEX_REXB_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_EVEX_REXR4_ENC) as usize - ptr as usize },
        116usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_EVEX_REXR4_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_EVEX_REXB4_MAP_ENC) as usize - ptr as usize },
        120usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_EVEX_REXB4_MAP_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_EVEX_REXW_VVVV_ENC) as usize - ptr as usize },
        124usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_EVEX_REXW_VVVV_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_EVEX_U_ENC) as usize - ptr as usize },
        128usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_EVEX_U_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_EVEX_PP_ENC) as usize - ptr as usize },
        132usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_EVEX_PP_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_AVX512_EVEX_BYTE3_ENC) as usize - ptr as usize },
        136usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_AVX512_EVEX_BYTE3_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_EVEX_BYTE3_ENC) as usize - ptr as usize },
        140usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_EVEX_BYTE3_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_APX_EVEX_BYTE3_ENC) as usize - ptr as usize },
        144usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_APX_EVEX_BYTE3_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_APX_CC_EVEX_BYTE3_ENC) as usize - ptr as usize },
        148usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_APX_CC_EVEX_BYTE3_ENC)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_UIMMv) as usize - ptr as usize },
        152usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_UIMMv)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_SIMMz) as usize - ptr as usize },
        156usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_SIMMz)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_SIMM8) as usize - ptr as usize },
        160usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_SIMM8)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_UIMM8) as usize - ptr as usize },
        164usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_UIMM8)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_UIMM8_1) as usize - ptr as usize },
        168usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_UIMM8_1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_UIMM16) as usize - ptr as usize },
        172usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_UIMM16)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_UIMM32) as usize - ptr as usize },
        176usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_UIMM32)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_BRDISP8) as usize - ptr as usize },
        180usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_BRDISP8)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_BRDISP32) as usize - ptr as usize },
        184usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_BRDISP32)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_BRDISP64) as usize - ptr as usize },
        188usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_BRDISP64)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_BRDISPz) as usize - ptr as usize },
        192usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_BRDISPz)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_MEMDISPv) as usize - ptr as usize },
        196usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_MEMDISPv)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_MEMDISP32) as usize - ptr as usize },
        200usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_MEMDISP32)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_MEMDISP16) as usize - ptr as usize },
        204usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_MEMDISP16)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_MEMDISP8) as usize - ptr as usize },
        208usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_MEMDISP8)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).x_MEMDISP) as usize - ptr as usize },
        212usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_iforms_s),
            "::",
            stringify!(x_MEMDISP)
        )
    );
}
pub type xed_encoder_iforms_t = xed_encoder_iforms_s;
#[doc = " @ingroup ENC"]
pub type xed_encoder_request_s = xed_decoded_inst_s;
#[doc = " @ingroup ENC"]
pub type xed_encoder_request_t = xed_decoded_inst_t;
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_get_iclass(p: *const xed_encoder_request_t) -> xed_iclass_enum_t;
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_iclass(p: *mut xed_encoder_request_t, iclass: xed_iclass_enum_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_effective_operand_width(
        p: *mut xed_encoder_request_t,
        width_bits: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_effective_address_size(
        p: *mut xed_encoder_request_t,
        width_bits: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENC\n\n Set the operands array element indexed by operand to the actual register\n name reg.\n\n @param[in] p            xed_encoder_request_t\n @param[in] operand      indicates which register operand storage field to use\n @param[in] reg          the actual register represented (EAX, etc.)  to store."]
    pub fn xed_encoder_request_set_reg(
        p: *mut xed_encoder_request_t,
        operand: xed_operand_enum_t,
        reg: xed_reg_enum_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENC\n Specify the name as the n'th operand in the operand order.\n\n The complication of this function is that the register operand names are\n specific to the position of the operand (REG0, REG1, REG2...). One can\n use this function for registers or one can use the\n xed_encoder_request_set_operand_name_reg() which takes integers instead\n of operand names.\n\n @param[in] p                #xed_encoder_request_t\n @param[in] operand_index    xed_uint_t representing n'th operand position\n @param[in] name             #xed_operand_enum_t operand name."]
    pub fn xed_encoder_request_set_operand_order(
        p: *mut xed_encoder_request_t,
        operand_index: xed_uint_t,
        name: xed_operand_enum_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENC\n Retrieve the name of the n'th operand in the operand order.\n\n @param[in] p                #xed_encoder_request_t\n @param[in] operand_index    xed_uint_t representing n'th operand position\n @return The #xed_operand_enum_t operand name."]
    pub fn xed_encoder_request_get_operand_order(
        p: *mut xed_encoder_request_t,
        operand_index: xed_uint_t,
    ) -> xed_operand_enum_t;
}
extern "C" {
    #[doc = " @ingroup ENC\n Retrieve the number of entries in the encoder operand order array\n @return The number of entries in the encoder operand order array"]
    #[link_name = "xed_encoder_request_operand_order_entries_xed_sys_inline"]
    pub fn xed_encoder_request_operand_order_entries(p: *mut xed_encoder_request_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_relbr(p: *mut xed_encoder_request_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_absbr(p: *mut xed_encoder_request_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_branch_displacement(
        p: *mut xed_encoder_request_t,
        brdisp: i64,
        nbytes: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_ptr(p: *mut xed_encoder_request_t);
}
extern "C" {
    #[doc = " @ingroup ENC\n Set the uimm0 using a BYTE  width."]
    pub fn xed_encoder_request_set_uimm0(
        p: *mut xed_encoder_request_t,
        uimm: u64,
        nbytes: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENC\n Set the uimm0 using a BIT  width."]
    pub fn xed_encoder_request_set_uimm0_bits(
        p: *mut xed_encoder_request_t,
        uimm: u64,
        nbits: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_uimm1(p: *mut xed_encoder_request_t, uimm: u8);
}
extern "C" {
    #[doc = " @ingroup ENC\n same storage as uimm0"]
    pub fn xed_encoder_request_set_simm(
        p: *mut xed_encoder_request_t,
        simm: i32,
        nbytes: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_memory_displacement(
        p: *mut xed_encoder_request_t,
        memdisp: i64,
        nbytes: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_agen(p: *mut xed_encoder_request_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_mem0(p: *mut xed_encoder_request_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_mem1(p: *mut xed_encoder_request_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_memory_operand_length(
        p: *mut xed_encoder_request_t,
        nbytes: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_seg0(p: *mut xed_encoder_request_t, seg_reg: xed_reg_enum_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_seg1(p: *mut xed_encoder_request_t, seg_reg: xed_reg_enum_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_base0(p: *mut xed_encoder_request_t, base_reg: xed_reg_enum_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_base1(p: *mut xed_encoder_request_t, base_reg: xed_reg_enum_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_index(p: *mut xed_encoder_request_t, index_reg: xed_reg_enum_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_set_scale(p: *mut xed_encoder_request_t, scale: xed_uint_t);
}
extern "C" {
    #[doc = "\n @ingroup ENC"]
    #[link_name = "xed_encoder_request_operands_const_xed_sys_inline"]
    pub fn xed_encoder_request_operands_const(
        p: *const xed_encoder_request_t,
    ) -> *const xed_operand_values_t;
}
extern "C" {
    #[doc = " @ingroup ENC"]
    #[link_name = "xed_encoder_request_operands_xed_sys_inline"]
    pub fn xed_encoder_request_operands(p: *mut xed_encoder_request_t)
        -> *mut xed_operand_values_t;
}
extern "C" {
    #[doc = " @ingroup ENC\n clear the operand order array\n @param[in] p                xed_encoder_request_t"]
    pub fn xed_encoder_request_zero_operand_order(p: *mut xed_encoder_request_t);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_zero_set_mode(
        p: *mut xed_encoder_request_t,
        dstate: *const xed_state_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encoder_request_zero(p: *mut xed_encoder_request_t);
}
extern "C" {
    #[doc = " @ingroup ENC\n Converts an decoder request to a valid encoder request."]
    pub fn xed_encoder_request_init_from_decode(d: *mut xed_decoded_inst_s);
}
extern "C" {
    #[doc = " @ingroup ENC"]
    pub fn xed_encode_request_print(
        p: *const xed_encoder_request_t,
        buf: *mut ::core::ffi::c_char,
        buflen: xed_uint_t,
    );
}
extern "C" {
    #[doc = "   This is the main interface to the encoder. The array should be\n   at most 15 bytes long. The ilen parameter should indicate\n   this length. If the array is too short, the encoder may fail to\n   encode the request.  Failure is indicated by a return value of\n   type #xed_error_enum_t that is not equal to\n   #XED_ERROR_NONE. Otherwise, #XED_ERROR_NONE is returned and the\n   length of the encoded instruction is returned in olen.\n\n @param r encoder request description (#xed_encoder_request_t), includes mode info\n @param array the encoded instruction bytes are stored here\n @param ilen the input length of array.\n @param olen the actual  length of array used for encoding\n @return success/failure as a #xed_error_enum_t\n @ingroup ENC"]
    pub fn xed_encode(
        r: *mut xed_encoder_request_t,
        array: *mut u8,
        ilen: ::core::ffi::c_uint,
        olen: *mut ::core::ffi::c_uint,
    ) -> xed_error_enum_t;
}
extern "C" {
    #[doc = " This function will attempt to encode a NOP of exactly ilen\n bytes. If such a NOP is not encodeable, then false will be returned.\n\n @param array the encoded instruction bytes are stored here\n @param  ilen the input length array.\n @return success/failure as a #xed_error_enum_t\n @ingroup ENC"]
    pub fn xed_encode_nop(array: *mut u8, ilen: ::core::ffi::c_uint) -> xed_error_enum_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_enc_displacement_t {
    pub displacement: i64,
    pub displacement_bits: u32,
}
#[test]
fn bindgen_test_layout_xed_enc_displacement_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_enc_displacement_t> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_enc_displacement_t>(),
        16usize,
        concat!("Size of: ", stringify!(xed_enc_displacement_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_enc_displacement_t>(),
        8usize,
        concat!("Alignment of ", stringify!(xed_enc_displacement_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).displacement) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_enc_displacement_t),
            "::",
            stringify!(displacement)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).displacement_bits) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_enc_displacement_t),
            "::",
            stringify!(displacement_bits)
        )
    );
}
extern "C" {
    #[doc = " @ingroup ENCHL\n a memory displacement (not for branches)\n @param displacement The value of the displacement\n @param displacement_bits The width of the displacement in bits. Typically 8 or 32.\n @returns #xed_enc_displacement_t"]
    #[link_name = "xed_disp_xed_sys_inline"]
    pub fn xed_disp(displacement: i64, displacement_bits: u32) -> xed_enc_displacement_t;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_memop_t {
    pub seg: xed_reg_enum_t,
    pub base: xed_reg_enum_t,
    pub index: xed_reg_enum_t,
    pub scale: u32,
    pub disp: xed_enc_displacement_t,
}
#[test]
fn bindgen_test_layout_xed_memop_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_memop_t> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_memop_t>(),
        32usize,
        concat!("Size of: ", stringify!(xed_memop_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_memop_t>(),
        8usize,
        concat!("Alignment of ", stringify!(xed_memop_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).seg) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_memop_t),
            "::",
            stringify!(seg)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).base) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_memop_t),
            "::",
            stringify!(base)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).index) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_memop_t),
            "::",
            stringify!(index)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).scale) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_memop_t),
            "::",
            stringify!(scale)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).disp) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_memop_t),
            "::",
            stringify!(disp)
        )
    );
}
pub const XED_ENCODER_OPERAND_TYPE_INVALID: xed_encoder_operand_type_t = 0;
pub const XED_ENCODER_OPERAND_TYPE_REL_BRDISP: xed_encoder_operand_type_t = 1;
pub const XED_ENCODER_OPERAND_TYPE_ABS_BRDISP: xed_encoder_operand_type_t = 2;
pub const XED_ENCODER_OPERAND_TYPE_REG: xed_encoder_operand_type_t = 3;
pub const XED_ENCODER_OPERAND_TYPE_IMM0: xed_encoder_operand_type_t = 4;
pub const XED_ENCODER_OPERAND_TYPE_SIMM0: xed_encoder_operand_type_t = 5;
pub const XED_ENCODER_OPERAND_TYPE_IMM1: xed_encoder_operand_type_t = 6;
pub const XED_ENCODER_OPERAND_TYPE_MEM: xed_encoder_operand_type_t = 7;
pub const XED_ENCODER_OPERAND_TYPE_PTR: xed_encoder_operand_type_t = 8;
pub const XED_ENCODER_OPERAND_TYPE_SEG0: xed_encoder_operand_type_t = 9;
pub const XED_ENCODER_OPERAND_TYPE_SEG1: xed_encoder_operand_type_t = 10;
pub const XED_ENCODER_OPERAND_TYPE_OTHER: xed_encoder_operand_type_t = 11;
pub type xed_encoder_operand_type_t = ::core::ffi::c_uint;
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xed_encoder_operand_t {
    pub type_: xed_encoder_operand_type_t,
    pub u: xed_encoder_operand_t__bindgen_ty_1,
    pub width_bits: u32,
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xed_encoder_operand_t__bindgen_ty_1 {
    pub reg: xed_reg_enum_t,
    pub brdisp: i32,
    pub imm0: u64,
    pub imm1: u8,
    pub s: xed_encoder_operand_t__bindgen_ty_1__bindgen_ty_1,
    pub mem: xed_memop_t,
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_encoder_operand_t__bindgen_ty_1__bindgen_ty_1 {
    pub operand_name: xed_operand_enum_t,
    pub value: u32,
}
#[test]
fn bindgen_test_layout_xed_encoder_operand_t__bindgen_ty_1__bindgen_ty_1() {
    const UNINIT: ::core::mem::MaybeUninit<xed_encoder_operand_t__bindgen_ty_1__bindgen_ty_1> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_encoder_operand_t__bindgen_ty_1__bindgen_ty_1>(),
        8usize,
        concat!(
            "Size of: ",
            stringify!(xed_encoder_operand_t__bindgen_ty_1__bindgen_ty_1)
        )
    );
    assert_eq!(
        ::core::mem::align_of::<xed_encoder_operand_t__bindgen_ty_1__bindgen_ty_1>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(xed_encoder_operand_t__bindgen_ty_1__bindgen_ty_1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).operand_name) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_operand_t__bindgen_ty_1__bindgen_ty_1),
            "::",
            stringify!(operand_name)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).value) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_operand_t__bindgen_ty_1__bindgen_ty_1),
            "::",
            stringify!(value)
        )
    );
}
#[test]
fn bindgen_test_layout_xed_encoder_operand_t__bindgen_ty_1() {
    const UNINIT: ::core::mem::MaybeUninit<xed_encoder_operand_t__bindgen_ty_1> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_encoder_operand_t__bindgen_ty_1>(),
        32usize,
        concat!("Size of: ", stringify!(xed_encoder_operand_t__bindgen_ty_1))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_encoder_operand_t__bindgen_ty_1>(),
        8usize,
        concat!(
            "Alignment of ",
            stringify!(xed_encoder_operand_t__bindgen_ty_1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_operand_t__bindgen_ty_1),
            "::",
            stringify!(reg)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).brdisp) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_operand_t__bindgen_ty_1),
            "::",
            stringify!(brdisp)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).imm0) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_operand_t__bindgen_ty_1),
            "::",
            stringify!(imm0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).imm1) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_operand_t__bindgen_ty_1),
            "::",
            stringify!(imm1)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_operand_t__bindgen_ty_1),
            "::",
            stringify!(s)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mem) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_operand_t__bindgen_ty_1),
            "::",
            stringify!(mem)
        )
    );
}
impl ::core::fmt::Debug for xed_encoder_operand_t__bindgen_ty_1 {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_encoder_operand_t__bindgen_ty_1 {{ union }}")
    }
}
#[test]
fn bindgen_test_layout_xed_encoder_operand_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_encoder_operand_t> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_encoder_operand_t>(),
        48usize,
        concat!("Size of: ", stringify!(xed_encoder_operand_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_encoder_operand_t>(),
        8usize,
        concat!("Alignment of ", stringify!(xed_encoder_operand_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).type_) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_operand_t),
            "::",
            stringify!(type_)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).u) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_operand_t),
            "::",
            stringify!(u)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).width_bits) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_operand_t),
            "::",
            stringify!(width_bits)
        )
    );
}
impl ::core::fmt::Debug for xed_encoder_operand_t {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(
            f,
            "xed_encoder_operand_t {{ type: {:?}, u: {:?} }}",
            self.type_, self.u
        )
    }
}
extern "C" {
    #[doc = " @ingroup ENCHL\n a relative branch displacement operand\n @param brdisp The branch displacement\n @param width_bits The width of the displacement in bits. Typically 8 or 32.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_relbr_xed_sys_inline"]
    pub fn xed_relbr(brdisp: i32, width_bits: xed_uint_t) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n an absolute branch displacement operand\n @param brdisp The branch displacement\n @param width_bits The width of the displacement in bits.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_absbr_xed_sys_inline"]
    pub fn xed_absbr(brdisp: i32, width_bits: xed_uint_t) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n a relative displacement for a PTR operand -- the subsequent imm0 holds\nthe 16b selector\n @param brdisp The displacement for a far pointer operand\n @param width_bits The width of the far pointr displacement in bits.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_ptr_xed_sys_inline"]
    pub fn xed_ptr(brdisp: i32, width_bits: xed_uint_t) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n a register operand\n @param reg A #xed_reg_enum_t register operand\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_reg_xed_sys_inline"]
    pub fn xed_reg(reg: xed_reg_enum_t) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n a first immediate operand (known as IMM0)\n @param v An immdediate operand.\n @param width_bits The immediate width in bits.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_imm0_xed_sys_inline"]
    pub fn xed_imm0(v: u64, width_bits: xed_uint_t) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n an 32b signed immediate operand\n @param v An signed immdediate operand.\n @param width_bits The immediate width in bits.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_simm0_xed_sys_inline"]
    pub fn xed_simm0(v: i32, width_bits: xed_uint_t) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n The 2nd immediate operand (known as IMM1) for rare instructions that require it.\n @param v The 2nd immdediate (byte-width) operand\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_imm1_xed_sys_inline"]
    pub fn xed_imm1(v: u8) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n an operand storage field name and value"]
    #[link_name = "xed_other_xed_sys_inline"]
    pub fn xed_other(operand_name: xed_operand_enum_t, value: i32) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n seg reg override for implicit suppressed memory ops"]
    #[link_name = "xed_seg0_xed_sys_inline"]
    pub fn xed_seg0(seg0: xed_reg_enum_t) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n seg reg override for implicit suppressed memory ops"]
    #[link_name = "xed_seg1_xed_sys_inline"]
    pub fn xed_seg1(seg1: xed_reg_enum_t) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n memory operand - base only\n @param base The base register\n @param width_bits The length of the memory reference in bits.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_mem_b_xed_sys_inline"]
    pub fn xed_mem_b(base: xed_reg_enum_t, width_bits: xed_uint_t) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n memory operand - base and displacement only\n @param base The base register\n @param disp The displacement\n @param width_bits The length of the memory reference in bits.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_mem_bd_xed_sys_inline"]
    pub fn xed_mem_bd(
        base: xed_reg_enum_t,
        disp: xed_enc_displacement_t,
        width_bits: xed_uint_t,
    ) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n memory operand - base, index, scale, displacement\n @param base The base register\n @param index The index register\n @param scale The scale for the index register value\n @param disp The displacement\n @param width_bits The length of the memory reference in bits.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_mem_bisd_xed_sys_inline"]
    pub fn xed_mem_bisd(
        base: xed_reg_enum_t,
        index: xed_reg_enum_t,
        scale: xed_uint_t,
        disp: xed_enc_displacement_t,
        width_bits: xed_uint_t,
    ) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n memory operand - segment and base only\n @param seg The segment override register\n @param base The base register\n @param width_bits The length of the memory reference in bits.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_mem_gb_xed_sys_inline"]
    pub fn xed_mem_gb(
        seg: xed_reg_enum_t,
        base: xed_reg_enum_t,
        width_bits: xed_uint_t,
    ) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n memory operand - segment, base and displacement only\n @param seg The segment override register\n @param base The base register\n @param disp The displacement\n @param width_bits The length of the memory reference in bits.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_mem_gbd_xed_sys_inline"]
    pub fn xed_mem_gbd(
        seg: xed_reg_enum_t,
        base: xed_reg_enum_t,
        disp: xed_enc_displacement_t,
        width_bits: xed_uint_t,
    ) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n memory operand - segment and displacement only\n @param seg The segment override register\n @param disp The displacement\n @param width_bits The length of the memory reference in bits.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_mem_gd_xed_sys_inline"]
    pub fn xed_mem_gd(
        seg: xed_reg_enum_t,
        disp: xed_enc_displacement_t,
        width_bits: xed_uint_t,
    ) -> xed_encoder_operand_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n memory operand - segment, base, index, scale, and displacement\n @param seg The segment override register\n @param base The base register\n @param index The index register\n @param scale The scale for the index register value\n @param disp The displacement\n @param width_bits The length of the memory reference in bits.\n @returns xed_encoder_operand_t An operand."]
    #[link_name = "xed_mem_gbisd_xed_sys_inline"]
    pub fn xed_mem_gbisd(
        seg: xed_reg_enum_t,
        base: xed_reg_enum_t,
        index: xed_reg_enum_t,
        scale: xed_uint_t,
        disp: xed_enc_displacement_t,
        width_bits: xed_uint_t,
    ) -> xed_encoder_operand_t;
}
#[repr(C)]
#[derive(Copy, Clone)]
pub union xed_encoder_prefixes_t {
    pub s: xed_encoder_prefixes_t__bindgen_ty_1,
    pub i: u32,
}
#[repr(C)]
#[repr(align(4))]
#[derive(Debug, Copy, Clone)]
pub struct xed_encoder_prefixes_t__bindgen_ty_1 {
    pub _bitfield_align_1: [u8; 0],
    pub _bitfield_1: __BindgenBitfieldUnit<[u8; 1usize]>,
    pub __bindgen_padding_0: [u8; 3usize],
}
#[test]
fn bindgen_test_layout_xed_encoder_prefixes_t__bindgen_ty_1() {
    assert_eq!(
        ::core::mem::size_of::<xed_encoder_prefixes_t__bindgen_ty_1>(),
        4usize,
        concat!(
            "Size of: ",
            stringify!(xed_encoder_prefixes_t__bindgen_ty_1)
        )
    );
    assert_eq!(
        ::core::mem::align_of::<xed_encoder_prefixes_t__bindgen_ty_1>(),
        4usize,
        concat!(
            "Alignment of ",
            stringify!(xed_encoder_prefixes_t__bindgen_ty_1)
        )
    );
}
impl xed_encoder_prefixes_t__bindgen_ty_1 {
    #[inline]
    pub fn rep(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(0usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_rep(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(0usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn repne(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(1usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_repne(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(1usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn br_hint_taken(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(2usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_br_hint_taken(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(2usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn br_hint_not_taken(&self) -> u32 {
        unsafe { ::core::mem::transmute(self._bitfield_1.get(3usize, 1u8) as u32) }
    }
    #[inline]
    pub fn set_br_hint_not_taken(&mut self, val: u32) {
        unsafe {
            let val: u32 = ::core::mem::transmute(val);
            self._bitfield_1.set(3usize, 1u8, val as u64)
        }
    }
    #[inline]
    pub fn new_bitfield_1(
        rep: u32,
        repne: u32,
        br_hint_taken: u32,
        br_hint_not_taken: u32,
    ) -> __BindgenBitfieldUnit<[u8; 1usize]> {
        let mut __bindgen_bitfield_unit: __BindgenBitfieldUnit<[u8; 1usize]> = Default::default();
        __bindgen_bitfield_unit.set(0usize, 1u8, {
            let rep: u32 = unsafe { ::core::mem::transmute(rep) };
            rep as u64
        });
        __bindgen_bitfield_unit.set(1usize, 1u8, {
            let repne: u32 = unsafe { ::core::mem::transmute(repne) };
            repne as u64
        });
        __bindgen_bitfield_unit.set(2usize, 1u8, {
            let br_hint_taken: u32 = unsafe { ::core::mem::transmute(br_hint_taken) };
            br_hint_taken as u64
        });
        __bindgen_bitfield_unit.set(3usize, 1u8, {
            let br_hint_not_taken: u32 = unsafe { ::core::mem::transmute(br_hint_not_taken) };
            br_hint_not_taken as u64
        });
        __bindgen_bitfield_unit
    }
}
#[test]
fn bindgen_test_layout_xed_encoder_prefixes_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_encoder_prefixes_t> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_encoder_prefixes_t>(),
        4usize,
        concat!("Size of: ", stringify!(xed_encoder_prefixes_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_encoder_prefixes_t>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_encoder_prefixes_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).s) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_prefixes_t),
            "::",
            stringify!(s)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).i) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_prefixes_t),
            "::",
            stringify!(i)
        )
    );
}
impl ::core::fmt::Debug for xed_encoder_prefixes_t {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write!(f, "xed_encoder_prefixes_t {{ union }}")
    }
}
#[repr(C)]
#[derive(Copy, Clone)]
pub struct xed_encoder_instruction_t {
    pub mode: xed_state_t,
    pub iclass: xed_iclass_enum_t,
    pub effective_operand_width: u32,
    pub effective_address_width: u32,
    pub prefixes: xed_encoder_prefixes_t,
    pub noperands: u32,
    pub operands: [xed_encoder_operand_t; 8usize],
}
#[test]
fn bindgen_test_layout_xed_encoder_instruction_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_encoder_instruction_t> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_encoder_instruction_t>(),
        416usize,
        concat!("Size of: ", stringify!(xed_encoder_instruction_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_encoder_instruction_t>(),
        8usize,
        concat!("Alignment of ", stringify!(xed_encoder_instruction_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).mode) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_instruction_t),
            "::",
            stringify!(mode)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).iclass) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_instruction_t),
            "::",
            stringify!(iclass)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).effective_operand_width) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_instruction_t),
            "::",
            stringify!(effective_operand_width)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).effective_address_width) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_instruction_t),
            "::",
            stringify!(effective_address_width)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).prefixes) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_instruction_t),
            "::",
            stringify!(prefixes)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).noperands) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_instruction_t),
            "::",
            stringify!(noperands)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).operands) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_encoder_instruction_t),
            "::",
            stringify!(operands)
        )
    );
}
impl ::core::fmt::Debug for xed_encoder_instruction_t {
    fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
        write ! (f , "xed_encoder_instruction_t {{ mode: {:?}, iclass: {:?}, prefixes: {:?}, operands: {:?} }}" , self . mode , self . iclass , self . prefixes , self . operands)
    }
}
extern "C" {
    #[doc = " @ingroup ENCHL\n This is to specify effective address size different than the\n default. For things with base or index regs, XED picks it up from the\n registers. But for things that have implicit memops, or no base or index\n reg, we must allow the user to set the address width directly.\n @param x The #xed_encoder_instruction_t being filled in.\n @param width_bits The intended effective address size in bits.  Values: 16, 32 or 64."]
    #[link_name = "xed_addr_xed_sys_inline"]
    pub fn xed_addr(x: *mut xed_encoder_instruction_t, width_bits: xed_uint_t);
}
extern "C" {
    #[doc = " @ingroup ENCHL\n To add a REP (0xF3) prefix.\n @param x The #xed_encoder_instruction_t being filled in."]
    #[link_name = "xed_rep_xed_sys_inline"]
    pub fn xed_rep(x: *mut xed_encoder_instruction_t);
}
extern "C" {
    #[doc = " @ingroup ENCHL\n To add a REPNE (0xF2) prefix.\n @param x The #xed_encoder_instruction_t being filled in."]
    #[link_name = "xed_repne_xed_sys_inline"]
    pub fn xed_repne(x: *mut xed_encoder_instruction_t);
}
extern "C" {
    #[doc = " @ingroup ENCHL\n convert a #xed_encoder_instruction_t to a #xed_encoder_request_t for\n encoding"]
    pub fn xed_convert_to_encoder_request(
        out: *mut xed_encoder_request_t,
        in_: *mut xed_encoder_instruction_t,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup ENCHL\n instruction with no operands\n @param inst The #xed_encoder_instruction_t to be filled in\n @param mode  The xed_state_t including the machine mode and stack address width.\n @param iclass The #xed_iclass_enum_t\n @param effective_operand_width in bits"]
    #[link_name = "xed_inst0_xed_sys_inline"]
    pub fn xed_inst0(
        inst: *mut xed_encoder_instruction_t,
        mode: xed_state_t,
        iclass: xed_iclass_enum_t,
        effective_operand_width: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENCHL\n instruction with one operand\n @param inst The #xed_encoder_instruction_t to be filled in\n @param mode  The xed_state_t including the machine mode and stack address width.\n @param iclass The #xed_iclass_enum_t\n @param effective_operand_width in bits\n @param op0 the operand"]
    #[link_name = "xed_inst1_xed_sys_inline"]
    pub fn xed_inst1(
        inst: *mut xed_encoder_instruction_t,
        mode: xed_state_t,
        iclass: xed_iclass_enum_t,
        effective_operand_width: xed_uint_t,
        op0: xed_encoder_operand_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENCHL\n instruction with two operands\n @param inst The #xed_encoder_instruction_t to be filled in\n @param mode  The xed_state_t including the machine mode and stack address width.\n @param iclass The #xed_iclass_enum_t\n @param effective_operand_width in bits\n @param op0 the 1st operand\n @param op1 the 2nd operand"]
    #[link_name = "xed_inst2_xed_sys_inline"]
    pub fn xed_inst2(
        inst: *mut xed_encoder_instruction_t,
        mode: xed_state_t,
        iclass: xed_iclass_enum_t,
        effective_operand_width: xed_uint_t,
        op0: xed_encoder_operand_t,
        op1: xed_encoder_operand_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENCHL\n instruction with three operands\n @param inst The #xed_encoder_instruction_t to be filled in\n @param mode  The xed_state_t including the machine mode and stack address width.\n @param iclass The #xed_iclass_enum_t\n @param effective_operand_width in bits\n @param op0 the 1st operand\n @param op1 the 2nd operand\n @param op2 the 3rd operand"]
    #[link_name = "xed_inst3_xed_sys_inline"]
    pub fn xed_inst3(
        inst: *mut xed_encoder_instruction_t,
        mode: xed_state_t,
        iclass: xed_iclass_enum_t,
        effective_operand_width: xed_uint_t,
        op0: xed_encoder_operand_t,
        op1: xed_encoder_operand_t,
        op2: xed_encoder_operand_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENCHL\n instruction with four operands\n @param inst The #xed_encoder_instruction_t to be filled in\n @param mode  The xed_state_t including the machine mode and stack address width.\n @param iclass The #xed_iclass_enum_t\n @param effective_operand_width in bits\n @param op0 the 1st operand\n @param op1 the 2nd operand\n @param op2 the 3rd operand\n @param op3 the 4th operand"]
    #[link_name = "xed_inst4_xed_sys_inline"]
    pub fn xed_inst4(
        inst: *mut xed_encoder_instruction_t,
        mode: xed_state_t,
        iclass: xed_iclass_enum_t,
        effective_operand_width: xed_uint_t,
        op0: xed_encoder_operand_t,
        op1: xed_encoder_operand_t,
        op2: xed_encoder_operand_t,
        op3: xed_encoder_operand_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENCHL\n instruction with five operands\n @param inst The #xed_encoder_instruction_t to be filled in\n @param mode  The xed_state_t including the machine mode and stack address width.\n @param iclass The #xed_iclass_enum_t\n @param effective_operand_width in bits\n @param op0 the 1st operand\n @param op1 the 2nd operand\n @param op2 the 3rd operand\n @param op3 the 4th operand\n @param op4 the 5th operand"]
    #[link_name = "xed_inst5_xed_sys_inline"]
    pub fn xed_inst5(
        inst: *mut xed_encoder_instruction_t,
        mode: xed_state_t,
        iclass: xed_iclass_enum_t,
        effective_operand_width: xed_uint_t,
        op0: xed_encoder_operand_t,
        op1: xed_encoder_operand_t,
        op2: xed_encoder_operand_t,
        op3: xed_encoder_operand_t,
        op4: xed_encoder_operand_t,
    );
}
extern "C" {
    #[doc = " @ingroup ENCHL\n instruction with an array of operands. The maximum number is\n XED_ENCODER_OPERANDS_MAX. The array's contents are copied.\n @param inst The #xed_encoder_instruction_t to be filled in\n @param mode  The xed_state_t including the machine mode and stack address width.\n @param iclass The #xed_iclass_enum_t\n @param effective_operand_width in bits\n @param number_of_operands length of the subsequent array\n @param operand_array An array of #xed_encoder_operand_t objects"]
    #[link_name = "xed_inst_xed_sys_inline"]
    pub fn xed_inst(
        inst: *mut xed_encoder_instruction_t,
        mode: xed_state_t,
        iclass: xed_iclass_enum_t,
        effective_operand_width: xed_uint_t,
        number_of_operands: xed_uint_t,
        operand_array: *const xed_encoder_operand_t,
    );
}
extern "C" {
    #[doc = " Replace a memory displacement.\n The widths of original displacement and replacement must match.\n @param xedd A decoded instruction.\n @param itext The corresponding encoder output, byte array.\n @param disp  A xed_enc_displacement_t object describing the new displacement.\n @returns xed_bool_t  1=success, 0=failure\n @ingroup ENCHLPATCH"]
    pub fn xed_patch_disp(
        xedd: *mut xed_decoded_inst_t,
        itext: *mut u8,
        disp: xed_enc_displacement_t,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " Replace a relative/absolute branch displacement.\n The widths of original displacement and replacement must match.\n @param xedd A decoded instruction.\n @param itext The corresponding encoder output, byte array.\n @param disp  A xed_encoder_operand_t object describing the new displacement.\n @returns xed_bool_t  1=success, 0=failure\n @ingroup ENCHLPATCH"]
    pub fn xed_patch_brdisp(
        xedd: *mut xed_decoded_inst_t,
        itext: *mut u8,
        disp: xed_encoder_operand_t,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " Replace an imm0 immediate value.\n The widths of original immediate and replacement must match.\n @param xedd A decoded instruction.\n @param itext The corresponding encoder output, byte array.\n @param imm0  A xed_encoder_operand_t object describing the new immediate.\n @returns xed_bool_t  1=success, 0=failure\n @ingroup ENCHLPATCH"]
    pub fn xed_patch_imm0(
        xedd: *mut xed_decoded_inst_t,
        itext: *mut u8,
        imm0: xed_encoder_operand_t,
    ) -> xed_bool_t;
}
extern "C" {
    pub fn xed_operand_action_read(rw: xed_operand_action_enum_t) -> xed_uint_t;
}
extern "C" {
    pub fn xed_operand_action_read_only(rw: xed_operand_action_enum_t) -> xed_uint_t;
}
extern "C" {
    pub fn xed_operand_action_written(rw: xed_operand_action_enum_t) -> xed_uint_t;
}
extern "C" {
    pub fn xed_operand_action_written_only(rw: xed_operand_action_enum_t) -> xed_uint_t;
}
extern "C" {
    pub fn xed_operand_action_read_and_written(rw: xed_operand_action_enum_t) -> xed_uint_t;
}
extern "C" {
    pub fn xed_operand_action_conditional_read(rw: xed_operand_action_enum_t) -> xed_uint_t;
}
extern "C" {
    pub fn xed_operand_action_conditional_write(rw: xed_operand_action_enum_t) -> xed_uint_t;
}
extern "C" {
    #[doc = "@ingroup INIT\n Returns a string representing XED svn commit revision and time stamp."]
    pub fn xed_get_version() -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = "@ingroup INIT\n Returns a copyright string."]
    pub fn xed_get_copyright() -> *const ::core::ffi::c_char;
}
#[doc = "  @param address The input address for which we want symbolic name and offset\n  @param symbol_buffer A buffer to hold the symbol name. The callback function should fill this in and terminate\n                       with a null byte.\n  @param buffer_length The maximum length of the symbol_buffer including then null\n  @param offset A pointer to a xed_uint64_t to hold the offset from the provided symbol.\n  @param context This void* pointer passed to the disassembler's new interface so that the caller can identify\n                     the proper context against which to resolve the symbols.\n                     The disassembler passes this value to\n                     the callback. The legacy formatters\n                     that do not have context will pass zero for this parameter.\n  @return 0 on failure, 1 on success."]
pub type xed_disassembly_callback_fn_t = ::core::option::Option<
    unsafe extern "C" fn(
        address: u64,
        symbol_buffer: *mut ::core::ffi::c_char,
        buffer_length: u32,
        offset: *mut u64,
        context: *mut ::core::ffi::c_void,
    ) -> ::core::ffi::c_int,
>;
#[doc = " Options for the disasembly formatting functions. Set once during\n initialization by a calling #xed_format_set_options\n  @ingroup PRINT"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_format_options_t {
    #[doc = " by default, XED prints the hex address before any symbolic name for\n branch targets. If set to zero, then XED will not print the hex\n address before a valid symbolic name."]
    pub hex_address_before_symbolic_name: ::core::ffi::c_uint,
    #[doc = " Simple XML output format for the Intel syntax disassembly."]
    pub xml_a: ::core::ffi::c_uint,
    #[doc = " Include flags in the XML formatting (must also supply xml_a)"]
    pub xml_f: ::core::ffi::c_uint,
    #[doc = " omit unit scale \"*1\""]
    pub omit_unit_scale: ::core::ffi::c_uint,
    #[doc = " do not sign extend signed immediates"]
    pub no_sign_extend_signed_immediates: ::core::ffi::c_uint,
    #[doc = " write-mask-with-curly-brackets, omit k0"]
    pub write_mask_curly_k0: ::core::ffi::c_uint,
    #[doc = " lowercase hexadecimal"]
    pub lowercase_hex: xed_bool_t,
    #[doc = " Show negative memory displacements as\n positive numbers."]
    pub positive_memory_displacements: xed_bool_t,
}
#[test]
fn bindgen_test_layout_xed_format_options_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_format_options_t> =
        ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_format_options_t>(),
        32usize,
        concat!("Size of: ", stringify!(xed_format_options_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_format_options_t>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_format_options_t))
    );
    assert_eq!(
        unsafe {
            ::core::ptr::addr_of!((*ptr).hex_address_before_symbolic_name) as usize - ptr as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_format_options_t),
            "::",
            stringify!(hex_address_before_symbolic_name)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).xml_a) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_format_options_t),
            "::",
            stringify!(xml_a)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).xml_f) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_format_options_t),
            "::",
            stringify!(xml_f)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).omit_unit_scale) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_format_options_t),
            "::",
            stringify!(omit_unit_scale)
        )
    );
    assert_eq!(
        unsafe {
            ::core::ptr::addr_of!((*ptr).no_sign_extend_signed_immediates) as usize - ptr as usize
        },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_format_options_t),
            "::",
            stringify!(no_sign_extend_signed_immediates)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).write_mask_curly_k0) as usize - ptr as usize },
        20usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_format_options_t),
            "::",
            stringify!(write_mask_curly_k0)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).lowercase_hex) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_format_options_t),
            "::",
            stringify!(lowercase_hex)
        )
    );
    assert_eq!(
        unsafe {
            ::core::ptr::addr_of!((*ptr).positive_memory_displacements) as usize - ptr as usize
        },
        28usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_format_options_t),
            "::",
            stringify!(positive_memory_displacements)
        )
    );
}
extern "C" {
    #[doc = " Optionally, customize the disassembly formatting options by passing\n in a #xed_format_options_t structure.\n @ingroup PRINT"]
    pub fn xed_format_set_options(format_options: xed_format_options_t);
}
#[doc = " @ingroup PRINT\n This contains the information used by the various disassembly printers.\n Call xed_init_print_info to initialize the fields.  Then change the\n required and optional fields when required."]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_print_info_t {
    #[doc = " the decoded instruction to print"]
    pub p: *const xed_decoded_inst_t,
    #[doc = " pointer to the output buffer"]
    pub buf: *mut ::core::ffi::c_char,
    #[doc = " length of the output buffer. (bytes) Must be > 25 to start."]
    pub blen: ::core::ffi::c_int,
    #[doc = " program counter location. Must be zero if not used.  (Sometimes\n instructions are disassembled in a temporary buffer at a different\n location than where they may or will exist in memory)."]
    pub runtime_address: u64,
    #[doc = " disassembly_callback MUST be set to zero if not used!  If zero, the\n default disassembly callback is used (if one has been registered)."]
    pub disassembly_callback: xed_disassembly_callback_fn_t,
    #[doc = " passed to disassembly callback. Can be zero if not used."]
    pub context: *mut ::core::ffi::c_void,
    #[doc = " default is Intel-syntax (dest on left)"]
    pub syntax: xed_syntax_enum_t,
    #[doc = " 1=indicated the format_options field is valid, 0=use default\n formatting options from xed_format_set_options()."]
    pub format_options_valid: ::core::ffi::c_int,
    pub format_options: xed_format_options_t,
    #[doc = " internal, do not use"]
    pub emitted: xed_bool_t,
    #[doc = " internal, do not use"]
    pub operand_indx: ::core::ffi::c_uint,
    #[doc = " internal, do not use"]
    pub skip_operand: ::core::ffi::c_uint,
    #[doc = " internal, do not use"]
    pub extra_index_operand: xed_reg_enum_t,
    #[doc = " internal, do not use"]
    pub implicit: xed_bool_t,
    #[doc = " internal, do not use"]
    pub truncate_eip_eosz16: xed_bool_t,
}
#[test]
fn bindgen_test_layout_xed_print_info_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_print_info_t> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_print_info_t>(),
        112usize,
        concat!("Size of: ", stringify!(xed_print_info_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_print_info_t>(),
        8usize,
        concat!("Alignment of ", stringify!(xed_print_info_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).p) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(p)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).buf) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(buf)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).blen) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(blen)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).runtime_address) as usize - ptr as usize },
        24usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(runtime_address)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).disassembly_callback) as usize - ptr as usize },
        32usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(disassembly_callback)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).context) as usize - ptr as usize },
        40usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(context)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).syntax) as usize - ptr as usize },
        48usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(syntax)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).format_options_valid) as usize - ptr as usize },
        52usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(format_options_valid)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).format_options) as usize - ptr as usize },
        56usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(format_options)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).emitted) as usize - ptr as usize },
        88usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(emitted)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).operand_indx) as usize - ptr as usize },
        92usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(operand_indx)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).skip_operand) as usize - ptr as usize },
        96usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(skip_operand)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).extra_index_operand) as usize - ptr as usize },
        100usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(extra_index_operand)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).implicit) as usize - ptr as usize },
        104usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(implicit)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).truncate_eip_eosz16) as usize - ptr as usize },
        108usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_print_info_t),
            "::",
            stringify!(truncate_eip_eosz16)
        )
    );
}
extern "C" {
    #[doc = " @ingroup PRINT"]
    pub fn xed_init_print_info(pi: *mut xed_print_info_t);
}
extern "C" {
    #[doc = " @ingroup DEC\n Return true if the instruction is valid"]
    #[link_name = "xed_decoded_inst_valid_xed_sys_inline"]
    pub fn xed_decoded_inst_valid(p: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the #xed_inst_t structure for this instruction. This is the\n route to the basic operands form information."]
    #[link_name = "xed_decoded_inst_inst_xed_sys_inline"]
    pub fn xed_decoded_inst_inst(p: *const xed_decoded_inst_t) -> *const xed_inst_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the instruction #xed_category_enum_t enumeration"]
    #[link_name = "xed_decoded_inst_get_category_xed_sys_inline"]
    pub fn xed_decoded_inst_get_category(p: *const xed_decoded_inst_t) -> xed_category_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the instruction #xed_extension_enum_t enumeration"]
    #[link_name = "xed_decoded_inst_get_extension_xed_sys_inline"]
    pub fn xed_decoded_inst_get_extension(p: *const xed_decoded_inst_t) -> xed_extension_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the instruction #xed_isa_set_enum_t enumeration"]
    #[link_name = "xed_decoded_inst_get_isa_set_xed_sys_inline"]
    pub fn xed_decoded_inst_get_isa_set(p: *const xed_decoded_inst_t) -> xed_isa_set_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the instruction #xed_iclass_enum_t enumeration."]
    #[link_name = "xed_decoded_inst_get_iclass_xed_sys_inline"]
    pub fn xed_decoded_inst_get_iclass(p: *const xed_decoded_inst_t) -> xed_iclass_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns 1 if the attribute is defined for this instruction."]
    pub fn xed_decoded_inst_get_attribute(
        p: *const xed_decoded_inst_t,
        attr: xed_attribute_enum_t,
    ) -> u32;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns the attribute bitvector"]
    pub fn xed_decoded_inst_get_attributes(p: *const xed_decoded_inst_t) -> xed_attributes_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns 1 if the instruction is xacquire."]
    pub fn xed_decoded_inst_is_xacquire(p: *const xed_decoded_inst_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns 1 if the instruction is xrelease."]
    pub fn xed_decoded_inst_is_xrelease(p: *const xed_decoded_inst_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns 1 if the instruction has mpx prefix."]
    pub fn xed_decoded_inst_has_mpx_prefix(p: *const xed_decoded_inst_t) -> u32;
}
extern "C" {
    #[doc = " @ingroup DEC\n @brief Return non-zero value for APX-Promtoed zero-upper instructions (ZU)."]
    pub fn xed_decoded_inst_is_apx_zu(p: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns the modrm byte"]
    pub fn xed_decoded_inst_get_modrm(p: *const xed_decoded_inst_t) -> u8;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns 1 iff the instruction uses destination-masking.  This is 0 for\n blend operations that use their mask field as a control."]
    pub fn xed_decoded_inst_masked_vector_operation(p: *mut xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns 128, 256 or 512 for operations in the VEX, EVEX (or XOP)\n encoding space and returns 0 for (most) nonvector operations.\n This usually the content of the VEX.L or EVEX.LL field, reinterpreted.\n Some GPR instructions (like the BMI1/BMI2) are encoded in the VEX space\n and return non-zero values from this API."]
    pub fn xed_decoded_inst_vector_length_bits(p: *const xed_decoded_inst_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns the number of legacy prefixes."]
    pub fn xed_decoded_inst_get_nprefixes(p: *const xed_decoded_inst_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Obtain a constant pointer to the operands"]
    #[link_name = "xed_decoded_inst_operands_const_xed_sys_inline"]
    pub fn xed_decoded_inst_operands_const(
        p: *const xed_decoded_inst_t,
    ) -> *const xed_operand_values_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Obtain a non-constant pointer to the operands"]
    #[link_name = "xed_decoded_inst_operands_xed_sys_inline"]
    pub fn xed_decoded_inst_operands(p: *mut xed_decoded_inst_t) -> *mut xed_operand_values_t;
}
extern "C" {
    #[doc = " Return the length in bits of the operand_index'th operand.\n @ingroup DEC"]
    pub fn xed_decoded_inst_operand_length_bits(
        p: *const xed_decoded_inst_t,
        operand_index: ::core::ffi::c_uint,
    ) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " Deprecated -- returns the length in bytes of the operand_index'th\n operand.  Use #xed_decoded_inst_operand_length_bits() instead.\n @ingroup DEC"]
    pub fn xed_decoded_inst_operand_length(
        p: *const xed_decoded_inst_t,
        operand_index: ::core::ffi::c_uint,
    ) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " Return the number of operands\n @ingroup DEC"]
    #[link_name = "xed_decoded_inst_noperands_xed_sys_inline"]
    pub fn xed_decoded_inst_noperands(p: *const xed_decoded_inst_t) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " Return the number of element in the operand (for SSE and AVX operands)\n @ingroup DEC"]
    pub fn xed_decoded_inst_operand_elements(
        p: *const xed_decoded_inst_t,
        operand_index: ::core::ffi::c_uint,
    ) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " Return the size of an element in bits  (for SSE and AVX operands)\n @ingroup DEC"]
    pub fn xed_decoded_inst_operand_element_size_bits(
        p: *const xed_decoded_inst_t,
        operand_index: ::core::ffi::c_uint,
    ) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " Return the type of an element of type #xed_operand_element_type_enum_t\n (for SSE and AVX operands)\n @ingroup DEC"]
    pub fn xed_decoded_inst_operand_element_type(
        p: *const xed_decoded_inst_t,
        operand_index: ::core::ffi::c_uint,
    ) -> xed_operand_element_type_enum_t;
}
extern "C" {
    #[doc = " Interpret the operand action in light of AVX512 masking and\n zeroing/merging.  If masking and merging are used together, the dest\n operand may also be read.  If masking and merging are used together,\n the elemnents of dest operand register may be conditionally written (so\n that input values live on in the output register).\n @ingroup DEC"]
    pub fn xed_decoded_inst_operand_action(
        p: *const xed_decoded_inst_t,
        operand_index: ::core::ffi::c_uint,
    ) -> xed_operand_action_enum_t;
}
extern "C" {
    #[doc = " Returns true if the instruction uses write-masking\n @ingroup DEC"]
    pub fn xed_decoded_inst_masking(p: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " Returns true if the instruction uses write-masking with merging\n @ingroup DEC"]
    pub fn xed_decoded_inst_merging(p: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " Returns true if the instruction uses write-masking with zeroing\n @ingroup DEC"]
    pub fn xed_decoded_inst_zeroing(p: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " Returns the maximum number elements processed for an AVX512 vector\n instruction. Scalars report 1 element.\n @ingroup DEC"]
    pub fn xed_decoded_inst_avx512_dest_elements(p: *const xed_decoded_inst_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Zero the decode structure, but set the machine state/mode\n information. Re-initializes all operands."]
    pub fn xed_decoded_inst_zero_set_mode(p: *mut xed_decoded_inst_t, dstate: *const xed_state_t);
}
extern "C" {
    #[doc = " @ingroup DEC\n Zero the decode structure, but preserve the existing machine state/mode\n information. Re-initializes all operands."]
    pub fn xed_decoded_inst_zero_keep_mode(p: *mut xed_decoded_inst_t);
}
extern "C" {
    #[doc = " @ingroup DEC\n Zero the decode structure completely. Re-initializes all operands."]
    pub fn xed_decoded_inst_zero(p: *mut xed_decoded_inst_t);
}
extern "C" {
    #[doc = " @ingroup DEC\n Set the machine mode and stack addressing width directly. This is NOT a\n full initialization; Call #xed_decoded_inst_zero() before using this if\n you want a clean slate."]
    #[link_name = "xed_decoded_inst_set_mode_xed_sys_inline"]
    pub fn xed_decoded_inst_set_mode(
        p: *mut xed_decoded_inst_t,
        mmode: xed_machine_mode_enum_t,
        stack_addr_width: xed_address_width_enum_t,
    );
}
extern "C" {
    #[doc = " @ingroup DEC\n Zero the decode structure, but copy the existing machine state/mode\n information from the supplied operands pointer. Same as\n #xed_decoded_inst_zero_keep_mode."]
    pub fn xed_decoded_inst_zero_keep_mode_from_operands(
        p: *mut xed_decoded_inst_t,
        operands: *const xed_operand_values_t,
    );
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the length of the decoded  instruction in bytes."]
    #[link_name = "xed_decoded_inst_get_length_xed_sys_inline"]
    pub fn xed_decoded_inst_get_length(p: *const xed_decoded_inst_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Read itext byte."]
    #[link_name = "xed_decoded_inst_get_byte_xed_sys_inline"]
    pub fn xed_decoded_inst_get_byte(p: *const xed_decoded_inst_t, byte_index: xed_uint_t) -> u8;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns 16/32/64 indicating the machine mode with in bits. This is\n derived from the input mode information."]
    #[link_name = "xed_decoded_inst_get_machine_mode_bits_xed_sys_inline"]
    pub fn xed_decoded_inst_get_machine_mode_bits(p: *const xed_decoded_inst_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns 16/32/64 indicating the stack addressing mode with in\n bits. This is derived from the input mode information."]
    #[link_name = "xed_decoded_inst_get_stack_address_mode_bits_xed_sys_inline"]
    pub fn xed_decoded_inst_get_stack_address_mode_bits(p: *const xed_decoded_inst_t)
        -> xed_uint_t;
}
extern "C" {
    #[doc = " Returns the operand width in bits: 8/16/32/64. This is different than\n the #xed_operand_values_get_effective_operand_width() which only\n returns 16/32/64. This factors in the BYTEOP attribute when computing\n its return value. This function provides a information for that is only\n useful for (scalable) GPR-operations. Individual operands have more\n specific information available from\n #xed_decoded_inst_operand_element_size_bits()\n @ingroup DEC"]
    pub fn xed_decoded_inst_get_operand_width(p: *const xed_decoded_inst_t) -> u32;
}
extern "C" {
    #[doc = " Return the user-specified #xed_chip_enum_t chip name, or\n XED_CHIP_INVALID if not set.\n @ingroup DEC"]
    #[link_name = "xed_decoded_inst_get_input_chip_xed_sys_inline"]
    pub fn xed_decoded_inst_get_input_chip(p: *const xed_decoded_inst_t) -> xed_chip_enum_t;
}
extern "C" {
    #[doc = " Set a user-specified #xed_chip_enum_t chip name for restricting decode\n @ingroup DEC"]
    #[link_name = "xed_decoded_inst_set_input_chip_xed_sys_inline"]
    pub fn xed_decoded_inst_set_input_chip(p: *mut xed_decoded_inst_t, chip: xed_chip_enum_t);
}
extern "C" {
    #[doc = " Indicate if this decoded instruction is valid for the specified\n #xed_chip_enum_t chip\n @ingroup DEC"]
    pub fn xed_decoded_inst_valid_for_chip(
        p: *const xed_decoded_inst_t,
        chip: xed_chip_enum_t,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the instruction iform enum of type #xed_iform_enum_t ."]
    #[link_name = "xed_decoded_inst_get_iform_enum_xed_sys_inline"]
    pub fn xed_decoded_inst_get_iform_enum(p: *const xed_decoded_inst_t) -> xed_iform_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the instruction zero-based iform number based on masking the\n corresponding #xed_iform_enum_t. This value is suitable for\n dispatching. The maximum value for a particular iclass is provided by\n #xed_iform_max_per_iclass() ."]
    #[link_name = "xed_decoded_inst_get_iform_enum_dispatch_xed_sys_inline"]
    pub fn xed_decoded_inst_get_iform_enum_dispatch(
        p: *const xed_decoded_inst_t,
    ) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " @ingroup PRINT\n Print out all the information about the decoded instruction to the\n buffer buf whose length is maximally buflen. This is for debugging."]
    pub fn xed_decoded_inst_dump(
        p: *const xed_decoded_inst_t,
        buf: *mut ::core::ffi::c_char,
        buflen: ::core::ffi::c_int,
    );
}
extern "C" {
    #[doc = " @ingroup PRINT\n Print the instruction information in a verbose format.\n This is for debugging.\n @param p a #xed_decoded_inst_t for a decoded instruction\n @param buf a buffer to write the disassembly in to.\n @param buflen maximum length of the disassembly buffer\n @param runtime_address the address of the instruction being disassembled. If zero, the offset is printed for relative branches. If nonzero, XED attempts to print the target address for relative branches.\n @return Returns 0 if the disassembly fails, 1 otherwise."]
    pub fn xed_decoded_inst_dump_xed_format(
        p: *const xed_decoded_inst_t,
        buf: *mut ::core::ffi::c_char,
        buflen: ::core::ffi::c_int,
        runtime_address: u64,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " Disassemble the decoded instruction using the specified syntax.\n The output buffer must be at least 25 bytes long. Returns true if\n disassembly proceeded without errors.\n @param syntax a #xed_syntax_enum_t the specifies the disassembly format\n @param xedd a #xed_decoded_inst_t for a decoded instruction\n @param out_buffer a buffer to write the disassembly in to.\n @param buffer_len maximum length of the disassembly buffer\n @param runtime_instruction_address the address of the instruction being disassembled. If zero, the offset is printed for relative branches. If nonzero, XED attempts to print the target address for relative branches.\n @param context A void* used only for the call back routine for symbolic disassembly if one is provided. Can be zero.\n @param symbolic_callback A function pointer for obtaining symbolic disassembly. Can be zero.\n @return Returns 0 if the disassembly fails, 1 otherwise.\n@ingroup PRINT"]
    pub fn xed_format_context(
        syntax: xed_syntax_enum_t,
        xedd: *const xed_decoded_inst_t,
        out_buffer: *mut ::core::ffi::c_char,
        buffer_len: ::core::ffi::c_int,
        runtime_instruction_address: u64,
        context: *mut ::core::ffi::c_void,
        symbolic_callback: xed_disassembly_callback_fn_t,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup PRINT\n Disassemble the instruction information to a buffer. See the\n #xed_print_info_t for the required public fields of the argument.\n This is the preferred method of doing disassembly.\n The output buffer must be at least 25 bytes long.\n @param pi a #xed_print_info_t\n @return Returns 0 if the disassembly fails, 1 otherwise."]
    pub fn xed_format_generic(pi: *mut xed_print_info_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_get_seg_reg(
        p: *const xed_decoded_inst_t,
        mem_idx: ::core::ffi::c_uint,
    ) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_get_base_reg(
        p: *const xed_decoded_inst_t,
        mem_idx: ::core::ffi::c_uint,
    ) -> xed_reg_enum_t;
}
extern "C" {
    pub fn xed_decoded_inst_get_index_reg(
        p: *const xed_decoded_inst_t,
        mem_idx: ::core::ffi::c_uint,
    ) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_get_scale(
        p: *const xed_decoded_inst_t,
        mem_idx: ::core::ffi::c_uint,
    ) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_get_memory_displacement(
        p: *const xed_decoded_inst_t,
        mem_idx: ::core::ffi::c_uint,
    ) -> i64;
}
extern "C" {
    #[doc = " @ingroup DEC\n Result in BYTES"]
    pub fn xed_decoded_inst_get_memory_displacement_width(
        p: *const xed_decoded_inst_t,
        mem_idx: ::core::ffi::c_uint,
    ) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Result in BITS"]
    pub fn xed_decoded_inst_get_memory_displacement_width_bits(
        p: *const xed_decoded_inst_t,
        mem_idx: ::core::ffi::c_uint,
    ) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_get_branch_displacement(p: *const xed_decoded_inst_t) -> i64;
}
extern "C" {
    #[doc = " @ingroup DEC\n Result in BYTES"]
    pub fn xed_decoded_inst_get_branch_displacement_width(
        p: *const xed_decoded_inst_t,
    ) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Result in BITS"]
    pub fn xed_decoded_inst_get_branch_displacement_width_bits(
        p: *const xed_decoded_inst_t,
    ) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_get_unsigned_immediate(p: *const xed_decoded_inst_t) -> u64;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return true if the first immediate (IMM0)  is signed"]
    pub fn xed_decoded_inst_get_immediate_is_signed(p: *const xed_decoded_inst_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the immediate width in BYTES."]
    pub fn xed_decoded_inst_get_immediate_width(p: *const xed_decoded_inst_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the immediate width in BITS."]
    pub fn xed_decoded_inst_get_immediate_width_bits(p: *const xed_decoded_inst_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_get_signed_immediate(p: *const xed_decoded_inst_t) -> i32;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the second immediate."]
    #[link_name = "xed_decoded_inst_get_second_immediate_xed_sys_inline"]
    pub fn xed_decoded_inst_get_second_immediate(p: *const xed_decoded_inst_t) -> u8;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return the specified register operand. The specifier is of type\n #xed_operand_enum_t ."]
    pub fn xed_decoded_inst_get_reg(
        p: *const xed_decoded_inst_t,
        reg_operand: xed_operand_enum_t,
    ) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return DFV register enumeration if one of the instruction's operands\n is a \"default flags values\" pseudo-register and invalid register enumeration otherwise"]
    pub fn xed_decoded_inst_get_dfv_reg(xedd: *const xed_decoded_inst_t) -> xed_reg_enum_t;
}
extern "C" {
    #[doc = " See the comment on xed_decoded_inst_uses_rflags(). This can return\n 0 if the flags are really not used by this instruction.\n @ingroup DEC"]
    pub fn xed_decoded_inst_get_rflags_info(
        p: *const xed_decoded_inst_t,
    ) -> *const xed_simple_flag_t;
}
extern "C" {
    #[doc = " This returns 1 if the flags are read or written. This will return 0\n otherwise. This will return 0 if the flags are really not used by this\n instruction. For some shifts/rotates, XED puts a flags operand in the\n operand array before it knows if the flags are used because of\n mode-dependent masking effects on the immediate.\n @ingroup DEC"]
    pub fn xed_decoded_inst_uses_rflags(p: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_number_of_memory_operands(p: *const xed_decoded_inst_t) -> xed_uint_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_mem_read(
        p: *const xed_decoded_inst_t,
        mem_idx: ::core::ffi::c_uint,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_mem_written(
        p: *const xed_decoded_inst_t,
        mem_idx: ::core::ffi::c_uint,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_mem_written_only(
        p: *const xed_decoded_inst_t,
        mem_idx: ::core::ffi::c_uint,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_conditionally_writes_registers(
        p: *const xed_decoded_inst_t,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " returns bytes\n @ingroup DEC"]
    pub fn xed_decoded_inst_get_memory_operand_length(
        p: *const xed_decoded_inst_t,
        memop_idx: ::core::ffi::c_uint,
    ) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_get_memop_address_width(
        p: *const xed_decoded_inst_t,
        memop_idx: xed_uint_t,
    ) -> ::core::ffi::c_uint;
}
extern "C" {
    #[doc = " @ingroup DEC\n Returns true if the instruction is a prefetch"]
    pub fn xed_decoded_inst_is_prefetch(p: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return 1 for broadcast instructions or AVX512 load-op instructions using the broadcast feature\n 0 otherwise.  Logical OR of\n #xed_decoded_inst_is_broadcast_instruction() and\n #xed_decoded_inst_uses_embedded_broadcast()."]
    pub fn xed_decoded_inst_is_broadcast(p: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return 1 for broadcast instruction. (NOT including AVX512 load-op instructions)\n 0 otherwise. Just a category check."]
    pub fn xed_decoded_inst_is_broadcast_instruction(p: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n Return 1 for AVX512 load-op instructions using the broadcast feature,\n 0 otherwise."]
    pub fn xed_decoded_inst_uses_embedded_broadcast(p: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC"]
    pub fn xed_decoded_inst_set_scale(p: *mut xed_decoded_inst_t, scale: xed_uint_t);
}
extern "C" {
    #[doc = " @ingroup DEC\n Set the memory displacement using a BYTE length"]
    pub fn xed_decoded_inst_set_memory_displacement(
        p: *mut xed_decoded_inst_t,
        disp: i64,
        length_bytes: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup DEC\n Set the branch  displacement using a BYTE length"]
    pub fn xed_decoded_inst_set_branch_displacement(
        p: *mut xed_decoded_inst_t,
        disp: i64,
        length_bytes: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup DEC\n Set the signed immediate a BYTE length"]
    pub fn xed_decoded_inst_set_immediate_signed(
        p: *mut xed_decoded_inst_t,
        x: i32,
        length_bytes: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup DEC\n Set the unsigned immediate a BYTE length"]
    pub fn xed_decoded_inst_set_immediate_unsigned(
        p: *mut xed_decoded_inst_t,
        x: u64,
        length_bytes: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup DEC\n Set the memory displacement a BITS length"]
    pub fn xed_decoded_inst_set_memory_displacement_bits(
        p: *mut xed_decoded_inst_t,
        disp: i64,
        length_bits: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup DEC\n Set the branch displacement a BITS length"]
    pub fn xed_decoded_inst_set_branch_displacement_bits(
        p: *mut xed_decoded_inst_t,
        disp: i64,
        length_bits: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup DEC\n Set the signed immediate a BITS length"]
    pub fn xed_decoded_inst_set_immediate_signed_bits(
        p: *mut xed_decoded_inst_t,
        x: i32,
        length_bits: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup DEC\n Set the unsigned immediate a BITS length"]
    pub fn xed_decoded_inst_set_immediate_unsigned_bits(
        p: *mut xed_decoded_inst_t,
        x: u64,
        length_bits: xed_uint_t,
    );
}
extern "C" {
    #[doc = " @ingroup DEC\n Return a user data field for arbitrary use by the user after decoding."]
    #[link_name = "xed_decoded_inst_get_user_data_xed_sys_inline"]
    pub fn xed_decoded_inst_get_user_data(p: *mut xed_decoded_inst_t) -> u64;
}
extern "C" {
    #[doc = " @ingroup DEC\n Modify the user data field."]
    #[link_name = "xed_decoded_inst_set_user_data_xed_sys_inline"]
    pub fn xed_decoded_inst_set_user_data(p: *mut xed_decoded_inst_t, new_value: u64);
}
extern "C" {
    #[doc = " @ingroup DEC\n @brief True for APX instructions.\n includes instructions with EGPRs, REX2 and encodings that are treated as illegal on non-APX systems"]
    pub fn xed_classify_apx(d: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n True for AMX instructions"]
    pub fn xed_classify_amx(d: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n True for AVX512 (EVEX-encoded) SIMD and (VEX encoded) K-mask instructions"]
    pub fn xed_classify_avx512(d: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n True for AVX512 (VEX-encoded) K-mask operations"]
    pub fn xed_classify_avx512_maskop(d: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n True for AVX/AVX2 SIMD VEX-encoded operations. Does not include BMI/BMI2 instructions."]
    pub fn xed_classify_avx(d: *const xed_decoded_inst_t) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup DEC\n True for SSE/SSE2/etc. SIMD operations.  Includes AES and PCLMULQDQ"]
    pub fn xed_classify_sse(d: *const xed_decoded_inst_t) -> xed_bool_t;
}
pub const XED_IFORMFL_AAA_FIRST: xed_iformfl_enum_t = 1;
pub const XED_IFORMFL_AAA_LAST: xed_iformfl_enum_t = 1;
pub const XED_IFORMFL_AAD_FIRST: xed_iformfl_enum_t = 2;
pub const XED_IFORMFL_AAD_LAST: xed_iformfl_enum_t = 2;
pub const XED_IFORMFL_AADD_FIRST: xed_iformfl_enum_t = 3;
pub const XED_IFORMFL_AADD_LAST: xed_iformfl_enum_t = 6;
pub const XED_IFORMFL_AAM_FIRST: xed_iformfl_enum_t = 7;
pub const XED_IFORMFL_AAM_LAST: xed_iformfl_enum_t = 7;
pub const XED_IFORMFL_AAND_FIRST: xed_iformfl_enum_t = 8;
pub const XED_IFORMFL_AAND_LAST: xed_iformfl_enum_t = 11;
pub const XED_IFORMFL_AAS_FIRST: xed_iformfl_enum_t = 12;
pub const XED_IFORMFL_AAS_LAST: xed_iformfl_enum_t = 12;
pub const XED_IFORMFL_ADC_FIRST: xed_iformfl_enum_t = 13;
pub const XED_IFORMFL_ADC_LAST: xed_iformfl_enum_t = 54;
pub const XED_IFORMFL_ADCX_FIRST: xed_iformfl_enum_t = 55;
pub const XED_IFORMFL_ADCX_LAST: xed_iformfl_enum_t = 66;
pub const XED_IFORMFL_ADC_LOCK_FIRST: xed_iformfl_enum_t = 67;
pub const XED_IFORMFL_ADC_LOCK_LAST: xed_iformfl_enum_t = 72;
pub const XED_IFORMFL_ADD_FIRST: xed_iformfl_enum_t = 73;
pub const XED_IFORMFL_ADD_LAST: xed_iformfl_enum_t = 114;
pub const XED_IFORMFL_ADDPD_FIRST: xed_iformfl_enum_t = 115;
pub const XED_IFORMFL_ADDPD_LAST: xed_iformfl_enum_t = 116;
pub const XED_IFORMFL_ADDPS_FIRST: xed_iformfl_enum_t = 117;
pub const XED_IFORMFL_ADDPS_LAST: xed_iformfl_enum_t = 118;
pub const XED_IFORMFL_ADDSD_FIRST: xed_iformfl_enum_t = 119;
pub const XED_IFORMFL_ADDSD_LAST: xed_iformfl_enum_t = 120;
pub const XED_IFORMFL_ADDSS_FIRST: xed_iformfl_enum_t = 121;
pub const XED_IFORMFL_ADDSS_LAST: xed_iformfl_enum_t = 122;
pub const XED_IFORMFL_ADDSUBPD_FIRST: xed_iformfl_enum_t = 123;
pub const XED_IFORMFL_ADDSUBPD_LAST: xed_iformfl_enum_t = 124;
pub const XED_IFORMFL_ADDSUBPS_FIRST: xed_iformfl_enum_t = 125;
pub const XED_IFORMFL_ADDSUBPS_LAST: xed_iformfl_enum_t = 126;
pub const XED_IFORMFL_ADD_LOCK_FIRST: xed_iformfl_enum_t = 127;
pub const XED_IFORMFL_ADD_LOCK_LAST: xed_iformfl_enum_t = 132;
pub const XED_IFORMFL_ADOX_FIRST: xed_iformfl_enum_t = 133;
pub const XED_IFORMFL_ADOX_LAST: xed_iformfl_enum_t = 144;
pub const XED_IFORMFL_AESDEC_FIRST: xed_iformfl_enum_t = 145;
pub const XED_IFORMFL_AESDEC_LAST: xed_iformfl_enum_t = 146;
pub const XED_IFORMFL_AESDEC128KL_FIRST: xed_iformfl_enum_t = 147;
pub const XED_IFORMFL_AESDEC128KL_LAST: xed_iformfl_enum_t = 148;
pub const XED_IFORMFL_AESDEC256KL_FIRST: xed_iformfl_enum_t = 149;
pub const XED_IFORMFL_AESDEC256KL_LAST: xed_iformfl_enum_t = 150;
pub const XED_IFORMFL_AESDECLAST_FIRST: xed_iformfl_enum_t = 151;
pub const XED_IFORMFL_AESDECLAST_LAST: xed_iformfl_enum_t = 152;
pub const XED_IFORMFL_AESDECWIDE128KL_FIRST: xed_iformfl_enum_t = 153;
pub const XED_IFORMFL_AESDECWIDE128KL_LAST: xed_iformfl_enum_t = 154;
pub const XED_IFORMFL_AESDECWIDE256KL_FIRST: xed_iformfl_enum_t = 155;
pub const XED_IFORMFL_AESDECWIDE256KL_LAST: xed_iformfl_enum_t = 156;
pub const XED_IFORMFL_AESENC_FIRST: xed_iformfl_enum_t = 157;
pub const XED_IFORMFL_AESENC_LAST: xed_iformfl_enum_t = 158;
pub const XED_IFORMFL_AESENC128KL_FIRST: xed_iformfl_enum_t = 159;
pub const XED_IFORMFL_AESENC128KL_LAST: xed_iformfl_enum_t = 160;
pub const XED_IFORMFL_AESENC256KL_FIRST: xed_iformfl_enum_t = 161;
pub const XED_IFORMFL_AESENC256KL_LAST: xed_iformfl_enum_t = 162;
pub const XED_IFORMFL_AESENCLAST_FIRST: xed_iformfl_enum_t = 163;
pub const XED_IFORMFL_AESENCLAST_LAST: xed_iformfl_enum_t = 164;
pub const XED_IFORMFL_AESENCWIDE128KL_FIRST: xed_iformfl_enum_t = 165;
pub const XED_IFORMFL_AESENCWIDE128KL_LAST: xed_iformfl_enum_t = 166;
pub const XED_IFORMFL_AESENCWIDE256KL_FIRST: xed_iformfl_enum_t = 167;
pub const XED_IFORMFL_AESENCWIDE256KL_LAST: xed_iformfl_enum_t = 168;
pub const XED_IFORMFL_AESIMC_FIRST: xed_iformfl_enum_t = 169;
pub const XED_IFORMFL_AESIMC_LAST: xed_iformfl_enum_t = 170;
pub const XED_IFORMFL_AESKEYGENASSIST_FIRST: xed_iformfl_enum_t = 171;
pub const XED_IFORMFL_AESKEYGENASSIST_LAST: xed_iformfl_enum_t = 172;
pub const XED_IFORMFL_AND_FIRST: xed_iformfl_enum_t = 173;
pub const XED_IFORMFL_AND_LAST: xed_iformfl_enum_t = 214;
pub const XED_IFORMFL_ANDN_FIRST: xed_iformfl_enum_t = 215;
pub const XED_IFORMFL_ANDN_LAST: xed_iformfl_enum_t = 222;
pub const XED_IFORMFL_ANDNPD_FIRST: xed_iformfl_enum_t = 223;
pub const XED_IFORMFL_ANDNPD_LAST: xed_iformfl_enum_t = 224;
pub const XED_IFORMFL_ANDNPS_FIRST: xed_iformfl_enum_t = 225;
pub const XED_IFORMFL_ANDNPS_LAST: xed_iformfl_enum_t = 226;
pub const XED_IFORMFL_ANDPD_FIRST: xed_iformfl_enum_t = 227;
pub const XED_IFORMFL_ANDPD_LAST: xed_iformfl_enum_t = 228;
pub const XED_IFORMFL_ANDPS_FIRST: xed_iformfl_enum_t = 229;
pub const XED_IFORMFL_ANDPS_LAST: xed_iformfl_enum_t = 230;
pub const XED_IFORMFL_AND_LOCK_FIRST: xed_iformfl_enum_t = 231;
pub const XED_IFORMFL_AND_LOCK_LAST: xed_iformfl_enum_t = 236;
pub const XED_IFORMFL_AOR_FIRST: xed_iformfl_enum_t = 237;
pub const XED_IFORMFL_AOR_LAST: xed_iformfl_enum_t = 240;
pub const XED_IFORMFL_ARPL_FIRST: xed_iformfl_enum_t = 241;
pub const XED_IFORMFL_ARPL_LAST: xed_iformfl_enum_t = 242;
pub const XED_IFORMFL_AXOR_FIRST: xed_iformfl_enum_t = 243;
pub const XED_IFORMFL_AXOR_LAST: xed_iformfl_enum_t = 246;
pub const XED_IFORMFL_BEXTR_FIRST: xed_iformfl_enum_t = 247;
pub const XED_IFORMFL_BEXTR_LAST: xed_iformfl_enum_t = 254;
pub const XED_IFORMFL_BEXTR_XOP_FIRST: xed_iformfl_enum_t = 255;
pub const XED_IFORMFL_BEXTR_XOP_LAST: xed_iformfl_enum_t = 258;
pub const XED_IFORMFL_BLCFILL_FIRST: xed_iformfl_enum_t = 259;
pub const XED_IFORMFL_BLCFILL_LAST: xed_iformfl_enum_t = 262;
pub const XED_IFORMFL_BLCI_FIRST: xed_iformfl_enum_t = 263;
pub const XED_IFORMFL_BLCI_LAST: xed_iformfl_enum_t = 266;
pub const XED_IFORMFL_BLCIC_FIRST: xed_iformfl_enum_t = 267;
pub const XED_IFORMFL_BLCIC_LAST: xed_iformfl_enum_t = 270;
pub const XED_IFORMFL_BLCMSK_FIRST: xed_iformfl_enum_t = 271;
pub const XED_IFORMFL_BLCMSK_LAST: xed_iformfl_enum_t = 274;
pub const XED_IFORMFL_BLCS_FIRST: xed_iformfl_enum_t = 275;
pub const XED_IFORMFL_BLCS_LAST: xed_iformfl_enum_t = 278;
pub const XED_IFORMFL_BLENDPD_FIRST: xed_iformfl_enum_t = 279;
pub const XED_IFORMFL_BLENDPD_LAST: xed_iformfl_enum_t = 280;
pub const XED_IFORMFL_BLENDPS_FIRST: xed_iformfl_enum_t = 281;
pub const XED_IFORMFL_BLENDPS_LAST: xed_iformfl_enum_t = 282;
pub const XED_IFORMFL_BLENDVPD_FIRST: xed_iformfl_enum_t = 283;
pub const XED_IFORMFL_BLENDVPD_LAST: xed_iformfl_enum_t = 284;
pub const XED_IFORMFL_BLENDVPS_FIRST: xed_iformfl_enum_t = 285;
pub const XED_IFORMFL_BLENDVPS_LAST: xed_iformfl_enum_t = 286;
pub const XED_IFORMFL_BLSFILL_FIRST: xed_iformfl_enum_t = 287;
pub const XED_IFORMFL_BLSFILL_LAST: xed_iformfl_enum_t = 290;
pub const XED_IFORMFL_BLSI_FIRST: xed_iformfl_enum_t = 291;
pub const XED_IFORMFL_BLSI_LAST: xed_iformfl_enum_t = 298;
pub const XED_IFORMFL_BLSIC_FIRST: xed_iformfl_enum_t = 299;
pub const XED_IFORMFL_BLSIC_LAST: xed_iformfl_enum_t = 302;
pub const XED_IFORMFL_BLSMSK_FIRST: xed_iformfl_enum_t = 303;
pub const XED_IFORMFL_BLSMSK_LAST: xed_iformfl_enum_t = 310;
pub const XED_IFORMFL_BLSR_FIRST: xed_iformfl_enum_t = 311;
pub const XED_IFORMFL_BLSR_LAST: xed_iformfl_enum_t = 318;
pub const XED_IFORMFL_BNDCL_FIRST: xed_iformfl_enum_t = 319;
pub const XED_IFORMFL_BNDCL_LAST: xed_iformfl_enum_t = 321;
pub const XED_IFORMFL_BNDCN_FIRST: xed_iformfl_enum_t = 322;
pub const XED_IFORMFL_BNDCN_LAST: xed_iformfl_enum_t = 324;
pub const XED_IFORMFL_BNDCU_FIRST: xed_iformfl_enum_t = 325;
pub const XED_IFORMFL_BNDCU_LAST: xed_iformfl_enum_t = 327;
pub const XED_IFORMFL_BNDLDX_FIRST: xed_iformfl_enum_t = 328;
pub const XED_IFORMFL_BNDLDX_LAST: xed_iformfl_enum_t = 329;
pub const XED_IFORMFL_BNDMK_FIRST: xed_iformfl_enum_t = 330;
pub const XED_IFORMFL_BNDMK_LAST: xed_iformfl_enum_t = 330;
pub const XED_IFORMFL_BNDMOV_FIRST: xed_iformfl_enum_t = 331;
pub const XED_IFORMFL_BNDMOV_LAST: xed_iformfl_enum_t = 335;
pub const XED_IFORMFL_BNDSTX_FIRST: xed_iformfl_enum_t = 336;
pub const XED_IFORMFL_BNDSTX_LAST: xed_iformfl_enum_t = 337;
pub const XED_IFORMFL_BOUND_FIRST: xed_iformfl_enum_t = 338;
pub const XED_IFORMFL_BOUND_LAST: xed_iformfl_enum_t = 339;
pub const XED_IFORMFL_BSF_FIRST: xed_iformfl_enum_t = 340;
pub const XED_IFORMFL_BSF_LAST: xed_iformfl_enum_t = 341;
pub const XED_IFORMFL_BSR_FIRST: xed_iformfl_enum_t = 342;
pub const XED_IFORMFL_BSR_LAST: xed_iformfl_enum_t = 343;
pub const XED_IFORMFL_BSWAP_FIRST: xed_iformfl_enum_t = 344;
pub const XED_IFORMFL_BSWAP_LAST: xed_iformfl_enum_t = 344;
pub const XED_IFORMFL_BT_FIRST: xed_iformfl_enum_t = 345;
pub const XED_IFORMFL_BT_LAST: xed_iformfl_enum_t = 348;
pub const XED_IFORMFL_BTC_FIRST: xed_iformfl_enum_t = 349;
pub const XED_IFORMFL_BTC_LAST: xed_iformfl_enum_t = 352;
pub const XED_IFORMFL_BTC_LOCK_FIRST: xed_iformfl_enum_t = 353;
pub const XED_IFORMFL_BTC_LOCK_LAST: xed_iformfl_enum_t = 354;
pub const XED_IFORMFL_BTR_FIRST: xed_iformfl_enum_t = 355;
pub const XED_IFORMFL_BTR_LAST: xed_iformfl_enum_t = 358;
pub const XED_IFORMFL_BTR_LOCK_FIRST: xed_iformfl_enum_t = 359;
pub const XED_IFORMFL_BTR_LOCK_LAST: xed_iformfl_enum_t = 360;
pub const XED_IFORMFL_BTS_FIRST: xed_iformfl_enum_t = 361;
pub const XED_IFORMFL_BTS_LAST: xed_iformfl_enum_t = 364;
pub const XED_IFORMFL_BTS_LOCK_FIRST: xed_iformfl_enum_t = 365;
pub const XED_IFORMFL_BTS_LOCK_LAST: xed_iformfl_enum_t = 366;
pub const XED_IFORMFL_BZHI_FIRST: xed_iformfl_enum_t = 367;
pub const XED_IFORMFL_BZHI_LAST: xed_iformfl_enum_t = 374;
pub const XED_IFORMFL_CALL_FAR_FIRST: xed_iformfl_enum_t = 375;
pub const XED_IFORMFL_CALL_FAR_LAST: xed_iformfl_enum_t = 376;
pub const XED_IFORMFL_CALL_NEAR_FIRST: xed_iformfl_enum_t = 377;
pub const XED_IFORMFL_CALL_NEAR_LAST: xed_iformfl_enum_t = 380;
pub const XED_IFORMFL_CBW_FIRST: xed_iformfl_enum_t = 381;
pub const XED_IFORMFL_CBW_LAST: xed_iformfl_enum_t = 381;
pub const XED_IFORMFL_CCMPB_FIRST: xed_iformfl_enum_t = 382;
pub const XED_IFORMFL_CCMPB_LAST: xed_iformfl_enum_t = 393;
pub const XED_IFORMFL_CCMPBE_FIRST: xed_iformfl_enum_t = 394;
pub const XED_IFORMFL_CCMPBE_LAST: xed_iformfl_enum_t = 405;
pub const XED_IFORMFL_CCMPF_FIRST: xed_iformfl_enum_t = 406;
pub const XED_IFORMFL_CCMPF_LAST: xed_iformfl_enum_t = 417;
pub const XED_IFORMFL_CCMPL_FIRST: xed_iformfl_enum_t = 418;
pub const XED_IFORMFL_CCMPL_LAST: xed_iformfl_enum_t = 429;
pub const XED_IFORMFL_CCMPLE_FIRST: xed_iformfl_enum_t = 430;
pub const XED_IFORMFL_CCMPLE_LAST: xed_iformfl_enum_t = 441;
pub const XED_IFORMFL_CCMPNB_FIRST: xed_iformfl_enum_t = 442;
pub const XED_IFORMFL_CCMPNB_LAST: xed_iformfl_enum_t = 453;
pub const XED_IFORMFL_CCMPNBE_FIRST: xed_iformfl_enum_t = 454;
pub const XED_IFORMFL_CCMPNBE_LAST: xed_iformfl_enum_t = 465;
pub const XED_IFORMFL_CCMPNL_FIRST: xed_iformfl_enum_t = 466;
pub const XED_IFORMFL_CCMPNL_LAST: xed_iformfl_enum_t = 477;
pub const XED_IFORMFL_CCMPNLE_FIRST: xed_iformfl_enum_t = 478;
pub const XED_IFORMFL_CCMPNLE_LAST: xed_iformfl_enum_t = 489;
pub const XED_IFORMFL_CCMPNO_FIRST: xed_iformfl_enum_t = 490;
pub const XED_IFORMFL_CCMPNO_LAST: xed_iformfl_enum_t = 501;
pub const XED_IFORMFL_CCMPNS_FIRST: xed_iformfl_enum_t = 502;
pub const XED_IFORMFL_CCMPNS_LAST: xed_iformfl_enum_t = 513;
pub const XED_IFORMFL_CCMPNZ_FIRST: xed_iformfl_enum_t = 514;
pub const XED_IFORMFL_CCMPNZ_LAST: xed_iformfl_enum_t = 525;
pub const XED_IFORMFL_CCMPO_FIRST: xed_iformfl_enum_t = 526;
pub const XED_IFORMFL_CCMPO_LAST: xed_iformfl_enum_t = 537;
pub const XED_IFORMFL_CCMPS_FIRST: xed_iformfl_enum_t = 538;
pub const XED_IFORMFL_CCMPS_LAST: xed_iformfl_enum_t = 549;
pub const XED_IFORMFL_CCMPT_FIRST: xed_iformfl_enum_t = 550;
pub const XED_IFORMFL_CCMPT_LAST: xed_iformfl_enum_t = 561;
pub const XED_IFORMFL_CCMPZ_FIRST: xed_iformfl_enum_t = 562;
pub const XED_IFORMFL_CCMPZ_LAST: xed_iformfl_enum_t = 573;
pub const XED_IFORMFL_CDQ_FIRST: xed_iformfl_enum_t = 574;
pub const XED_IFORMFL_CDQ_LAST: xed_iformfl_enum_t = 574;
pub const XED_IFORMFL_CDQE_FIRST: xed_iformfl_enum_t = 575;
pub const XED_IFORMFL_CDQE_LAST: xed_iformfl_enum_t = 575;
pub const XED_IFORMFL_CFCMOVB_FIRST: xed_iformfl_enum_t = 576;
pub const XED_IFORMFL_CFCMOVB_LAST: xed_iformfl_enum_t = 580;
pub const XED_IFORMFL_CFCMOVBE_FIRST: xed_iformfl_enum_t = 581;
pub const XED_IFORMFL_CFCMOVBE_LAST: xed_iformfl_enum_t = 585;
pub const XED_IFORMFL_CFCMOVL_FIRST: xed_iformfl_enum_t = 586;
pub const XED_IFORMFL_CFCMOVL_LAST: xed_iformfl_enum_t = 590;
pub const XED_IFORMFL_CFCMOVLE_FIRST: xed_iformfl_enum_t = 591;
pub const XED_IFORMFL_CFCMOVLE_LAST: xed_iformfl_enum_t = 595;
pub const XED_IFORMFL_CFCMOVNB_FIRST: xed_iformfl_enum_t = 596;
pub const XED_IFORMFL_CFCMOVNB_LAST: xed_iformfl_enum_t = 600;
pub const XED_IFORMFL_CFCMOVNBE_FIRST: xed_iformfl_enum_t = 601;
pub const XED_IFORMFL_CFCMOVNBE_LAST: xed_iformfl_enum_t = 605;
pub const XED_IFORMFL_CFCMOVNL_FIRST: xed_iformfl_enum_t = 606;
pub const XED_IFORMFL_CFCMOVNL_LAST: xed_iformfl_enum_t = 610;
pub const XED_IFORMFL_CFCMOVNLE_FIRST: xed_iformfl_enum_t = 611;
pub const XED_IFORMFL_CFCMOVNLE_LAST: xed_iformfl_enum_t = 615;
pub const XED_IFORMFL_CFCMOVNO_FIRST: xed_iformfl_enum_t = 616;
pub const XED_IFORMFL_CFCMOVNO_LAST: xed_iformfl_enum_t = 620;
pub const XED_IFORMFL_CFCMOVNP_FIRST: xed_iformfl_enum_t = 621;
pub const XED_IFORMFL_CFCMOVNP_LAST: xed_iformfl_enum_t = 625;
pub const XED_IFORMFL_CFCMOVNS_FIRST: xed_iformfl_enum_t = 626;
pub const XED_IFORMFL_CFCMOVNS_LAST: xed_iformfl_enum_t = 630;
pub const XED_IFORMFL_CFCMOVNZ_FIRST: xed_iformfl_enum_t = 631;
pub const XED_IFORMFL_CFCMOVNZ_LAST: xed_iformfl_enum_t = 635;
pub const XED_IFORMFL_CFCMOVO_FIRST: xed_iformfl_enum_t = 636;
pub const XED_IFORMFL_CFCMOVO_LAST: xed_iformfl_enum_t = 640;
pub const XED_IFORMFL_CFCMOVP_FIRST: xed_iformfl_enum_t = 641;
pub const XED_IFORMFL_CFCMOVP_LAST: xed_iformfl_enum_t = 645;
pub const XED_IFORMFL_CFCMOVS_FIRST: xed_iformfl_enum_t = 646;
pub const XED_IFORMFL_CFCMOVS_LAST: xed_iformfl_enum_t = 650;
pub const XED_IFORMFL_CFCMOVZ_FIRST: xed_iformfl_enum_t = 651;
pub const XED_IFORMFL_CFCMOVZ_LAST: xed_iformfl_enum_t = 655;
pub const XED_IFORMFL_CLAC_FIRST: xed_iformfl_enum_t = 656;
pub const XED_IFORMFL_CLAC_LAST: xed_iformfl_enum_t = 656;
pub const XED_IFORMFL_CLC_FIRST: xed_iformfl_enum_t = 657;
pub const XED_IFORMFL_CLC_LAST: xed_iformfl_enum_t = 657;
pub const XED_IFORMFL_CLD_FIRST: xed_iformfl_enum_t = 658;
pub const XED_IFORMFL_CLD_LAST: xed_iformfl_enum_t = 658;
pub const XED_IFORMFL_CLDEMOTE_FIRST: xed_iformfl_enum_t = 659;
pub const XED_IFORMFL_CLDEMOTE_LAST: xed_iformfl_enum_t = 659;
pub const XED_IFORMFL_CLFLUSH_FIRST: xed_iformfl_enum_t = 660;
pub const XED_IFORMFL_CLFLUSH_LAST: xed_iformfl_enum_t = 660;
pub const XED_IFORMFL_CLFLUSHOPT_FIRST: xed_iformfl_enum_t = 661;
pub const XED_IFORMFL_CLFLUSHOPT_LAST: xed_iformfl_enum_t = 661;
pub const XED_IFORMFL_CLGI_FIRST: xed_iformfl_enum_t = 662;
pub const XED_IFORMFL_CLGI_LAST: xed_iformfl_enum_t = 662;
pub const XED_IFORMFL_CLI_FIRST: xed_iformfl_enum_t = 663;
pub const XED_IFORMFL_CLI_LAST: xed_iformfl_enum_t = 663;
pub const XED_IFORMFL_CLRSSBSY_FIRST: xed_iformfl_enum_t = 664;
pub const XED_IFORMFL_CLRSSBSY_LAST: xed_iformfl_enum_t = 664;
pub const XED_IFORMFL_CLTS_FIRST: xed_iformfl_enum_t = 665;
pub const XED_IFORMFL_CLTS_LAST: xed_iformfl_enum_t = 665;
pub const XED_IFORMFL_CLUI_FIRST: xed_iformfl_enum_t = 666;
pub const XED_IFORMFL_CLUI_LAST: xed_iformfl_enum_t = 666;
pub const XED_IFORMFL_CLWB_FIRST: xed_iformfl_enum_t = 667;
pub const XED_IFORMFL_CLWB_LAST: xed_iformfl_enum_t = 667;
pub const XED_IFORMFL_CLZERO_FIRST: xed_iformfl_enum_t = 668;
pub const XED_IFORMFL_CLZERO_LAST: xed_iformfl_enum_t = 668;
pub const XED_IFORMFL_CMC_FIRST: xed_iformfl_enum_t = 669;
pub const XED_IFORMFL_CMC_LAST: xed_iformfl_enum_t = 669;
pub const XED_IFORMFL_CMOVB_FIRST: xed_iformfl_enum_t = 670;
pub const XED_IFORMFL_CMOVB_LAST: xed_iformfl_enum_t = 673;
pub const XED_IFORMFL_CMOVBE_FIRST: xed_iformfl_enum_t = 674;
pub const XED_IFORMFL_CMOVBE_LAST: xed_iformfl_enum_t = 677;
pub const XED_IFORMFL_CMOVL_FIRST: xed_iformfl_enum_t = 678;
pub const XED_IFORMFL_CMOVL_LAST: xed_iformfl_enum_t = 681;
pub const XED_IFORMFL_CMOVLE_FIRST: xed_iformfl_enum_t = 682;
pub const XED_IFORMFL_CMOVLE_LAST: xed_iformfl_enum_t = 685;
pub const XED_IFORMFL_CMOVNB_FIRST: xed_iformfl_enum_t = 686;
pub const XED_IFORMFL_CMOVNB_LAST: xed_iformfl_enum_t = 689;
pub const XED_IFORMFL_CMOVNBE_FIRST: xed_iformfl_enum_t = 690;
pub const XED_IFORMFL_CMOVNBE_LAST: xed_iformfl_enum_t = 693;
pub const XED_IFORMFL_CMOVNL_FIRST: xed_iformfl_enum_t = 694;
pub const XED_IFORMFL_CMOVNL_LAST: xed_iformfl_enum_t = 697;
pub const XED_IFORMFL_CMOVNLE_FIRST: xed_iformfl_enum_t = 698;
pub const XED_IFORMFL_CMOVNLE_LAST: xed_iformfl_enum_t = 701;
pub const XED_IFORMFL_CMOVNO_FIRST: xed_iformfl_enum_t = 702;
pub const XED_IFORMFL_CMOVNO_LAST: xed_iformfl_enum_t = 705;
pub const XED_IFORMFL_CMOVNP_FIRST: xed_iformfl_enum_t = 706;
pub const XED_IFORMFL_CMOVNP_LAST: xed_iformfl_enum_t = 709;
pub const XED_IFORMFL_CMOVNS_FIRST: xed_iformfl_enum_t = 710;
pub const XED_IFORMFL_CMOVNS_LAST: xed_iformfl_enum_t = 713;
pub const XED_IFORMFL_CMOVNZ_FIRST: xed_iformfl_enum_t = 714;
pub const XED_IFORMFL_CMOVNZ_LAST: xed_iformfl_enum_t = 717;
pub const XED_IFORMFL_CMOVO_FIRST: xed_iformfl_enum_t = 718;
pub const XED_IFORMFL_CMOVO_LAST: xed_iformfl_enum_t = 721;
pub const XED_IFORMFL_CMOVP_FIRST: xed_iformfl_enum_t = 722;
pub const XED_IFORMFL_CMOVP_LAST: xed_iformfl_enum_t = 725;
pub const XED_IFORMFL_CMOVS_FIRST: xed_iformfl_enum_t = 726;
pub const XED_IFORMFL_CMOVS_LAST: xed_iformfl_enum_t = 729;
pub const XED_IFORMFL_CMOVZ_FIRST: xed_iformfl_enum_t = 730;
pub const XED_IFORMFL_CMOVZ_LAST: xed_iformfl_enum_t = 733;
pub const XED_IFORMFL_CMP_FIRST: xed_iformfl_enum_t = 734;
pub const XED_IFORMFL_CMP_LAST: xed_iformfl_enum_t = 751;
pub const XED_IFORMFL_CMPBEXADD_FIRST: xed_iformfl_enum_t = 752;
pub const XED_IFORMFL_CMPBEXADD_LAST: xed_iformfl_enum_t = 755;
pub const XED_IFORMFL_CMPBXADD_FIRST: xed_iformfl_enum_t = 756;
pub const XED_IFORMFL_CMPBXADD_LAST: xed_iformfl_enum_t = 759;
pub const XED_IFORMFL_CMPLEXADD_FIRST: xed_iformfl_enum_t = 760;
pub const XED_IFORMFL_CMPLEXADD_LAST: xed_iformfl_enum_t = 763;
pub const XED_IFORMFL_CMPLXADD_FIRST: xed_iformfl_enum_t = 764;
pub const XED_IFORMFL_CMPLXADD_LAST: xed_iformfl_enum_t = 767;
pub const XED_IFORMFL_CMPNBEXADD_FIRST: xed_iformfl_enum_t = 768;
pub const XED_IFORMFL_CMPNBEXADD_LAST: xed_iformfl_enum_t = 771;
pub const XED_IFORMFL_CMPNBXADD_FIRST: xed_iformfl_enum_t = 772;
pub const XED_IFORMFL_CMPNBXADD_LAST: xed_iformfl_enum_t = 775;
pub const XED_IFORMFL_CMPNLEXADD_FIRST: xed_iformfl_enum_t = 776;
pub const XED_IFORMFL_CMPNLEXADD_LAST: xed_iformfl_enum_t = 779;
pub const XED_IFORMFL_CMPNLXADD_FIRST: xed_iformfl_enum_t = 780;
pub const XED_IFORMFL_CMPNLXADD_LAST: xed_iformfl_enum_t = 783;
pub const XED_IFORMFL_CMPNOXADD_FIRST: xed_iformfl_enum_t = 784;
pub const XED_IFORMFL_CMPNOXADD_LAST: xed_iformfl_enum_t = 787;
pub const XED_IFORMFL_CMPNPXADD_FIRST: xed_iformfl_enum_t = 788;
pub const XED_IFORMFL_CMPNPXADD_LAST: xed_iformfl_enum_t = 791;
pub const XED_IFORMFL_CMPNSXADD_FIRST: xed_iformfl_enum_t = 792;
pub const XED_IFORMFL_CMPNSXADD_LAST: xed_iformfl_enum_t = 795;
pub const XED_IFORMFL_CMPNZXADD_FIRST: xed_iformfl_enum_t = 796;
pub const XED_IFORMFL_CMPNZXADD_LAST: xed_iformfl_enum_t = 799;
pub const XED_IFORMFL_CMPOXADD_FIRST: xed_iformfl_enum_t = 800;
pub const XED_IFORMFL_CMPOXADD_LAST: xed_iformfl_enum_t = 803;
pub const XED_IFORMFL_CMPPD_FIRST: xed_iformfl_enum_t = 804;
pub const XED_IFORMFL_CMPPD_LAST: xed_iformfl_enum_t = 805;
pub const XED_IFORMFL_CMPPS_FIRST: xed_iformfl_enum_t = 806;
pub const XED_IFORMFL_CMPPS_LAST: xed_iformfl_enum_t = 807;
pub const XED_IFORMFL_CMPPXADD_FIRST: xed_iformfl_enum_t = 808;
pub const XED_IFORMFL_CMPPXADD_LAST: xed_iformfl_enum_t = 811;
pub const XED_IFORMFL_CMPSB_FIRST: xed_iformfl_enum_t = 812;
pub const XED_IFORMFL_CMPSB_LAST: xed_iformfl_enum_t = 812;
pub const XED_IFORMFL_CMPSD_FIRST: xed_iformfl_enum_t = 813;
pub const XED_IFORMFL_CMPSD_LAST: xed_iformfl_enum_t = 813;
pub const XED_IFORMFL_CMPSD_XMM_FIRST: xed_iformfl_enum_t = 814;
pub const XED_IFORMFL_CMPSD_XMM_LAST: xed_iformfl_enum_t = 815;
pub const XED_IFORMFL_CMPSQ_FIRST: xed_iformfl_enum_t = 816;
pub const XED_IFORMFL_CMPSQ_LAST: xed_iformfl_enum_t = 816;
pub const XED_IFORMFL_CMPSS_FIRST: xed_iformfl_enum_t = 817;
pub const XED_IFORMFL_CMPSS_LAST: xed_iformfl_enum_t = 818;
pub const XED_IFORMFL_CMPSW_FIRST: xed_iformfl_enum_t = 819;
pub const XED_IFORMFL_CMPSW_LAST: xed_iformfl_enum_t = 819;
pub const XED_IFORMFL_CMPSXADD_FIRST: xed_iformfl_enum_t = 820;
pub const XED_IFORMFL_CMPSXADD_LAST: xed_iformfl_enum_t = 823;
pub const XED_IFORMFL_CMPXCHG_FIRST: xed_iformfl_enum_t = 824;
pub const XED_IFORMFL_CMPXCHG_LAST: xed_iformfl_enum_t = 827;
pub const XED_IFORMFL_CMPXCHG16B_FIRST: xed_iformfl_enum_t = 828;
pub const XED_IFORMFL_CMPXCHG16B_LAST: xed_iformfl_enum_t = 828;
pub const XED_IFORMFL_CMPXCHG16B_LOCK_FIRST: xed_iformfl_enum_t = 829;
pub const XED_IFORMFL_CMPXCHG16B_LOCK_LAST: xed_iformfl_enum_t = 829;
pub const XED_IFORMFL_CMPXCHG8B_FIRST: xed_iformfl_enum_t = 830;
pub const XED_IFORMFL_CMPXCHG8B_LAST: xed_iformfl_enum_t = 830;
pub const XED_IFORMFL_CMPXCHG8B_LOCK_FIRST: xed_iformfl_enum_t = 831;
pub const XED_IFORMFL_CMPXCHG8B_LOCK_LAST: xed_iformfl_enum_t = 831;
pub const XED_IFORMFL_CMPXCHG_LOCK_FIRST: xed_iformfl_enum_t = 832;
pub const XED_IFORMFL_CMPXCHG_LOCK_LAST: xed_iformfl_enum_t = 833;
pub const XED_IFORMFL_CMPZXADD_FIRST: xed_iformfl_enum_t = 834;
pub const XED_IFORMFL_CMPZXADD_LAST: xed_iformfl_enum_t = 837;
pub const XED_IFORMFL_COMISD_FIRST: xed_iformfl_enum_t = 838;
pub const XED_IFORMFL_COMISD_LAST: xed_iformfl_enum_t = 839;
pub const XED_IFORMFL_COMISS_FIRST: xed_iformfl_enum_t = 840;
pub const XED_IFORMFL_COMISS_LAST: xed_iformfl_enum_t = 841;
pub const XED_IFORMFL_CPUID_FIRST: xed_iformfl_enum_t = 842;
pub const XED_IFORMFL_CPUID_LAST: xed_iformfl_enum_t = 842;
pub const XED_IFORMFL_CQO_FIRST: xed_iformfl_enum_t = 843;
pub const XED_IFORMFL_CQO_LAST: xed_iformfl_enum_t = 843;
pub const XED_IFORMFL_CRC32_FIRST: xed_iformfl_enum_t = 844;
pub const XED_IFORMFL_CRC32_LAST: xed_iformfl_enum_t = 851;
pub const XED_IFORMFL_CTESTB_FIRST: xed_iformfl_enum_t = 852;
pub const XED_IFORMFL_CTESTB_LAST: xed_iformfl_enum_t = 859;
pub const XED_IFORMFL_CTESTBE_FIRST: xed_iformfl_enum_t = 860;
pub const XED_IFORMFL_CTESTBE_LAST: xed_iformfl_enum_t = 867;
pub const XED_IFORMFL_CTESTF_FIRST: xed_iformfl_enum_t = 868;
pub const XED_IFORMFL_CTESTF_LAST: xed_iformfl_enum_t = 875;
pub const XED_IFORMFL_CTESTL_FIRST: xed_iformfl_enum_t = 876;
pub const XED_IFORMFL_CTESTL_LAST: xed_iformfl_enum_t = 883;
pub const XED_IFORMFL_CTESTLE_FIRST: xed_iformfl_enum_t = 884;
pub const XED_IFORMFL_CTESTLE_LAST: xed_iformfl_enum_t = 891;
pub const XED_IFORMFL_CTESTNB_FIRST: xed_iformfl_enum_t = 892;
pub const XED_IFORMFL_CTESTNB_LAST: xed_iformfl_enum_t = 899;
pub const XED_IFORMFL_CTESTNBE_FIRST: xed_iformfl_enum_t = 900;
pub const XED_IFORMFL_CTESTNBE_LAST: xed_iformfl_enum_t = 907;
pub const XED_IFORMFL_CTESTNL_FIRST: xed_iformfl_enum_t = 908;
pub const XED_IFORMFL_CTESTNL_LAST: xed_iformfl_enum_t = 915;
pub const XED_IFORMFL_CTESTNLE_FIRST: xed_iformfl_enum_t = 916;
pub const XED_IFORMFL_CTESTNLE_LAST: xed_iformfl_enum_t = 923;
pub const XED_IFORMFL_CTESTNO_FIRST: xed_iformfl_enum_t = 924;
pub const XED_IFORMFL_CTESTNO_LAST: xed_iformfl_enum_t = 931;
pub const XED_IFORMFL_CTESTNS_FIRST: xed_iformfl_enum_t = 932;
pub const XED_IFORMFL_CTESTNS_LAST: xed_iformfl_enum_t = 939;
pub const XED_IFORMFL_CTESTNZ_FIRST: xed_iformfl_enum_t = 940;
pub const XED_IFORMFL_CTESTNZ_LAST: xed_iformfl_enum_t = 947;
pub const XED_IFORMFL_CTESTO_FIRST: xed_iformfl_enum_t = 948;
pub const XED_IFORMFL_CTESTO_LAST: xed_iformfl_enum_t = 955;
pub const XED_IFORMFL_CTESTS_FIRST: xed_iformfl_enum_t = 956;
pub const XED_IFORMFL_CTESTS_LAST: xed_iformfl_enum_t = 963;
pub const XED_IFORMFL_CTESTT_FIRST: xed_iformfl_enum_t = 964;
pub const XED_IFORMFL_CTESTT_LAST: xed_iformfl_enum_t = 971;
pub const XED_IFORMFL_CTESTZ_FIRST: xed_iformfl_enum_t = 972;
pub const XED_IFORMFL_CTESTZ_LAST: xed_iformfl_enum_t = 979;
pub const XED_IFORMFL_CVTDQ2PD_FIRST: xed_iformfl_enum_t = 980;
pub const XED_IFORMFL_CVTDQ2PD_LAST: xed_iformfl_enum_t = 981;
pub const XED_IFORMFL_CVTDQ2PS_FIRST: xed_iformfl_enum_t = 982;
pub const XED_IFORMFL_CVTDQ2PS_LAST: xed_iformfl_enum_t = 983;
pub const XED_IFORMFL_CVTPD2DQ_FIRST: xed_iformfl_enum_t = 984;
pub const XED_IFORMFL_CVTPD2DQ_LAST: xed_iformfl_enum_t = 985;
pub const XED_IFORMFL_CVTPD2PI_FIRST: xed_iformfl_enum_t = 986;
pub const XED_IFORMFL_CVTPD2PI_LAST: xed_iformfl_enum_t = 987;
pub const XED_IFORMFL_CVTPD2PS_FIRST: xed_iformfl_enum_t = 988;
pub const XED_IFORMFL_CVTPD2PS_LAST: xed_iformfl_enum_t = 989;
pub const XED_IFORMFL_CVTPI2PD_FIRST: xed_iformfl_enum_t = 990;
pub const XED_IFORMFL_CVTPI2PD_LAST: xed_iformfl_enum_t = 991;
pub const XED_IFORMFL_CVTPI2PS_FIRST: xed_iformfl_enum_t = 992;
pub const XED_IFORMFL_CVTPI2PS_LAST: xed_iformfl_enum_t = 993;
pub const XED_IFORMFL_CVTPS2DQ_FIRST: xed_iformfl_enum_t = 994;
pub const XED_IFORMFL_CVTPS2DQ_LAST: xed_iformfl_enum_t = 995;
pub const XED_IFORMFL_CVTPS2PD_FIRST: xed_iformfl_enum_t = 996;
pub const XED_IFORMFL_CVTPS2PD_LAST: xed_iformfl_enum_t = 997;
pub const XED_IFORMFL_CVTPS2PI_FIRST: xed_iformfl_enum_t = 998;
pub const XED_IFORMFL_CVTPS2PI_LAST: xed_iformfl_enum_t = 999;
pub const XED_IFORMFL_CVTSD2SI_FIRST: xed_iformfl_enum_t = 1000;
pub const XED_IFORMFL_CVTSD2SI_LAST: xed_iformfl_enum_t = 1003;
pub const XED_IFORMFL_CVTSD2SS_FIRST: xed_iformfl_enum_t = 1004;
pub const XED_IFORMFL_CVTSD2SS_LAST: xed_iformfl_enum_t = 1005;
pub const XED_IFORMFL_CVTSI2SD_FIRST: xed_iformfl_enum_t = 1006;
pub const XED_IFORMFL_CVTSI2SD_LAST: xed_iformfl_enum_t = 1009;
pub const XED_IFORMFL_CVTSI2SS_FIRST: xed_iformfl_enum_t = 1010;
pub const XED_IFORMFL_CVTSI2SS_LAST: xed_iformfl_enum_t = 1013;
pub const XED_IFORMFL_CVTSS2SD_FIRST: xed_iformfl_enum_t = 1014;
pub const XED_IFORMFL_CVTSS2SD_LAST: xed_iformfl_enum_t = 1015;
pub const XED_IFORMFL_CVTSS2SI_FIRST: xed_iformfl_enum_t = 1016;
pub const XED_IFORMFL_CVTSS2SI_LAST: xed_iformfl_enum_t = 1019;
pub const XED_IFORMFL_CVTTPD2DQ_FIRST: xed_iformfl_enum_t = 1020;
pub const XED_IFORMFL_CVTTPD2DQ_LAST: xed_iformfl_enum_t = 1021;
pub const XED_IFORMFL_CVTTPD2PI_FIRST: xed_iformfl_enum_t = 1022;
pub const XED_IFORMFL_CVTTPD2PI_LAST: xed_iformfl_enum_t = 1023;
pub const XED_IFORMFL_CVTTPS2DQ_FIRST: xed_iformfl_enum_t = 1024;
pub const XED_IFORMFL_CVTTPS2DQ_LAST: xed_iformfl_enum_t = 1025;
pub const XED_IFORMFL_CVTTPS2PI_FIRST: xed_iformfl_enum_t = 1026;
pub const XED_IFORMFL_CVTTPS2PI_LAST: xed_iformfl_enum_t = 1027;
pub const XED_IFORMFL_CVTTSD2SI_FIRST: xed_iformfl_enum_t = 1028;
pub const XED_IFORMFL_CVTTSD2SI_LAST: xed_iformfl_enum_t = 1031;
pub const XED_IFORMFL_CVTTSS2SI_FIRST: xed_iformfl_enum_t = 1032;
pub const XED_IFORMFL_CVTTSS2SI_LAST: xed_iformfl_enum_t = 1035;
pub const XED_IFORMFL_CWD_FIRST: xed_iformfl_enum_t = 1036;
pub const XED_IFORMFL_CWD_LAST: xed_iformfl_enum_t = 1036;
pub const XED_IFORMFL_CWDE_FIRST: xed_iformfl_enum_t = 1037;
pub const XED_IFORMFL_CWDE_LAST: xed_iformfl_enum_t = 1037;
pub const XED_IFORMFL_DAA_FIRST: xed_iformfl_enum_t = 1038;
pub const XED_IFORMFL_DAA_LAST: xed_iformfl_enum_t = 1038;
pub const XED_IFORMFL_DAS_FIRST: xed_iformfl_enum_t = 1039;
pub const XED_IFORMFL_DAS_LAST: xed_iformfl_enum_t = 1039;
pub const XED_IFORMFL_DEC_FIRST: xed_iformfl_enum_t = 1040;
pub const XED_IFORMFL_DEC_LAST: xed_iformfl_enum_t = 1052;
pub const XED_IFORMFL_DEC_LOCK_FIRST: xed_iformfl_enum_t = 1053;
pub const XED_IFORMFL_DEC_LOCK_LAST: xed_iformfl_enum_t = 1054;
pub const XED_IFORMFL_DIV_FIRST: xed_iformfl_enum_t = 1055;
pub const XED_IFORMFL_DIV_LAST: xed_iformfl_enum_t = 1062;
pub const XED_IFORMFL_DIVPD_FIRST: xed_iformfl_enum_t = 1063;
pub const XED_IFORMFL_DIVPD_LAST: xed_iformfl_enum_t = 1064;
pub const XED_IFORMFL_DIVPS_FIRST: xed_iformfl_enum_t = 1065;
pub const XED_IFORMFL_DIVPS_LAST: xed_iformfl_enum_t = 1066;
pub const XED_IFORMFL_DIVSD_FIRST: xed_iformfl_enum_t = 1067;
pub const XED_IFORMFL_DIVSD_LAST: xed_iformfl_enum_t = 1068;
pub const XED_IFORMFL_DIVSS_FIRST: xed_iformfl_enum_t = 1069;
pub const XED_IFORMFL_DIVSS_LAST: xed_iformfl_enum_t = 1070;
pub const XED_IFORMFL_DPPD_FIRST: xed_iformfl_enum_t = 1071;
pub const XED_IFORMFL_DPPD_LAST: xed_iformfl_enum_t = 1072;
pub const XED_IFORMFL_DPPS_FIRST: xed_iformfl_enum_t = 1073;
pub const XED_IFORMFL_DPPS_LAST: xed_iformfl_enum_t = 1074;
pub const XED_IFORMFL_EMMS_FIRST: xed_iformfl_enum_t = 1075;
pub const XED_IFORMFL_EMMS_LAST: xed_iformfl_enum_t = 1075;
pub const XED_IFORMFL_ENCLS_FIRST: xed_iformfl_enum_t = 1076;
pub const XED_IFORMFL_ENCLS_LAST: xed_iformfl_enum_t = 1076;
pub const XED_IFORMFL_ENCLU_FIRST: xed_iformfl_enum_t = 1077;
pub const XED_IFORMFL_ENCLU_LAST: xed_iformfl_enum_t = 1077;
pub const XED_IFORMFL_ENCLV_FIRST: xed_iformfl_enum_t = 1078;
pub const XED_IFORMFL_ENCLV_LAST: xed_iformfl_enum_t = 1078;
pub const XED_IFORMFL_ENCODEKEY128_FIRST: xed_iformfl_enum_t = 1079;
pub const XED_IFORMFL_ENCODEKEY128_LAST: xed_iformfl_enum_t = 1080;
pub const XED_IFORMFL_ENCODEKEY256_FIRST: xed_iformfl_enum_t = 1081;
pub const XED_IFORMFL_ENCODEKEY256_LAST: xed_iformfl_enum_t = 1082;
pub const XED_IFORMFL_ENDBR32_FIRST: xed_iformfl_enum_t = 1083;
pub const XED_IFORMFL_ENDBR32_LAST: xed_iformfl_enum_t = 1083;
pub const XED_IFORMFL_ENDBR64_FIRST: xed_iformfl_enum_t = 1084;
pub const XED_IFORMFL_ENDBR64_LAST: xed_iformfl_enum_t = 1084;
pub const XED_IFORMFL_ENQCMD_FIRST: xed_iformfl_enum_t = 1085;
pub const XED_IFORMFL_ENQCMD_LAST: xed_iformfl_enum_t = 1086;
pub const XED_IFORMFL_ENQCMDS_FIRST: xed_iformfl_enum_t = 1087;
pub const XED_IFORMFL_ENQCMDS_LAST: xed_iformfl_enum_t = 1088;
pub const XED_IFORMFL_ENTER_FIRST: xed_iformfl_enum_t = 1089;
pub const XED_IFORMFL_ENTER_LAST: xed_iformfl_enum_t = 1089;
pub const XED_IFORMFL_ERETS_FIRST: xed_iformfl_enum_t = 1090;
pub const XED_IFORMFL_ERETS_LAST: xed_iformfl_enum_t = 1090;
pub const XED_IFORMFL_ERETU_FIRST: xed_iformfl_enum_t = 1091;
pub const XED_IFORMFL_ERETU_LAST: xed_iformfl_enum_t = 1091;
pub const XED_IFORMFL_EXTRACTPS_FIRST: xed_iformfl_enum_t = 1092;
pub const XED_IFORMFL_EXTRACTPS_LAST: xed_iformfl_enum_t = 1093;
pub const XED_IFORMFL_EXTRQ_FIRST: xed_iformfl_enum_t = 1094;
pub const XED_IFORMFL_EXTRQ_LAST: xed_iformfl_enum_t = 1095;
pub const XED_IFORMFL_F2XM1_FIRST: xed_iformfl_enum_t = 1096;
pub const XED_IFORMFL_F2XM1_LAST: xed_iformfl_enum_t = 1096;
pub const XED_IFORMFL_FABS_FIRST: xed_iformfl_enum_t = 1097;
pub const XED_IFORMFL_FABS_LAST: xed_iformfl_enum_t = 1097;
pub const XED_IFORMFL_FADD_FIRST: xed_iformfl_enum_t = 1098;
pub const XED_IFORMFL_FADD_LAST: xed_iformfl_enum_t = 1101;
pub const XED_IFORMFL_FADDP_FIRST: xed_iformfl_enum_t = 1102;
pub const XED_IFORMFL_FADDP_LAST: xed_iformfl_enum_t = 1102;
pub const XED_IFORMFL_FBLD_FIRST: xed_iformfl_enum_t = 1103;
pub const XED_IFORMFL_FBLD_LAST: xed_iformfl_enum_t = 1103;
pub const XED_IFORMFL_FBSTP_FIRST: xed_iformfl_enum_t = 1104;
pub const XED_IFORMFL_FBSTP_LAST: xed_iformfl_enum_t = 1104;
pub const XED_IFORMFL_FCHS_FIRST: xed_iformfl_enum_t = 1105;
pub const XED_IFORMFL_FCHS_LAST: xed_iformfl_enum_t = 1105;
pub const XED_IFORMFL_FCMOVB_FIRST: xed_iformfl_enum_t = 1106;
pub const XED_IFORMFL_FCMOVB_LAST: xed_iformfl_enum_t = 1106;
pub const XED_IFORMFL_FCMOVBE_FIRST: xed_iformfl_enum_t = 1107;
pub const XED_IFORMFL_FCMOVBE_LAST: xed_iformfl_enum_t = 1107;
pub const XED_IFORMFL_FCMOVE_FIRST: xed_iformfl_enum_t = 1108;
pub const XED_IFORMFL_FCMOVE_LAST: xed_iformfl_enum_t = 1108;
pub const XED_IFORMFL_FCMOVNB_FIRST: xed_iformfl_enum_t = 1109;
pub const XED_IFORMFL_FCMOVNB_LAST: xed_iformfl_enum_t = 1109;
pub const XED_IFORMFL_FCMOVNBE_FIRST: xed_iformfl_enum_t = 1110;
pub const XED_IFORMFL_FCMOVNBE_LAST: xed_iformfl_enum_t = 1110;
pub const XED_IFORMFL_FCMOVNE_FIRST: xed_iformfl_enum_t = 1111;
pub const XED_IFORMFL_FCMOVNE_LAST: xed_iformfl_enum_t = 1111;
pub const XED_IFORMFL_FCMOVNU_FIRST: xed_iformfl_enum_t = 1112;
pub const XED_IFORMFL_FCMOVNU_LAST: xed_iformfl_enum_t = 1112;
pub const XED_IFORMFL_FCMOVU_FIRST: xed_iformfl_enum_t = 1113;
pub const XED_IFORMFL_FCMOVU_LAST: xed_iformfl_enum_t = 1113;
pub const XED_IFORMFL_FCOM_FIRST: xed_iformfl_enum_t = 1114;
pub const XED_IFORMFL_FCOM_LAST: xed_iformfl_enum_t = 1117;
pub const XED_IFORMFL_FCOMI_FIRST: xed_iformfl_enum_t = 1118;
pub const XED_IFORMFL_FCOMI_LAST: xed_iformfl_enum_t = 1118;
pub const XED_IFORMFL_FCOMIP_FIRST: xed_iformfl_enum_t = 1119;
pub const XED_IFORMFL_FCOMIP_LAST: xed_iformfl_enum_t = 1119;
pub const XED_IFORMFL_FCOMP_FIRST: xed_iformfl_enum_t = 1120;
pub const XED_IFORMFL_FCOMP_LAST: xed_iformfl_enum_t = 1124;
pub const XED_IFORMFL_FCOMPP_FIRST: xed_iformfl_enum_t = 1125;
pub const XED_IFORMFL_FCOMPP_LAST: xed_iformfl_enum_t = 1125;
pub const XED_IFORMFL_FCOS_FIRST: xed_iformfl_enum_t = 1126;
pub const XED_IFORMFL_FCOS_LAST: xed_iformfl_enum_t = 1126;
pub const XED_IFORMFL_FDECSTP_FIRST: xed_iformfl_enum_t = 1127;
pub const XED_IFORMFL_FDECSTP_LAST: xed_iformfl_enum_t = 1127;
pub const XED_IFORMFL_FDISI8087_NOP_FIRST: xed_iformfl_enum_t = 1128;
pub const XED_IFORMFL_FDISI8087_NOP_LAST: xed_iformfl_enum_t = 1128;
pub const XED_IFORMFL_FDIV_FIRST: xed_iformfl_enum_t = 1129;
pub const XED_IFORMFL_FDIV_LAST: xed_iformfl_enum_t = 1132;
pub const XED_IFORMFL_FDIVP_FIRST: xed_iformfl_enum_t = 1133;
pub const XED_IFORMFL_FDIVP_LAST: xed_iformfl_enum_t = 1133;
pub const XED_IFORMFL_FDIVR_FIRST: xed_iformfl_enum_t = 1134;
pub const XED_IFORMFL_FDIVR_LAST: xed_iformfl_enum_t = 1137;
pub const XED_IFORMFL_FDIVRP_FIRST: xed_iformfl_enum_t = 1138;
pub const XED_IFORMFL_FDIVRP_LAST: xed_iformfl_enum_t = 1138;
pub const XED_IFORMFL_FEMMS_FIRST: xed_iformfl_enum_t = 1139;
pub const XED_IFORMFL_FEMMS_LAST: xed_iformfl_enum_t = 1139;
pub const XED_IFORMFL_FENI8087_NOP_FIRST: xed_iformfl_enum_t = 1140;
pub const XED_IFORMFL_FENI8087_NOP_LAST: xed_iformfl_enum_t = 1140;
pub const XED_IFORMFL_FFREE_FIRST: xed_iformfl_enum_t = 1141;
pub const XED_IFORMFL_FFREE_LAST: xed_iformfl_enum_t = 1141;
pub const XED_IFORMFL_FFREEP_FIRST: xed_iformfl_enum_t = 1142;
pub const XED_IFORMFL_FFREEP_LAST: xed_iformfl_enum_t = 1142;
pub const XED_IFORMFL_FIADD_FIRST: xed_iformfl_enum_t = 1143;
pub const XED_IFORMFL_FIADD_LAST: xed_iformfl_enum_t = 1144;
pub const XED_IFORMFL_FICOM_FIRST: xed_iformfl_enum_t = 1145;
pub const XED_IFORMFL_FICOM_LAST: xed_iformfl_enum_t = 1146;
pub const XED_IFORMFL_FICOMP_FIRST: xed_iformfl_enum_t = 1147;
pub const XED_IFORMFL_FICOMP_LAST: xed_iformfl_enum_t = 1148;
pub const XED_IFORMFL_FIDIV_FIRST: xed_iformfl_enum_t = 1149;
pub const XED_IFORMFL_FIDIV_LAST: xed_iformfl_enum_t = 1150;
pub const XED_IFORMFL_FIDIVR_FIRST: xed_iformfl_enum_t = 1151;
pub const XED_IFORMFL_FIDIVR_LAST: xed_iformfl_enum_t = 1152;
pub const XED_IFORMFL_FILD_FIRST: xed_iformfl_enum_t = 1153;
pub const XED_IFORMFL_FILD_LAST: xed_iformfl_enum_t = 1155;
pub const XED_IFORMFL_FIMUL_FIRST: xed_iformfl_enum_t = 1156;
pub const XED_IFORMFL_FIMUL_LAST: xed_iformfl_enum_t = 1157;
pub const XED_IFORMFL_FINCSTP_FIRST: xed_iformfl_enum_t = 1158;
pub const XED_IFORMFL_FINCSTP_LAST: xed_iformfl_enum_t = 1158;
pub const XED_IFORMFL_FIST_FIRST: xed_iformfl_enum_t = 1159;
pub const XED_IFORMFL_FIST_LAST: xed_iformfl_enum_t = 1160;
pub const XED_IFORMFL_FISTP_FIRST: xed_iformfl_enum_t = 1161;
pub const XED_IFORMFL_FISTP_LAST: xed_iformfl_enum_t = 1163;
pub const XED_IFORMFL_FISTTP_FIRST: xed_iformfl_enum_t = 1164;
pub const XED_IFORMFL_FISTTP_LAST: xed_iformfl_enum_t = 1166;
pub const XED_IFORMFL_FISUB_FIRST: xed_iformfl_enum_t = 1167;
pub const XED_IFORMFL_FISUB_LAST: xed_iformfl_enum_t = 1168;
pub const XED_IFORMFL_FISUBR_FIRST: xed_iformfl_enum_t = 1169;
pub const XED_IFORMFL_FISUBR_LAST: xed_iformfl_enum_t = 1170;
pub const XED_IFORMFL_FLD_FIRST: xed_iformfl_enum_t = 1171;
pub const XED_IFORMFL_FLD_LAST: xed_iformfl_enum_t = 1174;
pub const XED_IFORMFL_FLD1_FIRST: xed_iformfl_enum_t = 1175;
pub const XED_IFORMFL_FLD1_LAST: xed_iformfl_enum_t = 1175;
pub const XED_IFORMFL_FLDCW_FIRST: xed_iformfl_enum_t = 1176;
pub const XED_IFORMFL_FLDCW_LAST: xed_iformfl_enum_t = 1176;
pub const XED_IFORMFL_FLDENV_FIRST: xed_iformfl_enum_t = 1177;
pub const XED_IFORMFL_FLDENV_LAST: xed_iformfl_enum_t = 1178;
pub const XED_IFORMFL_FLDL2E_FIRST: xed_iformfl_enum_t = 1179;
pub const XED_IFORMFL_FLDL2E_LAST: xed_iformfl_enum_t = 1179;
pub const XED_IFORMFL_FLDL2T_FIRST: xed_iformfl_enum_t = 1180;
pub const XED_IFORMFL_FLDL2T_LAST: xed_iformfl_enum_t = 1180;
pub const XED_IFORMFL_FLDLG2_FIRST: xed_iformfl_enum_t = 1181;
pub const XED_IFORMFL_FLDLG2_LAST: xed_iformfl_enum_t = 1181;
pub const XED_IFORMFL_FLDLN2_FIRST: xed_iformfl_enum_t = 1182;
pub const XED_IFORMFL_FLDLN2_LAST: xed_iformfl_enum_t = 1182;
pub const XED_IFORMFL_FLDPI_FIRST: xed_iformfl_enum_t = 1183;
pub const XED_IFORMFL_FLDPI_LAST: xed_iformfl_enum_t = 1183;
pub const XED_IFORMFL_FLDZ_FIRST: xed_iformfl_enum_t = 1184;
pub const XED_IFORMFL_FLDZ_LAST: xed_iformfl_enum_t = 1184;
pub const XED_IFORMFL_FMUL_FIRST: xed_iformfl_enum_t = 1185;
pub const XED_IFORMFL_FMUL_LAST: xed_iformfl_enum_t = 1188;
pub const XED_IFORMFL_FMULP_FIRST: xed_iformfl_enum_t = 1189;
pub const XED_IFORMFL_FMULP_LAST: xed_iformfl_enum_t = 1189;
pub const XED_IFORMFL_FNCLEX_FIRST: xed_iformfl_enum_t = 1190;
pub const XED_IFORMFL_FNCLEX_LAST: xed_iformfl_enum_t = 1190;
pub const XED_IFORMFL_FNINIT_FIRST: xed_iformfl_enum_t = 1191;
pub const XED_IFORMFL_FNINIT_LAST: xed_iformfl_enum_t = 1191;
pub const XED_IFORMFL_FNOP_FIRST: xed_iformfl_enum_t = 1192;
pub const XED_IFORMFL_FNOP_LAST: xed_iformfl_enum_t = 1192;
pub const XED_IFORMFL_FNSAVE_FIRST: xed_iformfl_enum_t = 1193;
pub const XED_IFORMFL_FNSAVE_LAST: xed_iformfl_enum_t = 1194;
pub const XED_IFORMFL_FNSTCW_FIRST: xed_iformfl_enum_t = 1195;
pub const XED_IFORMFL_FNSTCW_LAST: xed_iformfl_enum_t = 1195;
pub const XED_IFORMFL_FNSTENV_FIRST: xed_iformfl_enum_t = 1196;
pub const XED_IFORMFL_FNSTENV_LAST: xed_iformfl_enum_t = 1197;
pub const XED_IFORMFL_FNSTSW_FIRST: xed_iformfl_enum_t = 1198;
pub const XED_IFORMFL_FNSTSW_LAST: xed_iformfl_enum_t = 1199;
pub const XED_IFORMFL_FPATAN_FIRST: xed_iformfl_enum_t = 1200;
pub const XED_IFORMFL_FPATAN_LAST: xed_iformfl_enum_t = 1200;
pub const XED_IFORMFL_FPREM_FIRST: xed_iformfl_enum_t = 1201;
pub const XED_IFORMFL_FPREM_LAST: xed_iformfl_enum_t = 1201;
pub const XED_IFORMFL_FPREM1_FIRST: xed_iformfl_enum_t = 1202;
pub const XED_IFORMFL_FPREM1_LAST: xed_iformfl_enum_t = 1202;
pub const XED_IFORMFL_FPTAN_FIRST: xed_iformfl_enum_t = 1203;
pub const XED_IFORMFL_FPTAN_LAST: xed_iformfl_enum_t = 1203;
pub const XED_IFORMFL_FRNDINT_FIRST: xed_iformfl_enum_t = 1204;
pub const XED_IFORMFL_FRNDINT_LAST: xed_iformfl_enum_t = 1204;
pub const XED_IFORMFL_FRSTOR_FIRST: xed_iformfl_enum_t = 1205;
pub const XED_IFORMFL_FRSTOR_LAST: xed_iformfl_enum_t = 1206;
pub const XED_IFORMFL_FSCALE_FIRST: xed_iformfl_enum_t = 1207;
pub const XED_IFORMFL_FSCALE_LAST: xed_iformfl_enum_t = 1207;
pub const XED_IFORMFL_FSETPM287_NOP_FIRST: xed_iformfl_enum_t = 1208;
pub const XED_IFORMFL_FSETPM287_NOP_LAST: xed_iformfl_enum_t = 1208;
pub const XED_IFORMFL_FSIN_FIRST: xed_iformfl_enum_t = 1209;
pub const XED_IFORMFL_FSIN_LAST: xed_iformfl_enum_t = 1209;
pub const XED_IFORMFL_FSINCOS_FIRST: xed_iformfl_enum_t = 1210;
pub const XED_IFORMFL_FSINCOS_LAST: xed_iformfl_enum_t = 1210;
pub const XED_IFORMFL_FSQRT_FIRST: xed_iformfl_enum_t = 1211;
pub const XED_IFORMFL_FSQRT_LAST: xed_iformfl_enum_t = 1211;
pub const XED_IFORMFL_FST_FIRST: xed_iformfl_enum_t = 1212;
pub const XED_IFORMFL_FST_LAST: xed_iformfl_enum_t = 1214;
pub const XED_IFORMFL_FSTP_FIRST: xed_iformfl_enum_t = 1215;
pub const XED_IFORMFL_FSTP_LAST: xed_iformfl_enum_t = 1220;
pub const XED_IFORMFL_FSTPNCE_FIRST: xed_iformfl_enum_t = 1221;
pub const XED_IFORMFL_FSTPNCE_LAST: xed_iformfl_enum_t = 1221;
pub const XED_IFORMFL_FSUB_FIRST: xed_iformfl_enum_t = 1222;
pub const XED_IFORMFL_FSUB_LAST: xed_iformfl_enum_t = 1225;
pub const XED_IFORMFL_FSUBP_FIRST: xed_iformfl_enum_t = 1226;
pub const XED_IFORMFL_FSUBP_LAST: xed_iformfl_enum_t = 1226;
pub const XED_IFORMFL_FSUBR_FIRST: xed_iformfl_enum_t = 1227;
pub const XED_IFORMFL_FSUBR_LAST: xed_iformfl_enum_t = 1230;
pub const XED_IFORMFL_FSUBRP_FIRST: xed_iformfl_enum_t = 1231;
pub const XED_IFORMFL_FSUBRP_LAST: xed_iformfl_enum_t = 1231;
pub const XED_IFORMFL_FTST_FIRST: xed_iformfl_enum_t = 1232;
pub const XED_IFORMFL_FTST_LAST: xed_iformfl_enum_t = 1232;
pub const XED_IFORMFL_FUCOM_FIRST: xed_iformfl_enum_t = 1233;
pub const XED_IFORMFL_FUCOM_LAST: xed_iformfl_enum_t = 1233;
pub const XED_IFORMFL_FUCOMI_FIRST: xed_iformfl_enum_t = 1234;
pub const XED_IFORMFL_FUCOMI_LAST: xed_iformfl_enum_t = 1234;
pub const XED_IFORMFL_FUCOMIP_FIRST: xed_iformfl_enum_t = 1235;
pub const XED_IFORMFL_FUCOMIP_LAST: xed_iformfl_enum_t = 1235;
pub const XED_IFORMFL_FUCOMP_FIRST: xed_iformfl_enum_t = 1236;
pub const XED_IFORMFL_FUCOMP_LAST: xed_iformfl_enum_t = 1236;
pub const XED_IFORMFL_FUCOMPP_FIRST: xed_iformfl_enum_t = 1237;
pub const XED_IFORMFL_FUCOMPP_LAST: xed_iformfl_enum_t = 1237;
pub const XED_IFORMFL_FWAIT_FIRST: xed_iformfl_enum_t = 1238;
pub const XED_IFORMFL_FWAIT_LAST: xed_iformfl_enum_t = 1238;
pub const XED_IFORMFL_FXAM_FIRST: xed_iformfl_enum_t = 1239;
pub const XED_IFORMFL_FXAM_LAST: xed_iformfl_enum_t = 1239;
pub const XED_IFORMFL_FXCH_FIRST: xed_iformfl_enum_t = 1240;
pub const XED_IFORMFL_FXCH_LAST: xed_iformfl_enum_t = 1242;
pub const XED_IFORMFL_FXRSTOR_FIRST: xed_iformfl_enum_t = 1243;
pub const XED_IFORMFL_FXRSTOR_LAST: xed_iformfl_enum_t = 1243;
pub const XED_IFORMFL_FXRSTOR64_FIRST: xed_iformfl_enum_t = 1244;
pub const XED_IFORMFL_FXRSTOR64_LAST: xed_iformfl_enum_t = 1244;
pub const XED_IFORMFL_FXSAVE_FIRST: xed_iformfl_enum_t = 1245;
pub const XED_IFORMFL_FXSAVE_LAST: xed_iformfl_enum_t = 1245;
pub const XED_IFORMFL_FXSAVE64_FIRST: xed_iformfl_enum_t = 1246;
pub const XED_IFORMFL_FXSAVE64_LAST: xed_iformfl_enum_t = 1246;
pub const XED_IFORMFL_FXTRACT_FIRST: xed_iformfl_enum_t = 1247;
pub const XED_IFORMFL_FXTRACT_LAST: xed_iformfl_enum_t = 1247;
pub const XED_IFORMFL_FYL2X_FIRST: xed_iformfl_enum_t = 1248;
pub const XED_IFORMFL_FYL2X_LAST: xed_iformfl_enum_t = 1248;
pub const XED_IFORMFL_FYL2XP1_FIRST: xed_iformfl_enum_t = 1249;
pub const XED_IFORMFL_FYL2XP1_LAST: xed_iformfl_enum_t = 1249;
pub const XED_IFORMFL_GETSEC_FIRST: xed_iformfl_enum_t = 1250;
pub const XED_IFORMFL_GETSEC_LAST: xed_iformfl_enum_t = 1250;
pub const XED_IFORMFL_GF2P8AFFINEINVQB_FIRST: xed_iformfl_enum_t = 1251;
pub const XED_IFORMFL_GF2P8AFFINEINVQB_LAST: xed_iformfl_enum_t = 1252;
pub const XED_IFORMFL_GF2P8AFFINEQB_FIRST: xed_iformfl_enum_t = 1253;
pub const XED_IFORMFL_GF2P8AFFINEQB_LAST: xed_iformfl_enum_t = 1254;
pub const XED_IFORMFL_GF2P8MULB_FIRST: xed_iformfl_enum_t = 1255;
pub const XED_IFORMFL_GF2P8MULB_LAST: xed_iformfl_enum_t = 1256;
pub const XED_IFORMFL_HADDPD_FIRST: xed_iformfl_enum_t = 1257;
pub const XED_IFORMFL_HADDPD_LAST: xed_iformfl_enum_t = 1258;
pub const XED_IFORMFL_HADDPS_FIRST: xed_iformfl_enum_t = 1259;
pub const XED_IFORMFL_HADDPS_LAST: xed_iformfl_enum_t = 1260;
pub const XED_IFORMFL_HLT_FIRST: xed_iformfl_enum_t = 1261;
pub const XED_IFORMFL_HLT_LAST: xed_iformfl_enum_t = 1261;
pub const XED_IFORMFL_HRESET_FIRST: xed_iformfl_enum_t = 1262;
pub const XED_IFORMFL_HRESET_LAST: xed_iformfl_enum_t = 1262;
pub const XED_IFORMFL_HSUBPD_FIRST: xed_iformfl_enum_t = 1263;
pub const XED_IFORMFL_HSUBPD_LAST: xed_iformfl_enum_t = 1264;
pub const XED_IFORMFL_HSUBPS_FIRST: xed_iformfl_enum_t = 1265;
pub const XED_IFORMFL_HSUBPS_LAST: xed_iformfl_enum_t = 1266;
pub const XED_IFORMFL_IDIV_FIRST: xed_iformfl_enum_t = 1267;
pub const XED_IFORMFL_IDIV_LAST: xed_iformfl_enum_t = 1274;
pub const XED_IFORMFL_IMUL_FIRST: xed_iformfl_enum_t = 1275;
pub const XED_IFORMFL_IMUL_LAST: xed_iformfl_enum_t = 1296;
pub const XED_IFORMFL_IN_FIRST: xed_iformfl_enum_t = 1297;
pub const XED_IFORMFL_IN_LAST: xed_iformfl_enum_t = 1300;
pub const XED_IFORMFL_INC_FIRST: xed_iformfl_enum_t = 1301;
pub const XED_IFORMFL_INC_LAST: xed_iformfl_enum_t = 1313;
pub const XED_IFORMFL_INCSSPD_FIRST: xed_iformfl_enum_t = 1314;
pub const XED_IFORMFL_INCSSPD_LAST: xed_iformfl_enum_t = 1314;
pub const XED_IFORMFL_INCSSPQ_FIRST: xed_iformfl_enum_t = 1315;
pub const XED_IFORMFL_INCSSPQ_LAST: xed_iformfl_enum_t = 1315;
pub const XED_IFORMFL_INC_LOCK_FIRST: xed_iformfl_enum_t = 1316;
pub const XED_IFORMFL_INC_LOCK_LAST: xed_iformfl_enum_t = 1317;
pub const XED_IFORMFL_INSB_FIRST: xed_iformfl_enum_t = 1318;
pub const XED_IFORMFL_INSB_LAST: xed_iformfl_enum_t = 1318;
pub const XED_IFORMFL_INSD_FIRST: xed_iformfl_enum_t = 1319;
pub const XED_IFORMFL_INSD_LAST: xed_iformfl_enum_t = 1319;
pub const XED_IFORMFL_INSERTPS_FIRST: xed_iformfl_enum_t = 1320;
pub const XED_IFORMFL_INSERTPS_LAST: xed_iformfl_enum_t = 1321;
pub const XED_IFORMFL_INSERTQ_FIRST: xed_iformfl_enum_t = 1322;
pub const XED_IFORMFL_INSERTQ_LAST: xed_iformfl_enum_t = 1323;
pub const XED_IFORMFL_INSW_FIRST: xed_iformfl_enum_t = 1324;
pub const XED_IFORMFL_INSW_LAST: xed_iformfl_enum_t = 1324;
pub const XED_IFORMFL_INT_FIRST: xed_iformfl_enum_t = 1325;
pub const XED_IFORMFL_INT_LAST: xed_iformfl_enum_t = 1325;
pub const XED_IFORMFL_INT1_FIRST: xed_iformfl_enum_t = 1326;
pub const XED_IFORMFL_INT1_LAST: xed_iformfl_enum_t = 1326;
pub const XED_IFORMFL_INT3_FIRST: xed_iformfl_enum_t = 1327;
pub const XED_IFORMFL_INT3_LAST: xed_iformfl_enum_t = 1327;
pub const XED_IFORMFL_INTO_FIRST: xed_iformfl_enum_t = 1328;
pub const XED_IFORMFL_INTO_LAST: xed_iformfl_enum_t = 1328;
pub const XED_IFORMFL_INVD_FIRST: xed_iformfl_enum_t = 1329;
pub const XED_IFORMFL_INVD_LAST: xed_iformfl_enum_t = 1329;
pub const XED_IFORMFL_INVEPT_FIRST: xed_iformfl_enum_t = 1330;
pub const XED_IFORMFL_INVEPT_LAST: xed_iformfl_enum_t = 1332;
pub const XED_IFORMFL_INVLPG_FIRST: xed_iformfl_enum_t = 1333;
pub const XED_IFORMFL_INVLPG_LAST: xed_iformfl_enum_t = 1333;
pub const XED_IFORMFL_INVLPGA_FIRST: xed_iformfl_enum_t = 1334;
pub const XED_IFORMFL_INVLPGA_LAST: xed_iformfl_enum_t = 1334;
pub const XED_IFORMFL_INVLPGB_FIRST: xed_iformfl_enum_t = 1335;
pub const XED_IFORMFL_INVLPGB_LAST: xed_iformfl_enum_t = 1336;
pub const XED_IFORMFL_INVPCID_FIRST: xed_iformfl_enum_t = 1337;
pub const XED_IFORMFL_INVPCID_LAST: xed_iformfl_enum_t = 1339;
pub const XED_IFORMFL_INVVPID_FIRST: xed_iformfl_enum_t = 1340;
pub const XED_IFORMFL_INVVPID_LAST: xed_iformfl_enum_t = 1342;
pub const XED_IFORMFL_IRET_FIRST: xed_iformfl_enum_t = 1343;
pub const XED_IFORMFL_IRET_LAST: xed_iformfl_enum_t = 1343;
pub const XED_IFORMFL_IRETD_FIRST: xed_iformfl_enum_t = 1344;
pub const XED_IFORMFL_IRETD_LAST: xed_iformfl_enum_t = 1344;
pub const XED_IFORMFL_IRETQ_FIRST: xed_iformfl_enum_t = 1345;
pub const XED_IFORMFL_IRETQ_LAST: xed_iformfl_enum_t = 1345;
pub const XED_IFORMFL_JB_FIRST: xed_iformfl_enum_t = 1346;
pub const XED_IFORMFL_JB_LAST: xed_iformfl_enum_t = 1348;
pub const XED_IFORMFL_JBE_FIRST: xed_iformfl_enum_t = 1349;
pub const XED_IFORMFL_JBE_LAST: xed_iformfl_enum_t = 1351;
pub const XED_IFORMFL_JCXZ_FIRST: xed_iformfl_enum_t = 1352;
pub const XED_IFORMFL_JCXZ_LAST: xed_iformfl_enum_t = 1352;
pub const XED_IFORMFL_JECXZ_FIRST: xed_iformfl_enum_t = 1353;
pub const XED_IFORMFL_JECXZ_LAST: xed_iformfl_enum_t = 1353;
pub const XED_IFORMFL_JL_FIRST: xed_iformfl_enum_t = 1354;
pub const XED_IFORMFL_JL_LAST: xed_iformfl_enum_t = 1356;
pub const XED_IFORMFL_JLE_FIRST: xed_iformfl_enum_t = 1357;
pub const XED_IFORMFL_JLE_LAST: xed_iformfl_enum_t = 1359;
pub const XED_IFORMFL_JMP_FIRST: xed_iformfl_enum_t = 1360;
pub const XED_IFORMFL_JMP_LAST: xed_iformfl_enum_t = 1364;
pub const XED_IFORMFL_JMPABS_FIRST: xed_iformfl_enum_t = 1365;
pub const XED_IFORMFL_JMPABS_LAST: xed_iformfl_enum_t = 1365;
pub const XED_IFORMFL_JMP_FAR_FIRST: xed_iformfl_enum_t = 1366;
pub const XED_IFORMFL_JMP_FAR_LAST: xed_iformfl_enum_t = 1367;
pub const XED_IFORMFL_JNB_FIRST: xed_iformfl_enum_t = 1368;
pub const XED_IFORMFL_JNB_LAST: xed_iformfl_enum_t = 1370;
pub const XED_IFORMFL_JNBE_FIRST: xed_iformfl_enum_t = 1371;
pub const XED_IFORMFL_JNBE_LAST: xed_iformfl_enum_t = 1373;
pub const XED_IFORMFL_JNL_FIRST: xed_iformfl_enum_t = 1374;
pub const XED_IFORMFL_JNL_LAST: xed_iformfl_enum_t = 1376;
pub const XED_IFORMFL_JNLE_FIRST: xed_iformfl_enum_t = 1377;
pub const XED_IFORMFL_JNLE_LAST: xed_iformfl_enum_t = 1379;
pub const XED_IFORMFL_JNO_FIRST: xed_iformfl_enum_t = 1380;
pub const XED_IFORMFL_JNO_LAST: xed_iformfl_enum_t = 1382;
pub const XED_IFORMFL_JNP_FIRST: xed_iformfl_enum_t = 1383;
pub const XED_IFORMFL_JNP_LAST: xed_iformfl_enum_t = 1385;
pub const XED_IFORMFL_JNS_FIRST: xed_iformfl_enum_t = 1386;
pub const XED_IFORMFL_JNS_LAST: xed_iformfl_enum_t = 1388;
pub const XED_IFORMFL_JNZ_FIRST: xed_iformfl_enum_t = 1389;
pub const XED_IFORMFL_JNZ_LAST: xed_iformfl_enum_t = 1391;
pub const XED_IFORMFL_JO_FIRST: xed_iformfl_enum_t = 1392;
pub const XED_IFORMFL_JO_LAST: xed_iformfl_enum_t = 1394;
pub const XED_IFORMFL_JP_FIRST: xed_iformfl_enum_t = 1395;
pub const XED_IFORMFL_JP_LAST: xed_iformfl_enum_t = 1397;
pub const XED_IFORMFL_JRCXZ_FIRST: xed_iformfl_enum_t = 1398;
pub const XED_IFORMFL_JRCXZ_LAST: xed_iformfl_enum_t = 1398;
pub const XED_IFORMFL_JS_FIRST: xed_iformfl_enum_t = 1399;
pub const XED_IFORMFL_JS_LAST: xed_iformfl_enum_t = 1401;
pub const XED_IFORMFL_JZ_FIRST: xed_iformfl_enum_t = 1402;
pub const XED_IFORMFL_JZ_LAST: xed_iformfl_enum_t = 1404;
pub const XED_IFORMFL_KADDB_FIRST: xed_iformfl_enum_t = 1405;
pub const XED_IFORMFL_KADDB_LAST: xed_iformfl_enum_t = 1405;
pub const XED_IFORMFL_KADDD_FIRST: xed_iformfl_enum_t = 1406;
pub const XED_IFORMFL_KADDD_LAST: xed_iformfl_enum_t = 1406;
pub const XED_IFORMFL_KADDQ_FIRST: xed_iformfl_enum_t = 1407;
pub const XED_IFORMFL_KADDQ_LAST: xed_iformfl_enum_t = 1407;
pub const XED_IFORMFL_KADDW_FIRST: xed_iformfl_enum_t = 1408;
pub const XED_IFORMFL_KADDW_LAST: xed_iformfl_enum_t = 1408;
pub const XED_IFORMFL_KANDB_FIRST: xed_iformfl_enum_t = 1409;
pub const XED_IFORMFL_KANDB_LAST: xed_iformfl_enum_t = 1409;
pub const XED_IFORMFL_KANDD_FIRST: xed_iformfl_enum_t = 1410;
pub const XED_IFORMFL_KANDD_LAST: xed_iformfl_enum_t = 1410;
pub const XED_IFORMFL_KANDNB_FIRST: xed_iformfl_enum_t = 1411;
pub const XED_IFORMFL_KANDNB_LAST: xed_iformfl_enum_t = 1411;
pub const XED_IFORMFL_KANDND_FIRST: xed_iformfl_enum_t = 1412;
pub const XED_IFORMFL_KANDND_LAST: xed_iformfl_enum_t = 1412;
pub const XED_IFORMFL_KANDNQ_FIRST: xed_iformfl_enum_t = 1413;
pub const XED_IFORMFL_KANDNQ_LAST: xed_iformfl_enum_t = 1413;
pub const XED_IFORMFL_KANDNW_FIRST: xed_iformfl_enum_t = 1414;
pub const XED_IFORMFL_KANDNW_LAST: xed_iformfl_enum_t = 1414;
pub const XED_IFORMFL_KANDQ_FIRST: xed_iformfl_enum_t = 1415;
pub const XED_IFORMFL_KANDQ_LAST: xed_iformfl_enum_t = 1415;
pub const XED_IFORMFL_KANDW_FIRST: xed_iformfl_enum_t = 1416;
pub const XED_IFORMFL_KANDW_LAST: xed_iformfl_enum_t = 1416;
pub const XED_IFORMFL_KMOVB_FIRST: xed_iformfl_enum_t = 1417;
pub const XED_IFORMFL_KMOVB_LAST: xed_iformfl_enum_t = 1426;
pub const XED_IFORMFL_KMOVD_FIRST: xed_iformfl_enum_t = 1427;
pub const XED_IFORMFL_KMOVD_LAST: xed_iformfl_enum_t = 1436;
pub const XED_IFORMFL_KMOVQ_FIRST: xed_iformfl_enum_t = 1437;
pub const XED_IFORMFL_KMOVQ_LAST: xed_iformfl_enum_t = 1446;
pub const XED_IFORMFL_KMOVW_FIRST: xed_iformfl_enum_t = 1447;
pub const XED_IFORMFL_KMOVW_LAST: xed_iformfl_enum_t = 1456;
pub const XED_IFORMFL_KNOTB_FIRST: xed_iformfl_enum_t = 1457;
pub const XED_IFORMFL_KNOTB_LAST: xed_iformfl_enum_t = 1457;
pub const XED_IFORMFL_KNOTD_FIRST: xed_iformfl_enum_t = 1458;
pub const XED_IFORMFL_KNOTD_LAST: xed_iformfl_enum_t = 1458;
pub const XED_IFORMFL_KNOTQ_FIRST: xed_iformfl_enum_t = 1459;
pub const XED_IFORMFL_KNOTQ_LAST: xed_iformfl_enum_t = 1459;
pub const XED_IFORMFL_KNOTW_FIRST: xed_iformfl_enum_t = 1460;
pub const XED_IFORMFL_KNOTW_LAST: xed_iformfl_enum_t = 1460;
pub const XED_IFORMFL_KORB_FIRST: xed_iformfl_enum_t = 1461;
pub const XED_IFORMFL_KORB_LAST: xed_iformfl_enum_t = 1461;
pub const XED_IFORMFL_KORD_FIRST: xed_iformfl_enum_t = 1462;
pub const XED_IFORMFL_KORD_LAST: xed_iformfl_enum_t = 1462;
pub const XED_IFORMFL_KORQ_FIRST: xed_iformfl_enum_t = 1463;
pub const XED_IFORMFL_KORQ_LAST: xed_iformfl_enum_t = 1463;
pub const XED_IFORMFL_KORTESTB_FIRST: xed_iformfl_enum_t = 1464;
pub const XED_IFORMFL_KORTESTB_LAST: xed_iformfl_enum_t = 1464;
pub const XED_IFORMFL_KORTESTD_FIRST: xed_iformfl_enum_t = 1465;
pub const XED_IFORMFL_KORTESTD_LAST: xed_iformfl_enum_t = 1465;
pub const XED_IFORMFL_KORTESTQ_FIRST: xed_iformfl_enum_t = 1466;
pub const XED_IFORMFL_KORTESTQ_LAST: xed_iformfl_enum_t = 1466;
pub const XED_IFORMFL_KORTESTW_FIRST: xed_iformfl_enum_t = 1467;
pub const XED_IFORMFL_KORTESTW_LAST: xed_iformfl_enum_t = 1467;
pub const XED_IFORMFL_KORW_FIRST: xed_iformfl_enum_t = 1468;
pub const XED_IFORMFL_KORW_LAST: xed_iformfl_enum_t = 1468;
pub const XED_IFORMFL_KSHIFTLB_FIRST: xed_iformfl_enum_t = 1469;
pub const XED_IFORMFL_KSHIFTLB_LAST: xed_iformfl_enum_t = 1469;
pub const XED_IFORMFL_KSHIFTLD_FIRST: xed_iformfl_enum_t = 1470;
pub const XED_IFORMFL_KSHIFTLD_LAST: xed_iformfl_enum_t = 1470;
pub const XED_IFORMFL_KSHIFTLQ_FIRST: xed_iformfl_enum_t = 1471;
pub const XED_IFORMFL_KSHIFTLQ_LAST: xed_iformfl_enum_t = 1471;
pub const XED_IFORMFL_KSHIFTLW_FIRST: xed_iformfl_enum_t = 1472;
pub const XED_IFORMFL_KSHIFTLW_LAST: xed_iformfl_enum_t = 1472;
pub const XED_IFORMFL_KSHIFTRB_FIRST: xed_iformfl_enum_t = 1473;
pub const XED_IFORMFL_KSHIFTRB_LAST: xed_iformfl_enum_t = 1473;
pub const XED_IFORMFL_KSHIFTRD_FIRST: xed_iformfl_enum_t = 1474;
pub const XED_IFORMFL_KSHIFTRD_LAST: xed_iformfl_enum_t = 1474;
pub const XED_IFORMFL_KSHIFTRQ_FIRST: xed_iformfl_enum_t = 1475;
pub const XED_IFORMFL_KSHIFTRQ_LAST: xed_iformfl_enum_t = 1475;
pub const XED_IFORMFL_KSHIFTRW_FIRST: xed_iformfl_enum_t = 1476;
pub const XED_IFORMFL_KSHIFTRW_LAST: xed_iformfl_enum_t = 1476;
pub const XED_IFORMFL_KTESTB_FIRST: xed_iformfl_enum_t = 1477;
pub const XED_IFORMFL_KTESTB_LAST: xed_iformfl_enum_t = 1477;
pub const XED_IFORMFL_KTESTD_FIRST: xed_iformfl_enum_t = 1478;
pub const XED_IFORMFL_KTESTD_LAST: xed_iformfl_enum_t = 1478;
pub const XED_IFORMFL_KTESTQ_FIRST: xed_iformfl_enum_t = 1479;
pub const XED_IFORMFL_KTESTQ_LAST: xed_iformfl_enum_t = 1479;
pub const XED_IFORMFL_KTESTW_FIRST: xed_iformfl_enum_t = 1480;
pub const XED_IFORMFL_KTESTW_LAST: xed_iformfl_enum_t = 1480;
pub const XED_IFORMFL_KUNPCKBW_FIRST: xed_iformfl_enum_t = 1481;
pub const XED_IFORMFL_KUNPCKBW_LAST: xed_iformfl_enum_t = 1481;
pub const XED_IFORMFL_KUNPCKDQ_FIRST: xed_iformfl_enum_t = 1482;
pub const XED_IFORMFL_KUNPCKDQ_LAST: xed_iformfl_enum_t = 1482;
pub const XED_IFORMFL_KUNPCKWD_FIRST: xed_iformfl_enum_t = 1483;
pub const XED_IFORMFL_KUNPCKWD_LAST: xed_iformfl_enum_t = 1483;
pub const XED_IFORMFL_KXNORB_FIRST: xed_iformfl_enum_t = 1484;
pub const XED_IFORMFL_KXNORB_LAST: xed_iformfl_enum_t = 1484;
pub const XED_IFORMFL_KXNORD_FIRST: xed_iformfl_enum_t = 1485;
pub const XED_IFORMFL_KXNORD_LAST: xed_iformfl_enum_t = 1485;
pub const XED_IFORMFL_KXNORQ_FIRST: xed_iformfl_enum_t = 1486;
pub const XED_IFORMFL_KXNORQ_LAST: xed_iformfl_enum_t = 1486;
pub const XED_IFORMFL_KXNORW_FIRST: xed_iformfl_enum_t = 1487;
pub const XED_IFORMFL_KXNORW_LAST: xed_iformfl_enum_t = 1487;
pub const XED_IFORMFL_KXORB_FIRST: xed_iformfl_enum_t = 1488;
pub const XED_IFORMFL_KXORB_LAST: xed_iformfl_enum_t = 1488;
pub const XED_IFORMFL_KXORD_FIRST: xed_iformfl_enum_t = 1489;
pub const XED_IFORMFL_KXORD_LAST: xed_iformfl_enum_t = 1489;
pub const XED_IFORMFL_KXORQ_FIRST: xed_iformfl_enum_t = 1490;
pub const XED_IFORMFL_KXORQ_LAST: xed_iformfl_enum_t = 1490;
pub const XED_IFORMFL_KXORW_FIRST: xed_iformfl_enum_t = 1491;
pub const XED_IFORMFL_KXORW_LAST: xed_iformfl_enum_t = 1491;
pub const XED_IFORMFL_LAHF_FIRST: xed_iformfl_enum_t = 1492;
pub const XED_IFORMFL_LAHF_LAST: xed_iformfl_enum_t = 1492;
pub const XED_IFORMFL_LAR_FIRST: xed_iformfl_enum_t = 1493;
pub const XED_IFORMFL_LAR_LAST: xed_iformfl_enum_t = 1494;
pub const XED_IFORMFL_LDDQU_FIRST: xed_iformfl_enum_t = 1495;
pub const XED_IFORMFL_LDDQU_LAST: xed_iformfl_enum_t = 1495;
pub const XED_IFORMFL_LDMXCSR_FIRST: xed_iformfl_enum_t = 1496;
pub const XED_IFORMFL_LDMXCSR_LAST: xed_iformfl_enum_t = 1496;
pub const XED_IFORMFL_LDS_FIRST: xed_iformfl_enum_t = 1497;
pub const XED_IFORMFL_LDS_LAST: xed_iformfl_enum_t = 1497;
pub const XED_IFORMFL_LDTILECFG_FIRST: xed_iformfl_enum_t = 1498;
pub const XED_IFORMFL_LDTILECFG_LAST: xed_iformfl_enum_t = 1499;
pub const XED_IFORMFL_LEA_FIRST: xed_iformfl_enum_t = 1500;
pub const XED_IFORMFL_LEA_LAST: xed_iformfl_enum_t = 1500;
pub const XED_IFORMFL_LEAVE_FIRST: xed_iformfl_enum_t = 1501;
pub const XED_IFORMFL_LEAVE_LAST: xed_iformfl_enum_t = 1501;
pub const XED_IFORMFL_LES_FIRST: xed_iformfl_enum_t = 1502;
pub const XED_IFORMFL_LES_LAST: xed_iformfl_enum_t = 1502;
pub const XED_IFORMFL_LFENCE_FIRST: xed_iformfl_enum_t = 1503;
pub const XED_IFORMFL_LFENCE_LAST: xed_iformfl_enum_t = 1503;
pub const XED_IFORMFL_LFS_FIRST: xed_iformfl_enum_t = 1504;
pub const XED_IFORMFL_LFS_LAST: xed_iformfl_enum_t = 1504;
pub const XED_IFORMFL_LGDT_FIRST: xed_iformfl_enum_t = 1505;
pub const XED_IFORMFL_LGDT_LAST: xed_iformfl_enum_t = 1506;
pub const XED_IFORMFL_LGS_FIRST: xed_iformfl_enum_t = 1507;
pub const XED_IFORMFL_LGS_LAST: xed_iformfl_enum_t = 1507;
pub const XED_IFORMFL_LIDT_FIRST: xed_iformfl_enum_t = 1508;
pub const XED_IFORMFL_LIDT_LAST: xed_iformfl_enum_t = 1509;
pub const XED_IFORMFL_LKGS_FIRST: xed_iformfl_enum_t = 1510;
pub const XED_IFORMFL_LKGS_LAST: xed_iformfl_enum_t = 1511;
pub const XED_IFORMFL_LLDT_FIRST: xed_iformfl_enum_t = 1512;
pub const XED_IFORMFL_LLDT_LAST: xed_iformfl_enum_t = 1513;
pub const XED_IFORMFL_LLWPCB_FIRST: xed_iformfl_enum_t = 1514;
pub const XED_IFORMFL_LLWPCB_LAST: xed_iformfl_enum_t = 1514;
pub const XED_IFORMFL_LMSW_FIRST: xed_iformfl_enum_t = 1515;
pub const XED_IFORMFL_LMSW_LAST: xed_iformfl_enum_t = 1516;
pub const XED_IFORMFL_LOADIWKEY_FIRST: xed_iformfl_enum_t = 1517;
pub const XED_IFORMFL_LOADIWKEY_LAST: xed_iformfl_enum_t = 1517;
pub const XED_IFORMFL_LODSB_FIRST: xed_iformfl_enum_t = 1518;
pub const XED_IFORMFL_LODSB_LAST: xed_iformfl_enum_t = 1518;
pub const XED_IFORMFL_LODSD_FIRST: xed_iformfl_enum_t = 1519;
pub const XED_IFORMFL_LODSD_LAST: xed_iformfl_enum_t = 1519;
pub const XED_IFORMFL_LODSQ_FIRST: xed_iformfl_enum_t = 1520;
pub const XED_IFORMFL_LODSQ_LAST: xed_iformfl_enum_t = 1520;
pub const XED_IFORMFL_LODSW_FIRST: xed_iformfl_enum_t = 1521;
pub const XED_IFORMFL_LODSW_LAST: xed_iformfl_enum_t = 1521;
pub const XED_IFORMFL_LOOP_FIRST: xed_iformfl_enum_t = 1522;
pub const XED_IFORMFL_LOOP_LAST: xed_iformfl_enum_t = 1522;
pub const XED_IFORMFL_LOOPE_FIRST: xed_iformfl_enum_t = 1523;
pub const XED_IFORMFL_LOOPE_LAST: xed_iformfl_enum_t = 1523;
pub const XED_IFORMFL_LOOPNE_FIRST: xed_iformfl_enum_t = 1524;
pub const XED_IFORMFL_LOOPNE_LAST: xed_iformfl_enum_t = 1524;
pub const XED_IFORMFL_LSL_FIRST: xed_iformfl_enum_t = 1525;
pub const XED_IFORMFL_LSL_LAST: xed_iformfl_enum_t = 1526;
pub const XED_IFORMFL_LSS_FIRST: xed_iformfl_enum_t = 1527;
pub const XED_IFORMFL_LSS_LAST: xed_iformfl_enum_t = 1527;
pub const XED_IFORMFL_LTR_FIRST: xed_iformfl_enum_t = 1528;
pub const XED_IFORMFL_LTR_LAST: xed_iformfl_enum_t = 1529;
pub const XED_IFORMFL_LWPINS_FIRST: xed_iformfl_enum_t = 1530;
pub const XED_IFORMFL_LWPINS_LAST: xed_iformfl_enum_t = 1531;
pub const XED_IFORMFL_LWPVAL_FIRST: xed_iformfl_enum_t = 1532;
pub const XED_IFORMFL_LWPVAL_LAST: xed_iformfl_enum_t = 1533;
pub const XED_IFORMFL_LZCNT_FIRST: xed_iformfl_enum_t = 1534;
pub const XED_IFORMFL_LZCNT_LAST: xed_iformfl_enum_t = 1537;
pub const XED_IFORMFL_MASKMOVDQU_FIRST: xed_iformfl_enum_t = 1538;
pub const XED_IFORMFL_MASKMOVDQU_LAST: xed_iformfl_enum_t = 1538;
pub const XED_IFORMFL_MASKMOVQ_FIRST: xed_iformfl_enum_t = 1539;
pub const XED_IFORMFL_MASKMOVQ_LAST: xed_iformfl_enum_t = 1539;
pub const XED_IFORMFL_MAXPD_FIRST: xed_iformfl_enum_t = 1540;
pub const XED_IFORMFL_MAXPD_LAST: xed_iformfl_enum_t = 1541;
pub const XED_IFORMFL_MAXPS_FIRST: xed_iformfl_enum_t = 1542;
pub const XED_IFORMFL_MAXPS_LAST: xed_iformfl_enum_t = 1543;
pub const XED_IFORMFL_MAXSD_FIRST: xed_iformfl_enum_t = 1544;
pub const XED_IFORMFL_MAXSD_LAST: xed_iformfl_enum_t = 1545;
pub const XED_IFORMFL_MAXSS_FIRST: xed_iformfl_enum_t = 1546;
pub const XED_IFORMFL_MAXSS_LAST: xed_iformfl_enum_t = 1547;
pub const XED_IFORMFL_MCOMMIT_FIRST: xed_iformfl_enum_t = 1548;
pub const XED_IFORMFL_MCOMMIT_LAST: xed_iformfl_enum_t = 1548;
pub const XED_IFORMFL_MFENCE_FIRST: xed_iformfl_enum_t = 1549;
pub const XED_IFORMFL_MFENCE_LAST: xed_iformfl_enum_t = 1549;
pub const XED_IFORMFL_MINPD_FIRST: xed_iformfl_enum_t = 1550;
pub const XED_IFORMFL_MINPD_LAST: xed_iformfl_enum_t = 1551;
pub const XED_IFORMFL_MINPS_FIRST: xed_iformfl_enum_t = 1552;
pub const XED_IFORMFL_MINPS_LAST: xed_iformfl_enum_t = 1553;
pub const XED_IFORMFL_MINSD_FIRST: xed_iformfl_enum_t = 1554;
pub const XED_IFORMFL_MINSD_LAST: xed_iformfl_enum_t = 1555;
pub const XED_IFORMFL_MINSS_FIRST: xed_iformfl_enum_t = 1556;
pub const XED_IFORMFL_MINSS_LAST: xed_iformfl_enum_t = 1557;
pub const XED_IFORMFL_MONITOR_FIRST: xed_iformfl_enum_t = 1558;
pub const XED_IFORMFL_MONITOR_LAST: xed_iformfl_enum_t = 1558;
pub const XED_IFORMFL_MONITORX_FIRST: xed_iformfl_enum_t = 1559;
pub const XED_IFORMFL_MONITORX_LAST: xed_iformfl_enum_t = 1559;
pub const XED_IFORMFL_MOV_FIRST: xed_iformfl_enum_t = 1560;
pub const XED_IFORMFL_MOV_LAST: xed_iformfl_enum_t = 1581;
pub const XED_IFORMFL_MOVAPD_FIRST: xed_iformfl_enum_t = 1582;
pub const XED_IFORMFL_MOVAPD_LAST: xed_iformfl_enum_t = 1585;
pub const XED_IFORMFL_MOVAPS_FIRST: xed_iformfl_enum_t = 1586;
pub const XED_IFORMFL_MOVAPS_LAST: xed_iformfl_enum_t = 1589;
pub const XED_IFORMFL_MOVBE_FIRST: xed_iformfl_enum_t = 1590;
pub const XED_IFORMFL_MOVBE_LAST: xed_iformfl_enum_t = 1594;
pub const XED_IFORMFL_MOVD_FIRST: xed_iformfl_enum_t = 1595;
pub const XED_IFORMFL_MOVD_LAST: xed_iformfl_enum_t = 1602;
pub const XED_IFORMFL_MOVDDUP_FIRST: xed_iformfl_enum_t = 1603;
pub const XED_IFORMFL_MOVDDUP_LAST: xed_iformfl_enum_t = 1604;
pub const XED_IFORMFL_MOVDIR64B_FIRST: xed_iformfl_enum_t = 1605;
pub const XED_IFORMFL_MOVDIR64B_LAST: xed_iformfl_enum_t = 1606;
pub const XED_IFORMFL_MOVDIRI_FIRST: xed_iformfl_enum_t = 1607;
pub const XED_IFORMFL_MOVDIRI_LAST: xed_iformfl_enum_t = 1609;
pub const XED_IFORMFL_MOVDQ2Q_FIRST: xed_iformfl_enum_t = 1610;
pub const XED_IFORMFL_MOVDQ2Q_LAST: xed_iformfl_enum_t = 1610;
pub const XED_IFORMFL_MOVDQA_FIRST: xed_iformfl_enum_t = 1611;
pub const XED_IFORMFL_MOVDQA_LAST: xed_iformfl_enum_t = 1614;
pub const XED_IFORMFL_MOVDQU_FIRST: xed_iformfl_enum_t = 1615;
pub const XED_IFORMFL_MOVDQU_LAST: xed_iformfl_enum_t = 1618;
pub const XED_IFORMFL_MOVHLPS_FIRST: xed_iformfl_enum_t = 1619;
pub const XED_IFORMFL_MOVHLPS_LAST: xed_iformfl_enum_t = 1619;
pub const XED_IFORMFL_MOVHPD_FIRST: xed_iformfl_enum_t = 1620;
pub const XED_IFORMFL_MOVHPD_LAST: xed_iformfl_enum_t = 1621;
pub const XED_IFORMFL_MOVHPS_FIRST: xed_iformfl_enum_t = 1622;
pub const XED_IFORMFL_MOVHPS_LAST: xed_iformfl_enum_t = 1623;
pub const XED_IFORMFL_MOVLHPS_FIRST: xed_iformfl_enum_t = 1624;
pub const XED_IFORMFL_MOVLHPS_LAST: xed_iformfl_enum_t = 1624;
pub const XED_IFORMFL_MOVLPD_FIRST: xed_iformfl_enum_t = 1625;
pub const XED_IFORMFL_MOVLPD_LAST: xed_iformfl_enum_t = 1626;
pub const XED_IFORMFL_MOVLPS_FIRST: xed_iformfl_enum_t = 1627;
pub const XED_IFORMFL_MOVLPS_LAST: xed_iformfl_enum_t = 1628;
pub const XED_IFORMFL_MOVMSKPD_FIRST: xed_iformfl_enum_t = 1629;
pub const XED_IFORMFL_MOVMSKPD_LAST: xed_iformfl_enum_t = 1629;
pub const XED_IFORMFL_MOVMSKPS_FIRST: xed_iformfl_enum_t = 1630;
pub const XED_IFORMFL_MOVMSKPS_LAST: xed_iformfl_enum_t = 1630;
pub const XED_IFORMFL_MOVNTDQ_FIRST: xed_iformfl_enum_t = 1631;
pub const XED_IFORMFL_MOVNTDQ_LAST: xed_iformfl_enum_t = 1631;
pub const XED_IFORMFL_MOVNTDQA_FIRST: xed_iformfl_enum_t = 1632;
pub const XED_IFORMFL_MOVNTDQA_LAST: xed_iformfl_enum_t = 1632;
pub const XED_IFORMFL_MOVNTI_FIRST: xed_iformfl_enum_t = 1633;
pub const XED_IFORMFL_MOVNTI_LAST: xed_iformfl_enum_t = 1634;
pub const XED_IFORMFL_MOVNTPD_FIRST: xed_iformfl_enum_t = 1635;
pub const XED_IFORMFL_MOVNTPD_LAST: xed_iformfl_enum_t = 1635;
pub const XED_IFORMFL_MOVNTPS_FIRST: xed_iformfl_enum_t = 1636;
pub const XED_IFORMFL_MOVNTPS_LAST: xed_iformfl_enum_t = 1636;
pub const XED_IFORMFL_MOVNTQ_FIRST: xed_iformfl_enum_t = 1637;
pub const XED_IFORMFL_MOVNTQ_LAST: xed_iformfl_enum_t = 1637;
pub const XED_IFORMFL_MOVNTSD_FIRST: xed_iformfl_enum_t = 1638;
pub const XED_IFORMFL_MOVNTSD_LAST: xed_iformfl_enum_t = 1638;
pub const XED_IFORMFL_MOVNTSS_FIRST: xed_iformfl_enum_t = 1639;
pub const XED_IFORMFL_MOVNTSS_LAST: xed_iformfl_enum_t = 1639;
pub const XED_IFORMFL_MOVQ_FIRST: xed_iformfl_enum_t = 1640;
pub const XED_IFORMFL_MOVQ_LAST: xed_iformfl_enum_t = 1655;
pub const XED_IFORMFL_MOVQ2DQ_FIRST: xed_iformfl_enum_t = 1656;
pub const XED_IFORMFL_MOVQ2DQ_LAST: xed_iformfl_enum_t = 1656;
pub const XED_IFORMFL_MOVSB_FIRST: xed_iformfl_enum_t = 1657;
pub const XED_IFORMFL_MOVSB_LAST: xed_iformfl_enum_t = 1657;
pub const XED_IFORMFL_MOVSD_FIRST: xed_iformfl_enum_t = 1658;
pub const XED_IFORMFL_MOVSD_LAST: xed_iformfl_enum_t = 1658;
pub const XED_IFORMFL_MOVSD_XMM_FIRST: xed_iformfl_enum_t = 1659;
pub const XED_IFORMFL_MOVSD_XMM_LAST: xed_iformfl_enum_t = 1662;
pub const XED_IFORMFL_MOVSHDUP_FIRST: xed_iformfl_enum_t = 1663;
pub const XED_IFORMFL_MOVSHDUP_LAST: xed_iformfl_enum_t = 1664;
pub const XED_IFORMFL_MOVSLDUP_FIRST: xed_iformfl_enum_t = 1665;
pub const XED_IFORMFL_MOVSLDUP_LAST: xed_iformfl_enum_t = 1666;
pub const XED_IFORMFL_MOVSQ_FIRST: xed_iformfl_enum_t = 1667;
pub const XED_IFORMFL_MOVSQ_LAST: xed_iformfl_enum_t = 1667;
pub const XED_IFORMFL_MOVSS_FIRST: xed_iformfl_enum_t = 1668;
pub const XED_IFORMFL_MOVSS_LAST: xed_iformfl_enum_t = 1671;
pub const XED_IFORMFL_MOVSW_FIRST: xed_iformfl_enum_t = 1672;
pub const XED_IFORMFL_MOVSW_LAST: xed_iformfl_enum_t = 1672;
pub const XED_IFORMFL_MOVSX_FIRST: xed_iformfl_enum_t = 1673;
pub const XED_IFORMFL_MOVSX_LAST: xed_iformfl_enum_t = 1676;
pub const XED_IFORMFL_MOVSXD_FIRST: xed_iformfl_enum_t = 1677;
pub const XED_IFORMFL_MOVSXD_LAST: xed_iformfl_enum_t = 1678;
pub const XED_IFORMFL_MOVUPD_FIRST: xed_iformfl_enum_t = 1679;
pub const XED_IFORMFL_MOVUPD_LAST: xed_iformfl_enum_t = 1682;
pub const XED_IFORMFL_MOVUPS_FIRST: xed_iformfl_enum_t = 1683;
pub const XED_IFORMFL_MOVUPS_LAST: xed_iformfl_enum_t = 1686;
pub const XED_IFORMFL_MOVZX_FIRST: xed_iformfl_enum_t = 1687;
pub const XED_IFORMFL_MOVZX_LAST: xed_iformfl_enum_t = 1690;
pub const XED_IFORMFL_MOV_CR_FIRST: xed_iformfl_enum_t = 1691;
pub const XED_IFORMFL_MOV_CR_LAST: xed_iformfl_enum_t = 1694;
pub const XED_IFORMFL_MOV_DR_FIRST: xed_iformfl_enum_t = 1695;
pub const XED_IFORMFL_MOV_DR_LAST: xed_iformfl_enum_t = 1698;
pub const XED_IFORMFL_MPSADBW_FIRST: xed_iformfl_enum_t = 1699;
pub const XED_IFORMFL_MPSADBW_LAST: xed_iformfl_enum_t = 1700;
pub const XED_IFORMFL_MUL_FIRST: xed_iformfl_enum_t = 1701;
pub const XED_IFORMFL_MUL_LAST: xed_iformfl_enum_t = 1708;
pub const XED_IFORMFL_MULPD_FIRST: xed_iformfl_enum_t = 1709;
pub const XED_IFORMFL_MULPD_LAST: xed_iformfl_enum_t = 1710;
pub const XED_IFORMFL_MULPS_FIRST: xed_iformfl_enum_t = 1711;
pub const XED_IFORMFL_MULPS_LAST: xed_iformfl_enum_t = 1712;
pub const XED_IFORMFL_MULSD_FIRST: xed_iformfl_enum_t = 1713;
pub const XED_IFORMFL_MULSD_LAST: xed_iformfl_enum_t = 1714;
pub const XED_IFORMFL_MULSS_FIRST: xed_iformfl_enum_t = 1715;
pub const XED_IFORMFL_MULSS_LAST: xed_iformfl_enum_t = 1716;
pub const XED_IFORMFL_MULX_FIRST: xed_iformfl_enum_t = 1717;
pub const XED_IFORMFL_MULX_LAST: xed_iformfl_enum_t = 1724;
pub const XED_IFORMFL_MWAIT_FIRST: xed_iformfl_enum_t = 1725;
pub const XED_IFORMFL_MWAIT_LAST: xed_iformfl_enum_t = 1725;
pub const XED_IFORMFL_MWAITX_FIRST: xed_iformfl_enum_t = 1726;
pub const XED_IFORMFL_MWAITX_LAST: xed_iformfl_enum_t = 1726;
pub const XED_IFORMFL_NEG_FIRST: xed_iformfl_enum_t = 1727;
pub const XED_IFORMFL_NEG_LAST: xed_iformfl_enum_t = 1738;
pub const XED_IFORMFL_NEG_LOCK_FIRST: xed_iformfl_enum_t = 1739;
pub const XED_IFORMFL_NEG_LOCK_LAST: xed_iformfl_enum_t = 1740;
pub const XED_IFORMFL_NOP_FIRST: xed_iformfl_enum_t = 1741;
pub const XED_IFORMFL_NOP_LAST: xed_iformfl_enum_t = 1766;
pub const XED_IFORMFL_NOT_FIRST: xed_iformfl_enum_t = 1767;
pub const XED_IFORMFL_NOT_LAST: xed_iformfl_enum_t = 1778;
pub const XED_IFORMFL_NOT_LOCK_FIRST: xed_iformfl_enum_t = 1779;
pub const XED_IFORMFL_NOT_LOCK_LAST: xed_iformfl_enum_t = 1780;
pub const XED_IFORMFL_OR_FIRST: xed_iformfl_enum_t = 1781;
pub const XED_IFORMFL_OR_LAST: xed_iformfl_enum_t = 1822;
pub const XED_IFORMFL_ORPD_FIRST: xed_iformfl_enum_t = 1823;
pub const XED_IFORMFL_ORPD_LAST: xed_iformfl_enum_t = 1824;
pub const XED_IFORMFL_ORPS_FIRST: xed_iformfl_enum_t = 1825;
pub const XED_IFORMFL_ORPS_LAST: xed_iformfl_enum_t = 1826;
pub const XED_IFORMFL_OR_LOCK_FIRST: xed_iformfl_enum_t = 1827;
pub const XED_IFORMFL_OR_LOCK_LAST: xed_iformfl_enum_t = 1832;
pub const XED_IFORMFL_OUT_FIRST: xed_iformfl_enum_t = 1833;
pub const XED_IFORMFL_OUT_LAST: xed_iformfl_enum_t = 1836;
pub const XED_IFORMFL_OUTSB_FIRST: xed_iformfl_enum_t = 1837;
pub const XED_IFORMFL_OUTSB_LAST: xed_iformfl_enum_t = 1837;
pub const XED_IFORMFL_OUTSD_FIRST: xed_iformfl_enum_t = 1838;
pub const XED_IFORMFL_OUTSD_LAST: xed_iformfl_enum_t = 1838;
pub const XED_IFORMFL_OUTSW_FIRST: xed_iformfl_enum_t = 1839;
pub const XED_IFORMFL_OUTSW_LAST: xed_iformfl_enum_t = 1839;
pub const XED_IFORMFL_PABSB_FIRST: xed_iformfl_enum_t = 1840;
pub const XED_IFORMFL_PABSB_LAST: xed_iformfl_enum_t = 1843;
pub const XED_IFORMFL_PABSD_FIRST: xed_iformfl_enum_t = 1844;
pub const XED_IFORMFL_PABSD_LAST: xed_iformfl_enum_t = 1847;
pub const XED_IFORMFL_PABSW_FIRST: xed_iformfl_enum_t = 1848;
pub const XED_IFORMFL_PABSW_LAST: xed_iformfl_enum_t = 1851;
pub const XED_IFORMFL_PACKSSDW_FIRST: xed_iformfl_enum_t = 1852;
pub const XED_IFORMFL_PACKSSDW_LAST: xed_iformfl_enum_t = 1855;
pub const XED_IFORMFL_PACKSSWB_FIRST: xed_iformfl_enum_t = 1856;
pub const XED_IFORMFL_PACKSSWB_LAST: xed_iformfl_enum_t = 1859;
pub const XED_IFORMFL_PACKUSDW_FIRST: xed_iformfl_enum_t = 1860;
pub const XED_IFORMFL_PACKUSDW_LAST: xed_iformfl_enum_t = 1861;
pub const XED_IFORMFL_PACKUSWB_FIRST: xed_iformfl_enum_t = 1862;
pub const XED_IFORMFL_PACKUSWB_LAST: xed_iformfl_enum_t = 1865;
pub const XED_IFORMFL_PADDB_FIRST: xed_iformfl_enum_t = 1866;
pub const XED_IFORMFL_PADDB_LAST: xed_iformfl_enum_t = 1869;
pub const XED_IFORMFL_PADDD_FIRST: xed_iformfl_enum_t = 1870;
pub const XED_IFORMFL_PADDD_LAST: xed_iformfl_enum_t = 1873;
pub const XED_IFORMFL_PADDQ_FIRST: xed_iformfl_enum_t = 1874;
pub const XED_IFORMFL_PADDQ_LAST: xed_iformfl_enum_t = 1877;
pub const XED_IFORMFL_PADDSB_FIRST: xed_iformfl_enum_t = 1878;
pub const XED_IFORMFL_PADDSB_LAST: xed_iformfl_enum_t = 1881;
pub const XED_IFORMFL_PADDSW_FIRST: xed_iformfl_enum_t = 1882;
pub const XED_IFORMFL_PADDSW_LAST: xed_iformfl_enum_t = 1885;
pub const XED_IFORMFL_PADDUSB_FIRST: xed_iformfl_enum_t = 1886;
pub const XED_IFORMFL_PADDUSB_LAST: xed_iformfl_enum_t = 1889;
pub const XED_IFORMFL_PADDUSW_FIRST: xed_iformfl_enum_t = 1890;
pub const XED_IFORMFL_PADDUSW_LAST: xed_iformfl_enum_t = 1893;
pub const XED_IFORMFL_PADDW_FIRST: xed_iformfl_enum_t = 1894;
pub const XED_IFORMFL_PADDW_LAST: xed_iformfl_enum_t = 1897;
pub const XED_IFORMFL_PALIGNR_FIRST: xed_iformfl_enum_t = 1898;
pub const XED_IFORMFL_PALIGNR_LAST: xed_iformfl_enum_t = 1901;
pub const XED_IFORMFL_PAND_FIRST: xed_iformfl_enum_t = 1902;
pub const XED_IFORMFL_PAND_LAST: xed_iformfl_enum_t = 1905;
pub const XED_IFORMFL_PANDN_FIRST: xed_iformfl_enum_t = 1906;
pub const XED_IFORMFL_PANDN_LAST: xed_iformfl_enum_t = 1909;
pub const XED_IFORMFL_PAUSE_FIRST: xed_iformfl_enum_t = 1910;
pub const XED_IFORMFL_PAUSE_LAST: xed_iformfl_enum_t = 1910;
pub const XED_IFORMFL_PAVGB_FIRST: xed_iformfl_enum_t = 1911;
pub const XED_IFORMFL_PAVGB_LAST: xed_iformfl_enum_t = 1914;
pub const XED_IFORMFL_PAVGUSB_FIRST: xed_iformfl_enum_t = 1915;
pub const XED_IFORMFL_PAVGUSB_LAST: xed_iformfl_enum_t = 1916;
pub const XED_IFORMFL_PAVGW_FIRST: xed_iformfl_enum_t = 1917;
pub const XED_IFORMFL_PAVGW_LAST: xed_iformfl_enum_t = 1920;
pub const XED_IFORMFL_PBLENDVB_FIRST: xed_iformfl_enum_t = 1921;
pub const XED_IFORMFL_PBLENDVB_LAST: xed_iformfl_enum_t = 1922;
pub const XED_IFORMFL_PBLENDW_FIRST: xed_iformfl_enum_t = 1923;
pub const XED_IFORMFL_PBLENDW_LAST: xed_iformfl_enum_t = 1924;
pub const XED_IFORMFL_PBNDKB_FIRST: xed_iformfl_enum_t = 1925;
pub const XED_IFORMFL_PBNDKB_LAST: xed_iformfl_enum_t = 1925;
pub const XED_IFORMFL_PCLMULQDQ_FIRST: xed_iformfl_enum_t = 1926;
pub const XED_IFORMFL_PCLMULQDQ_LAST: xed_iformfl_enum_t = 1927;
pub const XED_IFORMFL_PCMPEQB_FIRST: xed_iformfl_enum_t = 1928;
pub const XED_IFORMFL_PCMPEQB_LAST: xed_iformfl_enum_t = 1931;
pub const XED_IFORMFL_PCMPEQD_FIRST: xed_iformfl_enum_t = 1932;
pub const XED_IFORMFL_PCMPEQD_LAST: xed_iformfl_enum_t = 1935;
pub const XED_IFORMFL_PCMPEQQ_FIRST: xed_iformfl_enum_t = 1936;
pub const XED_IFORMFL_PCMPEQQ_LAST: xed_iformfl_enum_t = 1937;
pub const XED_IFORMFL_PCMPEQW_FIRST: xed_iformfl_enum_t = 1938;
pub const XED_IFORMFL_PCMPEQW_LAST: xed_iformfl_enum_t = 1941;
pub const XED_IFORMFL_PCMPESTRI_FIRST: xed_iformfl_enum_t = 1942;
pub const XED_IFORMFL_PCMPESTRI_LAST: xed_iformfl_enum_t = 1943;
pub const XED_IFORMFL_PCMPESTRI64_FIRST: xed_iformfl_enum_t = 1944;
pub const XED_IFORMFL_PCMPESTRI64_LAST: xed_iformfl_enum_t = 1945;
pub const XED_IFORMFL_PCMPESTRM_FIRST: xed_iformfl_enum_t = 1946;
pub const XED_IFORMFL_PCMPESTRM_LAST: xed_iformfl_enum_t = 1947;
pub const XED_IFORMFL_PCMPESTRM64_FIRST: xed_iformfl_enum_t = 1948;
pub const XED_IFORMFL_PCMPESTRM64_LAST: xed_iformfl_enum_t = 1949;
pub const XED_IFORMFL_PCMPGTB_FIRST: xed_iformfl_enum_t = 1950;
pub const XED_IFORMFL_PCMPGTB_LAST: xed_iformfl_enum_t = 1953;
pub const XED_IFORMFL_PCMPGTD_FIRST: xed_iformfl_enum_t = 1954;
pub const XED_IFORMFL_PCMPGTD_LAST: xed_iformfl_enum_t = 1957;
pub const XED_IFORMFL_PCMPGTQ_FIRST: xed_iformfl_enum_t = 1958;
pub const XED_IFORMFL_PCMPGTQ_LAST: xed_iformfl_enum_t = 1959;
pub const XED_IFORMFL_PCMPGTW_FIRST: xed_iformfl_enum_t = 1960;
pub const XED_IFORMFL_PCMPGTW_LAST: xed_iformfl_enum_t = 1963;
pub const XED_IFORMFL_PCMPISTRI_FIRST: xed_iformfl_enum_t = 1964;
pub const XED_IFORMFL_PCMPISTRI_LAST: xed_iformfl_enum_t = 1965;
pub const XED_IFORMFL_PCMPISTRI64_FIRST: xed_iformfl_enum_t = 1966;
pub const XED_IFORMFL_PCMPISTRI64_LAST: xed_iformfl_enum_t = 1967;
pub const XED_IFORMFL_PCMPISTRM_FIRST: xed_iformfl_enum_t = 1968;
pub const XED_IFORMFL_PCMPISTRM_LAST: xed_iformfl_enum_t = 1969;
pub const XED_IFORMFL_PCONFIG_FIRST: xed_iformfl_enum_t = 1970;
pub const XED_IFORMFL_PCONFIG_LAST: xed_iformfl_enum_t = 1971;
pub const XED_IFORMFL_PDEP_FIRST: xed_iformfl_enum_t = 1972;
pub const XED_IFORMFL_PDEP_LAST: xed_iformfl_enum_t = 1979;
pub const XED_IFORMFL_PEXT_FIRST: xed_iformfl_enum_t = 1980;
pub const XED_IFORMFL_PEXT_LAST: xed_iformfl_enum_t = 1987;
pub const XED_IFORMFL_PEXTRB_FIRST: xed_iformfl_enum_t = 1988;
pub const XED_IFORMFL_PEXTRB_LAST: xed_iformfl_enum_t = 1989;
pub const XED_IFORMFL_PEXTRD_FIRST: xed_iformfl_enum_t = 1990;
pub const XED_IFORMFL_PEXTRD_LAST: xed_iformfl_enum_t = 1991;
pub const XED_IFORMFL_PEXTRQ_FIRST: xed_iformfl_enum_t = 1992;
pub const XED_IFORMFL_PEXTRQ_LAST: xed_iformfl_enum_t = 1993;
pub const XED_IFORMFL_PEXTRW_FIRST: xed_iformfl_enum_t = 1994;
pub const XED_IFORMFL_PEXTRW_LAST: xed_iformfl_enum_t = 1995;
pub const XED_IFORMFL_PEXTRW_SSE4_FIRST: xed_iformfl_enum_t = 1996;
pub const XED_IFORMFL_PEXTRW_SSE4_LAST: xed_iformfl_enum_t = 1997;
pub const XED_IFORMFL_PF2ID_FIRST: xed_iformfl_enum_t = 1998;
pub const XED_IFORMFL_PF2ID_LAST: xed_iformfl_enum_t = 1999;
pub const XED_IFORMFL_PF2IW_FIRST: xed_iformfl_enum_t = 2000;
pub const XED_IFORMFL_PF2IW_LAST: xed_iformfl_enum_t = 2001;
pub const XED_IFORMFL_PFACC_FIRST: xed_iformfl_enum_t = 2002;
pub const XED_IFORMFL_PFACC_LAST: xed_iformfl_enum_t = 2003;
pub const XED_IFORMFL_PFADD_FIRST: xed_iformfl_enum_t = 2004;
pub const XED_IFORMFL_PFADD_LAST: xed_iformfl_enum_t = 2005;
pub const XED_IFORMFL_PFCMPEQ_FIRST: xed_iformfl_enum_t = 2006;
pub const XED_IFORMFL_PFCMPEQ_LAST: xed_iformfl_enum_t = 2007;
pub const XED_IFORMFL_PFCMPGE_FIRST: xed_iformfl_enum_t = 2008;
pub const XED_IFORMFL_PFCMPGE_LAST: xed_iformfl_enum_t = 2009;
pub const XED_IFORMFL_PFCMPGT_FIRST: xed_iformfl_enum_t = 2010;
pub const XED_IFORMFL_PFCMPGT_LAST: xed_iformfl_enum_t = 2011;
pub const XED_IFORMFL_PFMAX_FIRST: xed_iformfl_enum_t = 2012;
pub const XED_IFORMFL_PFMAX_LAST: xed_iformfl_enum_t = 2013;
pub const XED_IFORMFL_PFMIN_FIRST: xed_iformfl_enum_t = 2014;
pub const XED_IFORMFL_PFMIN_LAST: xed_iformfl_enum_t = 2015;
pub const XED_IFORMFL_PFMUL_FIRST: xed_iformfl_enum_t = 2016;
pub const XED_IFORMFL_PFMUL_LAST: xed_iformfl_enum_t = 2017;
pub const XED_IFORMFL_PFNACC_FIRST: xed_iformfl_enum_t = 2018;
pub const XED_IFORMFL_PFNACC_LAST: xed_iformfl_enum_t = 2019;
pub const XED_IFORMFL_PFPNACC_FIRST: xed_iformfl_enum_t = 2020;
pub const XED_IFORMFL_PFPNACC_LAST: xed_iformfl_enum_t = 2021;
pub const XED_IFORMFL_PFRCP_FIRST: xed_iformfl_enum_t = 2022;
pub const XED_IFORMFL_PFRCP_LAST: xed_iformfl_enum_t = 2023;
pub const XED_IFORMFL_PFRCPIT1_FIRST: xed_iformfl_enum_t = 2024;
pub const XED_IFORMFL_PFRCPIT1_LAST: xed_iformfl_enum_t = 2025;
pub const XED_IFORMFL_PFRCPIT2_FIRST: xed_iformfl_enum_t = 2026;
pub const XED_IFORMFL_PFRCPIT2_LAST: xed_iformfl_enum_t = 2027;
pub const XED_IFORMFL_PFRSQIT1_FIRST: xed_iformfl_enum_t = 2028;
pub const XED_IFORMFL_PFRSQIT1_LAST: xed_iformfl_enum_t = 2029;
pub const XED_IFORMFL_PFRSQRT_FIRST: xed_iformfl_enum_t = 2030;
pub const XED_IFORMFL_PFRSQRT_LAST: xed_iformfl_enum_t = 2031;
pub const XED_IFORMFL_PFSUB_FIRST: xed_iformfl_enum_t = 2032;
pub const XED_IFORMFL_PFSUB_LAST: xed_iformfl_enum_t = 2033;
pub const XED_IFORMFL_PFSUBR_FIRST: xed_iformfl_enum_t = 2034;
pub const XED_IFORMFL_PFSUBR_LAST: xed_iformfl_enum_t = 2035;
pub const XED_IFORMFL_PHADDD_FIRST: xed_iformfl_enum_t = 2036;
pub const XED_IFORMFL_PHADDD_LAST: xed_iformfl_enum_t = 2039;
pub const XED_IFORMFL_PHADDSW_FIRST: xed_iformfl_enum_t = 2040;
pub const XED_IFORMFL_PHADDSW_LAST: xed_iformfl_enum_t = 2043;
pub const XED_IFORMFL_PHADDW_FIRST: xed_iformfl_enum_t = 2044;
pub const XED_IFORMFL_PHADDW_LAST: xed_iformfl_enum_t = 2047;
pub const XED_IFORMFL_PHMINPOSUW_FIRST: xed_iformfl_enum_t = 2048;
pub const XED_IFORMFL_PHMINPOSUW_LAST: xed_iformfl_enum_t = 2049;
pub const XED_IFORMFL_PHSUBD_FIRST: xed_iformfl_enum_t = 2050;
pub const XED_IFORMFL_PHSUBD_LAST: xed_iformfl_enum_t = 2053;
pub const XED_IFORMFL_PHSUBSW_FIRST: xed_iformfl_enum_t = 2054;
pub const XED_IFORMFL_PHSUBSW_LAST: xed_iformfl_enum_t = 2057;
pub const XED_IFORMFL_PHSUBW_FIRST: xed_iformfl_enum_t = 2058;
pub const XED_IFORMFL_PHSUBW_LAST: xed_iformfl_enum_t = 2061;
pub const XED_IFORMFL_PI2FD_FIRST: xed_iformfl_enum_t = 2062;
pub const XED_IFORMFL_PI2FD_LAST: xed_iformfl_enum_t = 2063;
pub const XED_IFORMFL_PI2FW_FIRST: xed_iformfl_enum_t = 2064;
pub const XED_IFORMFL_PI2FW_LAST: xed_iformfl_enum_t = 2065;
pub const XED_IFORMFL_PINSRB_FIRST: xed_iformfl_enum_t = 2066;
pub const XED_IFORMFL_PINSRB_LAST: xed_iformfl_enum_t = 2067;
pub const XED_IFORMFL_PINSRD_FIRST: xed_iformfl_enum_t = 2068;
pub const XED_IFORMFL_PINSRD_LAST: xed_iformfl_enum_t = 2069;
pub const XED_IFORMFL_PINSRQ_FIRST: xed_iformfl_enum_t = 2070;
pub const XED_IFORMFL_PINSRQ_LAST: xed_iformfl_enum_t = 2071;
pub const XED_IFORMFL_PINSRW_FIRST: xed_iformfl_enum_t = 2072;
pub const XED_IFORMFL_PINSRW_LAST: xed_iformfl_enum_t = 2075;
pub const XED_IFORMFL_PMADDUBSW_FIRST: xed_iformfl_enum_t = 2076;
pub const XED_IFORMFL_PMADDUBSW_LAST: xed_iformfl_enum_t = 2079;
pub const XED_IFORMFL_PMADDWD_FIRST: xed_iformfl_enum_t = 2080;
pub const XED_IFORMFL_PMADDWD_LAST: xed_iformfl_enum_t = 2083;
pub const XED_IFORMFL_PMAXSB_FIRST: xed_iformfl_enum_t = 2084;
pub const XED_IFORMFL_PMAXSB_LAST: xed_iformfl_enum_t = 2085;
pub const XED_IFORMFL_PMAXSD_FIRST: xed_iformfl_enum_t = 2086;
pub const XED_IFORMFL_PMAXSD_LAST: xed_iformfl_enum_t = 2087;
pub const XED_IFORMFL_PMAXSW_FIRST: xed_iformfl_enum_t = 2088;
pub const XED_IFORMFL_PMAXSW_LAST: xed_iformfl_enum_t = 2091;
pub const XED_IFORMFL_PMAXUB_FIRST: xed_iformfl_enum_t = 2092;
pub const XED_IFORMFL_PMAXUB_LAST: xed_iformfl_enum_t = 2095;
pub const XED_IFORMFL_PMAXUD_FIRST: xed_iformfl_enum_t = 2096;
pub const XED_IFORMFL_PMAXUD_LAST: xed_iformfl_enum_t = 2097;
pub const XED_IFORMFL_PMAXUW_FIRST: xed_iformfl_enum_t = 2098;
pub const XED_IFORMFL_PMAXUW_LAST: xed_iformfl_enum_t = 2099;
pub const XED_IFORMFL_PMINSB_FIRST: xed_iformfl_enum_t = 2100;
pub const XED_IFORMFL_PMINSB_LAST: xed_iformfl_enum_t = 2101;
pub const XED_IFORMFL_PMINSD_FIRST: xed_iformfl_enum_t = 2102;
pub const XED_IFORMFL_PMINSD_LAST: xed_iformfl_enum_t = 2103;
pub const XED_IFORMFL_PMINSW_FIRST: xed_iformfl_enum_t = 2104;
pub const XED_IFORMFL_PMINSW_LAST: xed_iformfl_enum_t = 2107;
pub const XED_IFORMFL_PMINUB_FIRST: xed_iformfl_enum_t = 2108;
pub const XED_IFORMFL_PMINUB_LAST: xed_iformfl_enum_t = 2111;
pub const XED_IFORMFL_PMINUD_FIRST: xed_iformfl_enum_t = 2112;
pub const XED_IFORMFL_PMINUD_LAST: xed_iformfl_enum_t = 2113;
pub const XED_IFORMFL_PMINUW_FIRST: xed_iformfl_enum_t = 2114;
pub const XED_IFORMFL_PMINUW_LAST: xed_iformfl_enum_t = 2115;
pub const XED_IFORMFL_PMOVMSKB_FIRST: xed_iformfl_enum_t = 2116;
pub const XED_IFORMFL_PMOVMSKB_LAST: xed_iformfl_enum_t = 2117;
pub const XED_IFORMFL_PMOVSXBD_FIRST: xed_iformfl_enum_t = 2118;
pub const XED_IFORMFL_PMOVSXBD_LAST: xed_iformfl_enum_t = 2119;
pub const XED_IFORMFL_PMOVSXBQ_FIRST: xed_iformfl_enum_t = 2120;
pub const XED_IFORMFL_PMOVSXBQ_LAST: xed_iformfl_enum_t = 2121;
pub const XED_IFORMFL_PMOVSXBW_FIRST: xed_iformfl_enum_t = 2122;
pub const XED_IFORMFL_PMOVSXBW_LAST: xed_iformfl_enum_t = 2123;
pub const XED_IFORMFL_PMOVSXDQ_FIRST: xed_iformfl_enum_t = 2124;
pub const XED_IFORMFL_PMOVSXDQ_LAST: xed_iformfl_enum_t = 2125;
pub const XED_IFORMFL_PMOVSXWD_FIRST: xed_iformfl_enum_t = 2126;
pub const XED_IFORMFL_PMOVSXWD_LAST: xed_iformfl_enum_t = 2127;
pub const XED_IFORMFL_PMOVSXWQ_FIRST: xed_iformfl_enum_t = 2128;
pub const XED_IFORMFL_PMOVSXWQ_LAST: xed_iformfl_enum_t = 2129;
pub const XED_IFORMFL_PMOVZXBD_FIRST: xed_iformfl_enum_t = 2130;
pub const XED_IFORMFL_PMOVZXBD_LAST: xed_iformfl_enum_t = 2131;
pub const XED_IFORMFL_PMOVZXBQ_FIRST: xed_iformfl_enum_t = 2132;
pub const XED_IFORMFL_PMOVZXBQ_LAST: xed_iformfl_enum_t = 2133;
pub const XED_IFORMFL_PMOVZXBW_FIRST: xed_iformfl_enum_t = 2134;
pub const XED_IFORMFL_PMOVZXBW_LAST: xed_iformfl_enum_t = 2135;
pub const XED_IFORMFL_PMOVZXDQ_FIRST: xed_iformfl_enum_t = 2136;
pub const XED_IFORMFL_PMOVZXDQ_LAST: xed_iformfl_enum_t = 2137;
pub const XED_IFORMFL_PMOVZXWD_FIRST: xed_iformfl_enum_t = 2138;
pub const XED_IFORMFL_PMOVZXWD_LAST: xed_iformfl_enum_t = 2139;
pub const XED_IFORMFL_PMOVZXWQ_FIRST: xed_iformfl_enum_t = 2140;
pub const XED_IFORMFL_PMOVZXWQ_LAST: xed_iformfl_enum_t = 2141;
pub const XED_IFORMFL_PMULDQ_FIRST: xed_iformfl_enum_t = 2142;
pub const XED_IFORMFL_PMULDQ_LAST: xed_iformfl_enum_t = 2143;
pub const XED_IFORMFL_PMULHRSW_FIRST: xed_iformfl_enum_t = 2144;
pub const XED_IFORMFL_PMULHRSW_LAST: xed_iformfl_enum_t = 2147;
pub const XED_IFORMFL_PMULHRW_FIRST: xed_iformfl_enum_t = 2148;
pub const XED_IFORMFL_PMULHRW_LAST: xed_iformfl_enum_t = 2149;
pub const XED_IFORMFL_PMULHUW_FIRST: xed_iformfl_enum_t = 2150;
pub const XED_IFORMFL_PMULHUW_LAST: xed_iformfl_enum_t = 2153;
pub const XED_IFORMFL_PMULHW_FIRST: xed_iformfl_enum_t = 2154;
pub const XED_IFORMFL_PMULHW_LAST: xed_iformfl_enum_t = 2157;
pub const XED_IFORMFL_PMULLD_FIRST: xed_iformfl_enum_t = 2158;
pub const XED_IFORMFL_PMULLD_LAST: xed_iformfl_enum_t = 2159;
pub const XED_IFORMFL_PMULLW_FIRST: xed_iformfl_enum_t = 2160;
pub const XED_IFORMFL_PMULLW_LAST: xed_iformfl_enum_t = 2163;
pub const XED_IFORMFL_PMULUDQ_FIRST: xed_iformfl_enum_t = 2164;
pub const XED_IFORMFL_PMULUDQ_LAST: xed_iformfl_enum_t = 2167;
pub const XED_IFORMFL_POP_FIRST: xed_iformfl_enum_t = 2168;
pub const XED_IFORMFL_POP_LAST: xed_iformfl_enum_t = 2175;
pub const XED_IFORMFL_POP2_FIRST: xed_iformfl_enum_t = 2176;
pub const XED_IFORMFL_POP2_LAST: xed_iformfl_enum_t = 2176;
pub const XED_IFORMFL_POP2P_FIRST: xed_iformfl_enum_t = 2177;
pub const XED_IFORMFL_POP2P_LAST: xed_iformfl_enum_t = 2177;
pub const XED_IFORMFL_POPA_FIRST: xed_iformfl_enum_t = 2178;
pub const XED_IFORMFL_POPA_LAST: xed_iformfl_enum_t = 2178;
pub const XED_IFORMFL_POPAD_FIRST: xed_iformfl_enum_t = 2179;
pub const XED_IFORMFL_POPAD_LAST: xed_iformfl_enum_t = 2179;
pub const XED_IFORMFL_POPCNT_FIRST: xed_iformfl_enum_t = 2180;
pub const XED_IFORMFL_POPCNT_LAST: xed_iformfl_enum_t = 2183;
pub const XED_IFORMFL_POPF_FIRST: xed_iformfl_enum_t = 2184;
pub const XED_IFORMFL_POPF_LAST: xed_iformfl_enum_t = 2184;
pub const XED_IFORMFL_POPFD_FIRST: xed_iformfl_enum_t = 2185;
pub const XED_IFORMFL_POPFD_LAST: xed_iformfl_enum_t = 2185;
pub const XED_IFORMFL_POPFQ_FIRST: xed_iformfl_enum_t = 2186;
pub const XED_IFORMFL_POPFQ_LAST: xed_iformfl_enum_t = 2186;
pub const XED_IFORMFL_POPP_FIRST: xed_iformfl_enum_t = 2187;
pub const XED_IFORMFL_POPP_LAST: xed_iformfl_enum_t = 2187;
pub const XED_IFORMFL_POR_FIRST: xed_iformfl_enum_t = 2188;
pub const XED_IFORMFL_POR_LAST: xed_iformfl_enum_t = 2191;
pub const XED_IFORMFL_PREFETCHIT0_FIRST: xed_iformfl_enum_t = 2192;
pub const XED_IFORMFL_PREFETCHIT0_LAST: xed_iformfl_enum_t = 2192;
pub const XED_IFORMFL_PREFETCHIT1_FIRST: xed_iformfl_enum_t = 2193;
pub const XED_IFORMFL_PREFETCHIT1_LAST: xed_iformfl_enum_t = 2193;
pub const XED_IFORMFL_PREFETCHNTA_FIRST: xed_iformfl_enum_t = 2194;
pub const XED_IFORMFL_PREFETCHNTA_LAST: xed_iformfl_enum_t = 2194;
pub const XED_IFORMFL_PREFETCHT0_FIRST: xed_iformfl_enum_t = 2195;
pub const XED_IFORMFL_PREFETCHT0_LAST: xed_iformfl_enum_t = 2195;
pub const XED_IFORMFL_PREFETCHT1_FIRST: xed_iformfl_enum_t = 2196;
pub const XED_IFORMFL_PREFETCHT1_LAST: xed_iformfl_enum_t = 2196;
pub const XED_IFORMFL_PREFETCHT2_FIRST: xed_iformfl_enum_t = 2197;
pub const XED_IFORMFL_PREFETCHT2_LAST: xed_iformfl_enum_t = 2197;
pub const XED_IFORMFL_PREFETCHW_FIRST: xed_iformfl_enum_t = 2198;
pub const XED_IFORMFL_PREFETCHW_LAST: xed_iformfl_enum_t = 2199;
pub const XED_IFORMFL_PREFETCHWT1_FIRST: xed_iformfl_enum_t = 2200;
pub const XED_IFORMFL_PREFETCHWT1_LAST: xed_iformfl_enum_t = 2200;
pub const XED_IFORMFL_PREFETCH_EXCLUSIVE_FIRST: xed_iformfl_enum_t = 2201;
pub const XED_IFORMFL_PREFETCH_EXCLUSIVE_LAST: xed_iformfl_enum_t = 2201;
pub const XED_IFORMFL_PREFETCH_RESERVED_FIRST: xed_iformfl_enum_t = 2202;
pub const XED_IFORMFL_PREFETCH_RESERVED_LAST: xed_iformfl_enum_t = 2205;
pub const XED_IFORMFL_PSADBW_FIRST: xed_iformfl_enum_t = 2206;
pub const XED_IFORMFL_PSADBW_LAST: xed_iformfl_enum_t = 2209;
pub const XED_IFORMFL_PSHUFB_FIRST: xed_iformfl_enum_t = 2210;
pub const XED_IFORMFL_PSHUFB_LAST: xed_iformfl_enum_t = 2213;
pub const XED_IFORMFL_PSHUFD_FIRST: xed_iformfl_enum_t = 2214;
pub const XED_IFORMFL_PSHUFD_LAST: xed_iformfl_enum_t = 2215;
pub const XED_IFORMFL_PSHUFHW_FIRST: xed_iformfl_enum_t = 2216;
pub const XED_IFORMFL_PSHUFHW_LAST: xed_iformfl_enum_t = 2217;
pub const XED_IFORMFL_PSHUFLW_FIRST: xed_iformfl_enum_t = 2218;
pub const XED_IFORMFL_PSHUFLW_LAST: xed_iformfl_enum_t = 2219;
pub const XED_IFORMFL_PSHUFW_FIRST: xed_iformfl_enum_t = 2220;
pub const XED_IFORMFL_PSHUFW_LAST: xed_iformfl_enum_t = 2221;
pub const XED_IFORMFL_PSIGNB_FIRST: xed_iformfl_enum_t = 2222;
pub const XED_IFORMFL_PSIGNB_LAST: xed_iformfl_enum_t = 2225;
pub const XED_IFORMFL_PSIGND_FIRST: xed_iformfl_enum_t = 2226;
pub const XED_IFORMFL_PSIGND_LAST: xed_iformfl_enum_t = 2229;
pub const XED_IFORMFL_PSIGNW_FIRST: xed_iformfl_enum_t = 2230;
pub const XED_IFORMFL_PSIGNW_LAST: xed_iformfl_enum_t = 2233;
pub const XED_IFORMFL_PSLLD_FIRST: xed_iformfl_enum_t = 2234;
pub const XED_IFORMFL_PSLLD_LAST: xed_iformfl_enum_t = 2239;
pub const XED_IFORMFL_PSLLDQ_FIRST: xed_iformfl_enum_t = 2240;
pub const XED_IFORMFL_PSLLDQ_LAST: xed_iformfl_enum_t = 2240;
pub const XED_IFORMFL_PSLLQ_FIRST: xed_iformfl_enum_t = 2241;
pub const XED_IFORMFL_PSLLQ_LAST: xed_iformfl_enum_t = 2246;
pub const XED_IFORMFL_PSLLW_FIRST: xed_iformfl_enum_t = 2247;
pub const XED_IFORMFL_PSLLW_LAST: xed_iformfl_enum_t = 2252;
pub const XED_IFORMFL_PSMASH_FIRST: xed_iformfl_enum_t = 2253;
pub const XED_IFORMFL_PSMASH_LAST: xed_iformfl_enum_t = 2253;
pub const XED_IFORMFL_PSRAD_FIRST: xed_iformfl_enum_t = 2254;
pub const XED_IFORMFL_PSRAD_LAST: xed_iformfl_enum_t = 2259;
pub const XED_IFORMFL_PSRAW_FIRST: xed_iformfl_enum_t = 2260;
pub const XED_IFORMFL_PSRAW_LAST: xed_iformfl_enum_t = 2265;
pub const XED_IFORMFL_PSRLD_FIRST: xed_iformfl_enum_t = 2266;
pub const XED_IFORMFL_PSRLD_LAST: xed_iformfl_enum_t = 2271;
pub const XED_IFORMFL_PSRLDQ_FIRST: xed_iformfl_enum_t = 2272;
pub const XED_IFORMFL_PSRLDQ_LAST: xed_iformfl_enum_t = 2272;
pub const XED_IFORMFL_PSRLQ_FIRST: xed_iformfl_enum_t = 2273;
pub const XED_IFORMFL_PSRLQ_LAST: xed_iformfl_enum_t = 2278;
pub const XED_IFORMFL_PSRLW_FIRST: xed_iformfl_enum_t = 2279;
pub const XED_IFORMFL_PSRLW_LAST: xed_iformfl_enum_t = 2284;
pub const XED_IFORMFL_PSUBB_FIRST: xed_iformfl_enum_t = 2285;
pub const XED_IFORMFL_PSUBB_LAST: xed_iformfl_enum_t = 2288;
pub const XED_IFORMFL_PSUBD_FIRST: xed_iformfl_enum_t = 2289;
pub const XED_IFORMFL_PSUBD_LAST: xed_iformfl_enum_t = 2292;
pub const XED_IFORMFL_PSUBQ_FIRST: xed_iformfl_enum_t = 2293;
pub const XED_IFORMFL_PSUBQ_LAST: xed_iformfl_enum_t = 2296;
pub const XED_IFORMFL_PSUBSB_FIRST: xed_iformfl_enum_t = 2297;
pub const XED_IFORMFL_PSUBSB_LAST: xed_iformfl_enum_t = 2300;
pub const XED_IFORMFL_PSUBSW_FIRST: xed_iformfl_enum_t = 2301;
pub const XED_IFORMFL_PSUBSW_LAST: xed_iformfl_enum_t = 2304;
pub const XED_IFORMFL_PSUBUSB_FIRST: xed_iformfl_enum_t = 2305;
pub const XED_IFORMFL_PSUBUSB_LAST: xed_iformfl_enum_t = 2308;
pub const XED_IFORMFL_PSUBUSW_FIRST: xed_iformfl_enum_t = 2309;
pub const XED_IFORMFL_PSUBUSW_LAST: xed_iformfl_enum_t = 2312;
pub const XED_IFORMFL_PSUBW_FIRST: xed_iformfl_enum_t = 2313;
pub const XED_IFORMFL_PSUBW_LAST: xed_iformfl_enum_t = 2316;
pub const XED_IFORMFL_PSWAPD_FIRST: xed_iformfl_enum_t = 2317;
pub const XED_IFORMFL_PSWAPD_LAST: xed_iformfl_enum_t = 2318;
pub const XED_IFORMFL_PTEST_FIRST: xed_iformfl_enum_t = 2319;
pub const XED_IFORMFL_PTEST_LAST: xed_iformfl_enum_t = 2320;
pub const XED_IFORMFL_PTWRITE_FIRST: xed_iformfl_enum_t = 2321;
pub const XED_IFORMFL_PTWRITE_LAST: xed_iformfl_enum_t = 2322;
pub const XED_IFORMFL_PUNPCKHBW_FIRST: xed_iformfl_enum_t = 2323;
pub const XED_IFORMFL_PUNPCKHBW_LAST: xed_iformfl_enum_t = 2326;
pub const XED_IFORMFL_PUNPCKHDQ_FIRST: xed_iformfl_enum_t = 2327;
pub const XED_IFORMFL_PUNPCKHDQ_LAST: xed_iformfl_enum_t = 2330;
pub const XED_IFORMFL_PUNPCKHQDQ_FIRST: xed_iformfl_enum_t = 2331;
pub const XED_IFORMFL_PUNPCKHQDQ_LAST: xed_iformfl_enum_t = 2332;
pub const XED_IFORMFL_PUNPCKHWD_FIRST: xed_iformfl_enum_t = 2333;
pub const XED_IFORMFL_PUNPCKHWD_LAST: xed_iformfl_enum_t = 2336;
pub const XED_IFORMFL_PUNPCKLBW_FIRST: xed_iformfl_enum_t = 2337;
pub const XED_IFORMFL_PUNPCKLBW_LAST: xed_iformfl_enum_t = 2340;
pub const XED_IFORMFL_PUNPCKLDQ_FIRST: xed_iformfl_enum_t = 2341;
pub const XED_IFORMFL_PUNPCKLDQ_LAST: xed_iformfl_enum_t = 2344;
pub const XED_IFORMFL_PUNPCKLQDQ_FIRST: xed_iformfl_enum_t = 2345;
pub const XED_IFORMFL_PUNPCKLQDQ_LAST: xed_iformfl_enum_t = 2346;
pub const XED_IFORMFL_PUNPCKLWD_FIRST: xed_iformfl_enum_t = 2347;
pub const XED_IFORMFL_PUNPCKLWD_LAST: xed_iformfl_enum_t = 2350;
pub const XED_IFORMFL_PUSH_FIRST: xed_iformfl_enum_t = 2351;
pub const XED_IFORMFL_PUSH_LAST: xed_iformfl_enum_t = 2361;
pub const XED_IFORMFL_PUSH2_FIRST: xed_iformfl_enum_t = 2362;
pub const XED_IFORMFL_PUSH2_LAST: xed_iformfl_enum_t = 2362;
pub const XED_IFORMFL_PUSH2P_FIRST: xed_iformfl_enum_t = 2363;
pub const XED_IFORMFL_PUSH2P_LAST: xed_iformfl_enum_t = 2363;
pub const XED_IFORMFL_PUSHA_FIRST: xed_iformfl_enum_t = 2364;
pub const XED_IFORMFL_PUSHA_LAST: xed_iformfl_enum_t = 2364;
pub const XED_IFORMFL_PUSHAD_FIRST: xed_iformfl_enum_t = 2365;
pub const XED_IFORMFL_PUSHAD_LAST: xed_iformfl_enum_t = 2365;
pub const XED_IFORMFL_PUSHF_FIRST: xed_iformfl_enum_t = 2366;
pub const XED_IFORMFL_PUSHF_LAST: xed_iformfl_enum_t = 2366;
pub const XED_IFORMFL_PUSHFD_FIRST: xed_iformfl_enum_t = 2367;
pub const XED_IFORMFL_PUSHFD_LAST: xed_iformfl_enum_t = 2367;
pub const XED_IFORMFL_PUSHFQ_FIRST: xed_iformfl_enum_t = 2368;
pub const XED_IFORMFL_PUSHFQ_LAST: xed_iformfl_enum_t = 2368;
pub const XED_IFORMFL_PUSHP_FIRST: xed_iformfl_enum_t = 2369;
pub const XED_IFORMFL_PUSHP_LAST: xed_iformfl_enum_t = 2369;
pub const XED_IFORMFL_PVALIDATE_FIRST: xed_iformfl_enum_t = 2370;
pub const XED_IFORMFL_PVALIDATE_LAST: xed_iformfl_enum_t = 2370;
pub const XED_IFORMFL_PXOR_FIRST: xed_iformfl_enum_t = 2371;
pub const XED_IFORMFL_PXOR_LAST: xed_iformfl_enum_t = 2374;
pub const XED_IFORMFL_RCL_FIRST: xed_iformfl_enum_t = 2375;
pub const XED_IFORMFL_RCL_LAST: xed_iformfl_enum_t = 2410;
pub const XED_IFORMFL_RCPPS_FIRST: xed_iformfl_enum_t = 2411;
pub const XED_IFORMFL_RCPPS_LAST: xed_iformfl_enum_t = 2412;
pub const XED_IFORMFL_RCPSS_FIRST: xed_iformfl_enum_t = 2413;
pub const XED_IFORMFL_RCPSS_LAST: xed_iformfl_enum_t = 2414;
pub const XED_IFORMFL_RCR_FIRST: xed_iformfl_enum_t = 2415;
pub const XED_IFORMFL_RCR_LAST: xed_iformfl_enum_t = 2450;
pub const XED_IFORMFL_RDFSBASE_FIRST: xed_iformfl_enum_t = 2451;
pub const XED_IFORMFL_RDFSBASE_LAST: xed_iformfl_enum_t = 2451;
pub const XED_IFORMFL_RDGSBASE_FIRST: xed_iformfl_enum_t = 2452;
pub const XED_IFORMFL_RDGSBASE_LAST: xed_iformfl_enum_t = 2452;
pub const XED_IFORMFL_RDMSR_FIRST: xed_iformfl_enum_t = 2453;
pub const XED_IFORMFL_RDMSR_LAST: xed_iformfl_enum_t = 2453;
pub const XED_IFORMFL_RDMSRLIST_FIRST: xed_iformfl_enum_t = 2454;
pub const XED_IFORMFL_RDMSRLIST_LAST: xed_iformfl_enum_t = 2454;
pub const XED_IFORMFL_RDPID_FIRST: xed_iformfl_enum_t = 2455;
pub const XED_IFORMFL_RDPID_LAST: xed_iformfl_enum_t = 2456;
pub const XED_IFORMFL_RDPKRU_FIRST: xed_iformfl_enum_t = 2457;
pub const XED_IFORMFL_RDPKRU_LAST: xed_iformfl_enum_t = 2457;
pub const XED_IFORMFL_RDPMC_FIRST: xed_iformfl_enum_t = 2458;
pub const XED_IFORMFL_RDPMC_LAST: xed_iformfl_enum_t = 2458;
pub const XED_IFORMFL_RDPRU_FIRST: xed_iformfl_enum_t = 2459;
pub const XED_IFORMFL_RDPRU_LAST: xed_iformfl_enum_t = 2459;
pub const XED_IFORMFL_RDRAND_FIRST: xed_iformfl_enum_t = 2460;
pub const XED_IFORMFL_RDRAND_LAST: xed_iformfl_enum_t = 2460;
pub const XED_IFORMFL_RDSEED_FIRST: xed_iformfl_enum_t = 2461;
pub const XED_IFORMFL_RDSEED_LAST: xed_iformfl_enum_t = 2461;
pub const XED_IFORMFL_RDSSPD_FIRST: xed_iformfl_enum_t = 2462;
pub const XED_IFORMFL_RDSSPD_LAST: xed_iformfl_enum_t = 2462;
pub const XED_IFORMFL_RDSSPQ_FIRST: xed_iformfl_enum_t = 2463;
pub const XED_IFORMFL_RDSSPQ_LAST: xed_iformfl_enum_t = 2463;
pub const XED_IFORMFL_RDTSC_FIRST: xed_iformfl_enum_t = 2464;
pub const XED_IFORMFL_RDTSC_LAST: xed_iformfl_enum_t = 2464;
pub const XED_IFORMFL_RDTSCP_FIRST: xed_iformfl_enum_t = 2465;
pub const XED_IFORMFL_RDTSCP_LAST: xed_iformfl_enum_t = 2465;
pub const XED_IFORMFL_REPE_CMPSB_FIRST: xed_iformfl_enum_t = 2466;
pub const XED_IFORMFL_REPE_CMPSB_LAST: xed_iformfl_enum_t = 2466;
pub const XED_IFORMFL_REPE_CMPSD_FIRST: xed_iformfl_enum_t = 2467;
pub const XED_IFORMFL_REPE_CMPSD_LAST: xed_iformfl_enum_t = 2467;
pub const XED_IFORMFL_REPE_CMPSQ_FIRST: xed_iformfl_enum_t = 2468;
pub const XED_IFORMFL_REPE_CMPSQ_LAST: xed_iformfl_enum_t = 2468;
pub const XED_IFORMFL_REPE_CMPSW_FIRST: xed_iformfl_enum_t = 2469;
pub const XED_IFORMFL_REPE_CMPSW_LAST: xed_iformfl_enum_t = 2469;
pub const XED_IFORMFL_REPE_SCASB_FIRST: xed_iformfl_enum_t = 2470;
pub const XED_IFORMFL_REPE_SCASB_LAST: xed_iformfl_enum_t = 2470;
pub const XED_IFORMFL_REPE_SCASD_FIRST: xed_iformfl_enum_t = 2471;
pub const XED_IFORMFL_REPE_SCASD_LAST: xed_iformfl_enum_t = 2471;
pub const XED_IFORMFL_REPE_SCASQ_FIRST: xed_iformfl_enum_t = 2472;
pub const XED_IFORMFL_REPE_SCASQ_LAST: xed_iformfl_enum_t = 2472;
pub const XED_IFORMFL_REPE_SCASW_FIRST: xed_iformfl_enum_t = 2473;
pub const XED_IFORMFL_REPE_SCASW_LAST: xed_iformfl_enum_t = 2473;
pub const XED_IFORMFL_REPNE_CMPSB_FIRST: xed_iformfl_enum_t = 2474;
pub const XED_IFORMFL_REPNE_CMPSB_LAST: xed_iformfl_enum_t = 2474;
pub const XED_IFORMFL_REPNE_CMPSD_FIRST: xed_iformfl_enum_t = 2475;
pub const XED_IFORMFL_REPNE_CMPSD_LAST: xed_iformfl_enum_t = 2475;
pub const XED_IFORMFL_REPNE_CMPSQ_FIRST: xed_iformfl_enum_t = 2476;
pub const XED_IFORMFL_REPNE_CMPSQ_LAST: xed_iformfl_enum_t = 2476;
pub const XED_IFORMFL_REPNE_CMPSW_FIRST: xed_iformfl_enum_t = 2477;
pub const XED_IFORMFL_REPNE_CMPSW_LAST: xed_iformfl_enum_t = 2477;
pub const XED_IFORMFL_REPNE_SCASB_FIRST: xed_iformfl_enum_t = 2478;
pub const XED_IFORMFL_REPNE_SCASB_LAST: xed_iformfl_enum_t = 2478;
pub const XED_IFORMFL_REPNE_SCASD_FIRST: xed_iformfl_enum_t = 2479;
pub const XED_IFORMFL_REPNE_SCASD_LAST: xed_iformfl_enum_t = 2479;
pub const XED_IFORMFL_REPNE_SCASQ_FIRST: xed_iformfl_enum_t = 2480;
pub const XED_IFORMFL_REPNE_SCASQ_LAST: xed_iformfl_enum_t = 2480;
pub const XED_IFORMFL_REPNE_SCASW_FIRST: xed_iformfl_enum_t = 2481;
pub const XED_IFORMFL_REPNE_SCASW_LAST: xed_iformfl_enum_t = 2481;
pub const XED_IFORMFL_REP_INSB_FIRST: xed_iformfl_enum_t = 2482;
pub const XED_IFORMFL_REP_INSB_LAST: xed_iformfl_enum_t = 2482;
pub const XED_IFORMFL_REP_INSD_FIRST: xed_iformfl_enum_t = 2483;
pub const XED_IFORMFL_REP_INSD_LAST: xed_iformfl_enum_t = 2483;
pub const XED_IFORMFL_REP_INSW_FIRST: xed_iformfl_enum_t = 2484;
pub const XED_IFORMFL_REP_INSW_LAST: xed_iformfl_enum_t = 2484;
pub const XED_IFORMFL_REP_LODSB_FIRST: xed_iformfl_enum_t = 2485;
pub const XED_IFORMFL_REP_LODSB_LAST: xed_iformfl_enum_t = 2485;
pub const XED_IFORMFL_REP_LODSD_FIRST: xed_iformfl_enum_t = 2486;
pub const XED_IFORMFL_REP_LODSD_LAST: xed_iformfl_enum_t = 2486;
pub const XED_IFORMFL_REP_LODSQ_FIRST: xed_iformfl_enum_t = 2487;
pub const XED_IFORMFL_REP_LODSQ_LAST: xed_iformfl_enum_t = 2487;
pub const XED_IFORMFL_REP_LODSW_FIRST: xed_iformfl_enum_t = 2488;
pub const XED_IFORMFL_REP_LODSW_LAST: xed_iformfl_enum_t = 2488;
pub const XED_IFORMFL_REP_MONTMUL_FIRST: xed_iformfl_enum_t = 2489;
pub const XED_IFORMFL_REP_MONTMUL_LAST: xed_iformfl_enum_t = 2489;
pub const XED_IFORMFL_REP_MOVSB_FIRST: xed_iformfl_enum_t = 2490;
pub const XED_IFORMFL_REP_MOVSB_LAST: xed_iformfl_enum_t = 2490;
pub const XED_IFORMFL_REP_MOVSD_FIRST: xed_iformfl_enum_t = 2491;
pub const XED_IFORMFL_REP_MOVSD_LAST: xed_iformfl_enum_t = 2491;
pub const XED_IFORMFL_REP_MOVSQ_FIRST: xed_iformfl_enum_t = 2492;
pub const XED_IFORMFL_REP_MOVSQ_LAST: xed_iformfl_enum_t = 2492;
pub const XED_IFORMFL_REP_MOVSW_FIRST: xed_iformfl_enum_t = 2493;
pub const XED_IFORMFL_REP_MOVSW_LAST: xed_iformfl_enum_t = 2493;
pub const XED_IFORMFL_REP_OUTSB_FIRST: xed_iformfl_enum_t = 2494;
pub const XED_IFORMFL_REP_OUTSB_LAST: xed_iformfl_enum_t = 2494;
pub const XED_IFORMFL_REP_OUTSD_FIRST: xed_iformfl_enum_t = 2495;
pub const XED_IFORMFL_REP_OUTSD_LAST: xed_iformfl_enum_t = 2495;
pub const XED_IFORMFL_REP_OUTSW_FIRST: xed_iformfl_enum_t = 2496;
pub const XED_IFORMFL_REP_OUTSW_LAST: xed_iformfl_enum_t = 2496;
pub const XED_IFORMFL_REP_STOSB_FIRST: xed_iformfl_enum_t = 2497;
pub const XED_IFORMFL_REP_STOSB_LAST: xed_iformfl_enum_t = 2497;
pub const XED_IFORMFL_REP_STOSD_FIRST: xed_iformfl_enum_t = 2498;
pub const XED_IFORMFL_REP_STOSD_LAST: xed_iformfl_enum_t = 2498;
pub const XED_IFORMFL_REP_STOSQ_FIRST: xed_iformfl_enum_t = 2499;
pub const XED_IFORMFL_REP_STOSQ_LAST: xed_iformfl_enum_t = 2499;
pub const XED_IFORMFL_REP_STOSW_FIRST: xed_iformfl_enum_t = 2500;
pub const XED_IFORMFL_REP_STOSW_LAST: xed_iformfl_enum_t = 2500;
pub const XED_IFORMFL_REP_XCRYPTCBC_FIRST: xed_iformfl_enum_t = 2501;
pub const XED_IFORMFL_REP_XCRYPTCBC_LAST: xed_iformfl_enum_t = 2501;
pub const XED_IFORMFL_REP_XCRYPTCFB_FIRST: xed_iformfl_enum_t = 2502;
pub const XED_IFORMFL_REP_XCRYPTCFB_LAST: xed_iformfl_enum_t = 2502;
pub const XED_IFORMFL_REP_XCRYPTCTR_FIRST: xed_iformfl_enum_t = 2503;
pub const XED_IFORMFL_REP_XCRYPTCTR_LAST: xed_iformfl_enum_t = 2503;
pub const XED_IFORMFL_REP_XCRYPTECB_FIRST: xed_iformfl_enum_t = 2504;
pub const XED_IFORMFL_REP_XCRYPTECB_LAST: xed_iformfl_enum_t = 2504;
pub const XED_IFORMFL_REP_XCRYPTOFB_FIRST: xed_iformfl_enum_t = 2505;
pub const XED_IFORMFL_REP_XCRYPTOFB_LAST: xed_iformfl_enum_t = 2505;
pub const XED_IFORMFL_REP_XSHA1_FIRST: xed_iformfl_enum_t = 2506;
pub const XED_IFORMFL_REP_XSHA1_LAST: xed_iformfl_enum_t = 2506;
pub const XED_IFORMFL_REP_XSHA256_FIRST: xed_iformfl_enum_t = 2507;
pub const XED_IFORMFL_REP_XSHA256_LAST: xed_iformfl_enum_t = 2507;
pub const XED_IFORMFL_REP_XSTORE_FIRST: xed_iformfl_enum_t = 2508;
pub const XED_IFORMFL_REP_XSTORE_LAST: xed_iformfl_enum_t = 2508;
pub const XED_IFORMFL_RET_FAR_FIRST: xed_iformfl_enum_t = 2509;
pub const XED_IFORMFL_RET_FAR_LAST: xed_iformfl_enum_t = 2510;
pub const XED_IFORMFL_RET_NEAR_FIRST: xed_iformfl_enum_t = 2511;
pub const XED_IFORMFL_RET_NEAR_LAST: xed_iformfl_enum_t = 2512;
pub const XED_IFORMFL_RMPADJUST_FIRST: xed_iformfl_enum_t = 2513;
pub const XED_IFORMFL_RMPADJUST_LAST: xed_iformfl_enum_t = 2513;
pub const XED_IFORMFL_RMPUPDATE_FIRST: xed_iformfl_enum_t = 2514;
pub const XED_IFORMFL_RMPUPDATE_LAST: xed_iformfl_enum_t = 2514;
pub const XED_IFORMFL_ROL_FIRST: xed_iformfl_enum_t = 2515;
pub const XED_IFORMFL_ROL_LAST: xed_iformfl_enum_t = 2550;
pub const XED_IFORMFL_ROR_FIRST: xed_iformfl_enum_t = 2551;
pub const XED_IFORMFL_ROR_LAST: xed_iformfl_enum_t = 2586;
pub const XED_IFORMFL_RORX_FIRST: xed_iformfl_enum_t = 2587;
pub const XED_IFORMFL_RORX_LAST: xed_iformfl_enum_t = 2594;
pub const XED_IFORMFL_ROUNDPD_FIRST: xed_iformfl_enum_t = 2595;
pub const XED_IFORMFL_ROUNDPD_LAST: xed_iformfl_enum_t = 2596;
pub const XED_IFORMFL_ROUNDPS_FIRST: xed_iformfl_enum_t = 2597;
pub const XED_IFORMFL_ROUNDPS_LAST: xed_iformfl_enum_t = 2598;
pub const XED_IFORMFL_ROUNDSD_FIRST: xed_iformfl_enum_t = 2599;
pub const XED_IFORMFL_ROUNDSD_LAST: xed_iformfl_enum_t = 2600;
pub const XED_IFORMFL_ROUNDSS_FIRST: xed_iformfl_enum_t = 2601;
pub const XED_IFORMFL_ROUNDSS_LAST: xed_iformfl_enum_t = 2602;
pub const XED_IFORMFL_RSM_FIRST: xed_iformfl_enum_t = 2603;
pub const XED_IFORMFL_RSM_LAST: xed_iformfl_enum_t = 2603;
pub const XED_IFORMFL_RSQRTPS_FIRST: xed_iformfl_enum_t = 2604;
pub const XED_IFORMFL_RSQRTPS_LAST: xed_iformfl_enum_t = 2605;
pub const XED_IFORMFL_RSQRTSS_FIRST: xed_iformfl_enum_t = 2606;
pub const XED_IFORMFL_RSQRTSS_LAST: xed_iformfl_enum_t = 2607;
pub const XED_IFORMFL_RSTORSSP_FIRST: xed_iformfl_enum_t = 2608;
pub const XED_IFORMFL_RSTORSSP_LAST: xed_iformfl_enum_t = 2608;
pub const XED_IFORMFL_SAHF_FIRST: xed_iformfl_enum_t = 2609;
pub const XED_IFORMFL_SAHF_LAST: xed_iformfl_enum_t = 2609;
pub const XED_IFORMFL_SALC_FIRST: xed_iformfl_enum_t = 2610;
pub const XED_IFORMFL_SALC_LAST: xed_iformfl_enum_t = 2610;
pub const XED_IFORMFL_SAR_FIRST: xed_iformfl_enum_t = 2611;
pub const XED_IFORMFL_SAR_LAST: xed_iformfl_enum_t = 2646;
pub const XED_IFORMFL_SARX_FIRST: xed_iformfl_enum_t = 2647;
pub const XED_IFORMFL_SARX_LAST: xed_iformfl_enum_t = 2654;
pub const XED_IFORMFL_SAVEPREVSSP_FIRST: xed_iformfl_enum_t = 2655;
pub const XED_IFORMFL_SAVEPREVSSP_LAST: xed_iformfl_enum_t = 2655;
pub const XED_IFORMFL_SBB_FIRST: xed_iformfl_enum_t = 2656;
pub const XED_IFORMFL_SBB_LAST: xed_iformfl_enum_t = 2697;
pub const XED_IFORMFL_SBB_LOCK_FIRST: xed_iformfl_enum_t = 2698;
pub const XED_IFORMFL_SBB_LOCK_LAST: xed_iformfl_enum_t = 2703;
pub const XED_IFORMFL_SCASB_FIRST: xed_iformfl_enum_t = 2704;
pub const XED_IFORMFL_SCASB_LAST: xed_iformfl_enum_t = 2704;
pub const XED_IFORMFL_SCASD_FIRST: xed_iformfl_enum_t = 2705;
pub const XED_IFORMFL_SCASD_LAST: xed_iformfl_enum_t = 2705;
pub const XED_IFORMFL_SCASQ_FIRST: xed_iformfl_enum_t = 2706;
pub const XED_IFORMFL_SCASQ_LAST: xed_iformfl_enum_t = 2706;
pub const XED_IFORMFL_SCASW_FIRST: xed_iformfl_enum_t = 2707;
pub const XED_IFORMFL_SCASW_LAST: xed_iformfl_enum_t = 2707;
pub const XED_IFORMFL_SEAMCALL_FIRST: xed_iformfl_enum_t = 2708;
pub const XED_IFORMFL_SEAMCALL_LAST: xed_iformfl_enum_t = 2708;
pub const XED_IFORMFL_SEAMOPS_FIRST: xed_iformfl_enum_t = 2709;
pub const XED_IFORMFL_SEAMOPS_LAST: xed_iformfl_enum_t = 2709;
pub const XED_IFORMFL_SEAMRET_FIRST: xed_iformfl_enum_t = 2710;
pub const XED_IFORMFL_SEAMRET_LAST: xed_iformfl_enum_t = 2710;
pub const XED_IFORMFL_SENDUIPI_FIRST: xed_iformfl_enum_t = 2711;
pub const XED_IFORMFL_SENDUIPI_LAST: xed_iformfl_enum_t = 2711;
pub const XED_IFORMFL_SERIALIZE_FIRST: xed_iformfl_enum_t = 2712;
pub const XED_IFORMFL_SERIALIZE_LAST: xed_iformfl_enum_t = 2712;
pub const XED_IFORMFL_SETB_FIRST: xed_iformfl_enum_t = 2713;
pub const XED_IFORMFL_SETB_LAST: xed_iformfl_enum_t = 2716;
pub const XED_IFORMFL_SETBE_FIRST: xed_iformfl_enum_t = 2717;
pub const XED_IFORMFL_SETBE_LAST: xed_iformfl_enum_t = 2720;
pub const XED_IFORMFL_SETL_FIRST: xed_iformfl_enum_t = 2721;
pub const XED_IFORMFL_SETL_LAST: xed_iformfl_enum_t = 2724;
pub const XED_IFORMFL_SETLE_FIRST: xed_iformfl_enum_t = 2725;
pub const XED_IFORMFL_SETLE_LAST: xed_iformfl_enum_t = 2728;
pub const XED_IFORMFL_SETNB_FIRST: xed_iformfl_enum_t = 2729;
pub const XED_IFORMFL_SETNB_LAST: xed_iformfl_enum_t = 2732;
pub const XED_IFORMFL_SETNBE_FIRST: xed_iformfl_enum_t = 2733;
pub const XED_IFORMFL_SETNBE_LAST: xed_iformfl_enum_t = 2736;
pub const XED_IFORMFL_SETNL_FIRST: xed_iformfl_enum_t = 2737;
pub const XED_IFORMFL_SETNL_LAST: xed_iformfl_enum_t = 2740;
pub const XED_IFORMFL_SETNLE_FIRST: xed_iformfl_enum_t = 2741;
pub const XED_IFORMFL_SETNLE_LAST: xed_iformfl_enum_t = 2744;
pub const XED_IFORMFL_SETNO_FIRST: xed_iformfl_enum_t = 2745;
pub const XED_IFORMFL_SETNO_LAST: xed_iformfl_enum_t = 2748;
pub const XED_IFORMFL_SETNP_FIRST: xed_iformfl_enum_t = 2749;
pub const XED_IFORMFL_SETNP_LAST: xed_iformfl_enum_t = 2752;
pub const XED_IFORMFL_SETNS_FIRST: xed_iformfl_enum_t = 2753;
pub const XED_IFORMFL_SETNS_LAST: xed_iformfl_enum_t = 2756;
pub const XED_IFORMFL_SETNZ_FIRST: xed_iformfl_enum_t = 2757;
pub const XED_IFORMFL_SETNZ_LAST: xed_iformfl_enum_t = 2760;
pub const XED_IFORMFL_SETO_FIRST: xed_iformfl_enum_t = 2761;
pub const XED_IFORMFL_SETO_LAST: xed_iformfl_enum_t = 2764;
pub const XED_IFORMFL_SETP_FIRST: xed_iformfl_enum_t = 2765;
pub const XED_IFORMFL_SETP_LAST: xed_iformfl_enum_t = 2768;
pub const XED_IFORMFL_SETS_FIRST: xed_iformfl_enum_t = 2769;
pub const XED_IFORMFL_SETS_LAST: xed_iformfl_enum_t = 2772;
pub const XED_IFORMFL_SETSSBSY_FIRST: xed_iformfl_enum_t = 2773;
pub const XED_IFORMFL_SETSSBSY_LAST: xed_iformfl_enum_t = 2773;
pub const XED_IFORMFL_SETZ_FIRST: xed_iformfl_enum_t = 2774;
pub const XED_IFORMFL_SETZ_LAST: xed_iformfl_enum_t = 2777;
pub const XED_IFORMFL_SFENCE_FIRST: xed_iformfl_enum_t = 2778;
pub const XED_IFORMFL_SFENCE_LAST: xed_iformfl_enum_t = 2778;
pub const XED_IFORMFL_SGDT_FIRST: xed_iformfl_enum_t = 2779;
pub const XED_IFORMFL_SGDT_LAST: xed_iformfl_enum_t = 2780;
pub const XED_IFORMFL_SHA1MSG1_FIRST: xed_iformfl_enum_t = 2781;
pub const XED_IFORMFL_SHA1MSG1_LAST: xed_iformfl_enum_t = 2784;
pub const XED_IFORMFL_SHA1MSG2_FIRST: xed_iformfl_enum_t = 2785;
pub const XED_IFORMFL_SHA1MSG2_LAST: xed_iformfl_enum_t = 2788;
pub const XED_IFORMFL_SHA1NEXTE_FIRST: xed_iformfl_enum_t = 2789;
pub const XED_IFORMFL_SHA1NEXTE_LAST: xed_iformfl_enum_t = 2792;
pub const XED_IFORMFL_SHA1RNDS4_FIRST: xed_iformfl_enum_t = 2793;
pub const XED_IFORMFL_SHA1RNDS4_LAST: xed_iformfl_enum_t = 2796;
pub const XED_IFORMFL_SHA256MSG1_FIRST: xed_iformfl_enum_t = 2797;
pub const XED_IFORMFL_SHA256MSG1_LAST: xed_iformfl_enum_t = 2800;
pub const XED_IFORMFL_SHA256MSG2_FIRST: xed_iformfl_enum_t = 2801;
pub const XED_IFORMFL_SHA256MSG2_LAST: xed_iformfl_enum_t = 2804;
pub const XED_IFORMFL_SHA256RNDS2_FIRST: xed_iformfl_enum_t = 2805;
pub const XED_IFORMFL_SHA256RNDS2_LAST: xed_iformfl_enum_t = 2808;
pub const XED_IFORMFL_SHL_FIRST: xed_iformfl_enum_t = 2809;
pub const XED_IFORMFL_SHL_LAST: xed_iformfl_enum_t = 2856;
pub const XED_IFORMFL_SHLD_FIRST: xed_iformfl_enum_t = 2857;
pub const XED_IFORMFL_SHLD_LAST: xed_iformfl_enum_t = 2868;
pub const XED_IFORMFL_SHLX_FIRST: xed_iformfl_enum_t = 2869;
pub const XED_IFORMFL_SHLX_LAST: xed_iformfl_enum_t = 2876;
pub const XED_IFORMFL_SHR_FIRST: xed_iformfl_enum_t = 2877;
pub const XED_IFORMFL_SHR_LAST: xed_iformfl_enum_t = 2912;
pub const XED_IFORMFL_SHRD_FIRST: xed_iformfl_enum_t = 2913;
pub const XED_IFORMFL_SHRD_LAST: xed_iformfl_enum_t = 2924;
pub const XED_IFORMFL_SHRX_FIRST: xed_iformfl_enum_t = 2925;
pub const XED_IFORMFL_SHRX_LAST: xed_iformfl_enum_t = 2932;
pub const XED_IFORMFL_SHUFPD_FIRST: xed_iformfl_enum_t = 2933;
pub const XED_IFORMFL_SHUFPD_LAST: xed_iformfl_enum_t = 2934;
pub const XED_IFORMFL_SHUFPS_FIRST: xed_iformfl_enum_t = 2935;
pub const XED_IFORMFL_SHUFPS_LAST: xed_iformfl_enum_t = 2936;
pub const XED_IFORMFL_SIDT_FIRST: xed_iformfl_enum_t = 2937;
pub const XED_IFORMFL_SIDT_LAST: xed_iformfl_enum_t = 2938;
pub const XED_IFORMFL_SKINIT_FIRST: xed_iformfl_enum_t = 2939;
pub const XED_IFORMFL_SKINIT_LAST: xed_iformfl_enum_t = 2939;
pub const XED_IFORMFL_SLDT_FIRST: xed_iformfl_enum_t = 2940;
pub const XED_IFORMFL_SLDT_LAST: xed_iformfl_enum_t = 2941;
pub const XED_IFORMFL_SLWPCB_FIRST: xed_iformfl_enum_t = 2942;
pub const XED_IFORMFL_SLWPCB_LAST: xed_iformfl_enum_t = 2942;
pub const XED_IFORMFL_SMSW_FIRST: xed_iformfl_enum_t = 2943;
pub const XED_IFORMFL_SMSW_LAST: xed_iformfl_enum_t = 2944;
pub const XED_IFORMFL_SQRTPD_FIRST: xed_iformfl_enum_t = 2945;
pub const XED_IFORMFL_SQRTPD_LAST: xed_iformfl_enum_t = 2946;
pub const XED_IFORMFL_SQRTPS_FIRST: xed_iformfl_enum_t = 2947;
pub const XED_IFORMFL_SQRTPS_LAST: xed_iformfl_enum_t = 2948;
pub const XED_IFORMFL_SQRTSD_FIRST: xed_iformfl_enum_t = 2949;
pub const XED_IFORMFL_SQRTSD_LAST: xed_iformfl_enum_t = 2950;
pub const XED_IFORMFL_SQRTSS_FIRST: xed_iformfl_enum_t = 2951;
pub const XED_IFORMFL_SQRTSS_LAST: xed_iformfl_enum_t = 2952;
pub const XED_IFORMFL_STAC_FIRST: xed_iformfl_enum_t = 2953;
pub const XED_IFORMFL_STAC_LAST: xed_iformfl_enum_t = 2953;
pub const XED_IFORMFL_STC_FIRST: xed_iformfl_enum_t = 2954;
pub const XED_IFORMFL_STC_LAST: xed_iformfl_enum_t = 2954;
pub const XED_IFORMFL_STD_FIRST: xed_iformfl_enum_t = 2955;
pub const XED_IFORMFL_STD_LAST: xed_iformfl_enum_t = 2955;
pub const XED_IFORMFL_STGI_FIRST: xed_iformfl_enum_t = 2956;
pub const XED_IFORMFL_STGI_LAST: xed_iformfl_enum_t = 2956;
pub const XED_IFORMFL_STI_FIRST: xed_iformfl_enum_t = 2957;
pub const XED_IFORMFL_STI_LAST: xed_iformfl_enum_t = 2957;
pub const XED_IFORMFL_STMXCSR_FIRST: xed_iformfl_enum_t = 2958;
pub const XED_IFORMFL_STMXCSR_LAST: xed_iformfl_enum_t = 2958;
pub const XED_IFORMFL_STOSB_FIRST: xed_iformfl_enum_t = 2959;
pub const XED_IFORMFL_STOSB_LAST: xed_iformfl_enum_t = 2959;
pub const XED_IFORMFL_STOSD_FIRST: xed_iformfl_enum_t = 2960;
pub const XED_IFORMFL_STOSD_LAST: xed_iformfl_enum_t = 2960;
pub const XED_IFORMFL_STOSQ_FIRST: xed_iformfl_enum_t = 2961;
pub const XED_IFORMFL_STOSQ_LAST: xed_iformfl_enum_t = 2961;
pub const XED_IFORMFL_STOSW_FIRST: xed_iformfl_enum_t = 2962;
pub const XED_IFORMFL_STOSW_LAST: xed_iformfl_enum_t = 2962;
pub const XED_IFORMFL_STR_FIRST: xed_iformfl_enum_t = 2963;
pub const XED_IFORMFL_STR_LAST: xed_iformfl_enum_t = 2964;
pub const XED_IFORMFL_STTILECFG_FIRST: xed_iformfl_enum_t = 2965;
pub const XED_IFORMFL_STTILECFG_LAST: xed_iformfl_enum_t = 2966;
pub const XED_IFORMFL_STUI_FIRST: xed_iformfl_enum_t = 2967;
pub const XED_IFORMFL_STUI_LAST: xed_iformfl_enum_t = 2967;
pub const XED_IFORMFL_SUB_FIRST: xed_iformfl_enum_t = 2968;
pub const XED_IFORMFL_SUB_LAST: xed_iformfl_enum_t = 3009;
pub const XED_IFORMFL_SUBPD_FIRST: xed_iformfl_enum_t = 3010;
pub const XED_IFORMFL_SUBPD_LAST: xed_iformfl_enum_t = 3011;
pub const XED_IFORMFL_SUBPS_FIRST: xed_iformfl_enum_t = 3012;
pub const XED_IFORMFL_SUBPS_LAST: xed_iformfl_enum_t = 3013;
pub const XED_IFORMFL_SUBSD_FIRST: xed_iformfl_enum_t = 3014;
pub const XED_IFORMFL_SUBSD_LAST: xed_iformfl_enum_t = 3015;
pub const XED_IFORMFL_SUBSS_FIRST: xed_iformfl_enum_t = 3016;
pub const XED_IFORMFL_SUBSS_LAST: xed_iformfl_enum_t = 3017;
pub const XED_IFORMFL_SUB_LOCK_FIRST: xed_iformfl_enum_t = 3018;
pub const XED_IFORMFL_SUB_LOCK_LAST: xed_iformfl_enum_t = 3023;
pub const XED_IFORMFL_SWAPGS_FIRST: xed_iformfl_enum_t = 3024;
pub const XED_IFORMFL_SWAPGS_LAST: xed_iformfl_enum_t = 3024;
pub const XED_IFORMFL_SYSCALL_FIRST: xed_iformfl_enum_t = 3025;
pub const XED_IFORMFL_SYSCALL_LAST: xed_iformfl_enum_t = 3025;
pub const XED_IFORMFL_SYSCALL_32_FIRST: xed_iformfl_enum_t = 3026;
pub const XED_IFORMFL_SYSCALL_32_LAST: xed_iformfl_enum_t = 3026;
pub const XED_IFORMFL_SYSENTER_FIRST: xed_iformfl_enum_t = 3027;
pub const XED_IFORMFL_SYSENTER_LAST: xed_iformfl_enum_t = 3027;
pub const XED_IFORMFL_SYSEXIT_FIRST: xed_iformfl_enum_t = 3028;
pub const XED_IFORMFL_SYSEXIT_LAST: xed_iformfl_enum_t = 3028;
pub const XED_IFORMFL_SYSRET_FIRST: xed_iformfl_enum_t = 3029;
pub const XED_IFORMFL_SYSRET_LAST: xed_iformfl_enum_t = 3029;
pub const XED_IFORMFL_SYSRET64_FIRST: xed_iformfl_enum_t = 3030;
pub const XED_IFORMFL_SYSRET64_LAST: xed_iformfl_enum_t = 3030;
pub const XED_IFORMFL_SYSRET_AMD_FIRST: xed_iformfl_enum_t = 3031;
pub const XED_IFORMFL_SYSRET_AMD_LAST: xed_iformfl_enum_t = 3031;
pub const XED_IFORMFL_T1MSKC_FIRST: xed_iformfl_enum_t = 3032;
pub const XED_IFORMFL_T1MSKC_LAST: xed_iformfl_enum_t = 3035;
pub const XED_IFORMFL_TCMMIMFP16PS_FIRST: xed_iformfl_enum_t = 3036;
pub const XED_IFORMFL_TCMMIMFP16PS_LAST: xed_iformfl_enum_t = 3036;
pub const XED_IFORMFL_TCMMRLFP16PS_FIRST: xed_iformfl_enum_t = 3037;
pub const XED_IFORMFL_TCMMRLFP16PS_LAST: xed_iformfl_enum_t = 3037;
pub const XED_IFORMFL_TDCALL_FIRST: xed_iformfl_enum_t = 3038;
pub const XED_IFORMFL_TDCALL_LAST: xed_iformfl_enum_t = 3038;
pub const XED_IFORMFL_TDPBF16PS_FIRST: xed_iformfl_enum_t = 3039;
pub const XED_IFORMFL_TDPBF16PS_LAST: xed_iformfl_enum_t = 3039;
pub const XED_IFORMFL_TDPBSSD_FIRST: xed_iformfl_enum_t = 3040;
pub const XED_IFORMFL_TDPBSSD_LAST: xed_iformfl_enum_t = 3040;
pub const XED_IFORMFL_TDPBSUD_FIRST: xed_iformfl_enum_t = 3041;
pub const XED_IFORMFL_TDPBSUD_LAST: xed_iformfl_enum_t = 3041;
pub const XED_IFORMFL_TDPBUSD_FIRST: xed_iformfl_enum_t = 3042;
pub const XED_IFORMFL_TDPBUSD_LAST: xed_iformfl_enum_t = 3042;
pub const XED_IFORMFL_TDPBUUD_FIRST: xed_iformfl_enum_t = 3043;
pub const XED_IFORMFL_TDPBUUD_LAST: xed_iformfl_enum_t = 3043;
pub const XED_IFORMFL_TDPFP16PS_FIRST: xed_iformfl_enum_t = 3044;
pub const XED_IFORMFL_TDPFP16PS_LAST: xed_iformfl_enum_t = 3044;
pub const XED_IFORMFL_TEST_FIRST: xed_iformfl_enum_t = 3045;
pub const XED_IFORMFL_TEST_LAST: xed_iformfl_enum_t = 3058;
pub const XED_IFORMFL_TESTUI_FIRST: xed_iformfl_enum_t = 3059;
pub const XED_IFORMFL_TESTUI_LAST: xed_iformfl_enum_t = 3059;
pub const XED_IFORMFL_TILELOADD_FIRST: xed_iformfl_enum_t = 3060;
pub const XED_IFORMFL_TILELOADD_LAST: xed_iformfl_enum_t = 3061;
pub const XED_IFORMFL_TILELOADDT1_FIRST: xed_iformfl_enum_t = 3062;
pub const XED_IFORMFL_TILELOADDT1_LAST: xed_iformfl_enum_t = 3063;
pub const XED_IFORMFL_TILERELEASE_FIRST: xed_iformfl_enum_t = 3064;
pub const XED_IFORMFL_TILERELEASE_LAST: xed_iformfl_enum_t = 3064;
pub const XED_IFORMFL_TILESTORED_FIRST: xed_iformfl_enum_t = 3065;
pub const XED_IFORMFL_TILESTORED_LAST: xed_iformfl_enum_t = 3066;
pub const XED_IFORMFL_TILEZERO_FIRST: xed_iformfl_enum_t = 3067;
pub const XED_IFORMFL_TILEZERO_LAST: xed_iformfl_enum_t = 3067;
pub const XED_IFORMFL_TLBSYNC_FIRST: xed_iformfl_enum_t = 3068;
pub const XED_IFORMFL_TLBSYNC_LAST: xed_iformfl_enum_t = 3068;
pub const XED_IFORMFL_TPAUSE_FIRST: xed_iformfl_enum_t = 3069;
pub const XED_IFORMFL_TPAUSE_LAST: xed_iformfl_enum_t = 3069;
pub const XED_IFORMFL_TZCNT_FIRST: xed_iformfl_enum_t = 3070;
pub const XED_IFORMFL_TZCNT_LAST: xed_iformfl_enum_t = 3073;
pub const XED_IFORMFL_TZMSK_FIRST: xed_iformfl_enum_t = 3074;
pub const XED_IFORMFL_TZMSK_LAST: xed_iformfl_enum_t = 3077;
pub const XED_IFORMFL_UCOMISD_FIRST: xed_iformfl_enum_t = 3078;
pub const XED_IFORMFL_UCOMISD_LAST: xed_iformfl_enum_t = 3079;
pub const XED_IFORMFL_UCOMISS_FIRST: xed_iformfl_enum_t = 3080;
pub const XED_IFORMFL_UCOMISS_LAST: xed_iformfl_enum_t = 3081;
pub const XED_IFORMFL_UD0_FIRST: xed_iformfl_enum_t = 3082;
pub const XED_IFORMFL_UD0_LAST: xed_iformfl_enum_t = 3084;
pub const XED_IFORMFL_UD1_FIRST: xed_iformfl_enum_t = 3085;
pub const XED_IFORMFL_UD1_LAST: xed_iformfl_enum_t = 3086;
pub const XED_IFORMFL_UD2_FIRST: xed_iformfl_enum_t = 3087;
pub const XED_IFORMFL_UD2_LAST: xed_iformfl_enum_t = 3087;
pub const XED_IFORMFL_UIRET_FIRST: xed_iformfl_enum_t = 3088;
pub const XED_IFORMFL_UIRET_LAST: xed_iformfl_enum_t = 3088;
pub const XED_IFORMFL_UMONITOR_FIRST: xed_iformfl_enum_t = 3089;
pub const XED_IFORMFL_UMONITOR_LAST: xed_iformfl_enum_t = 3089;
pub const XED_IFORMFL_UMWAIT_FIRST: xed_iformfl_enum_t = 3090;
pub const XED_IFORMFL_UMWAIT_LAST: xed_iformfl_enum_t = 3090;
pub const XED_IFORMFL_UNPCKHPD_FIRST: xed_iformfl_enum_t = 3091;
pub const XED_IFORMFL_UNPCKHPD_LAST: xed_iformfl_enum_t = 3092;
pub const XED_IFORMFL_UNPCKHPS_FIRST: xed_iformfl_enum_t = 3093;
pub const XED_IFORMFL_UNPCKHPS_LAST: xed_iformfl_enum_t = 3094;
pub const XED_IFORMFL_UNPCKLPD_FIRST: xed_iformfl_enum_t = 3095;
pub const XED_IFORMFL_UNPCKLPD_LAST: xed_iformfl_enum_t = 3096;
pub const XED_IFORMFL_UNPCKLPS_FIRST: xed_iformfl_enum_t = 3097;
pub const XED_IFORMFL_UNPCKLPS_LAST: xed_iformfl_enum_t = 3098;
pub const XED_IFORMFL_URDMSR_FIRST: xed_iformfl_enum_t = 3099;
pub const XED_IFORMFL_URDMSR_LAST: xed_iformfl_enum_t = 3102;
pub const XED_IFORMFL_UWRMSR_FIRST: xed_iformfl_enum_t = 3103;
pub const XED_IFORMFL_UWRMSR_LAST: xed_iformfl_enum_t = 3106;
pub const XED_IFORMFL_V4FMADDPS_FIRST: xed_iformfl_enum_t = 3107;
pub const XED_IFORMFL_V4FMADDPS_LAST: xed_iformfl_enum_t = 3107;
pub const XED_IFORMFL_V4FMADDSS_FIRST: xed_iformfl_enum_t = 3108;
pub const XED_IFORMFL_V4FMADDSS_LAST: xed_iformfl_enum_t = 3108;
pub const XED_IFORMFL_V4FNMADDPS_FIRST: xed_iformfl_enum_t = 3109;
pub const XED_IFORMFL_V4FNMADDPS_LAST: xed_iformfl_enum_t = 3109;
pub const XED_IFORMFL_V4FNMADDSS_FIRST: xed_iformfl_enum_t = 3110;
pub const XED_IFORMFL_V4FNMADDSS_LAST: xed_iformfl_enum_t = 3110;
pub const XED_IFORMFL_VADDPD_FIRST: xed_iformfl_enum_t = 3111;
pub const XED_IFORMFL_VADDPD_LAST: xed_iformfl_enum_t = 3120;
pub const XED_IFORMFL_VADDPH_FIRST: xed_iformfl_enum_t = 3121;
pub const XED_IFORMFL_VADDPH_LAST: xed_iformfl_enum_t = 3126;
pub const XED_IFORMFL_VADDPS_FIRST: xed_iformfl_enum_t = 3127;
pub const XED_IFORMFL_VADDPS_LAST: xed_iformfl_enum_t = 3136;
pub const XED_IFORMFL_VADDSD_FIRST: xed_iformfl_enum_t = 3137;
pub const XED_IFORMFL_VADDSD_LAST: xed_iformfl_enum_t = 3140;
pub const XED_IFORMFL_VADDSH_FIRST: xed_iformfl_enum_t = 3141;
pub const XED_IFORMFL_VADDSH_LAST: xed_iformfl_enum_t = 3142;
pub const XED_IFORMFL_VADDSS_FIRST: xed_iformfl_enum_t = 3143;
pub const XED_IFORMFL_VADDSS_LAST: xed_iformfl_enum_t = 3146;
pub const XED_IFORMFL_VADDSUBPD_FIRST: xed_iformfl_enum_t = 3147;
pub const XED_IFORMFL_VADDSUBPD_LAST: xed_iformfl_enum_t = 3150;
pub const XED_IFORMFL_VADDSUBPS_FIRST: xed_iformfl_enum_t = 3151;
pub const XED_IFORMFL_VADDSUBPS_LAST: xed_iformfl_enum_t = 3154;
pub const XED_IFORMFL_VAESDEC_FIRST: xed_iformfl_enum_t = 3155;
pub const XED_IFORMFL_VAESDEC_LAST: xed_iformfl_enum_t = 3164;
pub const XED_IFORMFL_VAESDECLAST_FIRST: xed_iformfl_enum_t = 3165;
pub const XED_IFORMFL_VAESDECLAST_LAST: xed_iformfl_enum_t = 3174;
pub const XED_IFORMFL_VAESENC_FIRST: xed_iformfl_enum_t = 3175;
pub const XED_IFORMFL_VAESENC_LAST: xed_iformfl_enum_t = 3184;
pub const XED_IFORMFL_VAESENCLAST_FIRST: xed_iformfl_enum_t = 3185;
pub const XED_IFORMFL_VAESENCLAST_LAST: xed_iformfl_enum_t = 3194;
pub const XED_IFORMFL_VAESIMC_FIRST: xed_iformfl_enum_t = 3195;
pub const XED_IFORMFL_VAESIMC_LAST: xed_iformfl_enum_t = 3196;
pub const XED_IFORMFL_VAESKEYGENASSIST_FIRST: xed_iformfl_enum_t = 3197;
pub const XED_IFORMFL_VAESKEYGENASSIST_LAST: xed_iformfl_enum_t = 3198;
pub const XED_IFORMFL_VALIGND_FIRST: xed_iformfl_enum_t = 3199;
pub const XED_IFORMFL_VALIGND_LAST: xed_iformfl_enum_t = 3204;
pub const XED_IFORMFL_VALIGNQ_FIRST: xed_iformfl_enum_t = 3205;
pub const XED_IFORMFL_VALIGNQ_LAST: xed_iformfl_enum_t = 3210;
pub const XED_IFORMFL_VANDNPD_FIRST: xed_iformfl_enum_t = 3211;
pub const XED_IFORMFL_VANDNPD_LAST: xed_iformfl_enum_t = 3220;
pub const XED_IFORMFL_VANDNPS_FIRST: xed_iformfl_enum_t = 3221;
pub const XED_IFORMFL_VANDNPS_LAST: xed_iformfl_enum_t = 3230;
pub const XED_IFORMFL_VANDPD_FIRST: xed_iformfl_enum_t = 3231;
pub const XED_IFORMFL_VANDPD_LAST: xed_iformfl_enum_t = 3240;
pub const XED_IFORMFL_VANDPS_FIRST: xed_iformfl_enum_t = 3241;
pub const XED_IFORMFL_VANDPS_LAST: xed_iformfl_enum_t = 3250;
pub const XED_IFORMFL_VBCSTNEBF162PS_FIRST: xed_iformfl_enum_t = 3251;
pub const XED_IFORMFL_VBCSTNEBF162PS_LAST: xed_iformfl_enum_t = 3252;
pub const XED_IFORMFL_VBCSTNESH2PS_FIRST: xed_iformfl_enum_t = 3253;
pub const XED_IFORMFL_VBCSTNESH2PS_LAST: xed_iformfl_enum_t = 3254;
pub const XED_IFORMFL_VBLENDMPD_FIRST: xed_iformfl_enum_t = 3255;
pub const XED_IFORMFL_VBLENDMPD_LAST: xed_iformfl_enum_t = 3260;
pub const XED_IFORMFL_VBLENDMPS_FIRST: xed_iformfl_enum_t = 3261;
pub const XED_IFORMFL_VBLENDMPS_LAST: xed_iformfl_enum_t = 3266;
pub const XED_IFORMFL_VBLENDPD_FIRST: xed_iformfl_enum_t = 3267;
pub const XED_IFORMFL_VBLENDPD_LAST: xed_iformfl_enum_t = 3270;
pub const XED_IFORMFL_VBLENDPS_FIRST: xed_iformfl_enum_t = 3271;
pub const XED_IFORMFL_VBLENDPS_LAST: xed_iformfl_enum_t = 3274;
pub const XED_IFORMFL_VBLENDVPD_FIRST: xed_iformfl_enum_t = 3275;
pub const XED_IFORMFL_VBLENDVPD_LAST: xed_iformfl_enum_t = 3278;
pub const XED_IFORMFL_VBLENDVPS_FIRST: xed_iformfl_enum_t = 3279;
pub const XED_IFORMFL_VBLENDVPS_LAST: xed_iformfl_enum_t = 3282;
pub const XED_IFORMFL_VBROADCASTF128_FIRST: xed_iformfl_enum_t = 3283;
pub const XED_IFORMFL_VBROADCASTF128_LAST: xed_iformfl_enum_t = 3283;
pub const XED_IFORMFL_VBROADCASTF32X2_FIRST: xed_iformfl_enum_t = 3284;
pub const XED_IFORMFL_VBROADCASTF32X2_LAST: xed_iformfl_enum_t = 3287;
pub const XED_IFORMFL_VBROADCASTF32X4_FIRST: xed_iformfl_enum_t = 3288;
pub const XED_IFORMFL_VBROADCASTF32X4_LAST: xed_iformfl_enum_t = 3289;
pub const XED_IFORMFL_VBROADCASTF32X8_FIRST: xed_iformfl_enum_t = 3290;
pub const XED_IFORMFL_VBROADCASTF32X8_LAST: xed_iformfl_enum_t = 3290;
pub const XED_IFORMFL_VBROADCASTF64X2_FIRST: xed_iformfl_enum_t = 3291;
pub const XED_IFORMFL_VBROADCASTF64X2_LAST: xed_iformfl_enum_t = 3292;
pub const XED_IFORMFL_VBROADCASTF64X4_FIRST: xed_iformfl_enum_t = 3293;
pub const XED_IFORMFL_VBROADCASTF64X4_LAST: xed_iformfl_enum_t = 3293;
pub const XED_IFORMFL_VBROADCASTI128_FIRST: xed_iformfl_enum_t = 3294;
pub const XED_IFORMFL_VBROADCASTI128_LAST: xed_iformfl_enum_t = 3294;
pub const XED_IFORMFL_VBROADCASTI32X2_FIRST: xed_iformfl_enum_t = 3295;
pub const XED_IFORMFL_VBROADCASTI32X2_LAST: xed_iformfl_enum_t = 3300;
pub const XED_IFORMFL_VBROADCASTI32X4_FIRST: xed_iformfl_enum_t = 3301;
pub const XED_IFORMFL_VBROADCASTI32X4_LAST: xed_iformfl_enum_t = 3302;
pub const XED_IFORMFL_VBROADCASTI32X8_FIRST: xed_iformfl_enum_t = 3303;
pub const XED_IFORMFL_VBROADCASTI32X8_LAST: xed_iformfl_enum_t = 3303;
pub const XED_IFORMFL_VBROADCASTI64X2_FIRST: xed_iformfl_enum_t = 3304;
pub const XED_IFORMFL_VBROADCASTI64X2_LAST: xed_iformfl_enum_t = 3305;
pub const XED_IFORMFL_VBROADCASTI64X4_FIRST: xed_iformfl_enum_t = 3306;
pub const XED_IFORMFL_VBROADCASTI64X4_LAST: xed_iformfl_enum_t = 3306;
pub const XED_IFORMFL_VBROADCASTSD_FIRST: xed_iformfl_enum_t = 3307;
pub const XED_IFORMFL_VBROADCASTSD_LAST: xed_iformfl_enum_t = 3312;
pub const XED_IFORMFL_VBROADCASTSS_FIRST: xed_iformfl_enum_t = 3313;
pub const XED_IFORMFL_VBROADCASTSS_LAST: xed_iformfl_enum_t = 3322;
pub const XED_IFORMFL_VCMPPD_FIRST: xed_iformfl_enum_t = 3323;
pub const XED_IFORMFL_VCMPPD_LAST: xed_iformfl_enum_t = 3332;
pub const XED_IFORMFL_VCMPPH_FIRST: xed_iformfl_enum_t = 3333;
pub const XED_IFORMFL_VCMPPH_LAST: xed_iformfl_enum_t = 3338;
pub const XED_IFORMFL_VCMPPS_FIRST: xed_iformfl_enum_t = 3339;
pub const XED_IFORMFL_VCMPPS_LAST: xed_iformfl_enum_t = 3348;
pub const XED_IFORMFL_VCMPSD_FIRST: xed_iformfl_enum_t = 3349;
pub const XED_IFORMFL_VCMPSD_LAST: xed_iformfl_enum_t = 3352;
pub const XED_IFORMFL_VCMPSH_FIRST: xed_iformfl_enum_t = 3353;
pub const XED_IFORMFL_VCMPSH_LAST: xed_iformfl_enum_t = 3354;
pub const XED_IFORMFL_VCMPSS_FIRST: xed_iformfl_enum_t = 3355;
pub const XED_IFORMFL_VCMPSS_LAST: xed_iformfl_enum_t = 3358;
pub const XED_IFORMFL_VCOMISD_FIRST: xed_iformfl_enum_t = 3359;
pub const XED_IFORMFL_VCOMISD_LAST: xed_iformfl_enum_t = 3362;
pub const XED_IFORMFL_VCOMISH_FIRST: xed_iformfl_enum_t = 3363;
pub const XED_IFORMFL_VCOMISH_LAST: xed_iformfl_enum_t = 3364;
pub const XED_IFORMFL_VCOMISS_FIRST: xed_iformfl_enum_t = 3365;
pub const XED_IFORMFL_VCOMISS_LAST: xed_iformfl_enum_t = 3368;
pub const XED_IFORMFL_VCOMPRESSPD_FIRST: xed_iformfl_enum_t = 3369;
pub const XED_IFORMFL_VCOMPRESSPD_LAST: xed_iformfl_enum_t = 3374;
pub const XED_IFORMFL_VCOMPRESSPS_FIRST: xed_iformfl_enum_t = 3375;
pub const XED_IFORMFL_VCOMPRESSPS_LAST: xed_iformfl_enum_t = 3380;
pub const XED_IFORMFL_VCVTDQ2PD_FIRST: xed_iformfl_enum_t = 3381;
pub const XED_IFORMFL_VCVTDQ2PD_LAST: xed_iformfl_enum_t = 3390;
pub const XED_IFORMFL_VCVTDQ2PH_FIRST: xed_iformfl_enum_t = 3391;
pub const XED_IFORMFL_VCVTDQ2PH_LAST: xed_iformfl_enum_t = 3396;
pub const XED_IFORMFL_VCVTDQ2PS_FIRST: xed_iformfl_enum_t = 3397;
pub const XED_IFORMFL_VCVTDQ2PS_LAST: xed_iformfl_enum_t = 3406;
pub const XED_IFORMFL_VCVTNE2PS2BF16_FIRST: xed_iformfl_enum_t = 3407;
pub const XED_IFORMFL_VCVTNE2PS2BF16_LAST: xed_iformfl_enum_t = 3412;
pub const XED_IFORMFL_VCVTNEEBF162PS_FIRST: xed_iformfl_enum_t = 3413;
pub const XED_IFORMFL_VCVTNEEBF162PS_LAST: xed_iformfl_enum_t = 3414;
pub const XED_IFORMFL_VCVTNEEPH2PS_FIRST: xed_iformfl_enum_t = 3415;
pub const XED_IFORMFL_VCVTNEEPH2PS_LAST: xed_iformfl_enum_t = 3416;
pub const XED_IFORMFL_VCVTNEOBF162PS_FIRST: xed_iformfl_enum_t = 3417;
pub const XED_IFORMFL_VCVTNEOBF162PS_LAST: xed_iformfl_enum_t = 3418;
pub const XED_IFORMFL_VCVTNEOPH2PS_FIRST: xed_iformfl_enum_t = 3419;
pub const XED_IFORMFL_VCVTNEOPH2PS_LAST: xed_iformfl_enum_t = 3420;
pub const XED_IFORMFL_VCVTNEPS2BF16_FIRST: xed_iformfl_enum_t = 3421;
pub const XED_IFORMFL_VCVTNEPS2BF16_LAST: xed_iformfl_enum_t = 3430;
pub const XED_IFORMFL_VCVTPD2DQ_FIRST: xed_iformfl_enum_t = 3431;
pub const XED_IFORMFL_VCVTPD2DQ_LAST: xed_iformfl_enum_t = 3440;
pub const XED_IFORMFL_VCVTPD2PH_FIRST: xed_iformfl_enum_t = 3441;
pub const XED_IFORMFL_VCVTPD2PH_LAST: xed_iformfl_enum_t = 3446;
pub const XED_IFORMFL_VCVTPD2PS_FIRST: xed_iformfl_enum_t = 3447;
pub const XED_IFORMFL_VCVTPD2PS_LAST: xed_iformfl_enum_t = 3456;
pub const XED_IFORMFL_VCVTPD2QQ_FIRST: xed_iformfl_enum_t = 3457;
pub const XED_IFORMFL_VCVTPD2QQ_LAST: xed_iformfl_enum_t = 3462;
pub const XED_IFORMFL_VCVTPD2UDQ_FIRST: xed_iformfl_enum_t = 3463;
pub const XED_IFORMFL_VCVTPD2UDQ_LAST: xed_iformfl_enum_t = 3468;
pub const XED_IFORMFL_VCVTPD2UQQ_FIRST: xed_iformfl_enum_t = 3469;
pub const XED_IFORMFL_VCVTPD2UQQ_LAST: xed_iformfl_enum_t = 3474;
pub const XED_IFORMFL_VCVTPH2DQ_FIRST: xed_iformfl_enum_t = 3475;
pub const XED_IFORMFL_VCVTPH2DQ_LAST: xed_iformfl_enum_t = 3480;
pub const XED_IFORMFL_VCVTPH2PD_FIRST: xed_iformfl_enum_t = 3481;
pub const XED_IFORMFL_VCVTPH2PD_LAST: xed_iformfl_enum_t = 3486;
pub const XED_IFORMFL_VCVTPH2PS_FIRST: xed_iformfl_enum_t = 3487;
pub const XED_IFORMFL_VCVTPH2PS_LAST: xed_iformfl_enum_t = 3496;
pub const XED_IFORMFL_VCVTPH2PSX_FIRST: xed_iformfl_enum_t = 3497;
pub const XED_IFORMFL_VCVTPH2PSX_LAST: xed_iformfl_enum_t = 3502;
pub const XED_IFORMFL_VCVTPH2QQ_FIRST: xed_iformfl_enum_t = 3503;
pub const XED_IFORMFL_VCVTPH2QQ_LAST: xed_iformfl_enum_t = 3508;
pub const XED_IFORMFL_VCVTPH2UDQ_FIRST: xed_iformfl_enum_t = 3509;
pub const XED_IFORMFL_VCVTPH2UDQ_LAST: xed_iformfl_enum_t = 3514;
pub const XED_IFORMFL_VCVTPH2UQQ_FIRST: xed_iformfl_enum_t = 3515;
pub const XED_IFORMFL_VCVTPH2UQQ_LAST: xed_iformfl_enum_t = 3520;
pub const XED_IFORMFL_VCVTPH2UW_FIRST: xed_iformfl_enum_t = 3521;
pub const XED_IFORMFL_VCVTPH2UW_LAST: xed_iformfl_enum_t = 3526;
pub const XED_IFORMFL_VCVTPH2W_FIRST: xed_iformfl_enum_t = 3527;
pub const XED_IFORMFL_VCVTPH2W_LAST: xed_iformfl_enum_t = 3532;
pub const XED_IFORMFL_VCVTPS2DQ_FIRST: xed_iformfl_enum_t = 3533;
pub const XED_IFORMFL_VCVTPS2DQ_LAST: xed_iformfl_enum_t = 3542;
pub const XED_IFORMFL_VCVTPS2PD_FIRST: xed_iformfl_enum_t = 3543;
pub const XED_IFORMFL_VCVTPS2PD_LAST: xed_iformfl_enum_t = 3552;
pub const XED_IFORMFL_VCVTPS2PH_FIRST: xed_iformfl_enum_t = 3553;
pub const XED_IFORMFL_VCVTPS2PH_LAST: xed_iformfl_enum_t = 3562;
pub const XED_IFORMFL_VCVTPS2PHX_FIRST: xed_iformfl_enum_t = 3563;
pub const XED_IFORMFL_VCVTPS2PHX_LAST: xed_iformfl_enum_t = 3568;
pub const XED_IFORMFL_VCVTPS2QQ_FIRST: xed_iformfl_enum_t = 3569;
pub const XED_IFORMFL_VCVTPS2QQ_LAST: xed_iformfl_enum_t = 3574;
pub const XED_IFORMFL_VCVTPS2UDQ_FIRST: xed_iformfl_enum_t = 3575;
pub const XED_IFORMFL_VCVTPS2UDQ_LAST: xed_iformfl_enum_t = 3580;
pub const XED_IFORMFL_VCVTPS2UQQ_FIRST: xed_iformfl_enum_t = 3581;
pub const XED_IFORMFL_VCVTPS2UQQ_LAST: xed_iformfl_enum_t = 3586;
pub const XED_IFORMFL_VCVTQQ2PD_FIRST: xed_iformfl_enum_t = 3587;
pub const XED_IFORMFL_VCVTQQ2PD_LAST: xed_iformfl_enum_t = 3592;
pub const XED_IFORMFL_VCVTQQ2PH_FIRST: xed_iformfl_enum_t = 3593;
pub const XED_IFORMFL_VCVTQQ2PH_LAST: xed_iformfl_enum_t = 3598;
pub const XED_IFORMFL_VCVTQQ2PS_FIRST: xed_iformfl_enum_t = 3599;
pub const XED_IFORMFL_VCVTQQ2PS_LAST: xed_iformfl_enum_t = 3604;
pub const XED_IFORMFL_VCVTSD2SH_FIRST: xed_iformfl_enum_t = 3605;
pub const XED_IFORMFL_VCVTSD2SH_LAST: xed_iformfl_enum_t = 3606;
pub const XED_IFORMFL_VCVTSD2SI_FIRST: xed_iformfl_enum_t = 3607;
pub const XED_IFORMFL_VCVTSD2SI_LAST: xed_iformfl_enum_t = 3614;
pub const XED_IFORMFL_VCVTSD2SS_FIRST: xed_iformfl_enum_t = 3615;
pub const XED_IFORMFL_VCVTSD2SS_LAST: xed_iformfl_enum_t = 3618;
pub const XED_IFORMFL_VCVTSD2USI_FIRST: xed_iformfl_enum_t = 3619;
pub const XED_IFORMFL_VCVTSD2USI_LAST: xed_iformfl_enum_t = 3622;
pub const XED_IFORMFL_VCVTSH2SD_FIRST: xed_iformfl_enum_t = 3623;
pub const XED_IFORMFL_VCVTSH2SD_LAST: xed_iformfl_enum_t = 3624;
pub const XED_IFORMFL_VCVTSH2SI_FIRST: xed_iformfl_enum_t = 3625;
pub const XED_IFORMFL_VCVTSH2SI_LAST: xed_iformfl_enum_t = 3628;
pub const XED_IFORMFL_VCVTSH2SS_FIRST: xed_iformfl_enum_t = 3629;
pub const XED_IFORMFL_VCVTSH2SS_LAST: xed_iformfl_enum_t = 3630;
pub const XED_IFORMFL_VCVTSH2USI_FIRST: xed_iformfl_enum_t = 3631;
pub const XED_IFORMFL_VCVTSH2USI_LAST: xed_iformfl_enum_t = 3634;
pub const XED_IFORMFL_VCVTSI2SD_FIRST: xed_iformfl_enum_t = 3635;
pub const XED_IFORMFL_VCVTSI2SD_LAST: xed_iformfl_enum_t = 3642;
pub const XED_IFORMFL_VCVTSI2SH_FIRST: xed_iformfl_enum_t = 3643;
pub const XED_IFORMFL_VCVTSI2SH_LAST: xed_iformfl_enum_t = 3646;
pub const XED_IFORMFL_VCVTSI2SS_FIRST: xed_iformfl_enum_t = 3647;
pub const XED_IFORMFL_VCVTSI2SS_LAST: xed_iformfl_enum_t = 3654;
pub const XED_IFORMFL_VCVTSS2SD_FIRST: xed_iformfl_enum_t = 3655;
pub const XED_IFORMFL_VCVTSS2SD_LAST: xed_iformfl_enum_t = 3658;
pub const XED_IFORMFL_VCVTSS2SH_FIRST: xed_iformfl_enum_t = 3659;
pub const XED_IFORMFL_VCVTSS2SH_LAST: xed_iformfl_enum_t = 3660;
pub const XED_IFORMFL_VCVTSS2SI_FIRST: xed_iformfl_enum_t = 3661;
pub const XED_IFORMFL_VCVTSS2SI_LAST: xed_iformfl_enum_t = 3668;
pub const XED_IFORMFL_VCVTSS2USI_FIRST: xed_iformfl_enum_t = 3669;
pub const XED_IFORMFL_VCVTSS2USI_LAST: xed_iformfl_enum_t = 3672;
pub const XED_IFORMFL_VCVTTPD2DQ_FIRST: xed_iformfl_enum_t = 3673;
pub const XED_IFORMFL_VCVTTPD2DQ_LAST: xed_iformfl_enum_t = 3682;
pub const XED_IFORMFL_VCVTTPD2QQ_FIRST: xed_iformfl_enum_t = 3683;
pub const XED_IFORMFL_VCVTTPD2QQ_LAST: xed_iformfl_enum_t = 3688;
pub const XED_IFORMFL_VCVTTPD2UDQ_FIRST: xed_iformfl_enum_t = 3689;
pub const XED_IFORMFL_VCVTTPD2UDQ_LAST: xed_iformfl_enum_t = 3694;
pub const XED_IFORMFL_VCVTTPD2UQQ_FIRST: xed_iformfl_enum_t = 3695;
pub const XED_IFORMFL_VCVTTPD2UQQ_LAST: xed_iformfl_enum_t = 3700;
pub const XED_IFORMFL_VCVTTPH2DQ_FIRST: xed_iformfl_enum_t = 3701;
pub const XED_IFORMFL_VCVTTPH2DQ_LAST: xed_iformfl_enum_t = 3706;
pub const XED_IFORMFL_VCVTTPH2QQ_FIRST: xed_iformfl_enum_t = 3707;
pub const XED_IFORMFL_VCVTTPH2QQ_LAST: xed_iformfl_enum_t = 3712;
pub const XED_IFORMFL_VCVTTPH2UDQ_FIRST: xed_iformfl_enum_t = 3713;
pub const XED_IFORMFL_VCVTTPH2UDQ_LAST: xed_iformfl_enum_t = 3718;
pub const XED_IFORMFL_VCVTTPH2UQQ_FIRST: xed_iformfl_enum_t = 3719;
pub const XED_IFORMFL_VCVTTPH2UQQ_LAST: xed_iformfl_enum_t = 3724;
pub const XED_IFORMFL_VCVTTPH2UW_FIRST: xed_iformfl_enum_t = 3725;
pub const XED_IFORMFL_VCVTTPH2UW_LAST: xed_iformfl_enum_t = 3730;
pub const XED_IFORMFL_VCVTTPH2W_FIRST: xed_iformfl_enum_t = 3731;
pub const XED_IFORMFL_VCVTTPH2W_LAST: xed_iformfl_enum_t = 3736;
pub const XED_IFORMFL_VCVTTPS2DQ_FIRST: xed_iformfl_enum_t = 3737;
pub const XED_IFORMFL_VCVTTPS2DQ_LAST: xed_iformfl_enum_t = 3746;
pub const XED_IFORMFL_VCVTTPS2QQ_FIRST: xed_iformfl_enum_t = 3747;
pub const XED_IFORMFL_VCVTTPS2QQ_LAST: xed_iformfl_enum_t = 3752;
pub const XED_IFORMFL_VCVTTPS2UDQ_FIRST: xed_iformfl_enum_t = 3753;
pub const XED_IFORMFL_VCVTTPS2UDQ_LAST: xed_iformfl_enum_t = 3758;
pub const XED_IFORMFL_VCVTTPS2UQQ_FIRST: xed_iformfl_enum_t = 3759;
pub const XED_IFORMFL_VCVTTPS2UQQ_LAST: xed_iformfl_enum_t = 3764;
pub const XED_IFORMFL_VCVTTSD2SI_FIRST: xed_iformfl_enum_t = 3765;
pub const XED_IFORMFL_VCVTTSD2SI_LAST: xed_iformfl_enum_t = 3772;
pub const XED_IFORMFL_VCVTTSD2USI_FIRST: xed_iformfl_enum_t = 3773;
pub const XED_IFORMFL_VCVTTSD2USI_LAST: xed_iformfl_enum_t = 3776;
pub const XED_IFORMFL_VCVTTSH2SI_FIRST: xed_iformfl_enum_t = 3777;
pub const XED_IFORMFL_VCVTTSH2SI_LAST: xed_iformfl_enum_t = 3780;
pub const XED_IFORMFL_VCVTTSH2USI_FIRST: xed_iformfl_enum_t = 3781;
pub const XED_IFORMFL_VCVTTSH2USI_LAST: xed_iformfl_enum_t = 3784;
pub const XED_IFORMFL_VCVTTSS2SI_FIRST: xed_iformfl_enum_t = 3785;
pub const XED_IFORMFL_VCVTTSS2SI_LAST: xed_iformfl_enum_t = 3792;
pub const XED_IFORMFL_VCVTTSS2USI_FIRST: xed_iformfl_enum_t = 3793;
pub const XED_IFORMFL_VCVTTSS2USI_LAST: xed_iformfl_enum_t = 3796;
pub const XED_IFORMFL_VCVTUDQ2PD_FIRST: xed_iformfl_enum_t = 3797;
pub const XED_IFORMFL_VCVTUDQ2PD_LAST: xed_iformfl_enum_t = 3802;
pub const XED_IFORMFL_VCVTUDQ2PH_FIRST: xed_iformfl_enum_t = 3803;
pub const XED_IFORMFL_VCVTUDQ2PH_LAST: xed_iformfl_enum_t = 3808;
pub const XED_IFORMFL_VCVTUDQ2PS_FIRST: xed_iformfl_enum_t = 3809;
pub const XED_IFORMFL_VCVTUDQ2PS_LAST: xed_iformfl_enum_t = 3814;
pub const XED_IFORMFL_VCVTUQQ2PD_FIRST: xed_iformfl_enum_t = 3815;
pub const XED_IFORMFL_VCVTUQQ2PD_LAST: xed_iformfl_enum_t = 3820;
pub const XED_IFORMFL_VCVTUQQ2PH_FIRST: xed_iformfl_enum_t = 3821;
pub const XED_IFORMFL_VCVTUQQ2PH_LAST: xed_iformfl_enum_t = 3826;
pub const XED_IFORMFL_VCVTUQQ2PS_FIRST: xed_iformfl_enum_t = 3827;
pub const XED_IFORMFL_VCVTUQQ2PS_LAST: xed_iformfl_enum_t = 3832;
pub const XED_IFORMFL_VCVTUSI2SD_FIRST: xed_iformfl_enum_t = 3833;
pub const XED_IFORMFL_VCVTUSI2SD_LAST: xed_iformfl_enum_t = 3836;
pub const XED_IFORMFL_VCVTUSI2SH_FIRST: xed_iformfl_enum_t = 3837;
pub const XED_IFORMFL_VCVTUSI2SH_LAST: xed_iformfl_enum_t = 3840;
pub const XED_IFORMFL_VCVTUSI2SS_FIRST: xed_iformfl_enum_t = 3841;
pub const XED_IFORMFL_VCVTUSI2SS_LAST: xed_iformfl_enum_t = 3844;
pub const XED_IFORMFL_VCVTUW2PH_FIRST: xed_iformfl_enum_t = 3845;
pub const XED_IFORMFL_VCVTUW2PH_LAST: xed_iformfl_enum_t = 3850;
pub const XED_IFORMFL_VCVTW2PH_FIRST: xed_iformfl_enum_t = 3851;
pub const XED_IFORMFL_VCVTW2PH_LAST: xed_iformfl_enum_t = 3856;
pub const XED_IFORMFL_VDBPSADBW_FIRST: xed_iformfl_enum_t = 3857;
pub const XED_IFORMFL_VDBPSADBW_LAST: xed_iformfl_enum_t = 3862;
pub const XED_IFORMFL_VDIVPD_FIRST: xed_iformfl_enum_t = 3863;
pub const XED_IFORMFL_VDIVPD_LAST: xed_iformfl_enum_t = 3872;
pub const XED_IFORMFL_VDIVPH_FIRST: xed_iformfl_enum_t = 3873;
pub const XED_IFORMFL_VDIVPH_LAST: xed_iformfl_enum_t = 3878;
pub const XED_IFORMFL_VDIVPS_FIRST: xed_iformfl_enum_t = 3879;
pub const XED_IFORMFL_VDIVPS_LAST: xed_iformfl_enum_t = 3888;
pub const XED_IFORMFL_VDIVSD_FIRST: xed_iformfl_enum_t = 3889;
pub const XED_IFORMFL_VDIVSD_LAST: xed_iformfl_enum_t = 3892;
pub const XED_IFORMFL_VDIVSH_FIRST: xed_iformfl_enum_t = 3893;
pub const XED_IFORMFL_VDIVSH_LAST: xed_iformfl_enum_t = 3894;
pub const XED_IFORMFL_VDIVSS_FIRST: xed_iformfl_enum_t = 3895;
pub const XED_IFORMFL_VDIVSS_LAST: xed_iformfl_enum_t = 3898;
pub const XED_IFORMFL_VDPBF16PS_FIRST: xed_iformfl_enum_t = 3899;
pub const XED_IFORMFL_VDPBF16PS_LAST: xed_iformfl_enum_t = 3904;
pub const XED_IFORMFL_VDPPD_FIRST: xed_iformfl_enum_t = 3905;
pub const XED_IFORMFL_VDPPD_LAST: xed_iformfl_enum_t = 3906;
pub const XED_IFORMFL_VDPPS_FIRST: xed_iformfl_enum_t = 3907;
pub const XED_IFORMFL_VDPPS_LAST: xed_iformfl_enum_t = 3910;
pub const XED_IFORMFL_VERR_FIRST: xed_iformfl_enum_t = 3911;
pub const XED_IFORMFL_VERR_LAST: xed_iformfl_enum_t = 3912;
pub const XED_IFORMFL_VERW_FIRST: xed_iformfl_enum_t = 3913;
pub const XED_IFORMFL_VERW_LAST: xed_iformfl_enum_t = 3914;
pub const XED_IFORMFL_VEXP2PD_FIRST: xed_iformfl_enum_t = 3915;
pub const XED_IFORMFL_VEXP2PD_LAST: xed_iformfl_enum_t = 3916;
pub const XED_IFORMFL_VEXP2PS_FIRST: xed_iformfl_enum_t = 3917;
pub const XED_IFORMFL_VEXP2PS_LAST: xed_iformfl_enum_t = 3918;
pub const XED_IFORMFL_VEXPANDPD_FIRST: xed_iformfl_enum_t = 3919;
pub const XED_IFORMFL_VEXPANDPD_LAST: xed_iformfl_enum_t = 3924;
pub const XED_IFORMFL_VEXPANDPS_FIRST: xed_iformfl_enum_t = 3925;
pub const XED_IFORMFL_VEXPANDPS_LAST: xed_iformfl_enum_t = 3930;
pub const XED_IFORMFL_VEXTRACTF128_FIRST: xed_iformfl_enum_t = 3931;
pub const XED_IFORMFL_VEXTRACTF128_LAST: xed_iformfl_enum_t = 3932;
pub const XED_IFORMFL_VEXTRACTF32X4_FIRST: xed_iformfl_enum_t = 3933;
pub const XED_IFORMFL_VEXTRACTF32X4_LAST: xed_iformfl_enum_t = 3936;
pub const XED_IFORMFL_VEXTRACTF32X8_FIRST: xed_iformfl_enum_t = 3937;
pub const XED_IFORMFL_VEXTRACTF32X8_LAST: xed_iformfl_enum_t = 3938;
pub const XED_IFORMFL_VEXTRACTF64X2_FIRST: xed_iformfl_enum_t = 3939;
pub const XED_IFORMFL_VEXTRACTF64X2_LAST: xed_iformfl_enum_t = 3942;
pub const XED_IFORMFL_VEXTRACTF64X4_FIRST: xed_iformfl_enum_t = 3943;
pub const XED_IFORMFL_VEXTRACTF64X4_LAST: xed_iformfl_enum_t = 3944;
pub const XED_IFORMFL_VEXTRACTI128_FIRST: xed_iformfl_enum_t = 3945;
pub const XED_IFORMFL_VEXTRACTI128_LAST: xed_iformfl_enum_t = 3946;
pub const XED_IFORMFL_VEXTRACTI32X4_FIRST: xed_iformfl_enum_t = 3947;
pub const XED_IFORMFL_VEXTRACTI32X4_LAST: xed_iformfl_enum_t = 3950;
pub const XED_IFORMFL_VEXTRACTI32X8_FIRST: xed_iformfl_enum_t = 3951;
pub const XED_IFORMFL_VEXTRACTI32X8_LAST: xed_iformfl_enum_t = 3952;
pub const XED_IFORMFL_VEXTRACTI64X2_FIRST: xed_iformfl_enum_t = 3953;
pub const XED_IFORMFL_VEXTRACTI64X2_LAST: xed_iformfl_enum_t = 3956;
pub const XED_IFORMFL_VEXTRACTI64X4_FIRST: xed_iformfl_enum_t = 3957;
pub const XED_IFORMFL_VEXTRACTI64X4_LAST: xed_iformfl_enum_t = 3958;
pub const XED_IFORMFL_VEXTRACTPS_FIRST: xed_iformfl_enum_t = 3959;
pub const XED_IFORMFL_VEXTRACTPS_LAST: xed_iformfl_enum_t = 3962;
pub const XED_IFORMFL_VFCMADDCPH_FIRST: xed_iformfl_enum_t = 3963;
pub const XED_IFORMFL_VFCMADDCPH_LAST: xed_iformfl_enum_t = 3968;
pub const XED_IFORMFL_VFCMADDCSH_FIRST: xed_iformfl_enum_t = 3969;
pub const XED_IFORMFL_VFCMADDCSH_LAST: xed_iformfl_enum_t = 3970;
pub const XED_IFORMFL_VFCMULCPH_FIRST: xed_iformfl_enum_t = 3971;
pub const XED_IFORMFL_VFCMULCPH_LAST: xed_iformfl_enum_t = 3976;
pub const XED_IFORMFL_VFCMULCSH_FIRST: xed_iformfl_enum_t = 3977;
pub const XED_IFORMFL_VFCMULCSH_LAST: xed_iformfl_enum_t = 3978;
pub const XED_IFORMFL_VFIXUPIMMPD_FIRST: xed_iformfl_enum_t = 3979;
pub const XED_IFORMFL_VFIXUPIMMPD_LAST: xed_iformfl_enum_t = 3984;
pub const XED_IFORMFL_VFIXUPIMMPS_FIRST: xed_iformfl_enum_t = 3985;
pub const XED_IFORMFL_VFIXUPIMMPS_LAST: xed_iformfl_enum_t = 3990;
pub const XED_IFORMFL_VFIXUPIMMSD_FIRST: xed_iformfl_enum_t = 3991;
pub const XED_IFORMFL_VFIXUPIMMSD_LAST: xed_iformfl_enum_t = 3992;
pub const XED_IFORMFL_VFIXUPIMMSS_FIRST: xed_iformfl_enum_t = 3993;
pub const XED_IFORMFL_VFIXUPIMMSS_LAST: xed_iformfl_enum_t = 3994;
pub const XED_IFORMFL_VFMADD132PD_FIRST: xed_iformfl_enum_t = 3995;
pub const XED_IFORMFL_VFMADD132PD_LAST: xed_iformfl_enum_t = 4004;
pub const XED_IFORMFL_VFMADD132PH_FIRST: xed_iformfl_enum_t = 4005;
pub const XED_IFORMFL_VFMADD132PH_LAST: xed_iformfl_enum_t = 4010;
pub const XED_IFORMFL_VFMADD132PS_FIRST: xed_iformfl_enum_t = 4011;
pub const XED_IFORMFL_VFMADD132PS_LAST: xed_iformfl_enum_t = 4020;
pub const XED_IFORMFL_VFMADD132SD_FIRST: xed_iformfl_enum_t = 4021;
pub const XED_IFORMFL_VFMADD132SD_LAST: xed_iformfl_enum_t = 4024;
pub const XED_IFORMFL_VFMADD132SH_FIRST: xed_iformfl_enum_t = 4025;
pub const XED_IFORMFL_VFMADD132SH_LAST: xed_iformfl_enum_t = 4026;
pub const XED_IFORMFL_VFMADD132SS_FIRST: xed_iformfl_enum_t = 4027;
pub const XED_IFORMFL_VFMADD132SS_LAST: xed_iformfl_enum_t = 4030;
pub const XED_IFORMFL_VFMADD213PD_FIRST: xed_iformfl_enum_t = 4031;
pub const XED_IFORMFL_VFMADD213PD_LAST: xed_iformfl_enum_t = 4040;
pub const XED_IFORMFL_VFMADD213PH_FIRST: xed_iformfl_enum_t = 4041;
pub const XED_IFORMFL_VFMADD213PH_LAST: xed_iformfl_enum_t = 4046;
pub const XED_IFORMFL_VFMADD213PS_FIRST: xed_iformfl_enum_t = 4047;
pub const XED_IFORMFL_VFMADD213PS_LAST: xed_iformfl_enum_t = 4056;
pub const XED_IFORMFL_VFMADD213SD_FIRST: xed_iformfl_enum_t = 4057;
pub const XED_IFORMFL_VFMADD213SD_LAST: xed_iformfl_enum_t = 4060;
pub const XED_IFORMFL_VFMADD213SH_FIRST: xed_iformfl_enum_t = 4061;
pub const XED_IFORMFL_VFMADD213SH_LAST: xed_iformfl_enum_t = 4062;
pub const XED_IFORMFL_VFMADD213SS_FIRST: xed_iformfl_enum_t = 4063;
pub const XED_IFORMFL_VFMADD213SS_LAST: xed_iformfl_enum_t = 4066;
pub const XED_IFORMFL_VFMADD231PD_FIRST: xed_iformfl_enum_t = 4067;
pub const XED_IFORMFL_VFMADD231PD_LAST: xed_iformfl_enum_t = 4076;
pub const XED_IFORMFL_VFMADD231PH_FIRST: xed_iformfl_enum_t = 4077;
pub const XED_IFORMFL_VFMADD231PH_LAST: xed_iformfl_enum_t = 4082;
pub const XED_IFORMFL_VFMADD231PS_FIRST: xed_iformfl_enum_t = 4083;
pub const XED_IFORMFL_VFMADD231PS_LAST: xed_iformfl_enum_t = 4092;
pub const XED_IFORMFL_VFMADD231SD_FIRST: xed_iformfl_enum_t = 4093;
pub const XED_IFORMFL_VFMADD231SD_LAST: xed_iformfl_enum_t = 4096;
pub const XED_IFORMFL_VFMADD231SH_FIRST: xed_iformfl_enum_t = 4097;
pub const XED_IFORMFL_VFMADD231SH_LAST: xed_iformfl_enum_t = 4098;
pub const XED_IFORMFL_VFMADD231SS_FIRST: xed_iformfl_enum_t = 4099;
pub const XED_IFORMFL_VFMADD231SS_LAST: xed_iformfl_enum_t = 4102;
pub const XED_IFORMFL_VFMADDCPH_FIRST: xed_iformfl_enum_t = 4103;
pub const XED_IFORMFL_VFMADDCPH_LAST: xed_iformfl_enum_t = 4108;
pub const XED_IFORMFL_VFMADDCSH_FIRST: xed_iformfl_enum_t = 4109;
pub const XED_IFORMFL_VFMADDCSH_LAST: xed_iformfl_enum_t = 4110;
pub const XED_IFORMFL_VFMADDPD_FIRST: xed_iformfl_enum_t = 4111;
pub const XED_IFORMFL_VFMADDPD_LAST: xed_iformfl_enum_t = 4116;
pub const XED_IFORMFL_VFMADDPS_FIRST: xed_iformfl_enum_t = 4117;
pub const XED_IFORMFL_VFMADDPS_LAST: xed_iformfl_enum_t = 4122;
pub const XED_IFORMFL_VFMADDSD_FIRST: xed_iformfl_enum_t = 4123;
pub const XED_IFORMFL_VFMADDSD_LAST: xed_iformfl_enum_t = 4125;
pub const XED_IFORMFL_VFMADDSS_FIRST: xed_iformfl_enum_t = 4126;
pub const XED_IFORMFL_VFMADDSS_LAST: xed_iformfl_enum_t = 4128;
pub const XED_IFORMFL_VFMADDSUB132PD_FIRST: xed_iformfl_enum_t = 4129;
pub const XED_IFORMFL_VFMADDSUB132PD_LAST: xed_iformfl_enum_t = 4138;
pub const XED_IFORMFL_VFMADDSUB132PH_FIRST: xed_iformfl_enum_t = 4139;
pub const XED_IFORMFL_VFMADDSUB132PH_LAST: xed_iformfl_enum_t = 4144;
pub const XED_IFORMFL_VFMADDSUB132PS_FIRST: xed_iformfl_enum_t = 4145;
pub const XED_IFORMFL_VFMADDSUB132PS_LAST: xed_iformfl_enum_t = 4154;
pub const XED_IFORMFL_VFMADDSUB213PD_FIRST: xed_iformfl_enum_t = 4155;
pub const XED_IFORMFL_VFMADDSUB213PD_LAST: xed_iformfl_enum_t = 4164;
pub const XED_IFORMFL_VFMADDSUB213PH_FIRST: xed_iformfl_enum_t = 4165;
pub const XED_IFORMFL_VFMADDSUB213PH_LAST: xed_iformfl_enum_t = 4170;
pub const XED_IFORMFL_VFMADDSUB213PS_FIRST: xed_iformfl_enum_t = 4171;
pub const XED_IFORMFL_VFMADDSUB213PS_LAST: xed_iformfl_enum_t = 4180;
pub const XED_IFORMFL_VFMADDSUB231PD_FIRST: xed_iformfl_enum_t = 4181;
pub const XED_IFORMFL_VFMADDSUB231PD_LAST: xed_iformfl_enum_t = 4190;
pub const XED_IFORMFL_VFMADDSUB231PH_FIRST: xed_iformfl_enum_t = 4191;
pub const XED_IFORMFL_VFMADDSUB231PH_LAST: xed_iformfl_enum_t = 4196;
pub const XED_IFORMFL_VFMADDSUB231PS_FIRST: xed_iformfl_enum_t = 4197;
pub const XED_IFORMFL_VFMADDSUB231PS_LAST: xed_iformfl_enum_t = 4206;
pub const XED_IFORMFL_VFMADDSUBPD_FIRST: xed_iformfl_enum_t = 4207;
pub const XED_IFORMFL_VFMADDSUBPD_LAST: xed_iformfl_enum_t = 4212;
pub const XED_IFORMFL_VFMADDSUBPS_FIRST: xed_iformfl_enum_t = 4213;
pub const XED_IFORMFL_VFMADDSUBPS_LAST: xed_iformfl_enum_t = 4218;
pub const XED_IFORMFL_VFMSUB132PD_FIRST: xed_iformfl_enum_t = 4219;
pub const XED_IFORMFL_VFMSUB132PD_LAST: xed_iformfl_enum_t = 4228;
pub const XED_IFORMFL_VFMSUB132PH_FIRST: xed_iformfl_enum_t = 4229;
pub const XED_IFORMFL_VFMSUB132PH_LAST: xed_iformfl_enum_t = 4234;
pub const XED_IFORMFL_VFMSUB132PS_FIRST: xed_iformfl_enum_t = 4235;
pub const XED_IFORMFL_VFMSUB132PS_LAST: xed_iformfl_enum_t = 4244;
pub const XED_IFORMFL_VFMSUB132SD_FIRST: xed_iformfl_enum_t = 4245;
pub const XED_IFORMFL_VFMSUB132SD_LAST: xed_iformfl_enum_t = 4248;
pub const XED_IFORMFL_VFMSUB132SH_FIRST: xed_iformfl_enum_t = 4249;
pub const XED_IFORMFL_VFMSUB132SH_LAST: xed_iformfl_enum_t = 4250;
pub const XED_IFORMFL_VFMSUB132SS_FIRST: xed_iformfl_enum_t = 4251;
pub const XED_IFORMFL_VFMSUB132SS_LAST: xed_iformfl_enum_t = 4254;
pub const XED_IFORMFL_VFMSUB213PD_FIRST: xed_iformfl_enum_t = 4255;
pub const XED_IFORMFL_VFMSUB213PD_LAST: xed_iformfl_enum_t = 4264;
pub const XED_IFORMFL_VFMSUB213PH_FIRST: xed_iformfl_enum_t = 4265;
pub const XED_IFORMFL_VFMSUB213PH_LAST: xed_iformfl_enum_t = 4270;
pub const XED_IFORMFL_VFMSUB213PS_FIRST: xed_iformfl_enum_t = 4271;
pub const XED_IFORMFL_VFMSUB213PS_LAST: xed_iformfl_enum_t = 4280;
pub const XED_IFORMFL_VFMSUB213SD_FIRST: xed_iformfl_enum_t = 4281;
pub const XED_IFORMFL_VFMSUB213SD_LAST: xed_iformfl_enum_t = 4284;
pub const XED_IFORMFL_VFMSUB213SH_FIRST: xed_iformfl_enum_t = 4285;
pub const XED_IFORMFL_VFMSUB213SH_LAST: xed_iformfl_enum_t = 4286;
pub const XED_IFORMFL_VFMSUB213SS_FIRST: xed_iformfl_enum_t = 4287;
pub const XED_IFORMFL_VFMSUB213SS_LAST: xed_iformfl_enum_t = 4290;
pub const XED_IFORMFL_VFMSUB231PD_FIRST: xed_iformfl_enum_t = 4291;
pub const XED_IFORMFL_VFMSUB231PD_LAST: xed_iformfl_enum_t = 4300;
pub const XED_IFORMFL_VFMSUB231PH_FIRST: xed_iformfl_enum_t = 4301;
pub const XED_IFORMFL_VFMSUB231PH_LAST: xed_iformfl_enum_t = 4306;
pub const XED_IFORMFL_VFMSUB231PS_FIRST: xed_iformfl_enum_t = 4307;
pub const XED_IFORMFL_VFMSUB231PS_LAST: xed_iformfl_enum_t = 4316;
pub const XED_IFORMFL_VFMSUB231SD_FIRST: xed_iformfl_enum_t = 4317;
pub const XED_IFORMFL_VFMSUB231SD_LAST: xed_iformfl_enum_t = 4320;
pub const XED_IFORMFL_VFMSUB231SH_FIRST: xed_iformfl_enum_t = 4321;
pub const XED_IFORMFL_VFMSUB231SH_LAST: xed_iformfl_enum_t = 4322;
pub const XED_IFORMFL_VFMSUB231SS_FIRST: xed_iformfl_enum_t = 4323;
pub const XED_IFORMFL_VFMSUB231SS_LAST: xed_iformfl_enum_t = 4326;
pub const XED_IFORMFL_VFMSUBADD132PD_FIRST: xed_iformfl_enum_t = 4327;
pub const XED_IFORMFL_VFMSUBADD132PD_LAST: xed_iformfl_enum_t = 4336;
pub const XED_IFORMFL_VFMSUBADD132PH_FIRST: xed_iformfl_enum_t = 4337;
pub const XED_IFORMFL_VFMSUBADD132PH_LAST: xed_iformfl_enum_t = 4342;
pub const XED_IFORMFL_VFMSUBADD132PS_FIRST: xed_iformfl_enum_t = 4343;
pub const XED_IFORMFL_VFMSUBADD132PS_LAST: xed_iformfl_enum_t = 4352;
pub const XED_IFORMFL_VFMSUBADD213PD_FIRST: xed_iformfl_enum_t = 4353;
pub const XED_IFORMFL_VFMSUBADD213PD_LAST: xed_iformfl_enum_t = 4362;
pub const XED_IFORMFL_VFMSUBADD213PH_FIRST: xed_iformfl_enum_t = 4363;
pub const XED_IFORMFL_VFMSUBADD213PH_LAST: xed_iformfl_enum_t = 4368;
pub const XED_IFORMFL_VFMSUBADD213PS_FIRST: xed_iformfl_enum_t = 4369;
pub const XED_IFORMFL_VFMSUBADD213PS_LAST: xed_iformfl_enum_t = 4378;
pub const XED_IFORMFL_VFMSUBADD231PD_FIRST: xed_iformfl_enum_t = 4379;
pub const XED_IFORMFL_VFMSUBADD231PD_LAST: xed_iformfl_enum_t = 4388;
pub const XED_IFORMFL_VFMSUBADD231PH_FIRST: xed_iformfl_enum_t = 4389;
pub const XED_IFORMFL_VFMSUBADD231PH_LAST: xed_iformfl_enum_t = 4394;
pub const XED_IFORMFL_VFMSUBADD231PS_FIRST: xed_iformfl_enum_t = 4395;
pub const XED_IFORMFL_VFMSUBADD231PS_LAST: xed_iformfl_enum_t = 4404;
pub const XED_IFORMFL_VFMSUBADDPD_FIRST: xed_iformfl_enum_t = 4405;
pub const XED_IFORMFL_VFMSUBADDPD_LAST: xed_iformfl_enum_t = 4410;
pub const XED_IFORMFL_VFMSUBADDPS_FIRST: xed_iformfl_enum_t = 4411;
pub const XED_IFORMFL_VFMSUBADDPS_LAST: xed_iformfl_enum_t = 4416;
pub const XED_IFORMFL_VFMSUBPD_FIRST: xed_iformfl_enum_t = 4417;
pub const XED_IFORMFL_VFMSUBPD_LAST: xed_iformfl_enum_t = 4422;
pub const XED_IFORMFL_VFMSUBPS_FIRST: xed_iformfl_enum_t = 4423;
pub const XED_IFORMFL_VFMSUBPS_LAST: xed_iformfl_enum_t = 4428;
pub const XED_IFORMFL_VFMSUBSD_FIRST: xed_iformfl_enum_t = 4429;
pub const XED_IFORMFL_VFMSUBSD_LAST: xed_iformfl_enum_t = 4431;
pub const XED_IFORMFL_VFMSUBSS_FIRST: xed_iformfl_enum_t = 4432;
pub const XED_IFORMFL_VFMSUBSS_LAST: xed_iformfl_enum_t = 4434;
pub const XED_IFORMFL_VFMULCPH_FIRST: xed_iformfl_enum_t = 4435;
pub const XED_IFORMFL_VFMULCPH_LAST: xed_iformfl_enum_t = 4440;
pub const XED_IFORMFL_VFMULCSH_FIRST: xed_iformfl_enum_t = 4441;
pub const XED_IFORMFL_VFMULCSH_LAST: xed_iformfl_enum_t = 4442;
pub const XED_IFORMFL_VFNMADD132PD_FIRST: xed_iformfl_enum_t = 4443;
pub const XED_IFORMFL_VFNMADD132PD_LAST: xed_iformfl_enum_t = 4452;
pub const XED_IFORMFL_VFNMADD132PH_FIRST: xed_iformfl_enum_t = 4453;
pub const XED_IFORMFL_VFNMADD132PH_LAST: xed_iformfl_enum_t = 4458;
pub const XED_IFORMFL_VFNMADD132PS_FIRST: xed_iformfl_enum_t = 4459;
pub const XED_IFORMFL_VFNMADD132PS_LAST: xed_iformfl_enum_t = 4468;
pub const XED_IFORMFL_VFNMADD132SD_FIRST: xed_iformfl_enum_t = 4469;
pub const XED_IFORMFL_VFNMADD132SD_LAST: xed_iformfl_enum_t = 4472;
pub const XED_IFORMFL_VFNMADD132SH_FIRST: xed_iformfl_enum_t = 4473;
pub const XED_IFORMFL_VFNMADD132SH_LAST: xed_iformfl_enum_t = 4474;
pub const XED_IFORMFL_VFNMADD132SS_FIRST: xed_iformfl_enum_t = 4475;
pub const XED_IFORMFL_VFNMADD132SS_LAST: xed_iformfl_enum_t = 4478;
pub const XED_IFORMFL_VFNMADD213PD_FIRST: xed_iformfl_enum_t = 4479;
pub const XED_IFORMFL_VFNMADD213PD_LAST: xed_iformfl_enum_t = 4488;
pub const XED_IFORMFL_VFNMADD213PH_FIRST: xed_iformfl_enum_t = 4489;
pub const XED_IFORMFL_VFNMADD213PH_LAST: xed_iformfl_enum_t = 4494;
pub const XED_IFORMFL_VFNMADD213PS_FIRST: xed_iformfl_enum_t = 4495;
pub const XED_IFORMFL_VFNMADD213PS_LAST: xed_iformfl_enum_t = 4504;
pub const XED_IFORMFL_VFNMADD213SD_FIRST: xed_iformfl_enum_t = 4505;
pub const XED_IFORMFL_VFNMADD213SD_LAST: xed_iformfl_enum_t = 4508;
pub const XED_IFORMFL_VFNMADD213SH_FIRST: xed_iformfl_enum_t = 4509;
pub const XED_IFORMFL_VFNMADD213SH_LAST: xed_iformfl_enum_t = 4510;
pub const XED_IFORMFL_VFNMADD213SS_FIRST: xed_iformfl_enum_t = 4511;
pub const XED_IFORMFL_VFNMADD213SS_LAST: xed_iformfl_enum_t = 4514;
pub const XED_IFORMFL_VFNMADD231PD_FIRST: xed_iformfl_enum_t = 4515;
pub const XED_IFORMFL_VFNMADD231PD_LAST: xed_iformfl_enum_t = 4524;
pub const XED_IFORMFL_VFNMADD231PH_FIRST: xed_iformfl_enum_t = 4525;
pub const XED_IFORMFL_VFNMADD231PH_LAST: xed_iformfl_enum_t = 4530;
pub const XED_IFORMFL_VFNMADD231PS_FIRST: xed_iformfl_enum_t = 4531;
pub const XED_IFORMFL_VFNMADD231PS_LAST: xed_iformfl_enum_t = 4540;
pub const XED_IFORMFL_VFNMADD231SD_FIRST: xed_iformfl_enum_t = 4541;
pub const XED_IFORMFL_VFNMADD231SD_LAST: xed_iformfl_enum_t = 4544;
pub const XED_IFORMFL_VFNMADD231SH_FIRST: xed_iformfl_enum_t = 4545;
pub const XED_IFORMFL_VFNMADD231SH_LAST: xed_iformfl_enum_t = 4546;
pub const XED_IFORMFL_VFNMADD231SS_FIRST: xed_iformfl_enum_t = 4547;
pub const XED_IFORMFL_VFNMADD231SS_LAST: xed_iformfl_enum_t = 4550;
pub const XED_IFORMFL_VFNMADDPD_FIRST: xed_iformfl_enum_t = 4551;
pub const XED_IFORMFL_VFNMADDPD_LAST: xed_iformfl_enum_t = 4556;
pub const XED_IFORMFL_VFNMADDPS_FIRST: xed_iformfl_enum_t = 4557;
pub const XED_IFORMFL_VFNMADDPS_LAST: xed_iformfl_enum_t = 4562;
pub const XED_IFORMFL_VFNMADDSD_FIRST: xed_iformfl_enum_t = 4563;
pub const XED_IFORMFL_VFNMADDSD_LAST: xed_iformfl_enum_t = 4565;
pub const XED_IFORMFL_VFNMADDSS_FIRST: xed_iformfl_enum_t = 4566;
pub const XED_IFORMFL_VFNMADDSS_LAST: xed_iformfl_enum_t = 4568;
pub const XED_IFORMFL_VFNMSUB132PD_FIRST: xed_iformfl_enum_t = 4569;
pub const XED_IFORMFL_VFNMSUB132PD_LAST: xed_iformfl_enum_t = 4578;
pub const XED_IFORMFL_VFNMSUB132PH_FIRST: xed_iformfl_enum_t = 4579;
pub const XED_IFORMFL_VFNMSUB132PH_LAST: xed_iformfl_enum_t = 4584;
pub const XED_IFORMFL_VFNMSUB132PS_FIRST: xed_iformfl_enum_t = 4585;
pub const XED_IFORMFL_VFNMSUB132PS_LAST: xed_iformfl_enum_t = 4594;
pub const XED_IFORMFL_VFNMSUB132SD_FIRST: xed_iformfl_enum_t = 4595;
pub const XED_IFORMFL_VFNMSUB132SD_LAST: xed_iformfl_enum_t = 4598;
pub const XED_IFORMFL_VFNMSUB132SH_FIRST: xed_iformfl_enum_t = 4599;
pub const XED_IFORMFL_VFNMSUB132SH_LAST: xed_iformfl_enum_t = 4600;
pub const XED_IFORMFL_VFNMSUB132SS_FIRST: xed_iformfl_enum_t = 4601;
pub const XED_IFORMFL_VFNMSUB132SS_LAST: xed_iformfl_enum_t = 4604;
pub const XED_IFORMFL_VFNMSUB213PD_FIRST: xed_iformfl_enum_t = 4605;
pub const XED_IFORMFL_VFNMSUB213PD_LAST: xed_iformfl_enum_t = 4614;
pub const XED_IFORMFL_VFNMSUB213PH_FIRST: xed_iformfl_enum_t = 4615;
pub const XED_IFORMFL_VFNMSUB213PH_LAST: xed_iformfl_enum_t = 4620;
pub const XED_IFORMFL_VFNMSUB213PS_FIRST: xed_iformfl_enum_t = 4621;
pub const XED_IFORMFL_VFNMSUB213PS_LAST: xed_iformfl_enum_t = 4630;
pub const XED_IFORMFL_VFNMSUB213SD_FIRST: xed_iformfl_enum_t = 4631;
pub const XED_IFORMFL_VFNMSUB213SD_LAST: xed_iformfl_enum_t = 4634;
pub const XED_IFORMFL_VFNMSUB213SH_FIRST: xed_iformfl_enum_t = 4635;
pub const XED_IFORMFL_VFNMSUB213SH_LAST: xed_iformfl_enum_t = 4636;
pub const XED_IFORMFL_VFNMSUB213SS_FIRST: xed_iformfl_enum_t = 4637;
pub const XED_IFORMFL_VFNMSUB213SS_LAST: xed_iformfl_enum_t = 4640;
pub const XED_IFORMFL_VFNMSUB231PD_FIRST: xed_iformfl_enum_t = 4641;
pub const XED_IFORMFL_VFNMSUB231PD_LAST: xed_iformfl_enum_t = 4650;
pub const XED_IFORMFL_VFNMSUB231PH_FIRST: xed_iformfl_enum_t = 4651;
pub const XED_IFORMFL_VFNMSUB231PH_LAST: xed_iformfl_enum_t = 4656;
pub const XED_IFORMFL_VFNMSUB231PS_FIRST: xed_iformfl_enum_t = 4657;
pub const XED_IFORMFL_VFNMSUB231PS_LAST: xed_iformfl_enum_t = 4666;
pub const XED_IFORMFL_VFNMSUB231SD_FIRST: xed_iformfl_enum_t = 4667;
pub const XED_IFORMFL_VFNMSUB231SD_LAST: xed_iformfl_enum_t = 4670;
pub const XED_IFORMFL_VFNMSUB231SH_FIRST: xed_iformfl_enum_t = 4671;
pub const XED_IFORMFL_VFNMSUB231SH_LAST: xed_iformfl_enum_t = 4672;
pub const XED_IFORMFL_VFNMSUB231SS_FIRST: xed_iformfl_enum_t = 4673;
pub const XED_IFORMFL_VFNMSUB231SS_LAST: xed_iformfl_enum_t = 4676;
pub const XED_IFORMFL_VFNMSUBPD_FIRST: xed_iformfl_enum_t = 4677;
pub const XED_IFORMFL_VFNMSUBPD_LAST: xed_iformfl_enum_t = 4682;
pub const XED_IFORMFL_VFNMSUBPS_FIRST: xed_iformfl_enum_t = 4683;
pub const XED_IFORMFL_VFNMSUBPS_LAST: xed_iformfl_enum_t = 4688;
pub const XED_IFORMFL_VFNMSUBSD_FIRST: xed_iformfl_enum_t = 4689;
pub const XED_IFORMFL_VFNMSUBSD_LAST: xed_iformfl_enum_t = 4691;
pub const XED_IFORMFL_VFNMSUBSS_FIRST: xed_iformfl_enum_t = 4692;
pub const XED_IFORMFL_VFNMSUBSS_LAST: xed_iformfl_enum_t = 4694;
pub const XED_IFORMFL_VFPCLASSPD_FIRST: xed_iformfl_enum_t = 4695;
pub const XED_IFORMFL_VFPCLASSPD_LAST: xed_iformfl_enum_t = 4700;
pub const XED_IFORMFL_VFPCLASSPH_FIRST: xed_iformfl_enum_t = 4701;
pub const XED_IFORMFL_VFPCLASSPH_LAST: xed_iformfl_enum_t = 4706;
pub const XED_IFORMFL_VFPCLASSPS_FIRST: xed_iformfl_enum_t = 4707;
pub const XED_IFORMFL_VFPCLASSPS_LAST: xed_iformfl_enum_t = 4712;
pub const XED_IFORMFL_VFPCLASSSD_FIRST: xed_iformfl_enum_t = 4713;
pub const XED_IFORMFL_VFPCLASSSD_LAST: xed_iformfl_enum_t = 4714;
pub const XED_IFORMFL_VFPCLASSSH_FIRST: xed_iformfl_enum_t = 4715;
pub const XED_IFORMFL_VFPCLASSSH_LAST: xed_iformfl_enum_t = 4716;
pub const XED_IFORMFL_VFPCLASSSS_FIRST: xed_iformfl_enum_t = 4717;
pub const XED_IFORMFL_VFPCLASSSS_LAST: xed_iformfl_enum_t = 4718;
pub const XED_IFORMFL_VFRCZPD_FIRST: xed_iformfl_enum_t = 4719;
pub const XED_IFORMFL_VFRCZPD_LAST: xed_iformfl_enum_t = 4722;
pub const XED_IFORMFL_VFRCZPS_FIRST: xed_iformfl_enum_t = 4723;
pub const XED_IFORMFL_VFRCZPS_LAST: xed_iformfl_enum_t = 4726;
pub const XED_IFORMFL_VFRCZSD_FIRST: xed_iformfl_enum_t = 4727;
pub const XED_IFORMFL_VFRCZSD_LAST: xed_iformfl_enum_t = 4728;
pub const XED_IFORMFL_VFRCZSS_FIRST: xed_iformfl_enum_t = 4729;
pub const XED_IFORMFL_VFRCZSS_LAST: xed_iformfl_enum_t = 4730;
pub const XED_IFORMFL_VGATHERDPD_FIRST: xed_iformfl_enum_t = 4731;
pub const XED_IFORMFL_VGATHERDPD_LAST: xed_iformfl_enum_t = 4735;
pub const XED_IFORMFL_VGATHERDPS_FIRST: xed_iformfl_enum_t = 4736;
pub const XED_IFORMFL_VGATHERDPS_LAST: xed_iformfl_enum_t = 4740;
pub const XED_IFORMFL_VGATHERPF0DPD_FIRST: xed_iformfl_enum_t = 4741;
pub const XED_IFORMFL_VGATHERPF0DPD_LAST: xed_iformfl_enum_t = 4741;
pub const XED_IFORMFL_VGATHERPF0DPS_FIRST: xed_iformfl_enum_t = 4742;
pub const XED_IFORMFL_VGATHERPF0DPS_LAST: xed_iformfl_enum_t = 4742;
pub const XED_IFORMFL_VGATHERPF0QPD_FIRST: xed_iformfl_enum_t = 4743;
pub const XED_IFORMFL_VGATHERPF0QPD_LAST: xed_iformfl_enum_t = 4743;
pub const XED_IFORMFL_VGATHERPF0QPS_FIRST: xed_iformfl_enum_t = 4744;
pub const XED_IFORMFL_VGATHERPF0QPS_LAST: xed_iformfl_enum_t = 4744;
pub const XED_IFORMFL_VGATHERPF1DPD_FIRST: xed_iformfl_enum_t = 4745;
pub const XED_IFORMFL_VGATHERPF1DPD_LAST: xed_iformfl_enum_t = 4745;
pub const XED_IFORMFL_VGATHERPF1DPS_FIRST: xed_iformfl_enum_t = 4746;
pub const XED_IFORMFL_VGATHERPF1DPS_LAST: xed_iformfl_enum_t = 4746;
pub const XED_IFORMFL_VGATHERPF1QPD_FIRST: xed_iformfl_enum_t = 4747;
pub const XED_IFORMFL_VGATHERPF1QPD_LAST: xed_iformfl_enum_t = 4747;
pub const XED_IFORMFL_VGATHERPF1QPS_FIRST: xed_iformfl_enum_t = 4748;
pub const XED_IFORMFL_VGATHERPF1QPS_LAST: xed_iformfl_enum_t = 4748;
pub const XED_IFORMFL_VGATHERQPD_FIRST: xed_iformfl_enum_t = 4749;
pub const XED_IFORMFL_VGATHERQPD_LAST: xed_iformfl_enum_t = 4753;
pub const XED_IFORMFL_VGATHERQPS_FIRST: xed_iformfl_enum_t = 4754;
pub const XED_IFORMFL_VGATHERQPS_LAST: xed_iformfl_enum_t = 4758;
pub const XED_IFORMFL_VGETEXPPD_FIRST: xed_iformfl_enum_t = 4759;
pub const XED_IFORMFL_VGETEXPPD_LAST: xed_iformfl_enum_t = 4764;
pub const XED_IFORMFL_VGETEXPPH_FIRST: xed_iformfl_enum_t = 4765;
pub const XED_IFORMFL_VGETEXPPH_LAST: xed_iformfl_enum_t = 4770;
pub const XED_IFORMFL_VGETEXPPS_FIRST: xed_iformfl_enum_t = 4771;
pub const XED_IFORMFL_VGETEXPPS_LAST: xed_iformfl_enum_t = 4776;
pub const XED_IFORMFL_VGETEXPSD_FIRST: xed_iformfl_enum_t = 4777;
pub const XED_IFORMFL_VGETEXPSD_LAST: xed_iformfl_enum_t = 4778;
pub const XED_IFORMFL_VGETEXPSH_FIRST: xed_iformfl_enum_t = 4779;
pub const XED_IFORMFL_VGETEXPSH_LAST: xed_iformfl_enum_t = 4780;
pub const XED_IFORMFL_VGETEXPSS_FIRST: xed_iformfl_enum_t = 4781;
pub const XED_IFORMFL_VGETEXPSS_LAST: xed_iformfl_enum_t = 4782;
pub const XED_IFORMFL_VGETMANTPD_FIRST: xed_iformfl_enum_t = 4783;
pub const XED_IFORMFL_VGETMANTPD_LAST: xed_iformfl_enum_t = 4788;
pub const XED_IFORMFL_VGETMANTPH_FIRST: xed_iformfl_enum_t = 4789;
pub const XED_IFORMFL_VGETMANTPH_LAST: xed_iformfl_enum_t = 4794;
pub const XED_IFORMFL_VGETMANTPS_FIRST: xed_iformfl_enum_t = 4795;
pub const XED_IFORMFL_VGETMANTPS_LAST: xed_iformfl_enum_t = 4800;
pub const XED_IFORMFL_VGETMANTSD_FIRST: xed_iformfl_enum_t = 4801;
pub const XED_IFORMFL_VGETMANTSD_LAST: xed_iformfl_enum_t = 4802;
pub const XED_IFORMFL_VGETMANTSH_FIRST: xed_iformfl_enum_t = 4803;
pub const XED_IFORMFL_VGETMANTSH_LAST: xed_iformfl_enum_t = 4804;
pub const XED_IFORMFL_VGETMANTSS_FIRST: xed_iformfl_enum_t = 4805;
pub const XED_IFORMFL_VGETMANTSS_LAST: xed_iformfl_enum_t = 4806;
pub const XED_IFORMFL_VGF2P8AFFINEINVQB_FIRST: xed_iformfl_enum_t = 4807;
pub const XED_IFORMFL_VGF2P8AFFINEINVQB_LAST: xed_iformfl_enum_t = 4816;
pub const XED_IFORMFL_VGF2P8AFFINEQB_FIRST: xed_iformfl_enum_t = 4817;
pub const XED_IFORMFL_VGF2P8AFFINEQB_LAST: xed_iformfl_enum_t = 4826;
pub const XED_IFORMFL_VGF2P8MULB_FIRST: xed_iformfl_enum_t = 4827;
pub const XED_IFORMFL_VGF2P8MULB_LAST: xed_iformfl_enum_t = 4836;
pub const XED_IFORMFL_VHADDPD_FIRST: xed_iformfl_enum_t = 4837;
pub const XED_IFORMFL_VHADDPD_LAST: xed_iformfl_enum_t = 4840;
pub const XED_IFORMFL_VHADDPS_FIRST: xed_iformfl_enum_t = 4841;
pub const XED_IFORMFL_VHADDPS_LAST: xed_iformfl_enum_t = 4844;
pub const XED_IFORMFL_VHSUBPD_FIRST: xed_iformfl_enum_t = 4845;
pub const XED_IFORMFL_VHSUBPD_LAST: xed_iformfl_enum_t = 4848;
pub const XED_IFORMFL_VHSUBPS_FIRST: xed_iformfl_enum_t = 4849;
pub const XED_IFORMFL_VHSUBPS_LAST: xed_iformfl_enum_t = 4852;
pub const XED_IFORMFL_VINSERTF128_FIRST: xed_iformfl_enum_t = 4853;
pub const XED_IFORMFL_VINSERTF128_LAST: xed_iformfl_enum_t = 4854;
pub const XED_IFORMFL_VINSERTF32X4_FIRST: xed_iformfl_enum_t = 4855;
pub const XED_IFORMFL_VINSERTF32X4_LAST: xed_iformfl_enum_t = 4858;
pub const XED_IFORMFL_VINSERTF32X8_FIRST: xed_iformfl_enum_t = 4859;
pub const XED_IFORMFL_VINSERTF32X8_LAST: xed_iformfl_enum_t = 4860;
pub const XED_IFORMFL_VINSERTF64X2_FIRST: xed_iformfl_enum_t = 4861;
pub const XED_IFORMFL_VINSERTF64X2_LAST: xed_iformfl_enum_t = 4864;
pub const XED_IFORMFL_VINSERTF64X4_FIRST: xed_iformfl_enum_t = 4865;
pub const XED_IFORMFL_VINSERTF64X4_LAST: xed_iformfl_enum_t = 4866;
pub const XED_IFORMFL_VINSERTI128_FIRST: xed_iformfl_enum_t = 4867;
pub const XED_IFORMFL_VINSERTI128_LAST: xed_iformfl_enum_t = 4868;
pub const XED_IFORMFL_VINSERTI32X4_FIRST: xed_iformfl_enum_t = 4869;
pub const XED_IFORMFL_VINSERTI32X4_LAST: xed_iformfl_enum_t = 4872;
pub const XED_IFORMFL_VINSERTI32X8_FIRST: xed_iformfl_enum_t = 4873;
pub const XED_IFORMFL_VINSERTI32X8_LAST: xed_iformfl_enum_t = 4874;
pub const XED_IFORMFL_VINSERTI64X2_FIRST: xed_iformfl_enum_t = 4875;
pub const XED_IFORMFL_VINSERTI64X2_LAST: xed_iformfl_enum_t = 4878;
pub const XED_IFORMFL_VINSERTI64X4_FIRST: xed_iformfl_enum_t = 4879;
pub const XED_IFORMFL_VINSERTI64X4_LAST: xed_iformfl_enum_t = 4880;
pub const XED_IFORMFL_VINSERTPS_FIRST: xed_iformfl_enum_t = 4881;
pub const XED_IFORMFL_VINSERTPS_LAST: xed_iformfl_enum_t = 4884;
pub const XED_IFORMFL_VLDDQU_FIRST: xed_iformfl_enum_t = 4885;
pub const XED_IFORMFL_VLDDQU_LAST: xed_iformfl_enum_t = 4886;
pub const XED_IFORMFL_VLDMXCSR_FIRST: xed_iformfl_enum_t = 4887;
pub const XED_IFORMFL_VLDMXCSR_LAST: xed_iformfl_enum_t = 4887;
pub const XED_IFORMFL_VMASKMOVDQU_FIRST: xed_iformfl_enum_t = 4888;
pub const XED_IFORMFL_VMASKMOVDQU_LAST: xed_iformfl_enum_t = 4888;
pub const XED_IFORMFL_VMASKMOVPD_FIRST: xed_iformfl_enum_t = 4889;
pub const XED_IFORMFL_VMASKMOVPD_LAST: xed_iformfl_enum_t = 4892;
pub const XED_IFORMFL_VMASKMOVPS_FIRST: xed_iformfl_enum_t = 4893;
pub const XED_IFORMFL_VMASKMOVPS_LAST: xed_iformfl_enum_t = 4896;
pub const XED_IFORMFL_VMAXPD_FIRST: xed_iformfl_enum_t = 4897;
pub const XED_IFORMFL_VMAXPD_LAST: xed_iformfl_enum_t = 4906;
pub const XED_IFORMFL_VMAXPH_FIRST: xed_iformfl_enum_t = 4907;
pub const XED_IFORMFL_VMAXPH_LAST: xed_iformfl_enum_t = 4912;
pub const XED_IFORMFL_VMAXPS_FIRST: xed_iformfl_enum_t = 4913;
pub const XED_IFORMFL_VMAXPS_LAST: xed_iformfl_enum_t = 4922;
pub const XED_IFORMFL_VMAXSD_FIRST: xed_iformfl_enum_t = 4923;
pub const XED_IFORMFL_VMAXSD_LAST: xed_iformfl_enum_t = 4926;
pub const XED_IFORMFL_VMAXSH_FIRST: xed_iformfl_enum_t = 4927;
pub const XED_IFORMFL_VMAXSH_LAST: xed_iformfl_enum_t = 4928;
pub const XED_IFORMFL_VMAXSS_FIRST: xed_iformfl_enum_t = 4929;
pub const XED_IFORMFL_VMAXSS_LAST: xed_iformfl_enum_t = 4932;
pub const XED_IFORMFL_VMCALL_FIRST: xed_iformfl_enum_t = 4933;
pub const XED_IFORMFL_VMCALL_LAST: xed_iformfl_enum_t = 4933;
pub const XED_IFORMFL_VMCLEAR_FIRST: xed_iformfl_enum_t = 4934;
pub const XED_IFORMFL_VMCLEAR_LAST: xed_iformfl_enum_t = 4934;
pub const XED_IFORMFL_VMFUNC_FIRST: xed_iformfl_enum_t = 4935;
pub const XED_IFORMFL_VMFUNC_LAST: xed_iformfl_enum_t = 4935;
pub const XED_IFORMFL_VMINPD_FIRST: xed_iformfl_enum_t = 4936;
pub const XED_IFORMFL_VMINPD_LAST: xed_iformfl_enum_t = 4945;
pub const XED_IFORMFL_VMINPH_FIRST: xed_iformfl_enum_t = 4946;
pub const XED_IFORMFL_VMINPH_LAST: xed_iformfl_enum_t = 4951;
pub const XED_IFORMFL_VMINPS_FIRST: xed_iformfl_enum_t = 4952;
pub const XED_IFORMFL_VMINPS_LAST: xed_iformfl_enum_t = 4961;
pub const XED_IFORMFL_VMINSD_FIRST: xed_iformfl_enum_t = 4962;
pub const XED_IFORMFL_VMINSD_LAST: xed_iformfl_enum_t = 4965;
pub const XED_IFORMFL_VMINSH_FIRST: xed_iformfl_enum_t = 4966;
pub const XED_IFORMFL_VMINSH_LAST: xed_iformfl_enum_t = 4967;
pub const XED_IFORMFL_VMINSS_FIRST: xed_iformfl_enum_t = 4968;
pub const XED_IFORMFL_VMINSS_LAST: xed_iformfl_enum_t = 4971;
pub const XED_IFORMFL_VMLAUNCH_FIRST: xed_iformfl_enum_t = 4972;
pub const XED_IFORMFL_VMLAUNCH_LAST: xed_iformfl_enum_t = 4972;
pub const XED_IFORMFL_VMLOAD_FIRST: xed_iformfl_enum_t = 4973;
pub const XED_IFORMFL_VMLOAD_LAST: xed_iformfl_enum_t = 4973;
pub const XED_IFORMFL_VMMCALL_FIRST: xed_iformfl_enum_t = 4974;
pub const XED_IFORMFL_VMMCALL_LAST: xed_iformfl_enum_t = 4974;
pub const XED_IFORMFL_VMOVAPD_FIRST: xed_iformfl_enum_t = 4975;
pub const XED_IFORMFL_VMOVAPD_LAST: xed_iformfl_enum_t = 4991;
pub const XED_IFORMFL_VMOVAPS_FIRST: xed_iformfl_enum_t = 4992;
pub const XED_IFORMFL_VMOVAPS_LAST: xed_iformfl_enum_t = 5008;
pub const XED_IFORMFL_VMOVD_FIRST: xed_iformfl_enum_t = 5009;
pub const XED_IFORMFL_VMOVD_LAST: xed_iformfl_enum_t = 5016;
pub const XED_IFORMFL_VMOVDDUP_FIRST: xed_iformfl_enum_t = 5017;
pub const XED_IFORMFL_VMOVDDUP_LAST: xed_iformfl_enum_t = 5026;
pub const XED_IFORMFL_VMOVDQA_FIRST: xed_iformfl_enum_t = 5027;
pub const XED_IFORMFL_VMOVDQA_LAST: xed_iformfl_enum_t = 5034;
pub const XED_IFORMFL_VMOVDQA32_FIRST: xed_iformfl_enum_t = 5035;
pub const XED_IFORMFL_VMOVDQA32_LAST: xed_iformfl_enum_t = 5043;
pub const XED_IFORMFL_VMOVDQA64_FIRST: xed_iformfl_enum_t = 5044;
pub const XED_IFORMFL_VMOVDQA64_LAST: xed_iformfl_enum_t = 5052;
pub const XED_IFORMFL_VMOVDQU_FIRST: xed_iformfl_enum_t = 5053;
pub const XED_IFORMFL_VMOVDQU_LAST: xed_iformfl_enum_t = 5060;
pub const XED_IFORMFL_VMOVDQU16_FIRST: xed_iformfl_enum_t = 5061;
pub const XED_IFORMFL_VMOVDQU16_LAST: xed_iformfl_enum_t = 5069;
pub const XED_IFORMFL_VMOVDQU32_FIRST: xed_iformfl_enum_t = 5070;
pub const XED_IFORMFL_VMOVDQU32_LAST: xed_iformfl_enum_t = 5078;
pub const XED_IFORMFL_VMOVDQU64_FIRST: xed_iformfl_enum_t = 5079;
pub const XED_IFORMFL_VMOVDQU64_LAST: xed_iformfl_enum_t = 5087;
pub const XED_IFORMFL_VMOVDQU8_FIRST: xed_iformfl_enum_t = 5088;
pub const XED_IFORMFL_VMOVDQU8_LAST: xed_iformfl_enum_t = 5096;
pub const XED_IFORMFL_VMOVHLPS_FIRST: xed_iformfl_enum_t = 5097;
pub const XED_IFORMFL_VMOVHLPS_LAST: xed_iformfl_enum_t = 5098;
pub const XED_IFORMFL_VMOVHPD_FIRST: xed_iformfl_enum_t = 5099;
pub const XED_IFORMFL_VMOVHPD_LAST: xed_iformfl_enum_t = 5102;
pub const XED_IFORMFL_VMOVHPS_FIRST: xed_iformfl_enum_t = 5103;
pub const XED_IFORMFL_VMOVHPS_LAST: xed_iformfl_enum_t = 5106;
pub const XED_IFORMFL_VMOVLHPS_FIRST: xed_iformfl_enum_t = 5107;
pub const XED_IFORMFL_VMOVLHPS_LAST: xed_iformfl_enum_t = 5108;
pub const XED_IFORMFL_VMOVLPD_FIRST: xed_iformfl_enum_t = 5109;
pub const XED_IFORMFL_VMOVLPD_LAST: xed_iformfl_enum_t = 5112;
pub const XED_IFORMFL_VMOVLPS_FIRST: xed_iformfl_enum_t = 5113;
pub const XED_IFORMFL_VMOVLPS_LAST: xed_iformfl_enum_t = 5116;
pub const XED_IFORMFL_VMOVMSKPD_FIRST: xed_iformfl_enum_t = 5117;
pub const XED_IFORMFL_VMOVMSKPD_LAST: xed_iformfl_enum_t = 5118;
pub const XED_IFORMFL_VMOVMSKPS_FIRST: xed_iformfl_enum_t = 5119;
pub const XED_IFORMFL_VMOVMSKPS_LAST: xed_iformfl_enum_t = 5120;
pub const XED_IFORMFL_VMOVNTDQ_FIRST: xed_iformfl_enum_t = 5121;
pub const XED_IFORMFL_VMOVNTDQ_LAST: xed_iformfl_enum_t = 5125;
pub const XED_IFORMFL_VMOVNTDQA_FIRST: xed_iformfl_enum_t = 5126;
pub const XED_IFORMFL_VMOVNTDQA_LAST: xed_iformfl_enum_t = 5130;
pub const XED_IFORMFL_VMOVNTPD_FIRST: xed_iformfl_enum_t = 5131;
pub const XED_IFORMFL_VMOVNTPD_LAST: xed_iformfl_enum_t = 5135;
pub const XED_IFORMFL_VMOVNTPS_FIRST: xed_iformfl_enum_t = 5136;
pub const XED_IFORMFL_VMOVNTPS_LAST: xed_iformfl_enum_t = 5140;
pub const XED_IFORMFL_VMOVQ_FIRST: xed_iformfl_enum_t = 5141;
pub const XED_IFORMFL_VMOVQ_LAST: xed_iformfl_enum_t = 5153;
pub const XED_IFORMFL_VMOVSD_FIRST: xed_iformfl_enum_t = 5154;
pub const XED_IFORMFL_VMOVSD_LAST: xed_iformfl_enum_t = 5160;
pub const XED_IFORMFL_VMOVSH_FIRST: xed_iformfl_enum_t = 5161;
pub const XED_IFORMFL_VMOVSH_LAST: xed_iformfl_enum_t = 5163;
pub const XED_IFORMFL_VMOVSHDUP_FIRST: xed_iformfl_enum_t = 5164;
pub const XED_IFORMFL_VMOVSHDUP_LAST: xed_iformfl_enum_t = 5173;
pub const XED_IFORMFL_VMOVSLDUP_FIRST: xed_iformfl_enum_t = 5174;
pub const XED_IFORMFL_VMOVSLDUP_LAST: xed_iformfl_enum_t = 5183;
pub const XED_IFORMFL_VMOVSS_FIRST: xed_iformfl_enum_t = 5184;
pub const XED_IFORMFL_VMOVSS_LAST: xed_iformfl_enum_t = 5190;
pub const XED_IFORMFL_VMOVUPD_FIRST: xed_iformfl_enum_t = 5191;
pub const XED_IFORMFL_VMOVUPD_LAST: xed_iformfl_enum_t = 5207;
pub const XED_IFORMFL_VMOVUPS_FIRST: xed_iformfl_enum_t = 5208;
pub const XED_IFORMFL_VMOVUPS_LAST: xed_iformfl_enum_t = 5224;
pub const XED_IFORMFL_VMOVW_FIRST: xed_iformfl_enum_t = 5225;
pub const XED_IFORMFL_VMOVW_LAST: xed_iformfl_enum_t = 5228;
pub const XED_IFORMFL_VMPSADBW_FIRST: xed_iformfl_enum_t = 5229;
pub const XED_IFORMFL_VMPSADBW_LAST: xed_iformfl_enum_t = 5232;
pub const XED_IFORMFL_VMPTRLD_FIRST: xed_iformfl_enum_t = 5233;
pub const XED_IFORMFL_VMPTRLD_LAST: xed_iformfl_enum_t = 5233;
pub const XED_IFORMFL_VMPTRST_FIRST: xed_iformfl_enum_t = 5234;
pub const XED_IFORMFL_VMPTRST_LAST: xed_iformfl_enum_t = 5234;
pub const XED_IFORMFL_VMREAD_FIRST: xed_iformfl_enum_t = 5235;
pub const XED_IFORMFL_VMREAD_LAST: xed_iformfl_enum_t = 5238;
pub const XED_IFORMFL_VMRESUME_FIRST: xed_iformfl_enum_t = 5239;
pub const XED_IFORMFL_VMRESUME_LAST: xed_iformfl_enum_t = 5239;
pub const XED_IFORMFL_VMRUN_FIRST: xed_iformfl_enum_t = 5240;
pub const XED_IFORMFL_VMRUN_LAST: xed_iformfl_enum_t = 5240;
pub const XED_IFORMFL_VMSAVE_FIRST: xed_iformfl_enum_t = 5241;
pub const XED_IFORMFL_VMSAVE_LAST: xed_iformfl_enum_t = 5241;
pub const XED_IFORMFL_VMULPD_FIRST: xed_iformfl_enum_t = 5242;
pub const XED_IFORMFL_VMULPD_LAST: xed_iformfl_enum_t = 5251;
pub const XED_IFORMFL_VMULPH_FIRST: xed_iformfl_enum_t = 5252;
pub const XED_IFORMFL_VMULPH_LAST: xed_iformfl_enum_t = 5257;
pub const XED_IFORMFL_VMULPS_FIRST: xed_iformfl_enum_t = 5258;
pub const XED_IFORMFL_VMULPS_LAST: xed_iformfl_enum_t = 5267;
pub const XED_IFORMFL_VMULSD_FIRST: xed_iformfl_enum_t = 5268;
pub const XED_IFORMFL_VMULSD_LAST: xed_iformfl_enum_t = 5271;
pub const XED_IFORMFL_VMULSH_FIRST: xed_iformfl_enum_t = 5272;
pub const XED_IFORMFL_VMULSH_LAST: xed_iformfl_enum_t = 5273;
pub const XED_IFORMFL_VMULSS_FIRST: xed_iformfl_enum_t = 5274;
pub const XED_IFORMFL_VMULSS_LAST: xed_iformfl_enum_t = 5277;
pub const XED_IFORMFL_VMWRITE_FIRST: xed_iformfl_enum_t = 5278;
pub const XED_IFORMFL_VMWRITE_LAST: xed_iformfl_enum_t = 5281;
pub const XED_IFORMFL_VMXOFF_FIRST: xed_iformfl_enum_t = 5282;
pub const XED_IFORMFL_VMXOFF_LAST: xed_iformfl_enum_t = 5282;
pub const XED_IFORMFL_VMXON_FIRST: xed_iformfl_enum_t = 5283;
pub const XED_IFORMFL_VMXON_LAST: xed_iformfl_enum_t = 5283;
pub const XED_IFORMFL_VORPD_FIRST: xed_iformfl_enum_t = 5284;
pub const XED_IFORMFL_VORPD_LAST: xed_iformfl_enum_t = 5293;
pub const XED_IFORMFL_VORPS_FIRST: xed_iformfl_enum_t = 5294;
pub const XED_IFORMFL_VORPS_LAST: xed_iformfl_enum_t = 5303;
pub const XED_IFORMFL_VP2INTERSECTD_FIRST: xed_iformfl_enum_t = 5304;
pub const XED_IFORMFL_VP2INTERSECTD_LAST: xed_iformfl_enum_t = 5309;
pub const XED_IFORMFL_VP2INTERSECTQ_FIRST: xed_iformfl_enum_t = 5310;
pub const XED_IFORMFL_VP2INTERSECTQ_LAST: xed_iformfl_enum_t = 5315;
pub const XED_IFORMFL_VP4DPWSSD_FIRST: xed_iformfl_enum_t = 5316;
pub const XED_IFORMFL_VP4DPWSSD_LAST: xed_iformfl_enum_t = 5316;
pub const XED_IFORMFL_VP4DPWSSDS_FIRST: xed_iformfl_enum_t = 5317;
pub const XED_IFORMFL_VP4DPWSSDS_LAST: xed_iformfl_enum_t = 5317;
pub const XED_IFORMFL_VPABSB_FIRST: xed_iformfl_enum_t = 5318;
pub const XED_IFORMFL_VPABSB_LAST: xed_iformfl_enum_t = 5327;
pub const XED_IFORMFL_VPABSD_FIRST: xed_iformfl_enum_t = 5328;
pub const XED_IFORMFL_VPABSD_LAST: xed_iformfl_enum_t = 5337;
pub const XED_IFORMFL_VPABSQ_FIRST: xed_iformfl_enum_t = 5338;
pub const XED_IFORMFL_VPABSQ_LAST: xed_iformfl_enum_t = 5343;
pub const XED_IFORMFL_VPABSW_FIRST: xed_iformfl_enum_t = 5344;
pub const XED_IFORMFL_VPABSW_LAST: xed_iformfl_enum_t = 5353;
pub const XED_IFORMFL_VPACKSSDW_FIRST: xed_iformfl_enum_t = 5354;
pub const XED_IFORMFL_VPACKSSDW_LAST: xed_iformfl_enum_t = 5363;
pub const XED_IFORMFL_VPACKSSWB_FIRST: xed_iformfl_enum_t = 5364;
pub const XED_IFORMFL_VPACKSSWB_LAST: xed_iformfl_enum_t = 5373;
pub const XED_IFORMFL_VPACKUSDW_FIRST: xed_iformfl_enum_t = 5374;
pub const XED_IFORMFL_VPACKUSDW_LAST: xed_iformfl_enum_t = 5383;
pub const XED_IFORMFL_VPACKUSWB_FIRST: xed_iformfl_enum_t = 5384;
pub const XED_IFORMFL_VPACKUSWB_LAST: xed_iformfl_enum_t = 5393;
pub const XED_IFORMFL_VPADDB_FIRST: xed_iformfl_enum_t = 5394;
pub const XED_IFORMFL_VPADDB_LAST: xed_iformfl_enum_t = 5403;
pub const XED_IFORMFL_VPADDD_FIRST: xed_iformfl_enum_t = 5404;
pub const XED_IFORMFL_VPADDD_LAST: xed_iformfl_enum_t = 5413;
pub const XED_IFORMFL_VPADDQ_FIRST: xed_iformfl_enum_t = 5414;
pub const XED_IFORMFL_VPADDQ_LAST: xed_iformfl_enum_t = 5423;
pub const XED_IFORMFL_VPADDSB_FIRST: xed_iformfl_enum_t = 5424;
pub const XED_IFORMFL_VPADDSB_LAST: xed_iformfl_enum_t = 5433;
pub const XED_IFORMFL_VPADDSW_FIRST: xed_iformfl_enum_t = 5434;
pub const XED_IFORMFL_VPADDSW_LAST: xed_iformfl_enum_t = 5443;
pub const XED_IFORMFL_VPADDUSB_FIRST: xed_iformfl_enum_t = 5444;
pub const XED_IFORMFL_VPADDUSB_LAST: xed_iformfl_enum_t = 5453;
pub const XED_IFORMFL_VPADDUSW_FIRST: xed_iformfl_enum_t = 5454;
pub const XED_IFORMFL_VPADDUSW_LAST: xed_iformfl_enum_t = 5463;
pub const XED_IFORMFL_VPADDW_FIRST: xed_iformfl_enum_t = 5464;
pub const XED_IFORMFL_VPADDW_LAST: xed_iformfl_enum_t = 5473;
pub const XED_IFORMFL_VPALIGNR_FIRST: xed_iformfl_enum_t = 5474;
pub const XED_IFORMFL_VPALIGNR_LAST: xed_iformfl_enum_t = 5483;
pub const XED_IFORMFL_VPAND_FIRST: xed_iformfl_enum_t = 5484;
pub const XED_IFORMFL_VPAND_LAST: xed_iformfl_enum_t = 5487;
pub const XED_IFORMFL_VPANDD_FIRST: xed_iformfl_enum_t = 5488;
pub const XED_IFORMFL_VPANDD_LAST: xed_iformfl_enum_t = 5493;
pub const XED_IFORMFL_VPANDN_FIRST: xed_iformfl_enum_t = 5494;
pub const XED_IFORMFL_VPANDN_LAST: xed_iformfl_enum_t = 5497;
pub const XED_IFORMFL_VPANDND_FIRST: xed_iformfl_enum_t = 5498;
pub const XED_IFORMFL_VPANDND_LAST: xed_iformfl_enum_t = 5503;
pub const XED_IFORMFL_VPANDNQ_FIRST: xed_iformfl_enum_t = 5504;
pub const XED_IFORMFL_VPANDNQ_LAST: xed_iformfl_enum_t = 5509;
pub const XED_IFORMFL_VPANDQ_FIRST: xed_iformfl_enum_t = 5510;
pub const XED_IFORMFL_VPANDQ_LAST: xed_iformfl_enum_t = 5515;
pub const XED_IFORMFL_VPAVGB_FIRST: xed_iformfl_enum_t = 5516;
pub const XED_IFORMFL_VPAVGB_LAST: xed_iformfl_enum_t = 5525;
pub const XED_IFORMFL_VPAVGW_FIRST: xed_iformfl_enum_t = 5526;
pub const XED_IFORMFL_VPAVGW_LAST: xed_iformfl_enum_t = 5535;
pub const XED_IFORMFL_VPBLENDD_FIRST: xed_iformfl_enum_t = 5536;
pub const XED_IFORMFL_VPBLENDD_LAST: xed_iformfl_enum_t = 5539;
pub const XED_IFORMFL_VPBLENDMB_FIRST: xed_iformfl_enum_t = 5540;
pub const XED_IFORMFL_VPBLENDMB_LAST: xed_iformfl_enum_t = 5545;
pub const XED_IFORMFL_VPBLENDMD_FIRST: xed_iformfl_enum_t = 5546;
pub const XED_IFORMFL_VPBLENDMD_LAST: xed_iformfl_enum_t = 5551;
pub const XED_IFORMFL_VPBLENDMQ_FIRST: xed_iformfl_enum_t = 5552;
pub const XED_IFORMFL_VPBLENDMQ_LAST: xed_iformfl_enum_t = 5557;
pub const XED_IFORMFL_VPBLENDMW_FIRST: xed_iformfl_enum_t = 5558;
pub const XED_IFORMFL_VPBLENDMW_LAST: xed_iformfl_enum_t = 5563;
pub const XED_IFORMFL_VPBLENDVB_FIRST: xed_iformfl_enum_t = 5564;
pub const XED_IFORMFL_VPBLENDVB_LAST: xed_iformfl_enum_t = 5567;
pub const XED_IFORMFL_VPBLENDW_FIRST: xed_iformfl_enum_t = 5568;
pub const XED_IFORMFL_VPBLENDW_LAST: xed_iformfl_enum_t = 5571;
pub const XED_IFORMFL_VPBROADCASTB_FIRST: xed_iformfl_enum_t = 5572;
pub const XED_IFORMFL_VPBROADCASTB_LAST: xed_iformfl_enum_t = 5584;
pub const XED_IFORMFL_VPBROADCASTD_FIRST: xed_iformfl_enum_t = 5585;
pub const XED_IFORMFL_VPBROADCASTD_LAST: xed_iformfl_enum_t = 5597;
pub const XED_IFORMFL_VPBROADCASTMB2Q_FIRST: xed_iformfl_enum_t = 5598;
pub const XED_IFORMFL_VPBROADCASTMB2Q_LAST: xed_iformfl_enum_t = 5600;
pub const XED_IFORMFL_VPBROADCASTMW2D_FIRST: xed_iformfl_enum_t = 5601;
pub const XED_IFORMFL_VPBROADCASTMW2D_LAST: xed_iformfl_enum_t = 5603;
pub const XED_IFORMFL_VPBROADCASTQ_FIRST: xed_iformfl_enum_t = 5604;
pub const XED_IFORMFL_VPBROADCASTQ_LAST: xed_iformfl_enum_t = 5616;
pub const XED_IFORMFL_VPBROADCASTW_FIRST: xed_iformfl_enum_t = 5617;
pub const XED_IFORMFL_VPBROADCASTW_LAST: xed_iformfl_enum_t = 5629;
pub const XED_IFORMFL_VPCLMULQDQ_FIRST: xed_iformfl_enum_t = 5630;
pub const XED_IFORMFL_VPCLMULQDQ_LAST: xed_iformfl_enum_t = 5639;
pub const XED_IFORMFL_VPCMOV_FIRST: xed_iformfl_enum_t = 5640;
pub const XED_IFORMFL_VPCMOV_LAST: xed_iformfl_enum_t = 5645;
pub const XED_IFORMFL_VPCMPB_FIRST: xed_iformfl_enum_t = 5646;
pub const XED_IFORMFL_VPCMPB_LAST: xed_iformfl_enum_t = 5651;
pub const XED_IFORMFL_VPCMPD_FIRST: xed_iformfl_enum_t = 5652;
pub const XED_IFORMFL_VPCMPD_LAST: xed_iformfl_enum_t = 5657;
pub const XED_IFORMFL_VPCMPEQB_FIRST: xed_iformfl_enum_t = 5658;
pub const XED_IFORMFL_VPCMPEQB_LAST: xed_iformfl_enum_t = 5667;
pub const XED_IFORMFL_VPCMPEQD_FIRST: xed_iformfl_enum_t = 5668;
pub const XED_IFORMFL_VPCMPEQD_LAST: xed_iformfl_enum_t = 5677;
pub const XED_IFORMFL_VPCMPEQQ_FIRST: xed_iformfl_enum_t = 5678;
pub const XED_IFORMFL_VPCMPEQQ_LAST: xed_iformfl_enum_t = 5687;
pub const XED_IFORMFL_VPCMPEQW_FIRST: xed_iformfl_enum_t = 5688;
pub const XED_IFORMFL_VPCMPEQW_LAST: xed_iformfl_enum_t = 5697;
pub const XED_IFORMFL_VPCMPESTRI_FIRST: xed_iformfl_enum_t = 5698;
pub const XED_IFORMFL_VPCMPESTRI_LAST: xed_iformfl_enum_t = 5699;
pub const XED_IFORMFL_VPCMPESTRI64_FIRST: xed_iformfl_enum_t = 5700;
pub const XED_IFORMFL_VPCMPESTRI64_LAST: xed_iformfl_enum_t = 5701;
pub const XED_IFORMFL_VPCMPESTRM_FIRST: xed_iformfl_enum_t = 5702;
pub const XED_IFORMFL_VPCMPESTRM_LAST: xed_iformfl_enum_t = 5703;
pub const XED_IFORMFL_VPCMPESTRM64_FIRST: xed_iformfl_enum_t = 5704;
pub const XED_IFORMFL_VPCMPESTRM64_LAST: xed_iformfl_enum_t = 5705;
pub const XED_IFORMFL_VPCMPGTB_FIRST: xed_iformfl_enum_t = 5706;
pub const XED_IFORMFL_VPCMPGTB_LAST: xed_iformfl_enum_t = 5715;
pub const XED_IFORMFL_VPCMPGTD_FIRST: xed_iformfl_enum_t = 5716;
pub const XED_IFORMFL_VPCMPGTD_LAST: xed_iformfl_enum_t = 5725;
pub const XED_IFORMFL_VPCMPGTQ_FIRST: xed_iformfl_enum_t = 5726;
pub const XED_IFORMFL_VPCMPGTQ_LAST: xed_iformfl_enum_t = 5735;
pub const XED_IFORMFL_VPCMPGTW_FIRST: xed_iformfl_enum_t = 5736;
pub const XED_IFORMFL_VPCMPGTW_LAST: xed_iformfl_enum_t = 5745;
pub const XED_IFORMFL_VPCMPISTRI_FIRST: xed_iformfl_enum_t = 5746;
pub const XED_IFORMFL_VPCMPISTRI_LAST: xed_iformfl_enum_t = 5747;
pub const XED_IFORMFL_VPCMPISTRI64_FIRST: xed_iformfl_enum_t = 5748;
pub const XED_IFORMFL_VPCMPISTRI64_LAST: xed_iformfl_enum_t = 5749;
pub const XED_IFORMFL_VPCMPISTRM_FIRST: xed_iformfl_enum_t = 5750;
pub const XED_IFORMFL_VPCMPISTRM_LAST: xed_iformfl_enum_t = 5751;
pub const XED_IFORMFL_VPCMPQ_FIRST: xed_iformfl_enum_t = 5752;
pub const XED_IFORMFL_VPCMPQ_LAST: xed_iformfl_enum_t = 5757;
pub const XED_IFORMFL_VPCMPUB_FIRST: xed_iformfl_enum_t = 5758;
pub const XED_IFORMFL_VPCMPUB_LAST: xed_iformfl_enum_t = 5763;
pub const XED_IFORMFL_VPCMPUD_FIRST: xed_iformfl_enum_t = 5764;
pub const XED_IFORMFL_VPCMPUD_LAST: xed_iformfl_enum_t = 5769;
pub const XED_IFORMFL_VPCMPUQ_FIRST: xed_iformfl_enum_t = 5770;
pub const XED_IFORMFL_VPCMPUQ_LAST: xed_iformfl_enum_t = 5775;
pub const XED_IFORMFL_VPCMPUW_FIRST: xed_iformfl_enum_t = 5776;
pub const XED_IFORMFL_VPCMPUW_LAST: xed_iformfl_enum_t = 5781;
pub const XED_IFORMFL_VPCMPW_FIRST: xed_iformfl_enum_t = 5782;
pub const XED_IFORMFL_VPCMPW_LAST: xed_iformfl_enum_t = 5787;
pub const XED_IFORMFL_VPCOMB_FIRST: xed_iformfl_enum_t = 5788;
pub const XED_IFORMFL_VPCOMB_LAST: xed_iformfl_enum_t = 5789;
pub const XED_IFORMFL_VPCOMD_FIRST: xed_iformfl_enum_t = 5790;
pub const XED_IFORMFL_VPCOMD_LAST: xed_iformfl_enum_t = 5791;
pub const XED_IFORMFL_VPCOMPRESSB_FIRST: xed_iformfl_enum_t = 5792;
pub const XED_IFORMFL_VPCOMPRESSB_LAST: xed_iformfl_enum_t = 5797;
pub const XED_IFORMFL_VPCOMPRESSD_FIRST: xed_iformfl_enum_t = 5798;
pub const XED_IFORMFL_VPCOMPRESSD_LAST: xed_iformfl_enum_t = 5803;
pub const XED_IFORMFL_VPCOMPRESSQ_FIRST: xed_iformfl_enum_t = 5804;
pub const XED_IFORMFL_VPCOMPRESSQ_LAST: xed_iformfl_enum_t = 5809;
pub const XED_IFORMFL_VPCOMPRESSW_FIRST: xed_iformfl_enum_t = 5810;
pub const XED_IFORMFL_VPCOMPRESSW_LAST: xed_iformfl_enum_t = 5815;
pub const XED_IFORMFL_VPCOMQ_FIRST: xed_iformfl_enum_t = 5816;
pub const XED_IFORMFL_VPCOMQ_LAST: xed_iformfl_enum_t = 5817;
pub const XED_IFORMFL_VPCOMUB_FIRST: xed_iformfl_enum_t = 5818;
pub const XED_IFORMFL_VPCOMUB_LAST: xed_iformfl_enum_t = 5819;
pub const XED_IFORMFL_VPCOMUD_FIRST: xed_iformfl_enum_t = 5820;
pub const XED_IFORMFL_VPCOMUD_LAST: xed_iformfl_enum_t = 5821;
pub const XED_IFORMFL_VPCOMUQ_FIRST: xed_iformfl_enum_t = 5822;
pub const XED_IFORMFL_VPCOMUQ_LAST: xed_iformfl_enum_t = 5823;
pub const XED_IFORMFL_VPCOMUW_FIRST: xed_iformfl_enum_t = 5824;
pub const XED_IFORMFL_VPCOMUW_LAST: xed_iformfl_enum_t = 5825;
pub const XED_IFORMFL_VPCOMW_FIRST: xed_iformfl_enum_t = 5826;
pub const XED_IFORMFL_VPCOMW_LAST: xed_iformfl_enum_t = 5827;
pub const XED_IFORMFL_VPCONFLICTD_FIRST: xed_iformfl_enum_t = 5828;
pub const XED_IFORMFL_VPCONFLICTD_LAST: xed_iformfl_enum_t = 5833;
pub const XED_IFORMFL_VPCONFLICTQ_FIRST: xed_iformfl_enum_t = 5834;
pub const XED_IFORMFL_VPCONFLICTQ_LAST: xed_iformfl_enum_t = 5839;
pub const XED_IFORMFL_VPDPBSSD_FIRST: xed_iformfl_enum_t = 5840;
pub const XED_IFORMFL_VPDPBSSD_LAST: xed_iformfl_enum_t = 5843;
pub const XED_IFORMFL_VPDPBSSDS_FIRST: xed_iformfl_enum_t = 5844;
pub const XED_IFORMFL_VPDPBSSDS_LAST: xed_iformfl_enum_t = 5847;
pub const XED_IFORMFL_VPDPBSUD_FIRST: xed_iformfl_enum_t = 5848;
pub const XED_IFORMFL_VPDPBSUD_LAST: xed_iformfl_enum_t = 5851;
pub const XED_IFORMFL_VPDPBSUDS_FIRST: xed_iformfl_enum_t = 5852;
pub const XED_IFORMFL_VPDPBSUDS_LAST: xed_iformfl_enum_t = 5855;
pub const XED_IFORMFL_VPDPBUSD_FIRST: xed_iformfl_enum_t = 5856;
pub const XED_IFORMFL_VPDPBUSD_LAST: xed_iformfl_enum_t = 5865;
pub const XED_IFORMFL_VPDPBUSDS_FIRST: xed_iformfl_enum_t = 5866;
pub const XED_IFORMFL_VPDPBUSDS_LAST: xed_iformfl_enum_t = 5875;
pub const XED_IFORMFL_VPDPBUUD_FIRST: xed_iformfl_enum_t = 5876;
pub const XED_IFORMFL_VPDPBUUD_LAST: xed_iformfl_enum_t = 5879;
pub const XED_IFORMFL_VPDPBUUDS_FIRST: xed_iformfl_enum_t = 5880;
pub const XED_IFORMFL_VPDPBUUDS_LAST: xed_iformfl_enum_t = 5883;
pub const XED_IFORMFL_VPDPWSSD_FIRST: xed_iformfl_enum_t = 5884;
pub const XED_IFORMFL_VPDPWSSD_LAST: xed_iformfl_enum_t = 5893;
pub const XED_IFORMFL_VPDPWSSDS_FIRST: xed_iformfl_enum_t = 5894;
pub const XED_IFORMFL_VPDPWSSDS_LAST: xed_iformfl_enum_t = 5903;
pub const XED_IFORMFL_VPDPWSUD_FIRST: xed_iformfl_enum_t = 5904;
pub const XED_IFORMFL_VPDPWSUD_LAST: xed_iformfl_enum_t = 5907;
pub const XED_IFORMFL_VPDPWSUDS_FIRST: xed_iformfl_enum_t = 5908;
pub const XED_IFORMFL_VPDPWSUDS_LAST: xed_iformfl_enum_t = 5911;
pub const XED_IFORMFL_VPDPWUSD_FIRST: xed_iformfl_enum_t = 5912;
pub const XED_IFORMFL_VPDPWUSD_LAST: xed_iformfl_enum_t = 5915;
pub const XED_IFORMFL_VPDPWUSDS_FIRST: xed_iformfl_enum_t = 5916;
pub const XED_IFORMFL_VPDPWUSDS_LAST: xed_iformfl_enum_t = 5919;
pub const XED_IFORMFL_VPDPWUUD_FIRST: xed_iformfl_enum_t = 5920;
pub const XED_IFORMFL_VPDPWUUD_LAST: xed_iformfl_enum_t = 5923;
pub const XED_IFORMFL_VPDPWUUDS_FIRST: xed_iformfl_enum_t = 5924;
pub const XED_IFORMFL_VPDPWUUDS_LAST: xed_iformfl_enum_t = 5927;
pub const XED_IFORMFL_VPERM2F128_FIRST: xed_iformfl_enum_t = 5928;
pub const XED_IFORMFL_VPERM2F128_LAST: xed_iformfl_enum_t = 5929;
pub const XED_IFORMFL_VPERM2I128_FIRST: xed_iformfl_enum_t = 5930;
pub const XED_IFORMFL_VPERM2I128_LAST: xed_iformfl_enum_t = 5931;
pub const XED_IFORMFL_VPERMB_FIRST: xed_iformfl_enum_t = 5932;
pub const XED_IFORMFL_VPERMB_LAST: xed_iformfl_enum_t = 5937;
pub const XED_IFORMFL_VPERMD_FIRST: xed_iformfl_enum_t = 5938;
pub const XED_IFORMFL_VPERMD_LAST: xed_iformfl_enum_t = 5943;
pub const XED_IFORMFL_VPERMI2B_FIRST: xed_iformfl_enum_t = 5944;
pub const XED_IFORMFL_VPERMI2B_LAST: xed_iformfl_enum_t = 5949;
pub const XED_IFORMFL_VPERMI2D_FIRST: xed_iformfl_enum_t = 5950;
pub const XED_IFORMFL_VPERMI2D_LAST: xed_iformfl_enum_t = 5955;
pub const XED_IFORMFL_VPERMI2PD_FIRST: xed_iformfl_enum_t = 5956;
pub const XED_IFORMFL_VPERMI2PD_LAST: xed_iformfl_enum_t = 5961;
pub const XED_IFORMFL_VPERMI2PS_FIRST: xed_iformfl_enum_t = 5962;
pub const XED_IFORMFL_VPERMI2PS_LAST: xed_iformfl_enum_t = 5967;
pub const XED_IFORMFL_VPERMI2Q_FIRST: xed_iformfl_enum_t = 5968;
pub const XED_IFORMFL_VPERMI2Q_LAST: xed_iformfl_enum_t = 5973;
pub const XED_IFORMFL_VPERMI2W_FIRST: xed_iformfl_enum_t = 5974;
pub const XED_IFORMFL_VPERMI2W_LAST: xed_iformfl_enum_t = 5979;
pub const XED_IFORMFL_VPERMIL2PD_FIRST: xed_iformfl_enum_t = 5980;
pub const XED_IFORMFL_VPERMIL2PD_LAST: xed_iformfl_enum_t = 5985;
pub const XED_IFORMFL_VPERMIL2PS_FIRST: xed_iformfl_enum_t = 5986;
pub const XED_IFORMFL_VPERMIL2PS_LAST: xed_iformfl_enum_t = 5991;
pub const XED_IFORMFL_VPERMILPD_FIRST: xed_iformfl_enum_t = 5992;
pub const XED_IFORMFL_VPERMILPD_LAST: xed_iformfl_enum_t = 6011;
pub const XED_IFORMFL_VPERMILPS_FIRST: xed_iformfl_enum_t = 6012;
pub const XED_IFORMFL_VPERMILPS_LAST: xed_iformfl_enum_t = 6031;
pub const XED_IFORMFL_VPERMPD_FIRST: xed_iformfl_enum_t = 6032;
pub const XED_IFORMFL_VPERMPD_LAST: xed_iformfl_enum_t = 6041;
pub const XED_IFORMFL_VPERMPS_FIRST: xed_iformfl_enum_t = 6042;
pub const XED_IFORMFL_VPERMPS_LAST: xed_iformfl_enum_t = 6047;
pub const XED_IFORMFL_VPERMQ_FIRST: xed_iformfl_enum_t = 6048;
pub const XED_IFORMFL_VPERMQ_LAST: xed_iformfl_enum_t = 6057;
pub const XED_IFORMFL_VPERMT2B_FIRST: xed_iformfl_enum_t = 6058;
pub const XED_IFORMFL_VPERMT2B_LAST: xed_iformfl_enum_t = 6063;
pub const XED_IFORMFL_VPERMT2D_FIRST: xed_iformfl_enum_t = 6064;
pub const XED_IFORMFL_VPERMT2D_LAST: xed_iformfl_enum_t = 6069;
pub const XED_IFORMFL_VPERMT2PD_FIRST: xed_iformfl_enum_t = 6070;
pub const XED_IFORMFL_VPERMT2PD_LAST: xed_iformfl_enum_t = 6075;
pub const XED_IFORMFL_VPERMT2PS_FIRST: xed_iformfl_enum_t = 6076;
pub const XED_IFORMFL_VPERMT2PS_LAST: xed_iformfl_enum_t = 6081;
pub const XED_IFORMFL_VPERMT2Q_FIRST: xed_iformfl_enum_t = 6082;
pub const XED_IFORMFL_VPERMT2Q_LAST: xed_iformfl_enum_t = 6087;
pub const XED_IFORMFL_VPERMT2W_FIRST: xed_iformfl_enum_t = 6088;
pub const XED_IFORMFL_VPERMT2W_LAST: xed_iformfl_enum_t = 6093;
pub const XED_IFORMFL_VPERMW_FIRST: xed_iformfl_enum_t = 6094;
pub const XED_IFORMFL_VPERMW_LAST: xed_iformfl_enum_t = 6099;
pub const XED_IFORMFL_VPEXPANDB_FIRST: xed_iformfl_enum_t = 6100;
pub const XED_IFORMFL_VPEXPANDB_LAST: xed_iformfl_enum_t = 6105;
pub const XED_IFORMFL_VPEXPANDD_FIRST: xed_iformfl_enum_t = 6106;
pub const XED_IFORMFL_VPEXPANDD_LAST: xed_iformfl_enum_t = 6111;
pub const XED_IFORMFL_VPEXPANDQ_FIRST: xed_iformfl_enum_t = 6112;
pub const XED_IFORMFL_VPEXPANDQ_LAST: xed_iformfl_enum_t = 6117;
pub const XED_IFORMFL_VPEXPANDW_FIRST: xed_iformfl_enum_t = 6118;
pub const XED_IFORMFL_VPEXPANDW_LAST: xed_iformfl_enum_t = 6123;
pub const XED_IFORMFL_VPEXTRB_FIRST: xed_iformfl_enum_t = 6124;
pub const XED_IFORMFL_VPEXTRB_LAST: xed_iformfl_enum_t = 6127;
pub const XED_IFORMFL_VPEXTRD_FIRST: xed_iformfl_enum_t = 6128;
pub const XED_IFORMFL_VPEXTRD_LAST: xed_iformfl_enum_t = 6131;
pub const XED_IFORMFL_VPEXTRQ_FIRST: xed_iformfl_enum_t = 6132;
pub const XED_IFORMFL_VPEXTRQ_LAST: xed_iformfl_enum_t = 6135;
pub const XED_IFORMFL_VPEXTRW_FIRST: xed_iformfl_enum_t = 6136;
pub const XED_IFORMFL_VPEXTRW_LAST: xed_iformfl_enum_t = 6140;
pub const XED_IFORMFL_VPEXTRW_C5_FIRST: xed_iformfl_enum_t = 6141;
pub const XED_IFORMFL_VPEXTRW_C5_LAST: xed_iformfl_enum_t = 6141;
pub const XED_IFORMFL_VPGATHERDD_FIRST: xed_iformfl_enum_t = 6142;
pub const XED_IFORMFL_VPGATHERDD_LAST: xed_iformfl_enum_t = 6146;
pub const XED_IFORMFL_VPGATHERDQ_FIRST: xed_iformfl_enum_t = 6147;
pub const XED_IFORMFL_VPGATHERDQ_LAST: xed_iformfl_enum_t = 6151;
pub const XED_IFORMFL_VPGATHERQD_FIRST: xed_iformfl_enum_t = 6152;
pub const XED_IFORMFL_VPGATHERQD_LAST: xed_iformfl_enum_t = 6156;
pub const XED_IFORMFL_VPGATHERQQ_FIRST: xed_iformfl_enum_t = 6157;
pub const XED_IFORMFL_VPGATHERQQ_LAST: xed_iformfl_enum_t = 6161;
pub const XED_IFORMFL_VPHADDBD_FIRST: xed_iformfl_enum_t = 6162;
pub const XED_IFORMFL_VPHADDBD_LAST: xed_iformfl_enum_t = 6163;
pub const XED_IFORMFL_VPHADDBQ_FIRST: xed_iformfl_enum_t = 6164;
pub const XED_IFORMFL_VPHADDBQ_LAST: xed_iformfl_enum_t = 6165;
pub const XED_IFORMFL_VPHADDBW_FIRST: xed_iformfl_enum_t = 6166;
pub const XED_IFORMFL_VPHADDBW_LAST: xed_iformfl_enum_t = 6167;
pub const XED_IFORMFL_VPHADDD_FIRST: xed_iformfl_enum_t = 6168;
pub const XED_IFORMFL_VPHADDD_LAST: xed_iformfl_enum_t = 6171;
pub const XED_IFORMFL_VPHADDDQ_FIRST: xed_iformfl_enum_t = 6172;
pub const XED_IFORMFL_VPHADDDQ_LAST: xed_iformfl_enum_t = 6173;
pub const XED_IFORMFL_VPHADDSW_FIRST: xed_iformfl_enum_t = 6174;
pub const XED_IFORMFL_VPHADDSW_LAST: xed_iformfl_enum_t = 6177;
pub const XED_IFORMFL_VPHADDUBD_FIRST: xed_iformfl_enum_t = 6178;
pub const XED_IFORMFL_VPHADDUBD_LAST: xed_iformfl_enum_t = 6179;
pub const XED_IFORMFL_VPHADDUBQ_FIRST: xed_iformfl_enum_t = 6180;
pub const XED_IFORMFL_VPHADDUBQ_LAST: xed_iformfl_enum_t = 6181;
pub const XED_IFORMFL_VPHADDUBW_FIRST: xed_iformfl_enum_t = 6182;
pub const XED_IFORMFL_VPHADDUBW_LAST: xed_iformfl_enum_t = 6183;
pub const XED_IFORMFL_VPHADDUDQ_FIRST: xed_iformfl_enum_t = 6184;
pub const XED_IFORMFL_VPHADDUDQ_LAST: xed_iformfl_enum_t = 6185;
pub const XED_IFORMFL_VPHADDUWD_FIRST: xed_iformfl_enum_t = 6186;
pub const XED_IFORMFL_VPHADDUWD_LAST: xed_iformfl_enum_t = 6187;
pub const XED_IFORMFL_VPHADDUWQ_FIRST: xed_iformfl_enum_t = 6188;
pub const XED_IFORMFL_VPHADDUWQ_LAST: xed_iformfl_enum_t = 6189;
pub const XED_IFORMFL_VPHADDW_FIRST: xed_iformfl_enum_t = 6190;
pub const XED_IFORMFL_VPHADDW_LAST: xed_iformfl_enum_t = 6193;
pub const XED_IFORMFL_VPHADDWD_FIRST: xed_iformfl_enum_t = 6194;
pub const XED_IFORMFL_VPHADDWD_LAST: xed_iformfl_enum_t = 6195;
pub const XED_IFORMFL_VPHADDWQ_FIRST: xed_iformfl_enum_t = 6196;
pub const XED_IFORMFL_VPHADDWQ_LAST: xed_iformfl_enum_t = 6197;
pub const XED_IFORMFL_VPHMINPOSUW_FIRST: xed_iformfl_enum_t = 6198;
pub const XED_IFORMFL_VPHMINPOSUW_LAST: xed_iformfl_enum_t = 6199;
pub const XED_IFORMFL_VPHSUBBW_FIRST: xed_iformfl_enum_t = 6200;
pub const XED_IFORMFL_VPHSUBBW_LAST: xed_iformfl_enum_t = 6201;
pub const XED_IFORMFL_VPHSUBD_FIRST: xed_iformfl_enum_t = 6202;
pub const XED_IFORMFL_VPHSUBD_LAST: xed_iformfl_enum_t = 6205;
pub const XED_IFORMFL_VPHSUBDQ_FIRST: xed_iformfl_enum_t = 6206;
pub const XED_IFORMFL_VPHSUBDQ_LAST: xed_iformfl_enum_t = 6207;
pub const XED_IFORMFL_VPHSUBSW_FIRST: xed_iformfl_enum_t = 6208;
pub const XED_IFORMFL_VPHSUBSW_LAST: xed_iformfl_enum_t = 6211;
pub const XED_IFORMFL_VPHSUBW_FIRST: xed_iformfl_enum_t = 6212;
pub const XED_IFORMFL_VPHSUBW_LAST: xed_iformfl_enum_t = 6215;
pub const XED_IFORMFL_VPHSUBWD_FIRST: xed_iformfl_enum_t = 6216;
pub const XED_IFORMFL_VPHSUBWD_LAST: xed_iformfl_enum_t = 6217;
pub const XED_IFORMFL_VPINSRB_FIRST: xed_iformfl_enum_t = 6218;
pub const XED_IFORMFL_VPINSRB_LAST: xed_iformfl_enum_t = 6221;
pub const XED_IFORMFL_VPINSRD_FIRST: xed_iformfl_enum_t = 6222;
pub const XED_IFORMFL_VPINSRD_LAST: xed_iformfl_enum_t = 6225;
pub const XED_IFORMFL_VPINSRQ_FIRST: xed_iformfl_enum_t = 6226;
pub const XED_IFORMFL_VPINSRQ_LAST: xed_iformfl_enum_t = 6229;
pub const XED_IFORMFL_VPINSRW_FIRST: xed_iformfl_enum_t = 6230;
pub const XED_IFORMFL_VPINSRW_LAST: xed_iformfl_enum_t = 6233;
pub const XED_IFORMFL_VPLZCNTD_FIRST: xed_iformfl_enum_t = 6234;
pub const XED_IFORMFL_VPLZCNTD_LAST: xed_iformfl_enum_t = 6239;
pub const XED_IFORMFL_VPLZCNTQ_FIRST: xed_iformfl_enum_t = 6240;
pub const XED_IFORMFL_VPLZCNTQ_LAST: xed_iformfl_enum_t = 6245;
pub const XED_IFORMFL_VPMACSDD_FIRST: xed_iformfl_enum_t = 6246;
pub const XED_IFORMFL_VPMACSDD_LAST: xed_iformfl_enum_t = 6247;
pub const XED_IFORMFL_VPMACSDQH_FIRST: xed_iformfl_enum_t = 6248;
pub const XED_IFORMFL_VPMACSDQH_LAST: xed_iformfl_enum_t = 6249;
pub const XED_IFORMFL_VPMACSDQL_FIRST: xed_iformfl_enum_t = 6250;
pub const XED_IFORMFL_VPMACSDQL_LAST: xed_iformfl_enum_t = 6251;
pub const XED_IFORMFL_VPMACSSDD_FIRST: xed_iformfl_enum_t = 6252;
pub const XED_IFORMFL_VPMACSSDD_LAST: xed_iformfl_enum_t = 6253;
pub const XED_IFORMFL_VPMACSSDQH_FIRST: xed_iformfl_enum_t = 6254;
pub const XED_IFORMFL_VPMACSSDQH_LAST: xed_iformfl_enum_t = 6255;
pub const XED_IFORMFL_VPMACSSDQL_FIRST: xed_iformfl_enum_t = 6256;
pub const XED_IFORMFL_VPMACSSDQL_LAST: xed_iformfl_enum_t = 6257;
pub const XED_IFORMFL_VPMACSSWD_FIRST: xed_iformfl_enum_t = 6258;
pub const XED_IFORMFL_VPMACSSWD_LAST: xed_iformfl_enum_t = 6259;
pub const XED_IFORMFL_VPMACSSWW_FIRST: xed_iformfl_enum_t = 6260;
pub const XED_IFORMFL_VPMACSSWW_LAST: xed_iformfl_enum_t = 6261;
pub const XED_IFORMFL_VPMACSWD_FIRST: xed_iformfl_enum_t = 6262;
pub const XED_IFORMFL_VPMACSWD_LAST: xed_iformfl_enum_t = 6263;
pub const XED_IFORMFL_VPMACSWW_FIRST: xed_iformfl_enum_t = 6264;
pub const XED_IFORMFL_VPMACSWW_LAST: xed_iformfl_enum_t = 6265;
pub const XED_IFORMFL_VPMADCSSWD_FIRST: xed_iformfl_enum_t = 6266;
pub const XED_IFORMFL_VPMADCSSWD_LAST: xed_iformfl_enum_t = 6267;
pub const XED_IFORMFL_VPMADCSWD_FIRST: xed_iformfl_enum_t = 6268;
pub const XED_IFORMFL_VPMADCSWD_LAST: xed_iformfl_enum_t = 6269;
pub const XED_IFORMFL_VPMADD52HUQ_FIRST: xed_iformfl_enum_t = 6270;
pub const XED_IFORMFL_VPMADD52HUQ_LAST: xed_iformfl_enum_t = 6279;
pub const XED_IFORMFL_VPMADD52LUQ_FIRST: xed_iformfl_enum_t = 6280;
pub const XED_IFORMFL_VPMADD52LUQ_LAST: xed_iformfl_enum_t = 6289;
pub const XED_IFORMFL_VPMADDUBSW_FIRST: xed_iformfl_enum_t = 6290;
pub const XED_IFORMFL_VPMADDUBSW_LAST: xed_iformfl_enum_t = 6299;
pub const XED_IFORMFL_VPMADDWD_FIRST: xed_iformfl_enum_t = 6300;
pub const XED_IFORMFL_VPMADDWD_LAST: xed_iformfl_enum_t = 6309;
pub const XED_IFORMFL_VPMASKMOVD_FIRST: xed_iformfl_enum_t = 6310;
pub const XED_IFORMFL_VPMASKMOVD_LAST: xed_iformfl_enum_t = 6313;
pub const XED_IFORMFL_VPMASKMOVQ_FIRST: xed_iformfl_enum_t = 6314;
pub const XED_IFORMFL_VPMASKMOVQ_LAST: xed_iformfl_enum_t = 6317;
pub const XED_IFORMFL_VPMAXSB_FIRST: xed_iformfl_enum_t = 6318;
pub const XED_IFORMFL_VPMAXSB_LAST: xed_iformfl_enum_t = 6327;
pub const XED_IFORMFL_VPMAXSD_FIRST: xed_iformfl_enum_t = 6328;
pub const XED_IFORMFL_VPMAXSD_LAST: xed_iformfl_enum_t = 6337;
pub const XED_IFORMFL_VPMAXSQ_FIRST: xed_iformfl_enum_t = 6338;
pub const XED_IFORMFL_VPMAXSQ_LAST: xed_iformfl_enum_t = 6343;
pub const XED_IFORMFL_VPMAXSW_FIRST: xed_iformfl_enum_t = 6344;
pub const XED_IFORMFL_VPMAXSW_LAST: xed_iformfl_enum_t = 6353;
pub const XED_IFORMFL_VPMAXUB_FIRST: xed_iformfl_enum_t = 6354;
pub const XED_IFORMFL_VPMAXUB_LAST: xed_iformfl_enum_t = 6363;
pub const XED_IFORMFL_VPMAXUD_FIRST: xed_iformfl_enum_t = 6364;
pub const XED_IFORMFL_VPMAXUD_LAST: xed_iformfl_enum_t = 6373;
pub const XED_IFORMFL_VPMAXUQ_FIRST: xed_iformfl_enum_t = 6374;
pub const XED_IFORMFL_VPMAXUQ_LAST: xed_iformfl_enum_t = 6379;
pub const XED_IFORMFL_VPMAXUW_FIRST: xed_iformfl_enum_t = 6380;
pub const XED_IFORMFL_VPMAXUW_LAST: xed_iformfl_enum_t = 6389;
pub const XED_IFORMFL_VPMINSB_FIRST: xed_iformfl_enum_t = 6390;
pub const XED_IFORMFL_VPMINSB_LAST: xed_iformfl_enum_t = 6399;
pub const XED_IFORMFL_VPMINSD_FIRST: xed_iformfl_enum_t = 6400;
pub const XED_IFORMFL_VPMINSD_LAST: xed_iformfl_enum_t = 6409;
pub const XED_IFORMFL_VPMINSQ_FIRST: xed_iformfl_enum_t = 6410;
pub const XED_IFORMFL_VPMINSQ_LAST: xed_iformfl_enum_t = 6415;
pub const XED_IFORMFL_VPMINSW_FIRST: xed_iformfl_enum_t = 6416;
pub const XED_IFORMFL_VPMINSW_LAST: xed_iformfl_enum_t = 6425;
pub const XED_IFORMFL_VPMINUB_FIRST: xed_iformfl_enum_t = 6426;
pub const XED_IFORMFL_VPMINUB_LAST: xed_iformfl_enum_t = 6435;
pub const XED_IFORMFL_VPMINUD_FIRST: xed_iformfl_enum_t = 6436;
pub const XED_IFORMFL_VPMINUD_LAST: xed_iformfl_enum_t = 6445;
pub const XED_IFORMFL_VPMINUQ_FIRST: xed_iformfl_enum_t = 6446;
pub const XED_IFORMFL_VPMINUQ_LAST: xed_iformfl_enum_t = 6451;
pub const XED_IFORMFL_VPMINUW_FIRST: xed_iformfl_enum_t = 6452;
pub const XED_IFORMFL_VPMINUW_LAST: xed_iformfl_enum_t = 6461;
pub const XED_IFORMFL_VPMOVB2M_FIRST: xed_iformfl_enum_t = 6462;
pub const XED_IFORMFL_VPMOVB2M_LAST: xed_iformfl_enum_t = 6464;
pub const XED_IFORMFL_VPMOVD2M_FIRST: xed_iformfl_enum_t = 6465;
pub const XED_IFORMFL_VPMOVD2M_LAST: xed_iformfl_enum_t = 6467;
pub const XED_IFORMFL_VPMOVDB_FIRST: xed_iformfl_enum_t = 6468;
pub const XED_IFORMFL_VPMOVDB_LAST: xed_iformfl_enum_t = 6473;
pub const XED_IFORMFL_VPMOVDW_FIRST: xed_iformfl_enum_t = 6474;
pub const XED_IFORMFL_VPMOVDW_LAST: xed_iformfl_enum_t = 6479;
pub const XED_IFORMFL_VPMOVM2B_FIRST: xed_iformfl_enum_t = 6480;
pub const XED_IFORMFL_VPMOVM2B_LAST: xed_iformfl_enum_t = 6482;
pub const XED_IFORMFL_VPMOVM2D_FIRST: xed_iformfl_enum_t = 6483;
pub const XED_IFORMFL_VPMOVM2D_LAST: xed_iformfl_enum_t = 6485;
pub const XED_IFORMFL_VPMOVM2Q_FIRST: xed_iformfl_enum_t = 6486;
pub const XED_IFORMFL_VPMOVM2Q_LAST: xed_iformfl_enum_t = 6488;
pub const XED_IFORMFL_VPMOVM2W_FIRST: xed_iformfl_enum_t = 6489;
pub const XED_IFORMFL_VPMOVM2W_LAST: xed_iformfl_enum_t = 6491;
pub const XED_IFORMFL_VPMOVMSKB_FIRST: xed_iformfl_enum_t = 6492;
pub const XED_IFORMFL_VPMOVMSKB_LAST: xed_iformfl_enum_t = 6493;
pub const XED_IFORMFL_VPMOVQ2M_FIRST: xed_iformfl_enum_t = 6494;
pub const XED_IFORMFL_VPMOVQ2M_LAST: xed_iformfl_enum_t = 6496;
pub const XED_IFORMFL_VPMOVQB_FIRST: xed_iformfl_enum_t = 6497;
pub const XED_IFORMFL_VPMOVQB_LAST: xed_iformfl_enum_t = 6502;
pub const XED_IFORMFL_VPMOVQD_FIRST: xed_iformfl_enum_t = 6503;
pub const XED_IFORMFL_VPMOVQD_LAST: xed_iformfl_enum_t = 6508;
pub const XED_IFORMFL_VPMOVQW_FIRST: xed_iformfl_enum_t = 6509;
pub const XED_IFORMFL_VPMOVQW_LAST: xed_iformfl_enum_t = 6514;
pub const XED_IFORMFL_VPMOVSDB_FIRST: xed_iformfl_enum_t = 6515;
pub const XED_IFORMFL_VPMOVSDB_LAST: xed_iformfl_enum_t = 6520;
pub const XED_IFORMFL_VPMOVSDW_FIRST: xed_iformfl_enum_t = 6521;
pub const XED_IFORMFL_VPMOVSDW_LAST: xed_iformfl_enum_t = 6526;
pub const XED_IFORMFL_VPMOVSQB_FIRST: xed_iformfl_enum_t = 6527;
pub const XED_IFORMFL_VPMOVSQB_LAST: xed_iformfl_enum_t = 6532;
pub const XED_IFORMFL_VPMOVSQD_FIRST: xed_iformfl_enum_t = 6533;
pub const XED_IFORMFL_VPMOVSQD_LAST: xed_iformfl_enum_t = 6538;
pub const XED_IFORMFL_VPMOVSQW_FIRST: xed_iformfl_enum_t = 6539;
pub const XED_IFORMFL_VPMOVSQW_LAST: xed_iformfl_enum_t = 6544;
pub const XED_IFORMFL_VPMOVSWB_FIRST: xed_iformfl_enum_t = 6545;
pub const XED_IFORMFL_VPMOVSWB_LAST: xed_iformfl_enum_t = 6550;
pub const XED_IFORMFL_VPMOVSXBD_FIRST: xed_iformfl_enum_t = 6551;
pub const XED_IFORMFL_VPMOVSXBD_LAST: xed_iformfl_enum_t = 6560;
pub const XED_IFORMFL_VPMOVSXBQ_FIRST: xed_iformfl_enum_t = 6561;
pub const XED_IFORMFL_VPMOVSXBQ_LAST: xed_iformfl_enum_t = 6570;
pub const XED_IFORMFL_VPMOVSXBW_FIRST: xed_iformfl_enum_t = 6571;
pub const XED_IFORMFL_VPMOVSXBW_LAST: xed_iformfl_enum_t = 6580;
pub const XED_IFORMFL_VPMOVSXDQ_FIRST: xed_iformfl_enum_t = 6581;
pub const XED_IFORMFL_VPMOVSXDQ_LAST: xed_iformfl_enum_t = 6590;
pub const XED_IFORMFL_VPMOVSXWD_FIRST: xed_iformfl_enum_t = 6591;
pub const XED_IFORMFL_VPMOVSXWD_LAST: xed_iformfl_enum_t = 6600;
pub const XED_IFORMFL_VPMOVSXWQ_FIRST: xed_iformfl_enum_t = 6601;
pub const XED_IFORMFL_VPMOVSXWQ_LAST: xed_iformfl_enum_t = 6610;
pub const XED_IFORMFL_VPMOVUSDB_FIRST: xed_iformfl_enum_t = 6611;
pub const XED_IFORMFL_VPMOVUSDB_LAST: xed_iformfl_enum_t = 6616;
pub const XED_IFORMFL_VPMOVUSDW_FIRST: xed_iformfl_enum_t = 6617;
pub const XED_IFORMFL_VPMOVUSDW_LAST: xed_iformfl_enum_t = 6622;
pub const XED_IFORMFL_VPMOVUSQB_FIRST: xed_iformfl_enum_t = 6623;
pub const XED_IFORMFL_VPMOVUSQB_LAST: xed_iformfl_enum_t = 6628;
pub const XED_IFORMFL_VPMOVUSQD_FIRST: xed_iformfl_enum_t = 6629;
pub const XED_IFORMFL_VPMOVUSQD_LAST: xed_iformfl_enum_t = 6634;
pub const XED_IFORMFL_VPMOVUSQW_FIRST: xed_iformfl_enum_t = 6635;
pub const XED_IFORMFL_VPMOVUSQW_LAST: xed_iformfl_enum_t = 6640;
pub const XED_IFORMFL_VPMOVUSWB_FIRST: xed_iformfl_enum_t = 6641;
pub const XED_IFORMFL_VPMOVUSWB_LAST: xed_iformfl_enum_t = 6646;
pub const XED_IFORMFL_VPMOVW2M_FIRST: xed_iformfl_enum_t = 6647;
pub const XED_IFORMFL_VPMOVW2M_LAST: xed_iformfl_enum_t = 6649;
pub const XED_IFORMFL_VPMOVWB_FIRST: xed_iformfl_enum_t = 6650;
pub const XED_IFORMFL_VPMOVWB_LAST: xed_iformfl_enum_t = 6655;
pub const XED_IFORMFL_VPMOVZXBD_FIRST: xed_iformfl_enum_t = 6656;
pub const XED_IFORMFL_VPMOVZXBD_LAST: xed_iformfl_enum_t = 6665;
pub const XED_IFORMFL_VPMOVZXBQ_FIRST: xed_iformfl_enum_t = 6666;
pub const XED_IFORMFL_VPMOVZXBQ_LAST: xed_iformfl_enum_t = 6675;
pub const XED_IFORMFL_VPMOVZXBW_FIRST: xed_iformfl_enum_t = 6676;
pub const XED_IFORMFL_VPMOVZXBW_LAST: xed_iformfl_enum_t = 6685;
pub const XED_IFORMFL_VPMOVZXDQ_FIRST: xed_iformfl_enum_t = 6686;
pub const XED_IFORMFL_VPMOVZXDQ_LAST: xed_iformfl_enum_t = 6695;
pub const XED_IFORMFL_VPMOVZXWD_FIRST: xed_iformfl_enum_t = 6696;
pub const XED_IFORMFL_VPMOVZXWD_LAST: xed_iformfl_enum_t = 6705;
pub const XED_IFORMFL_VPMOVZXWQ_FIRST: xed_iformfl_enum_t = 6706;
pub const XED_IFORMFL_VPMOVZXWQ_LAST: xed_iformfl_enum_t = 6715;
pub const XED_IFORMFL_VPMULDQ_FIRST: xed_iformfl_enum_t = 6716;
pub const XED_IFORMFL_VPMULDQ_LAST: xed_iformfl_enum_t = 6725;
pub const XED_IFORMFL_VPMULHRSW_FIRST: xed_iformfl_enum_t = 6726;
pub const XED_IFORMFL_VPMULHRSW_LAST: xed_iformfl_enum_t = 6735;
pub const XED_IFORMFL_VPMULHUW_FIRST: xed_iformfl_enum_t = 6736;
pub const XED_IFORMFL_VPMULHUW_LAST: xed_iformfl_enum_t = 6745;
pub const XED_IFORMFL_VPMULHW_FIRST: xed_iformfl_enum_t = 6746;
pub const XED_IFORMFL_VPMULHW_LAST: xed_iformfl_enum_t = 6755;
pub const XED_IFORMFL_VPMULLD_FIRST: xed_iformfl_enum_t = 6756;
pub const XED_IFORMFL_VPMULLD_LAST: xed_iformfl_enum_t = 6765;
pub const XED_IFORMFL_VPMULLQ_FIRST: xed_iformfl_enum_t = 6766;
pub const XED_IFORMFL_VPMULLQ_LAST: xed_iformfl_enum_t = 6771;
pub const XED_IFORMFL_VPMULLW_FIRST: xed_iformfl_enum_t = 6772;
pub const XED_IFORMFL_VPMULLW_LAST: xed_iformfl_enum_t = 6781;
pub const XED_IFORMFL_VPMULTISHIFTQB_FIRST: xed_iformfl_enum_t = 6782;
pub const XED_IFORMFL_VPMULTISHIFTQB_LAST: xed_iformfl_enum_t = 6787;
pub const XED_IFORMFL_VPMULUDQ_FIRST: xed_iformfl_enum_t = 6788;
pub const XED_IFORMFL_VPMULUDQ_LAST: xed_iformfl_enum_t = 6797;
pub const XED_IFORMFL_VPOPCNTB_FIRST: xed_iformfl_enum_t = 6798;
pub const XED_IFORMFL_VPOPCNTB_LAST: xed_iformfl_enum_t = 6803;
pub const XED_IFORMFL_VPOPCNTD_FIRST: xed_iformfl_enum_t = 6804;
pub const XED_IFORMFL_VPOPCNTD_LAST: xed_iformfl_enum_t = 6809;
pub const XED_IFORMFL_VPOPCNTQ_FIRST: xed_iformfl_enum_t = 6810;
pub const XED_IFORMFL_VPOPCNTQ_LAST: xed_iformfl_enum_t = 6815;
pub const XED_IFORMFL_VPOPCNTW_FIRST: xed_iformfl_enum_t = 6816;
pub const XED_IFORMFL_VPOPCNTW_LAST: xed_iformfl_enum_t = 6821;
pub const XED_IFORMFL_VPOR_FIRST: xed_iformfl_enum_t = 6822;
pub const XED_IFORMFL_VPOR_LAST: xed_iformfl_enum_t = 6825;
pub const XED_IFORMFL_VPORD_FIRST: xed_iformfl_enum_t = 6826;
pub const XED_IFORMFL_VPORD_LAST: xed_iformfl_enum_t = 6831;
pub const XED_IFORMFL_VPORQ_FIRST: xed_iformfl_enum_t = 6832;
pub const XED_IFORMFL_VPORQ_LAST: xed_iformfl_enum_t = 6837;
pub const XED_IFORMFL_VPPERM_FIRST: xed_iformfl_enum_t = 6838;
pub const XED_IFORMFL_VPPERM_LAST: xed_iformfl_enum_t = 6840;
pub const XED_IFORMFL_VPROLD_FIRST: xed_iformfl_enum_t = 6841;
pub const XED_IFORMFL_VPROLD_LAST: xed_iformfl_enum_t = 6846;
pub const XED_IFORMFL_VPROLQ_FIRST: xed_iformfl_enum_t = 6847;
pub const XED_IFORMFL_VPROLQ_LAST: xed_iformfl_enum_t = 6852;
pub const XED_IFORMFL_VPROLVD_FIRST: xed_iformfl_enum_t = 6853;
pub const XED_IFORMFL_VPROLVD_LAST: xed_iformfl_enum_t = 6858;
pub const XED_IFORMFL_VPROLVQ_FIRST: xed_iformfl_enum_t = 6859;
pub const XED_IFORMFL_VPROLVQ_LAST: xed_iformfl_enum_t = 6864;
pub const XED_IFORMFL_VPRORD_FIRST: xed_iformfl_enum_t = 6865;
pub const XED_IFORMFL_VPRORD_LAST: xed_iformfl_enum_t = 6870;
pub const XED_IFORMFL_VPRORQ_FIRST: xed_iformfl_enum_t = 6871;
pub const XED_IFORMFL_VPRORQ_LAST: xed_iformfl_enum_t = 6876;
pub const XED_IFORMFL_VPRORVD_FIRST: xed_iformfl_enum_t = 6877;
pub const XED_IFORMFL_VPRORVD_LAST: xed_iformfl_enum_t = 6882;
pub const XED_IFORMFL_VPRORVQ_FIRST: xed_iformfl_enum_t = 6883;
pub const XED_IFORMFL_VPRORVQ_LAST: xed_iformfl_enum_t = 6888;
pub const XED_IFORMFL_VPROTB_FIRST: xed_iformfl_enum_t = 6889;
pub const XED_IFORMFL_VPROTB_LAST: xed_iformfl_enum_t = 6893;
pub const XED_IFORMFL_VPROTD_FIRST: xed_iformfl_enum_t = 6894;
pub const XED_IFORMFL_VPROTD_LAST: xed_iformfl_enum_t = 6898;
pub const XED_IFORMFL_VPROTQ_FIRST: xed_iformfl_enum_t = 6899;
pub const XED_IFORMFL_VPROTQ_LAST: xed_iformfl_enum_t = 6903;
pub const XED_IFORMFL_VPROTW_FIRST: xed_iformfl_enum_t = 6904;
pub const XED_IFORMFL_VPROTW_LAST: xed_iformfl_enum_t = 6908;
pub const XED_IFORMFL_VPSADBW_FIRST: xed_iformfl_enum_t = 6909;
pub const XED_IFORMFL_VPSADBW_LAST: xed_iformfl_enum_t = 6918;
pub const XED_IFORMFL_VPSCATTERDD_FIRST: xed_iformfl_enum_t = 6919;
pub const XED_IFORMFL_VPSCATTERDD_LAST: xed_iformfl_enum_t = 6921;
pub const XED_IFORMFL_VPSCATTERDQ_FIRST: xed_iformfl_enum_t = 6922;
pub const XED_IFORMFL_VPSCATTERDQ_LAST: xed_iformfl_enum_t = 6924;
pub const XED_IFORMFL_VPSCATTERQD_FIRST: xed_iformfl_enum_t = 6925;
pub const XED_IFORMFL_VPSCATTERQD_LAST: xed_iformfl_enum_t = 6927;
pub const XED_IFORMFL_VPSCATTERQQ_FIRST: xed_iformfl_enum_t = 6928;
pub const XED_IFORMFL_VPSCATTERQQ_LAST: xed_iformfl_enum_t = 6930;
pub const XED_IFORMFL_VPSHAB_FIRST: xed_iformfl_enum_t = 6931;
pub const XED_IFORMFL_VPSHAB_LAST: xed_iformfl_enum_t = 6933;
pub const XED_IFORMFL_VPSHAD_FIRST: xed_iformfl_enum_t = 6934;
pub const XED_IFORMFL_VPSHAD_LAST: xed_iformfl_enum_t = 6936;
pub const XED_IFORMFL_VPSHAQ_FIRST: xed_iformfl_enum_t = 6937;
pub const XED_IFORMFL_VPSHAQ_LAST: xed_iformfl_enum_t = 6939;
pub const XED_IFORMFL_VPSHAW_FIRST: xed_iformfl_enum_t = 6940;
pub const XED_IFORMFL_VPSHAW_LAST: xed_iformfl_enum_t = 6942;
pub const XED_IFORMFL_VPSHLB_FIRST: xed_iformfl_enum_t = 6943;
pub const XED_IFORMFL_VPSHLB_LAST: xed_iformfl_enum_t = 6945;
pub const XED_IFORMFL_VPSHLD_FIRST: xed_iformfl_enum_t = 6946;
pub const XED_IFORMFL_VPSHLD_LAST: xed_iformfl_enum_t = 6948;
pub const XED_IFORMFL_VPSHLDD_FIRST: xed_iformfl_enum_t = 6949;
pub const XED_IFORMFL_VPSHLDD_LAST: xed_iformfl_enum_t = 6954;
pub const XED_IFORMFL_VPSHLDQ_FIRST: xed_iformfl_enum_t = 6955;
pub const XED_IFORMFL_VPSHLDQ_LAST: xed_iformfl_enum_t = 6960;
pub const XED_IFORMFL_VPSHLDVD_FIRST: xed_iformfl_enum_t = 6961;
pub const XED_IFORMFL_VPSHLDVD_LAST: xed_iformfl_enum_t = 6966;
pub const XED_IFORMFL_VPSHLDVQ_FIRST: xed_iformfl_enum_t = 6967;
pub const XED_IFORMFL_VPSHLDVQ_LAST: xed_iformfl_enum_t = 6972;
pub const XED_IFORMFL_VPSHLDVW_FIRST: xed_iformfl_enum_t = 6973;
pub const XED_IFORMFL_VPSHLDVW_LAST: xed_iformfl_enum_t = 6978;
pub const XED_IFORMFL_VPSHLDW_FIRST: xed_iformfl_enum_t = 6979;
pub const XED_IFORMFL_VPSHLDW_LAST: xed_iformfl_enum_t = 6984;
pub const XED_IFORMFL_VPSHLQ_FIRST: xed_iformfl_enum_t = 6985;
pub const XED_IFORMFL_VPSHLQ_LAST: xed_iformfl_enum_t = 6987;
pub const XED_IFORMFL_VPSHLW_FIRST: xed_iformfl_enum_t = 6988;
pub const XED_IFORMFL_VPSHLW_LAST: xed_iformfl_enum_t = 6990;
pub const XED_IFORMFL_VPSHRDD_FIRST: xed_iformfl_enum_t = 6991;
pub const XED_IFORMFL_VPSHRDD_LAST: xed_iformfl_enum_t = 6996;
pub const XED_IFORMFL_VPSHRDQ_FIRST: xed_iformfl_enum_t = 6997;
pub const XED_IFORMFL_VPSHRDQ_LAST: xed_iformfl_enum_t = 7002;
pub const XED_IFORMFL_VPSHRDVD_FIRST: xed_iformfl_enum_t = 7003;
pub const XED_IFORMFL_VPSHRDVD_LAST: xed_iformfl_enum_t = 7008;
pub const XED_IFORMFL_VPSHRDVQ_FIRST: xed_iformfl_enum_t = 7009;
pub const XED_IFORMFL_VPSHRDVQ_LAST: xed_iformfl_enum_t = 7014;
pub const XED_IFORMFL_VPSHRDVW_FIRST: xed_iformfl_enum_t = 7015;
pub const XED_IFORMFL_VPSHRDVW_LAST: xed_iformfl_enum_t = 7020;
pub const XED_IFORMFL_VPSHRDW_FIRST: xed_iformfl_enum_t = 7021;
pub const XED_IFORMFL_VPSHRDW_LAST: xed_iformfl_enum_t = 7026;
pub const XED_IFORMFL_VPSHUFB_FIRST: xed_iformfl_enum_t = 7027;
pub const XED_IFORMFL_VPSHUFB_LAST: xed_iformfl_enum_t = 7036;
pub const XED_IFORMFL_VPSHUFBITQMB_FIRST: xed_iformfl_enum_t = 7037;
pub const XED_IFORMFL_VPSHUFBITQMB_LAST: xed_iformfl_enum_t = 7042;
pub const XED_IFORMFL_VPSHUFD_FIRST: xed_iformfl_enum_t = 7043;
pub const XED_IFORMFL_VPSHUFD_LAST: xed_iformfl_enum_t = 7052;
pub const XED_IFORMFL_VPSHUFHW_FIRST: xed_iformfl_enum_t = 7053;
pub const XED_IFORMFL_VPSHUFHW_LAST: xed_iformfl_enum_t = 7062;
pub const XED_IFORMFL_VPSHUFLW_FIRST: xed_iformfl_enum_t = 7063;
pub const XED_IFORMFL_VPSHUFLW_LAST: xed_iformfl_enum_t = 7072;
pub const XED_IFORMFL_VPSIGNB_FIRST: xed_iformfl_enum_t = 7073;
pub const XED_IFORMFL_VPSIGNB_LAST: xed_iformfl_enum_t = 7076;
pub const XED_IFORMFL_VPSIGND_FIRST: xed_iformfl_enum_t = 7077;
pub const XED_IFORMFL_VPSIGND_LAST: xed_iformfl_enum_t = 7080;
pub const XED_IFORMFL_VPSIGNW_FIRST: xed_iformfl_enum_t = 7081;
pub const XED_IFORMFL_VPSIGNW_LAST: xed_iformfl_enum_t = 7084;
pub const XED_IFORMFL_VPSLLD_FIRST: xed_iformfl_enum_t = 7085;
pub const XED_IFORMFL_VPSLLD_LAST: xed_iformfl_enum_t = 7102;
pub const XED_IFORMFL_VPSLLDQ_FIRST: xed_iformfl_enum_t = 7103;
pub const XED_IFORMFL_VPSLLDQ_LAST: xed_iformfl_enum_t = 7110;
pub const XED_IFORMFL_VPSLLQ_FIRST: xed_iformfl_enum_t = 7111;
pub const XED_IFORMFL_VPSLLQ_LAST: xed_iformfl_enum_t = 7128;
pub const XED_IFORMFL_VPSLLVD_FIRST: xed_iformfl_enum_t = 7129;
pub const XED_IFORMFL_VPSLLVD_LAST: xed_iformfl_enum_t = 7138;
pub const XED_IFORMFL_VPSLLVQ_FIRST: xed_iformfl_enum_t = 7139;
pub const XED_IFORMFL_VPSLLVQ_LAST: xed_iformfl_enum_t = 7148;
pub const XED_IFORMFL_VPSLLVW_FIRST: xed_iformfl_enum_t = 7149;
pub const XED_IFORMFL_VPSLLVW_LAST: xed_iformfl_enum_t = 7154;
pub const XED_IFORMFL_VPSLLW_FIRST: xed_iformfl_enum_t = 7155;
pub const XED_IFORMFL_VPSLLW_LAST: xed_iformfl_enum_t = 7172;
pub const XED_IFORMFL_VPSRAD_FIRST: xed_iformfl_enum_t = 7173;
pub const XED_IFORMFL_VPSRAD_LAST: xed_iformfl_enum_t = 7190;
pub const XED_IFORMFL_VPSRAQ_FIRST: xed_iformfl_enum_t = 7191;
pub const XED_IFORMFL_VPSRAQ_LAST: xed_iformfl_enum_t = 7202;
pub const XED_IFORMFL_VPSRAVD_FIRST: xed_iformfl_enum_t = 7203;
pub const XED_IFORMFL_VPSRAVD_LAST: xed_iformfl_enum_t = 7212;
pub const XED_IFORMFL_VPSRAVQ_FIRST: xed_iformfl_enum_t = 7213;
pub const XED_IFORMFL_VPSRAVQ_LAST: xed_iformfl_enum_t = 7218;
pub const XED_IFORMFL_VPSRAVW_FIRST: xed_iformfl_enum_t = 7219;
pub const XED_IFORMFL_VPSRAVW_LAST: xed_iformfl_enum_t = 7224;
pub const XED_IFORMFL_VPSRAW_FIRST: xed_iformfl_enum_t = 7225;
pub const XED_IFORMFL_VPSRAW_LAST: xed_iformfl_enum_t = 7242;
pub const XED_IFORMFL_VPSRLD_FIRST: xed_iformfl_enum_t = 7243;
pub const XED_IFORMFL_VPSRLD_LAST: xed_iformfl_enum_t = 7260;
pub const XED_IFORMFL_VPSRLDQ_FIRST: xed_iformfl_enum_t = 7261;
pub const XED_IFORMFL_VPSRLDQ_LAST: xed_iformfl_enum_t = 7268;
pub const XED_IFORMFL_VPSRLQ_FIRST: xed_iformfl_enum_t = 7269;
pub const XED_IFORMFL_VPSRLQ_LAST: xed_iformfl_enum_t = 7286;
pub const XED_IFORMFL_VPSRLVD_FIRST: xed_iformfl_enum_t = 7287;
pub const XED_IFORMFL_VPSRLVD_LAST: xed_iformfl_enum_t = 7296;
pub const XED_IFORMFL_VPSRLVQ_FIRST: xed_iformfl_enum_t = 7297;
pub const XED_IFORMFL_VPSRLVQ_LAST: xed_iformfl_enum_t = 7306;
pub const XED_IFORMFL_VPSRLVW_FIRST: xed_iformfl_enum_t = 7307;
pub const XED_IFORMFL_VPSRLVW_LAST: xed_iformfl_enum_t = 7312;
pub const XED_IFORMFL_VPSRLW_FIRST: xed_iformfl_enum_t = 7313;
pub const XED_IFORMFL_VPSRLW_LAST: xed_iformfl_enum_t = 7330;
pub const XED_IFORMFL_VPSUBB_FIRST: xed_iformfl_enum_t = 7331;
pub const XED_IFORMFL_VPSUBB_LAST: xed_iformfl_enum_t = 7340;
pub const XED_IFORMFL_VPSUBD_FIRST: xed_iformfl_enum_t = 7341;
pub const XED_IFORMFL_VPSUBD_LAST: xed_iformfl_enum_t = 7350;
pub const XED_IFORMFL_VPSUBQ_FIRST: xed_iformfl_enum_t = 7351;
pub const XED_IFORMFL_VPSUBQ_LAST: xed_iformfl_enum_t = 7360;
pub const XED_IFORMFL_VPSUBSB_FIRST: xed_iformfl_enum_t = 7361;
pub const XED_IFORMFL_VPSUBSB_LAST: xed_iformfl_enum_t = 7370;
pub const XED_IFORMFL_VPSUBSW_FIRST: xed_iformfl_enum_t = 7371;
pub const XED_IFORMFL_VPSUBSW_LAST: xed_iformfl_enum_t = 7380;
pub const XED_IFORMFL_VPSUBUSB_FIRST: xed_iformfl_enum_t = 7381;
pub const XED_IFORMFL_VPSUBUSB_LAST: xed_iformfl_enum_t = 7390;
pub const XED_IFORMFL_VPSUBUSW_FIRST: xed_iformfl_enum_t = 7391;
pub const XED_IFORMFL_VPSUBUSW_LAST: xed_iformfl_enum_t = 7400;
pub const XED_IFORMFL_VPSUBW_FIRST: xed_iformfl_enum_t = 7401;
pub const XED_IFORMFL_VPSUBW_LAST: xed_iformfl_enum_t = 7410;
pub const XED_IFORMFL_VPTERNLOGD_FIRST: xed_iformfl_enum_t = 7411;
pub const XED_IFORMFL_VPTERNLOGD_LAST: xed_iformfl_enum_t = 7416;
pub const XED_IFORMFL_VPTERNLOGQ_FIRST: xed_iformfl_enum_t = 7417;
pub const XED_IFORMFL_VPTERNLOGQ_LAST: xed_iformfl_enum_t = 7422;
pub const XED_IFORMFL_VPTEST_FIRST: xed_iformfl_enum_t = 7423;
pub const XED_IFORMFL_VPTEST_LAST: xed_iformfl_enum_t = 7426;
pub const XED_IFORMFL_VPTESTMB_FIRST: xed_iformfl_enum_t = 7427;
pub const XED_IFORMFL_VPTESTMB_LAST: xed_iformfl_enum_t = 7432;
pub const XED_IFORMFL_VPTESTMD_FIRST: xed_iformfl_enum_t = 7433;
pub const XED_IFORMFL_VPTESTMD_LAST: xed_iformfl_enum_t = 7438;
pub const XED_IFORMFL_VPTESTMQ_FIRST: xed_iformfl_enum_t = 7439;
pub const XED_IFORMFL_VPTESTMQ_LAST: xed_iformfl_enum_t = 7444;
pub const XED_IFORMFL_VPTESTMW_FIRST: xed_iformfl_enum_t = 7445;
pub const XED_IFORMFL_VPTESTMW_LAST: xed_iformfl_enum_t = 7450;
pub const XED_IFORMFL_VPTESTNMB_FIRST: xed_iformfl_enum_t = 7451;
pub const XED_IFORMFL_VPTESTNMB_LAST: xed_iformfl_enum_t = 7456;
pub const XED_IFORMFL_VPTESTNMD_FIRST: xed_iformfl_enum_t = 7457;
pub const XED_IFORMFL_VPTESTNMD_LAST: xed_iformfl_enum_t = 7462;
pub const XED_IFORMFL_VPTESTNMQ_FIRST: xed_iformfl_enum_t = 7463;
pub const XED_IFORMFL_VPTESTNMQ_LAST: xed_iformfl_enum_t = 7468;
pub const XED_IFORMFL_VPTESTNMW_FIRST: xed_iformfl_enum_t = 7469;
pub const XED_IFORMFL_VPTESTNMW_LAST: xed_iformfl_enum_t = 7474;
pub const XED_IFORMFL_VPUNPCKHBW_FIRST: xed_iformfl_enum_t = 7475;
pub const XED_IFORMFL_VPUNPCKHBW_LAST: xed_iformfl_enum_t = 7484;
pub const XED_IFORMFL_VPUNPCKHDQ_FIRST: xed_iformfl_enum_t = 7485;
pub const XED_IFORMFL_VPUNPCKHDQ_LAST: xed_iformfl_enum_t = 7494;
pub const XED_IFORMFL_VPUNPCKHQDQ_FIRST: xed_iformfl_enum_t = 7495;
pub const XED_IFORMFL_VPUNPCKHQDQ_LAST: xed_iformfl_enum_t = 7504;
pub const XED_IFORMFL_VPUNPCKHWD_FIRST: xed_iformfl_enum_t = 7505;
pub const XED_IFORMFL_VPUNPCKHWD_LAST: xed_iformfl_enum_t = 7514;
pub const XED_IFORMFL_VPUNPCKLBW_FIRST: xed_iformfl_enum_t = 7515;
pub const XED_IFORMFL_VPUNPCKLBW_LAST: xed_iformfl_enum_t = 7524;
pub const XED_IFORMFL_VPUNPCKLDQ_FIRST: xed_iformfl_enum_t = 7525;
pub const XED_IFORMFL_VPUNPCKLDQ_LAST: xed_iformfl_enum_t = 7534;
pub const XED_IFORMFL_VPUNPCKLQDQ_FIRST: xed_iformfl_enum_t = 7535;
pub const XED_IFORMFL_VPUNPCKLQDQ_LAST: xed_iformfl_enum_t = 7544;
pub const XED_IFORMFL_VPUNPCKLWD_FIRST: xed_iformfl_enum_t = 7545;
pub const XED_IFORMFL_VPUNPCKLWD_LAST: xed_iformfl_enum_t = 7554;
pub const XED_IFORMFL_VPXOR_FIRST: xed_iformfl_enum_t = 7555;
pub const XED_IFORMFL_VPXOR_LAST: xed_iformfl_enum_t = 7558;
pub const XED_IFORMFL_VPXORD_FIRST: xed_iformfl_enum_t = 7559;
pub const XED_IFORMFL_VPXORD_LAST: xed_iformfl_enum_t = 7564;
pub const XED_IFORMFL_VPXORQ_FIRST: xed_iformfl_enum_t = 7565;
pub const XED_IFORMFL_VPXORQ_LAST: xed_iformfl_enum_t = 7570;
pub const XED_IFORMFL_VRANGEPD_FIRST: xed_iformfl_enum_t = 7571;
pub const XED_IFORMFL_VRANGEPD_LAST: xed_iformfl_enum_t = 7576;
pub const XED_IFORMFL_VRANGEPS_FIRST: xed_iformfl_enum_t = 7577;
pub const XED_IFORMFL_VRANGEPS_LAST: xed_iformfl_enum_t = 7582;
pub const XED_IFORMFL_VRANGESD_FIRST: xed_iformfl_enum_t = 7583;
pub const XED_IFORMFL_VRANGESD_LAST: xed_iformfl_enum_t = 7584;
pub const XED_IFORMFL_VRANGESS_FIRST: xed_iformfl_enum_t = 7585;
pub const XED_IFORMFL_VRANGESS_LAST: xed_iformfl_enum_t = 7586;
pub const XED_IFORMFL_VRCP14PD_FIRST: xed_iformfl_enum_t = 7587;
pub const XED_IFORMFL_VRCP14PD_LAST: xed_iformfl_enum_t = 7592;
pub const XED_IFORMFL_VRCP14PS_FIRST: xed_iformfl_enum_t = 7593;
pub const XED_IFORMFL_VRCP14PS_LAST: xed_iformfl_enum_t = 7598;
pub const XED_IFORMFL_VRCP14SD_FIRST: xed_iformfl_enum_t = 7599;
pub const XED_IFORMFL_VRCP14SD_LAST: xed_iformfl_enum_t = 7600;
pub const XED_IFORMFL_VRCP14SS_FIRST: xed_iformfl_enum_t = 7601;
pub const XED_IFORMFL_VRCP14SS_LAST: xed_iformfl_enum_t = 7602;
pub const XED_IFORMFL_VRCP28PD_FIRST: xed_iformfl_enum_t = 7603;
pub const XED_IFORMFL_VRCP28PD_LAST: xed_iformfl_enum_t = 7604;
pub const XED_IFORMFL_VRCP28PS_FIRST: xed_iformfl_enum_t = 7605;
pub const XED_IFORMFL_VRCP28PS_LAST: xed_iformfl_enum_t = 7606;
pub const XED_IFORMFL_VRCP28SD_FIRST: xed_iformfl_enum_t = 7607;
pub const XED_IFORMFL_VRCP28SD_LAST: xed_iformfl_enum_t = 7608;
pub const XED_IFORMFL_VRCP28SS_FIRST: xed_iformfl_enum_t = 7609;
pub const XED_IFORMFL_VRCP28SS_LAST: xed_iformfl_enum_t = 7610;
pub const XED_IFORMFL_VRCPPH_FIRST: xed_iformfl_enum_t = 7611;
pub const XED_IFORMFL_VRCPPH_LAST: xed_iformfl_enum_t = 7616;
pub const XED_IFORMFL_VRCPPS_FIRST: xed_iformfl_enum_t = 7617;
pub const XED_IFORMFL_VRCPPS_LAST: xed_iformfl_enum_t = 7620;
pub const XED_IFORMFL_VRCPSH_FIRST: xed_iformfl_enum_t = 7621;
pub const XED_IFORMFL_VRCPSH_LAST: xed_iformfl_enum_t = 7622;
pub const XED_IFORMFL_VRCPSS_FIRST: xed_iformfl_enum_t = 7623;
pub const XED_IFORMFL_VRCPSS_LAST: xed_iformfl_enum_t = 7624;
pub const XED_IFORMFL_VREDUCEPD_FIRST: xed_iformfl_enum_t = 7625;
pub const XED_IFORMFL_VREDUCEPD_LAST: xed_iformfl_enum_t = 7630;
pub const XED_IFORMFL_VREDUCEPH_FIRST: xed_iformfl_enum_t = 7631;
pub const XED_IFORMFL_VREDUCEPH_LAST: xed_iformfl_enum_t = 7636;
pub const XED_IFORMFL_VREDUCEPS_FIRST: xed_iformfl_enum_t = 7637;
pub const XED_IFORMFL_VREDUCEPS_LAST: xed_iformfl_enum_t = 7642;
pub const XED_IFORMFL_VREDUCESD_FIRST: xed_iformfl_enum_t = 7643;
pub const XED_IFORMFL_VREDUCESD_LAST: xed_iformfl_enum_t = 7644;
pub const XED_IFORMFL_VREDUCESH_FIRST: xed_iformfl_enum_t = 7645;
pub const XED_IFORMFL_VREDUCESH_LAST: xed_iformfl_enum_t = 7646;
pub const XED_IFORMFL_VREDUCESS_FIRST: xed_iformfl_enum_t = 7647;
pub const XED_IFORMFL_VREDUCESS_LAST: xed_iformfl_enum_t = 7648;
pub const XED_IFORMFL_VRNDSCALEPD_FIRST: xed_iformfl_enum_t = 7649;
pub const XED_IFORMFL_VRNDSCALEPD_LAST: xed_iformfl_enum_t = 7654;
pub const XED_IFORMFL_VRNDSCALEPH_FIRST: xed_iformfl_enum_t = 7655;
pub const XED_IFORMFL_VRNDSCALEPH_LAST: xed_iformfl_enum_t = 7660;
pub const XED_IFORMFL_VRNDSCALEPS_FIRST: xed_iformfl_enum_t = 7661;
pub const XED_IFORMFL_VRNDSCALEPS_LAST: xed_iformfl_enum_t = 7666;
pub const XED_IFORMFL_VRNDSCALESD_FIRST: xed_iformfl_enum_t = 7667;
pub const XED_IFORMFL_VRNDSCALESD_LAST: xed_iformfl_enum_t = 7668;
pub const XED_IFORMFL_VRNDSCALESH_FIRST: xed_iformfl_enum_t = 7669;
pub const XED_IFORMFL_VRNDSCALESH_LAST: xed_iformfl_enum_t = 7670;
pub const XED_IFORMFL_VRNDSCALESS_FIRST: xed_iformfl_enum_t = 7671;
pub const XED_IFORMFL_VRNDSCALESS_LAST: xed_iformfl_enum_t = 7672;
pub const XED_IFORMFL_VROUNDPD_FIRST: xed_iformfl_enum_t = 7673;
pub const XED_IFORMFL_VROUNDPD_LAST: xed_iformfl_enum_t = 7676;
pub const XED_IFORMFL_VROUNDPS_FIRST: xed_iformfl_enum_t = 7677;
pub const XED_IFORMFL_VROUNDPS_LAST: xed_iformfl_enum_t = 7680;
pub const XED_IFORMFL_VROUNDSD_FIRST: xed_iformfl_enum_t = 7681;
pub const XED_IFORMFL_VROUNDSD_LAST: xed_iformfl_enum_t = 7682;
pub const XED_IFORMFL_VROUNDSS_FIRST: xed_iformfl_enum_t = 7683;
pub const XED_IFORMFL_VROUNDSS_LAST: xed_iformfl_enum_t = 7684;
pub const XED_IFORMFL_VRSQRT14PD_FIRST: xed_iformfl_enum_t = 7685;
pub const XED_IFORMFL_VRSQRT14PD_LAST: xed_iformfl_enum_t = 7690;
pub const XED_IFORMFL_VRSQRT14PS_FIRST: xed_iformfl_enum_t = 7691;
pub const XED_IFORMFL_VRSQRT14PS_LAST: xed_iformfl_enum_t = 7696;
pub const XED_IFORMFL_VRSQRT14SD_FIRST: xed_iformfl_enum_t = 7697;
pub const XED_IFORMFL_VRSQRT14SD_LAST: xed_iformfl_enum_t = 7698;
pub const XED_IFORMFL_VRSQRT14SS_FIRST: xed_iformfl_enum_t = 7699;
pub const XED_IFORMFL_VRSQRT14SS_LAST: xed_iformfl_enum_t = 7700;
pub const XED_IFORMFL_VRSQRT28PD_FIRST: xed_iformfl_enum_t = 7701;
pub const XED_IFORMFL_VRSQRT28PD_LAST: xed_iformfl_enum_t = 7702;
pub const XED_IFORMFL_VRSQRT28PS_FIRST: xed_iformfl_enum_t = 7703;
pub const XED_IFORMFL_VRSQRT28PS_LAST: xed_iformfl_enum_t = 7704;
pub const XED_IFORMFL_VRSQRT28SD_FIRST: xed_iformfl_enum_t = 7705;
pub const XED_IFORMFL_VRSQRT28SD_LAST: xed_iformfl_enum_t = 7706;
pub const XED_IFORMFL_VRSQRT28SS_FIRST: xed_iformfl_enum_t = 7707;
pub const XED_IFORMFL_VRSQRT28SS_LAST: xed_iformfl_enum_t = 7708;
pub const XED_IFORMFL_VRSQRTPH_FIRST: xed_iformfl_enum_t = 7709;
pub const XED_IFORMFL_VRSQRTPH_LAST: xed_iformfl_enum_t = 7714;
pub const XED_IFORMFL_VRSQRTPS_FIRST: xed_iformfl_enum_t = 7715;
pub const XED_IFORMFL_VRSQRTPS_LAST: xed_iformfl_enum_t = 7718;
pub const XED_IFORMFL_VRSQRTSH_FIRST: xed_iformfl_enum_t = 7719;
pub const XED_IFORMFL_VRSQRTSH_LAST: xed_iformfl_enum_t = 7720;
pub const XED_IFORMFL_VRSQRTSS_FIRST: xed_iformfl_enum_t = 7721;
pub const XED_IFORMFL_VRSQRTSS_LAST: xed_iformfl_enum_t = 7722;
pub const XED_IFORMFL_VSCALEFPD_FIRST: xed_iformfl_enum_t = 7723;
pub const XED_IFORMFL_VSCALEFPD_LAST: xed_iformfl_enum_t = 7728;
pub const XED_IFORMFL_VSCALEFPH_FIRST: xed_iformfl_enum_t = 7729;
pub const XED_IFORMFL_VSCALEFPH_LAST: xed_iformfl_enum_t = 7734;
pub const XED_IFORMFL_VSCALEFPS_FIRST: xed_iformfl_enum_t = 7735;
pub const XED_IFORMFL_VSCALEFPS_LAST: xed_iformfl_enum_t = 7740;
pub const XED_IFORMFL_VSCALEFSD_FIRST: xed_iformfl_enum_t = 7741;
pub const XED_IFORMFL_VSCALEFSD_LAST: xed_iformfl_enum_t = 7742;
pub const XED_IFORMFL_VSCALEFSH_FIRST: xed_iformfl_enum_t = 7743;
pub const XED_IFORMFL_VSCALEFSH_LAST: xed_iformfl_enum_t = 7744;
pub const XED_IFORMFL_VSCALEFSS_FIRST: xed_iformfl_enum_t = 7745;
pub const XED_IFORMFL_VSCALEFSS_LAST: xed_iformfl_enum_t = 7746;
pub const XED_IFORMFL_VSCATTERDPD_FIRST: xed_iformfl_enum_t = 7747;
pub const XED_IFORMFL_VSCATTERDPD_LAST: xed_iformfl_enum_t = 7749;
pub const XED_IFORMFL_VSCATTERDPS_FIRST: xed_iformfl_enum_t = 7750;
pub const XED_IFORMFL_VSCATTERDPS_LAST: xed_iformfl_enum_t = 7752;
pub const XED_IFORMFL_VSCATTERPF0DPD_FIRST: xed_iformfl_enum_t = 7753;
pub const XED_IFORMFL_VSCATTERPF0DPD_LAST: xed_iformfl_enum_t = 7753;
pub const XED_IFORMFL_VSCATTERPF0DPS_FIRST: xed_iformfl_enum_t = 7754;
pub const XED_IFORMFL_VSCATTERPF0DPS_LAST: xed_iformfl_enum_t = 7754;
pub const XED_IFORMFL_VSCATTERPF0QPD_FIRST: xed_iformfl_enum_t = 7755;
pub const XED_IFORMFL_VSCATTERPF0QPD_LAST: xed_iformfl_enum_t = 7755;
pub const XED_IFORMFL_VSCATTERPF0QPS_FIRST: xed_iformfl_enum_t = 7756;
pub const XED_IFORMFL_VSCATTERPF0QPS_LAST: xed_iformfl_enum_t = 7756;
pub const XED_IFORMFL_VSCATTERPF1DPD_FIRST: xed_iformfl_enum_t = 7757;
pub const XED_IFORMFL_VSCATTERPF1DPD_LAST: xed_iformfl_enum_t = 7757;
pub const XED_IFORMFL_VSCATTERPF1DPS_FIRST: xed_iformfl_enum_t = 7758;
pub const XED_IFORMFL_VSCATTERPF1DPS_LAST: xed_iformfl_enum_t = 7758;
pub const XED_IFORMFL_VSCATTERPF1QPD_FIRST: xed_iformfl_enum_t = 7759;
pub const XED_IFORMFL_VSCATTERPF1QPD_LAST: xed_iformfl_enum_t = 7759;
pub const XED_IFORMFL_VSCATTERPF1QPS_FIRST: xed_iformfl_enum_t = 7760;
pub const XED_IFORMFL_VSCATTERPF1QPS_LAST: xed_iformfl_enum_t = 7760;
pub const XED_IFORMFL_VSCATTERQPD_FIRST: xed_iformfl_enum_t = 7761;
pub const XED_IFORMFL_VSCATTERQPD_LAST: xed_iformfl_enum_t = 7763;
pub const XED_IFORMFL_VSCATTERQPS_FIRST: xed_iformfl_enum_t = 7764;
pub const XED_IFORMFL_VSCATTERQPS_LAST: xed_iformfl_enum_t = 7766;
pub const XED_IFORMFL_VSHA512MSG1_FIRST: xed_iformfl_enum_t = 7767;
pub const XED_IFORMFL_VSHA512MSG1_LAST: xed_iformfl_enum_t = 7767;
pub const XED_IFORMFL_VSHA512MSG2_FIRST: xed_iformfl_enum_t = 7768;
pub const XED_IFORMFL_VSHA512MSG2_LAST: xed_iformfl_enum_t = 7768;
pub const XED_IFORMFL_VSHA512RNDS2_FIRST: xed_iformfl_enum_t = 7769;
pub const XED_IFORMFL_VSHA512RNDS2_LAST: xed_iformfl_enum_t = 7769;
pub const XED_IFORMFL_VSHUFF32X4_FIRST: xed_iformfl_enum_t = 7770;
pub const XED_IFORMFL_VSHUFF32X4_LAST: xed_iformfl_enum_t = 7773;
pub const XED_IFORMFL_VSHUFF64X2_FIRST: xed_iformfl_enum_t = 7774;
pub const XED_IFORMFL_VSHUFF64X2_LAST: xed_iformfl_enum_t = 7777;
pub const XED_IFORMFL_VSHUFI32X4_FIRST: xed_iformfl_enum_t = 7778;
pub const XED_IFORMFL_VSHUFI32X4_LAST: xed_iformfl_enum_t = 7781;
pub const XED_IFORMFL_VSHUFI64X2_FIRST: xed_iformfl_enum_t = 7782;
pub const XED_IFORMFL_VSHUFI64X2_LAST: xed_iformfl_enum_t = 7785;
pub const XED_IFORMFL_VSHUFPD_FIRST: xed_iformfl_enum_t = 7786;
pub const XED_IFORMFL_VSHUFPD_LAST: xed_iformfl_enum_t = 7795;
pub const XED_IFORMFL_VSHUFPS_FIRST: xed_iformfl_enum_t = 7796;
pub const XED_IFORMFL_VSHUFPS_LAST: xed_iformfl_enum_t = 7805;
pub const XED_IFORMFL_VSM3MSG1_FIRST: xed_iformfl_enum_t = 7806;
pub const XED_IFORMFL_VSM3MSG1_LAST: xed_iformfl_enum_t = 7807;
pub const XED_IFORMFL_VSM3MSG2_FIRST: xed_iformfl_enum_t = 7808;
pub const XED_IFORMFL_VSM3MSG2_LAST: xed_iformfl_enum_t = 7809;
pub const XED_IFORMFL_VSM3RNDS2_FIRST: xed_iformfl_enum_t = 7810;
pub const XED_IFORMFL_VSM3RNDS2_LAST: xed_iformfl_enum_t = 7811;
pub const XED_IFORMFL_VSM4KEY4_FIRST: xed_iformfl_enum_t = 7812;
pub const XED_IFORMFL_VSM4KEY4_LAST: xed_iformfl_enum_t = 7815;
pub const XED_IFORMFL_VSM4RNDS4_FIRST: xed_iformfl_enum_t = 7816;
pub const XED_IFORMFL_VSM4RNDS4_LAST: xed_iformfl_enum_t = 7819;
pub const XED_IFORMFL_VSQRTPD_FIRST: xed_iformfl_enum_t = 7820;
pub const XED_IFORMFL_VSQRTPD_LAST: xed_iformfl_enum_t = 7829;
pub const XED_IFORMFL_VSQRTPH_FIRST: xed_iformfl_enum_t = 7830;
pub const XED_IFORMFL_VSQRTPH_LAST: xed_iformfl_enum_t = 7835;
pub const XED_IFORMFL_VSQRTPS_FIRST: xed_iformfl_enum_t = 7836;
pub const XED_IFORMFL_VSQRTPS_LAST: xed_iformfl_enum_t = 7845;
pub const XED_IFORMFL_VSQRTSD_FIRST: xed_iformfl_enum_t = 7846;
pub const XED_IFORMFL_VSQRTSD_LAST: xed_iformfl_enum_t = 7849;
pub const XED_IFORMFL_VSQRTSH_FIRST: xed_iformfl_enum_t = 7850;
pub const XED_IFORMFL_VSQRTSH_LAST: xed_iformfl_enum_t = 7851;
pub const XED_IFORMFL_VSQRTSS_FIRST: xed_iformfl_enum_t = 7852;
pub const XED_IFORMFL_VSQRTSS_LAST: xed_iformfl_enum_t = 7855;
pub const XED_IFORMFL_VSTMXCSR_FIRST: xed_iformfl_enum_t = 7856;
pub const XED_IFORMFL_VSTMXCSR_LAST: xed_iformfl_enum_t = 7856;
pub const XED_IFORMFL_VSUBPD_FIRST: xed_iformfl_enum_t = 7857;
pub const XED_IFORMFL_VSUBPD_LAST: xed_iformfl_enum_t = 7866;
pub const XED_IFORMFL_VSUBPH_FIRST: xed_iformfl_enum_t = 7867;
pub const XED_IFORMFL_VSUBPH_LAST: xed_iformfl_enum_t = 7872;
pub const XED_IFORMFL_VSUBPS_FIRST: xed_iformfl_enum_t = 7873;
pub const XED_IFORMFL_VSUBPS_LAST: xed_iformfl_enum_t = 7882;
pub const XED_IFORMFL_VSUBSD_FIRST: xed_iformfl_enum_t = 7883;
pub const XED_IFORMFL_VSUBSD_LAST: xed_iformfl_enum_t = 7886;
pub const XED_IFORMFL_VSUBSH_FIRST: xed_iformfl_enum_t = 7887;
pub const XED_IFORMFL_VSUBSH_LAST: xed_iformfl_enum_t = 7888;
pub const XED_IFORMFL_VSUBSS_FIRST: xed_iformfl_enum_t = 7889;
pub const XED_IFORMFL_VSUBSS_LAST: xed_iformfl_enum_t = 7892;
pub const XED_IFORMFL_VTESTPD_FIRST: xed_iformfl_enum_t = 7893;
pub const XED_IFORMFL_VTESTPD_LAST: xed_iformfl_enum_t = 7896;
pub const XED_IFORMFL_VTESTPS_FIRST: xed_iformfl_enum_t = 7897;
pub const XED_IFORMFL_VTESTPS_LAST: xed_iformfl_enum_t = 7900;
pub const XED_IFORMFL_VUCOMISD_FIRST: xed_iformfl_enum_t = 7901;
pub const XED_IFORMFL_VUCOMISD_LAST: xed_iformfl_enum_t = 7904;
pub const XED_IFORMFL_VUCOMISH_FIRST: xed_iformfl_enum_t = 7905;
pub const XED_IFORMFL_VUCOMISH_LAST: xed_iformfl_enum_t = 7906;
pub const XED_IFORMFL_VUCOMISS_FIRST: xed_iformfl_enum_t = 7907;
pub const XED_IFORMFL_VUCOMISS_LAST: xed_iformfl_enum_t = 7910;
pub const XED_IFORMFL_VUNPCKHPD_FIRST: xed_iformfl_enum_t = 7911;
pub const XED_IFORMFL_VUNPCKHPD_LAST: xed_iformfl_enum_t = 7920;
pub const XED_IFORMFL_VUNPCKHPS_FIRST: xed_iformfl_enum_t = 7921;
pub const XED_IFORMFL_VUNPCKHPS_LAST: xed_iformfl_enum_t = 7930;
pub const XED_IFORMFL_VUNPCKLPD_FIRST: xed_iformfl_enum_t = 7931;
pub const XED_IFORMFL_VUNPCKLPD_LAST: xed_iformfl_enum_t = 7940;
pub const XED_IFORMFL_VUNPCKLPS_FIRST: xed_iformfl_enum_t = 7941;
pub const XED_IFORMFL_VUNPCKLPS_LAST: xed_iformfl_enum_t = 7950;
pub const XED_IFORMFL_VXORPD_FIRST: xed_iformfl_enum_t = 7951;
pub const XED_IFORMFL_VXORPD_LAST: xed_iformfl_enum_t = 7960;
pub const XED_IFORMFL_VXORPS_FIRST: xed_iformfl_enum_t = 7961;
pub const XED_IFORMFL_VXORPS_LAST: xed_iformfl_enum_t = 7970;
pub const XED_IFORMFL_VZEROALL_FIRST: xed_iformfl_enum_t = 7971;
pub const XED_IFORMFL_VZEROALL_LAST: xed_iformfl_enum_t = 7971;
pub const XED_IFORMFL_VZEROUPPER_FIRST: xed_iformfl_enum_t = 7972;
pub const XED_IFORMFL_VZEROUPPER_LAST: xed_iformfl_enum_t = 7972;
pub const XED_IFORMFL_WBINVD_FIRST: xed_iformfl_enum_t = 7973;
pub const XED_IFORMFL_WBINVD_LAST: xed_iformfl_enum_t = 7973;
pub const XED_IFORMFL_WBNOINVD_FIRST: xed_iformfl_enum_t = 7974;
pub const XED_IFORMFL_WBNOINVD_LAST: xed_iformfl_enum_t = 7974;
pub const XED_IFORMFL_WRFSBASE_FIRST: xed_iformfl_enum_t = 7975;
pub const XED_IFORMFL_WRFSBASE_LAST: xed_iformfl_enum_t = 7975;
pub const XED_IFORMFL_WRGSBASE_FIRST: xed_iformfl_enum_t = 7976;
pub const XED_IFORMFL_WRGSBASE_LAST: xed_iformfl_enum_t = 7976;
pub const XED_IFORMFL_WRMSR_FIRST: xed_iformfl_enum_t = 7977;
pub const XED_IFORMFL_WRMSR_LAST: xed_iformfl_enum_t = 7977;
pub const XED_IFORMFL_WRMSRLIST_FIRST: xed_iformfl_enum_t = 7978;
pub const XED_IFORMFL_WRMSRLIST_LAST: xed_iformfl_enum_t = 7978;
pub const XED_IFORMFL_WRMSRNS_FIRST: xed_iformfl_enum_t = 7979;
pub const XED_IFORMFL_WRMSRNS_LAST: xed_iformfl_enum_t = 7979;
pub const XED_IFORMFL_WRPKRU_FIRST: xed_iformfl_enum_t = 7980;
pub const XED_IFORMFL_WRPKRU_LAST: xed_iformfl_enum_t = 7980;
pub const XED_IFORMFL_WRSSD_FIRST: xed_iformfl_enum_t = 7981;
pub const XED_IFORMFL_WRSSD_LAST: xed_iformfl_enum_t = 7982;
pub const XED_IFORMFL_WRSSQ_FIRST: xed_iformfl_enum_t = 7983;
pub const XED_IFORMFL_WRSSQ_LAST: xed_iformfl_enum_t = 7984;
pub const XED_IFORMFL_WRUSSD_FIRST: xed_iformfl_enum_t = 7985;
pub const XED_IFORMFL_WRUSSD_LAST: xed_iformfl_enum_t = 7986;
pub const XED_IFORMFL_WRUSSQ_FIRST: xed_iformfl_enum_t = 7987;
pub const XED_IFORMFL_WRUSSQ_LAST: xed_iformfl_enum_t = 7988;
pub const XED_IFORMFL_XABORT_FIRST: xed_iformfl_enum_t = 7989;
pub const XED_IFORMFL_XABORT_LAST: xed_iformfl_enum_t = 7989;
pub const XED_IFORMFL_XADD_FIRST: xed_iformfl_enum_t = 7990;
pub const XED_IFORMFL_XADD_LAST: xed_iformfl_enum_t = 7993;
pub const XED_IFORMFL_XADD_LOCK_FIRST: xed_iformfl_enum_t = 7994;
pub const XED_IFORMFL_XADD_LOCK_LAST: xed_iformfl_enum_t = 7995;
pub const XED_IFORMFL_XBEGIN_FIRST: xed_iformfl_enum_t = 7996;
pub const XED_IFORMFL_XBEGIN_LAST: xed_iformfl_enum_t = 7996;
pub const XED_IFORMFL_XCHG_FIRST: xed_iformfl_enum_t = 7997;
pub const XED_IFORMFL_XCHG_LAST: xed_iformfl_enum_t = 8001;
pub const XED_IFORMFL_XEND_FIRST: xed_iformfl_enum_t = 8002;
pub const XED_IFORMFL_XEND_LAST: xed_iformfl_enum_t = 8002;
pub const XED_IFORMFL_XGETBV_FIRST: xed_iformfl_enum_t = 8003;
pub const XED_IFORMFL_XGETBV_LAST: xed_iformfl_enum_t = 8003;
pub const XED_IFORMFL_XLAT_FIRST: xed_iformfl_enum_t = 8004;
pub const XED_IFORMFL_XLAT_LAST: xed_iformfl_enum_t = 8004;
pub const XED_IFORMFL_XOR_FIRST: xed_iformfl_enum_t = 8005;
pub const XED_IFORMFL_XOR_LAST: xed_iformfl_enum_t = 8046;
pub const XED_IFORMFL_XORPD_FIRST: xed_iformfl_enum_t = 8047;
pub const XED_IFORMFL_XORPD_LAST: xed_iformfl_enum_t = 8048;
pub const XED_IFORMFL_XORPS_FIRST: xed_iformfl_enum_t = 8049;
pub const XED_IFORMFL_XORPS_LAST: xed_iformfl_enum_t = 8050;
pub const XED_IFORMFL_XOR_LOCK_FIRST: xed_iformfl_enum_t = 8051;
pub const XED_IFORMFL_XOR_LOCK_LAST: xed_iformfl_enum_t = 8056;
pub const XED_IFORMFL_XRESLDTRK_FIRST: xed_iformfl_enum_t = 8057;
pub const XED_IFORMFL_XRESLDTRK_LAST: xed_iformfl_enum_t = 8057;
pub const XED_IFORMFL_XRSTOR_FIRST: xed_iformfl_enum_t = 8058;
pub const XED_IFORMFL_XRSTOR_LAST: xed_iformfl_enum_t = 8058;
pub const XED_IFORMFL_XRSTOR64_FIRST: xed_iformfl_enum_t = 8059;
pub const XED_IFORMFL_XRSTOR64_LAST: xed_iformfl_enum_t = 8059;
pub const XED_IFORMFL_XRSTORS_FIRST: xed_iformfl_enum_t = 8060;
pub const XED_IFORMFL_XRSTORS_LAST: xed_iformfl_enum_t = 8060;
pub const XED_IFORMFL_XRSTORS64_FIRST: xed_iformfl_enum_t = 8061;
pub const XED_IFORMFL_XRSTORS64_LAST: xed_iformfl_enum_t = 8061;
pub const XED_IFORMFL_XSAVE_FIRST: xed_iformfl_enum_t = 8062;
pub const XED_IFORMFL_XSAVE_LAST: xed_iformfl_enum_t = 8062;
pub const XED_IFORMFL_XSAVE64_FIRST: xed_iformfl_enum_t = 8063;
pub const XED_IFORMFL_XSAVE64_LAST: xed_iformfl_enum_t = 8063;
pub const XED_IFORMFL_XSAVEC_FIRST: xed_iformfl_enum_t = 8064;
pub const XED_IFORMFL_XSAVEC_LAST: xed_iformfl_enum_t = 8064;
pub const XED_IFORMFL_XSAVEC64_FIRST: xed_iformfl_enum_t = 8065;
pub const XED_IFORMFL_XSAVEC64_LAST: xed_iformfl_enum_t = 8065;
pub const XED_IFORMFL_XSAVEOPT_FIRST: xed_iformfl_enum_t = 8066;
pub const XED_IFORMFL_XSAVEOPT_LAST: xed_iformfl_enum_t = 8066;
pub const XED_IFORMFL_XSAVEOPT64_FIRST: xed_iformfl_enum_t = 8067;
pub const XED_IFORMFL_XSAVEOPT64_LAST: xed_iformfl_enum_t = 8067;
pub const XED_IFORMFL_XSAVES_FIRST: xed_iformfl_enum_t = 8068;
pub const XED_IFORMFL_XSAVES_LAST: xed_iformfl_enum_t = 8068;
pub const XED_IFORMFL_XSAVES64_FIRST: xed_iformfl_enum_t = 8069;
pub const XED_IFORMFL_XSAVES64_LAST: xed_iformfl_enum_t = 8069;
pub const XED_IFORMFL_XSETBV_FIRST: xed_iformfl_enum_t = 8070;
pub const XED_IFORMFL_XSETBV_LAST: xed_iformfl_enum_t = 8070;
pub const XED_IFORMFL_XSTORE_FIRST: xed_iformfl_enum_t = 8071;
pub const XED_IFORMFL_XSTORE_LAST: xed_iformfl_enum_t = 8071;
pub const XED_IFORMFL_XSUSLDTRK_FIRST: xed_iformfl_enum_t = 8072;
pub const XED_IFORMFL_XSUSLDTRK_LAST: xed_iformfl_enum_t = 8072;
pub const XED_IFORMFL_XTEST_FIRST: xed_iformfl_enum_t = 8073;
pub const XED_IFORMFL_XTEST_LAST: xed_iformfl_enum_t = 8073;
pub const XED_IFORMFL_LAST: xed_iformfl_enum_t = 8074;
pub type xed_iformfl_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_iformfl_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_iformfl_enum_t_last() -> xed_iformfl_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC Take an instruction with a REP/REPE/REPNE prefix and\n return the corresponding xed_iclass_enum_t without that prefix. The\n return value differs from the other functions in this group: If the\n input iclass does not have REP/REPNE/REPE prefix, the function returns\n the original instruction."]
    pub fn xed_rep_remove(x: xed_iclass_enum_t) -> xed_iclass_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC Take an #xed_iclass_enum_t value without a REPE prefix and\n return the corresponding #xed_iclass_enum_t with a REPE prefix. If the\n input instruction cannot have have a REPE prefix, this function returns\n XED_ICLASS_INVALID."]
    pub fn xed_repe_map(iclass: xed_iclass_enum_t) -> xed_iclass_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC Take an #xed_iclass_enum_t value without a REPNE prefix\n and return the corresponding #xed_iclass_enum_t with a REPNE prefix. If\n the input instruction cannot have a REPNE prefix, this function returns\n XED_ICLASS_INVALID."]
    pub fn xed_repne_map(iclass: xed_iclass_enum_t) -> xed_iclass_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC Take an #xed_iclass_enum_t value without a REP prefix and\n return the corresponding #xed_iclass_enum_t with a REP prefix. If the\n input instruction cannot have a REP prefix, this function returns\n XED_ICLASS_INVALID."]
    pub fn xed_rep_map(iclass: xed_iclass_enum_t) -> xed_iclass_enum_t;
}
extern "C" {
    #[doc = " @ingroup DEC Take an #xed_iclass_enum_t value for an instruction with a\n REP/REPNE/REPE prefix and return the corresponding #xed_iclass_enum_t\n without that prefix. If the input instruction does not have a\n REP/REPNE/REPE prefix, this function returns XED_ICLASS_INVALID."]
    pub fn xed_norep_map(iclass: xed_iclass_enum_t) -> xed_iclass_enum_t;
}
#[doc = " A function for obtaining register values. 32b return values should be\n zero extended to 64b. The error value is set to nonzero if the callback\n experiences some sort of problem.  @ingroup AGEN"]
pub type xed_register_callback_fn_t = ::core::option::Option<
    unsafe extern "C" fn(
        reg: xed_reg_enum_t,
        context: *mut ::core::ffi::c_void,
        error: *mut xed_bool_t,
    ) -> u64,
>;
#[doc = " A function for obtaining the segment base values. 32b return values\n should be zero extended zero extended to 64b. The error value is set to\n nonzero if the callback experiences some sort of problem.\n @ingroup AGEN"]
pub type xed_segment_base_callback_fn_t = ::core::option::Option<
    unsafe extern "C" fn(
        reg: xed_reg_enum_t,
        context: *mut ::core::ffi::c_void,
        error: *mut xed_bool_t,
    ) -> u64,
>;
extern "C" {
    #[doc = " Initialize the callback functions. Tell XED what to call when using\n #xed_agen.\n @ingroup AGEN"]
    pub fn xed_agen_register_callback(
        register_fn: xed_register_callback_fn_t,
        segment_fn: xed_segment_base_callback_fn_t,
    );
}
extern "C" {
    #[doc = " Using the registered callbacks, compute the memory address for a\n specified memop in a decoded instruction. memop_index can have the\n value 0 for XED_OPERAND_MEM0, XED_OPERAND_AGEN, or 1 for\n XED_OPERAND_MEM1. Any other value results in an error being\n returned. The context parameter which is passed to the registered\n callbacks can be used to identify which thread's state is being\n referenced. The context parameter can also be used to specify which\n element of a vector register should be returned for gather an scatter\n operations.\n @ingroup AGEN"]
    pub fn xed_agen(
        xedd: *mut xed_decoded_inst_t,
        memop_index: ::core::ffi::c_uint,
        context: *mut ::core::ffi::c_void,
        out_address: *mut u64,
    ) -> xed_error_enum_t;
}
pub const XED_CPUID_REC_INVALID: xed_cpuid_rec_enum_t = 0;
pub const XED_CPUID_REC_ADOXADCX: xed_cpuid_rec_enum_t = 1;
pub const XED_CPUID_REC_AES: xed_cpuid_rec_enum_t = 2;
pub const XED_CPUID_REC_AMX_BF16: xed_cpuid_rec_enum_t = 3;
pub const XED_CPUID_REC_AMX_COMPLEX: xed_cpuid_rec_enum_t = 4;
pub const XED_CPUID_REC_AMX_FP16: xed_cpuid_rec_enum_t = 5;
pub const XED_CPUID_REC_AMX_INT8: xed_cpuid_rec_enum_t = 6;
pub const XED_CPUID_REC_AMX_TILES: xed_cpuid_rec_enum_t = 7;
pub const XED_CPUID_REC_APX_F: xed_cpuid_rec_enum_t = 8;
pub const XED_CPUID_REC_AVX: xed_cpuid_rec_enum_t = 9;
pub const XED_CPUID_REC_AVX10_128VL: xed_cpuid_rec_enum_t = 10;
pub const XED_CPUID_REC_AVX10_256VL: xed_cpuid_rec_enum_t = 11;
pub const XED_CPUID_REC_AVX10_512VL: xed_cpuid_rec_enum_t = 12;
pub const XED_CPUID_REC_AVX10_ENABLED: xed_cpuid_rec_enum_t = 13;
pub const XED_CPUID_REC_AVX10_VER1: xed_cpuid_rec_enum_t = 14;
pub const XED_CPUID_REC_AVX2: xed_cpuid_rec_enum_t = 15;
pub const XED_CPUID_REC_AVX512BW: xed_cpuid_rec_enum_t = 16;
pub const XED_CPUID_REC_AVX512CD: xed_cpuid_rec_enum_t = 17;
pub const XED_CPUID_REC_AVX512DQ: xed_cpuid_rec_enum_t = 18;
pub const XED_CPUID_REC_AVX512ER: xed_cpuid_rec_enum_t = 19;
pub const XED_CPUID_REC_AVX512F: xed_cpuid_rec_enum_t = 20;
pub const XED_CPUID_REC_AVX512IFMA: xed_cpuid_rec_enum_t = 21;
pub const XED_CPUID_REC_AVX512PF: xed_cpuid_rec_enum_t = 22;
pub const XED_CPUID_REC_AVX512VBMI: xed_cpuid_rec_enum_t = 23;
pub const XED_CPUID_REC_AVX512VL: xed_cpuid_rec_enum_t = 24;
pub const XED_CPUID_REC_AVX512_4FMAPS: xed_cpuid_rec_enum_t = 25;
pub const XED_CPUID_REC_AVX512_4VNNIW: xed_cpuid_rec_enum_t = 26;
pub const XED_CPUID_REC_AVX512_BITALG: xed_cpuid_rec_enum_t = 27;
pub const XED_CPUID_REC_AVX512_FP16: xed_cpuid_rec_enum_t = 28;
pub const XED_CPUID_REC_AVX512_VBMI2: xed_cpuid_rec_enum_t = 29;
pub const XED_CPUID_REC_AVX512_VNNI: xed_cpuid_rec_enum_t = 30;
pub const XED_CPUID_REC_AVX512_VP2INTERSECT: xed_cpuid_rec_enum_t = 31;
pub const XED_CPUID_REC_AVX512_VPOPCNTDQ: xed_cpuid_rec_enum_t = 32;
pub const XED_CPUID_REC_AVX_IFMA: xed_cpuid_rec_enum_t = 33;
pub const XED_CPUID_REC_AVX_NE_CONVERT: xed_cpuid_rec_enum_t = 34;
pub const XED_CPUID_REC_AVX_VNNI: xed_cpuid_rec_enum_t = 35;
pub const XED_CPUID_REC_AVX_VNNI_INT16: xed_cpuid_rec_enum_t = 36;
pub const XED_CPUID_REC_AVX_VNNI_INT8: xed_cpuid_rec_enum_t = 37;
pub const XED_CPUID_REC_BF16: xed_cpuid_rec_enum_t = 38;
pub const XED_CPUID_REC_BMI1: xed_cpuid_rec_enum_t = 39;
pub const XED_CPUID_REC_BMI2: xed_cpuid_rec_enum_t = 40;
pub const XED_CPUID_REC_CET: xed_cpuid_rec_enum_t = 41;
pub const XED_CPUID_REC_CLDEMOTE: xed_cpuid_rec_enum_t = 42;
pub const XED_CPUID_REC_CLFLUSH: xed_cpuid_rec_enum_t = 43;
pub const XED_CPUID_REC_CLFLUSHOPT: xed_cpuid_rec_enum_t = 44;
pub const XED_CPUID_REC_CLWB: xed_cpuid_rec_enum_t = 45;
pub const XED_CPUID_REC_CMOV: xed_cpuid_rec_enum_t = 46;
pub const XED_CPUID_REC_CMPCCXADD: xed_cpuid_rec_enum_t = 47;
pub const XED_CPUID_REC_CMPXCHG16B: xed_cpuid_rec_enum_t = 48;
pub const XED_CPUID_REC_ENQCMD: xed_cpuid_rec_enum_t = 49;
pub const XED_CPUID_REC_F16C: xed_cpuid_rec_enum_t = 50;
pub const XED_CPUID_REC_FMA: xed_cpuid_rec_enum_t = 51;
pub const XED_CPUID_REC_FPU: xed_cpuid_rec_enum_t = 52;
pub const XED_CPUID_REC_FRED: xed_cpuid_rec_enum_t = 53;
pub const XED_CPUID_REC_FXSAVE: xed_cpuid_rec_enum_t = 54;
pub const XED_CPUID_REC_GFNI: xed_cpuid_rec_enum_t = 55;
pub const XED_CPUID_REC_HRESET: xed_cpuid_rec_enum_t = 56;
pub const XED_CPUID_REC_ICACHE_PREFETCH: xed_cpuid_rec_enum_t = 57;
pub const XED_CPUID_REC_INTEL64: xed_cpuid_rec_enum_t = 58;
pub const XED_CPUID_REC_INTELPT: xed_cpuid_rec_enum_t = 59;
pub const XED_CPUID_REC_INVPCID: xed_cpuid_rec_enum_t = 60;
pub const XED_CPUID_REC_KLENABLED: xed_cpuid_rec_enum_t = 61;
pub const XED_CPUID_REC_KLSUPPORTED: xed_cpuid_rec_enum_t = 62;
pub const XED_CPUID_REC_KLWIDE: xed_cpuid_rec_enum_t = 63;
pub const XED_CPUID_REC_LAHF: xed_cpuid_rec_enum_t = 64;
pub const XED_CPUID_REC_LKGS: xed_cpuid_rec_enum_t = 65;
pub const XED_CPUID_REC_LZCNT: xed_cpuid_rec_enum_t = 66;
pub const XED_CPUID_REC_MCOMMIT: xed_cpuid_rec_enum_t = 67;
pub const XED_CPUID_REC_MMX: xed_cpuid_rec_enum_t = 68;
pub const XED_CPUID_REC_MONITOR: xed_cpuid_rec_enum_t = 69;
pub const XED_CPUID_REC_MONITORX: xed_cpuid_rec_enum_t = 70;
pub const XED_CPUID_REC_MOVDIR64B: xed_cpuid_rec_enum_t = 71;
pub const XED_CPUID_REC_MOVDIRI: xed_cpuid_rec_enum_t = 72;
pub const XED_CPUID_REC_MOVEBE: xed_cpuid_rec_enum_t = 73;
pub const XED_CPUID_REC_MPX: xed_cpuid_rec_enum_t = 74;
pub const XED_CPUID_REC_MSRLIST: xed_cpuid_rec_enum_t = 75;
pub const XED_CPUID_REC_OSPKU: xed_cpuid_rec_enum_t = 76;
pub const XED_CPUID_REC_OSXSAVE: xed_cpuid_rec_enum_t = 77;
pub const XED_CPUID_REC_PBNDKB: xed_cpuid_rec_enum_t = 78;
pub const XED_CPUID_REC_PCLMULQDQ: xed_cpuid_rec_enum_t = 79;
pub const XED_CPUID_REC_PCONFIG: xed_cpuid_rec_enum_t = 80;
pub const XED_CPUID_REC_PKU: xed_cpuid_rec_enum_t = 81;
pub const XED_CPUID_REC_POPCNT: xed_cpuid_rec_enum_t = 82;
pub const XED_CPUID_REC_PREFETCHW: xed_cpuid_rec_enum_t = 83;
pub const XED_CPUID_REC_PREFETCHWT1: xed_cpuid_rec_enum_t = 84;
pub const XED_CPUID_REC_PTWRITE: xed_cpuid_rec_enum_t = 85;
pub const XED_CPUID_REC_RAO_INT: xed_cpuid_rec_enum_t = 86;
pub const XED_CPUID_REC_RDP: xed_cpuid_rec_enum_t = 87;
pub const XED_CPUID_REC_RDPRU: xed_cpuid_rec_enum_t = 88;
pub const XED_CPUID_REC_RDRAND: xed_cpuid_rec_enum_t = 89;
pub const XED_CPUID_REC_RDSEED: xed_cpuid_rec_enum_t = 90;
pub const XED_CPUID_REC_RDTSCP: xed_cpuid_rec_enum_t = 91;
pub const XED_CPUID_REC_RDWRFSGS: xed_cpuid_rec_enum_t = 92;
pub const XED_CPUID_REC_RTM: xed_cpuid_rec_enum_t = 93;
pub const XED_CPUID_REC_SERIALIZE: xed_cpuid_rec_enum_t = 94;
pub const XED_CPUID_REC_SGX: xed_cpuid_rec_enum_t = 95;
pub const XED_CPUID_REC_SHA: xed_cpuid_rec_enum_t = 96;
pub const XED_CPUID_REC_SHA512: xed_cpuid_rec_enum_t = 97;
pub const XED_CPUID_REC_SM3: xed_cpuid_rec_enum_t = 98;
pub const XED_CPUID_REC_SM4: xed_cpuid_rec_enum_t = 99;
pub const XED_CPUID_REC_SMAP: xed_cpuid_rec_enum_t = 100;
pub const XED_CPUID_REC_SMX: xed_cpuid_rec_enum_t = 101;
pub const XED_CPUID_REC_SNP: xed_cpuid_rec_enum_t = 102;
pub const XED_CPUID_REC_SSE: xed_cpuid_rec_enum_t = 103;
pub const XED_CPUID_REC_SSE2: xed_cpuid_rec_enum_t = 104;
pub const XED_CPUID_REC_SSE3: xed_cpuid_rec_enum_t = 105;
pub const XED_CPUID_REC_SSE4: xed_cpuid_rec_enum_t = 106;
pub const XED_CPUID_REC_SSE42: xed_cpuid_rec_enum_t = 107;
pub const XED_CPUID_REC_SSE4A: xed_cpuid_rec_enum_t = 108;
pub const XED_CPUID_REC_SSSE3: xed_cpuid_rec_enum_t = 109;
pub const XED_CPUID_REC_TSX_LDTRK: xed_cpuid_rec_enum_t = 110;
pub const XED_CPUID_REC_UINTR: xed_cpuid_rec_enum_t = 111;
pub const XED_CPUID_REC_USER_MSR: xed_cpuid_rec_enum_t = 112;
pub const XED_CPUID_REC_VAES: xed_cpuid_rec_enum_t = 113;
pub const XED_CPUID_REC_VIA_PADLOCK_AES: xed_cpuid_rec_enum_t = 114;
pub const XED_CPUID_REC_VIA_PADLOCK_AES_EN: xed_cpuid_rec_enum_t = 115;
pub const XED_CPUID_REC_VIA_PADLOCK_PMM: xed_cpuid_rec_enum_t = 116;
pub const XED_CPUID_REC_VIA_PADLOCK_PMM_EN: xed_cpuid_rec_enum_t = 117;
pub const XED_CPUID_REC_VIA_PADLOCK_RNG: xed_cpuid_rec_enum_t = 118;
pub const XED_CPUID_REC_VIA_PADLOCK_RNG_EN: xed_cpuid_rec_enum_t = 119;
pub const XED_CPUID_REC_VIA_PADLOCK_SHA: xed_cpuid_rec_enum_t = 120;
pub const XED_CPUID_REC_VIA_PADLOCK_SHA_EN: xed_cpuid_rec_enum_t = 121;
pub const XED_CPUID_REC_VMX: xed_cpuid_rec_enum_t = 122;
pub const XED_CPUID_REC_VPCLMULQDQ: xed_cpuid_rec_enum_t = 123;
pub const XED_CPUID_REC_WAITPKG: xed_cpuid_rec_enum_t = 124;
pub const XED_CPUID_REC_WBNOINVD: xed_cpuid_rec_enum_t = 125;
pub const XED_CPUID_REC_WRMSRNS: xed_cpuid_rec_enum_t = 126;
pub const XED_CPUID_REC_XSAVE: xed_cpuid_rec_enum_t = 127;
pub const XED_CPUID_REC_XSAVEC: xed_cpuid_rec_enum_t = 128;
pub const XED_CPUID_REC_XSAVEOPT: xed_cpuid_rec_enum_t = 129;
pub const XED_CPUID_REC_XSAVES: xed_cpuid_rec_enum_t = 130;
pub const XED_CPUID_REC_LAST: xed_cpuid_rec_enum_t = 131;
pub type xed_cpuid_rec_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_cpuid_rec_enum_t types.\n @param s A C-string.\n @return #xed_cpuid_rec_enum_t\n @ingroup ENUM"]
    pub fn str2xed_cpuid_rec_enum_t(s: *const ::core::ffi::c_char) -> xed_cpuid_rec_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_cpuid_rec_enum_t types.\n @param p An enumeration element of type xed_cpuid_rec_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_cpuid_rec_enum_t2str(p: xed_cpuid_rec_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_cpuid_rec_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_cpuid_rec_enum_t_last() -> xed_cpuid_rec_enum_t;
}
pub const XED_CPUID_GROUP_INVALID: xed_cpuid_group_enum_t = 0;
pub const XED_CPUID_GROUP_ADOX_ADCX: xed_cpuid_group_enum_t = 1;
pub const XED_CPUID_GROUP_AES: xed_cpuid_group_enum_t = 2;
pub const XED_CPUID_GROUP_AMX_BF16: xed_cpuid_group_enum_t = 3;
pub const XED_CPUID_GROUP_AMX_COMPLEX: xed_cpuid_group_enum_t = 4;
pub const XED_CPUID_GROUP_AMX_FP16: xed_cpuid_group_enum_t = 5;
pub const XED_CPUID_GROUP_AMX_INT8: xed_cpuid_group_enum_t = 6;
pub const XED_CPUID_GROUP_AMX_TILE: xed_cpuid_group_enum_t = 7;
pub const XED_CPUID_GROUP_APX_F: xed_cpuid_group_enum_t = 8;
pub const XED_CPUID_GROUP_APX_F_ADX: xed_cpuid_group_enum_t = 9;
pub const XED_CPUID_GROUP_APX_F_AMX: xed_cpuid_group_enum_t = 10;
pub const XED_CPUID_GROUP_APX_F_BMI1: xed_cpuid_group_enum_t = 11;
pub const XED_CPUID_GROUP_APX_F_BMI2: xed_cpuid_group_enum_t = 12;
pub const XED_CPUID_GROUP_APX_F_CET: xed_cpuid_group_enum_t = 13;
pub const XED_CPUID_GROUP_APX_F_CMPCCXADD: xed_cpuid_group_enum_t = 14;
pub const XED_CPUID_GROUP_APX_F_ENQCMD: xed_cpuid_group_enum_t = 15;
pub const XED_CPUID_GROUP_APX_F_INVPCID: xed_cpuid_group_enum_t = 16;
pub const XED_CPUID_GROUP_APX_F_KEYLOCKER: xed_cpuid_group_enum_t = 17;
pub const XED_CPUID_GROUP_APX_F_KEYLOCKER_WIDE: xed_cpuid_group_enum_t = 18;
pub const XED_CPUID_GROUP_APX_F_KOPB: xed_cpuid_group_enum_t = 19;
pub const XED_CPUID_GROUP_APX_F_KOPB_AVX10: xed_cpuid_group_enum_t = 20;
pub const XED_CPUID_GROUP_APX_F_KOPD: xed_cpuid_group_enum_t = 21;
pub const XED_CPUID_GROUP_APX_F_KOPD_AVX10: xed_cpuid_group_enum_t = 22;
pub const XED_CPUID_GROUP_APX_F_KOPQ: xed_cpuid_group_enum_t = 23;
pub const XED_CPUID_GROUP_APX_F_KOPQ_AVX10: xed_cpuid_group_enum_t = 24;
pub const XED_CPUID_GROUP_APX_F_KOPW: xed_cpuid_group_enum_t = 25;
pub const XED_CPUID_GROUP_APX_F_KOPW_AVX10: xed_cpuid_group_enum_t = 26;
pub const XED_CPUID_GROUP_APX_F_LZCNT: xed_cpuid_group_enum_t = 27;
pub const XED_CPUID_GROUP_APX_F_MOVBE: xed_cpuid_group_enum_t = 28;
pub const XED_CPUID_GROUP_APX_F_MOVDIR64B: xed_cpuid_group_enum_t = 29;
pub const XED_CPUID_GROUP_APX_F_MOVDIRI: xed_cpuid_group_enum_t = 30;
pub const XED_CPUID_GROUP_APX_F_RAO_INT: xed_cpuid_group_enum_t = 31;
pub const XED_CPUID_GROUP_APX_F_SHA: xed_cpuid_group_enum_t = 32;
pub const XED_CPUID_GROUP_APX_F_USER_MSR: xed_cpuid_group_enum_t = 33;
pub const XED_CPUID_GROUP_APX_F_VMX: xed_cpuid_group_enum_t = 34;
pub const XED_CPUID_GROUP_AVX: xed_cpuid_group_enum_t = 35;
pub const XED_CPUID_GROUP_AVX2: xed_cpuid_group_enum_t = 36;
pub const XED_CPUID_GROUP_AVX2GATHER: xed_cpuid_group_enum_t = 37;
pub const XED_CPUID_GROUP_AVX512BW_128: xed_cpuid_group_enum_t = 38;
pub const XED_CPUID_GROUP_AVX512BW_128N: xed_cpuid_group_enum_t = 39;
pub const XED_CPUID_GROUP_AVX512BW_128N_AVX10: xed_cpuid_group_enum_t = 40;
pub const XED_CPUID_GROUP_AVX512BW_128_AVX10: xed_cpuid_group_enum_t = 41;
pub const XED_CPUID_GROUP_AVX512BW_256: xed_cpuid_group_enum_t = 42;
pub const XED_CPUID_GROUP_AVX512BW_256_AVX10: xed_cpuid_group_enum_t = 43;
pub const XED_CPUID_GROUP_AVX512BW_512: xed_cpuid_group_enum_t = 44;
pub const XED_CPUID_GROUP_AVX512BW_512_AVX10: xed_cpuid_group_enum_t = 45;
pub const XED_CPUID_GROUP_AVX512BW_KOPD: xed_cpuid_group_enum_t = 46;
pub const XED_CPUID_GROUP_AVX512BW_KOPD_AVX10: xed_cpuid_group_enum_t = 47;
pub const XED_CPUID_GROUP_AVX512BW_KOPQ: xed_cpuid_group_enum_t = 48;
pub const XED_CPUID_GROUP_AVX512BW_KOPQ_AVX10: xed_cpuid_group_enum_t = 49;
pub const XED_CPUID_GROUP_AVX512CD_128: xed_cpuid_group_enum_t = 50;
pub const XED_CPUID_GROUP_AVX512CD_128_AVX10: xed_cpuid_group_enum_t = 51;
pub const XED_CPUID_GROUP_AVX512CD_256: xed_cpuid_group_enum_t = 52;
pub const XED_CPUID_GROUP_AVX512CD_256_AVX10: xed_cpuid_group_enum_t = 53;
pub const XED_CPUID_GROUP_AVX512CD_512: xed_cpuid_group_enum_t = 54;
pub const XED_CPUID_GROUP_AVX512CD_512_AVX10: xed_cpuid_group_enum_t = 55;
pub const XED_CPUID_GROUP_AVX512DQ_128: xed_cpuid_group_enum_t = 56;
pub const XED_CPUID_GROUP_AVX512DQ_128N: xed_cpuid_group_enum_t = 57;
pub const XED_CPUID_GROUP_AVX512DQ_128N_AVX10: xed_cpuid_group_enum_t = 58;
pub const XED_CPUID_GROUP_AVX512DQ_128_AVX10: xed_cpuid_group_enum_t = 59;
pub const XED_CPUID_GROUP_AVX512DQ_256: xed_cpuid_group_enum_t = 60;
pub const XED_CPUID_GROUP_AVX512DQ_256_AVX10: xed_cpuid_group_enum_t = 61;
pub const XED_CPUID_GROUP_AVX512DQ_512: xed_cpuid_group_enum_t = 62;
pub const XED_CPUID_GROUP_AVX512DQ_512_AVX10: xed_cpuid_group_enum_t = 63;
pub const XED_CPUID_GROUP_AVX512DQ_KOPB: xed_cpuid_group_enum_t = 64;
pub const XED_CPUID_GROUP_AVX512DQ_KOPB_AVX10: xed_cpuid_group_enum_t = 65;
pub const XED_CPUID_GROUP_AVX512DQ_KOPW: xed_cpuid_group_enum_t = 66;
pub const XED_CPUID_GROUP_AVX512DQ_KOPW_AVX10: xed_cpuid_group_enum_t = 67;
pub const XED_CPUID_GROUP_AVX512DQ_SCALAR: xed_cpuid_group_enum_t = 68;
pub const XED_CPUID_GROUP_AVX512DQ_SCALAR_AVX10: xed_cpuid_group_enum_t = 69;
pub const XED_CPUID_GROUP_AVX512ER_512: xed_cpuid_group_enum_t = 70;
pub const XED_CPUID_GROUP_AVX512ER_SCALAR: xed_cpuid_group_enum_t = 71;
pub const XED_CPUID_GROUP_AVX512F_128: xed_cpuid_group_enum_t = 72;
pub const XED_CPUID_GROUP_AVX512F_128N: xed_cpuid_group_enum_t = 73;
pub const XED_CPUID_GROUP_AVX512F_128N_AVX10: xed_cpuid_group_enum_t = 74;
pub const XED_CPUID_GROUP_AVX512F_128_AVX10: xed_cpuid_group_enum_t = 75;
pub const XED_CPUID_GROUP_AVX512F_256: xed_cpuid_group_enum_t = 76;
pub const XED_CPUID_GROUP_AVX512F_256_AVX10: xed_cpuid_group_enum_t = 77;
pub const XED_CPUID_GROUP_AVX512F_512: xed_cpuid_group_enum_t = 78;
pub const XED_CPUID_GROUP_AVX512F_512_AVX10: xed_cpuid_group_enum_t = 79;
pub const XED_CPUID_GROUP_AVX512F_KOPW: xed_cpuid_group_enum_t = 80;
pub const XED_CPUID_GROUP_AVX512F_KOPW_AVX10: xed_cpuid_group_enum_t = 81;
pub const XED_CPUID_GROUP_AVX512F_SCALAR: xed_cpuid_group_enum_t = 82;
pub const XED_CPUID_GROUP_AVX512F_SCALAR_AVX10: xed_cpuid_group_enum_t = 83;
pub const XED_CPUID_GROUP_AVX512PF_512: xed_cpuid_group_enum_t = 84;
pub const XED_CPUID_GROUP_AVX512_4FMAPS_512: xed_cpuid_group_enum_t = 85;
pub const XED_CPUID_GROUP_AVX512_4FMAPS_SCALAR: xed_cpuid_group_enum_t = 86;
pub const XED_CPUID_GROUP_AVX512_4VNNIW_512: xed_cpuid_group_enum_t = 87;
pub const XED_CPUID_GROUP_AVX512_BF16_128: xed_cpuid_group_enum_t = 88;
pub const XED_CPUID_GROUP_AVX512_BF16_128_AVX10: xed_cpuid_group_enum_t = 89;
pub const XED_CPUID_GROUP_AVX512_BF16_256: xed_cpuid_group_enum_t = 90;
pub const XED_CPUID_GROUP_AVX512_BF16_256_AVX10: xed_cpuid_group_enum_t = 91;
pub const XED_CPUID_GROUP_AVX512_BF16_512: xed_cpuid_group_enum_t = 92;
pub const XED_CPUID_GROUP_AVX512_BF16_512_AVX10: xed_cpuid_group_enum_t = 93;
pub const XED_CPUID_GROUP_AVX512_BITALG_128: xed_cpuid_group_enum_t = 94;
pub const XED_CPUID_GROUP_AVX512_BITALG_128_AVX10: xed_cpuid_group_enum_t = 95;
pub const XED_CPUID_GROUP_AVX512_BITALG_256: xed_cpuid_group_enum_t = 96;
pub const XED_CPUID_GROUP_AVX512_BITALG_256_AVX10: xed_cpuid_group_enum_t = 97;
pub const XED_CPUID_GROUP_AVX512_BITALG_512: xed_cpuid_group_enum_t = 98;
pub const XED_CPUID_GROUP_AVX512_BITALG_512_AVX10: xed_cpuid_group_enum_t = 99;
pub const XED_CPUID_GROUP_AVX512_FP16_128: xed_cpuid_group_enum_t = 100;
pub const XED_CPUID_GROUP_AVX512_FP16_128N: xed_cpuid_group_enum_t = 101;
pub const XED_CPUID_GROUP_AVX512_FP16_128N_AVX10: xed_cpuid_group_enum_t = 102;
pub const XED_CPUID_GROUP_AVX512_FP16_128_AVX10: xed_cpuid_group_enum_t = 103;
pub const XED_CPUID_GROUP_AVX512_FP16_256: xed_cpuid_group_enum_t = 104;
pub const XED_CPUID_GROUP_AVX512_FP16_256_AVX10: xed_cpuid_group_enum_t = 105;
pub const XED_CPUID_GROUP_AVX512_FP16_512: xed_cpuid_group_enum_t = 106;
pub const XED_CPUID_GROUP_AVX512_FP16_512_AVX10: xed_cpuid_group_enum_t = 107;
pub const XED_CPUID_GROUP_AVX512_FP16_SCALAR: xed_cpuid_group_enum_t = 108;
pub const XED_CPUID_GROUP_AVX512_FP16_SCALAR_AVX10: xed_cpuid_group_enum_t = 109;
pub const XED_CPUID_GROUP_AVX512_GFNI_128: xed_cpuid_group_enum_t = 110;
pub const XED_CPUID_GROUP_AVX512_GFNI_128_AVX10: xed_cpuid_group_enum_t = 111;
pub const XED_CPUID_GROUP_AVX512_GFNI_256: xed_cpuid_group_enum_t = 112;
pub const XED_CPUID_GROUP_AVX512_GFNI_256_AVX10: xed_cpuid_group_enum_t = 113;
pub const XED_CPUID_GROUP_AVX512_GFNI_512: xed_cpuid_group_enum_t = 114;
pub const XED_CPUID_GROUP_AVX512_GFNI_512_AVX10: xed_cpuid_group_enum_t = 115;
pub const XED_CPUID_GROUP_AVX512_IFMA_128: xed_cpuid_group_enum_t = 116;
pub const XED_CPUID_GROUP_AVX512_IFMA_128_AVX10: xed_cpuid_group_enum_t = 117;
pub const XED_CPUID_GROUP_AVX512_IFMA_256: xed_cpuid_group_enum_t = 118;
pub const XED_CPUID_GROUP_AVX512_IFMA_256_AVX10: xed_cpuid_group_enum_t = 119;
pub const XED_CPUID_GROUP_AVX512_IFMA_512: xed_cpuid_group_enum_t = 120;
pub const XED_CPUID_GROUP_AVX512_IFMA_512_AVX10: xed_cpuid_group_enum_t = 121;
pub const XED_CPUID_GROUP_AVX512_VAES_128: xed_cpuid_group_enum_t = 122;
pub const XED_CPUID_GROUP_AVX512_VAES_128_AVX10: xed_cpuid_group_enum_t = 123;
pub const XED_CPUID_GROUP_AVX512_VAES_256: xed_cpuid_group_enum_t = 124;
pub const XED_CPUID_GROUP_AVX512_VAES_256_AVX10: xed_cpuid_group_enum_t = 125;
pub const XED_CPUID_GROUP_AVX512_VAES_512: xed_cpuid_group_enum_t = 126;
pub const XED_CPUID_GROUP_AVX512_VAES_512_AVX10: xed_cpuid_group_enum_t = 127;
pub const XED_CPUID_GROUP_AVX512_VBMI2_128: xed_cpuid_group_enum_t = 128;
pub const XED_CPUID_GROUP_AVX512_VBMI2_128_AVX10: xed_cpuid_group_enum_t = 129;
pub const XED_CPUID_GROUP_AVX512_VBMI2_256: xed_cpuid_group_enum_t = 130;
pub const XED_CPUID_GROUP_AVX512_VBMI2_256_AVX10: xed_cpuid_group_enum_t = 131;
pub const XED_CPUID_GROUP_AVX512_VBMI2_512: xed_cpuid_group_enum_t = 132;
pub const XED_CPUID_GROUP_AVX512_VBMI2_512_AVX10: xed_cpuid_group_enum_t = 133;
pub const XED_CPUID_GROUP_AVX512_VBMI_128: xed_cpuid_group_enum_t = 134;
pub const XED_CPUID_GROUP_AVX512_VBMI_128_AVX10: xed_cpuid_group_enum_t = 135;
pub const XED_CPUID_GROUP_AVX512_VBMI_256: xed_cpuid_group_enum_t = 136;
pub const XED_CPUID_GROUP_AVX512_VBMI_256_AVX10: xed_cpuid_group_enum_t = 137;
pub const XED_CPUID_GROUP_AVX512_VBMI_512: xed_cpuid_group_enum_t = 138;
pub const XED_CPUID_GROUP_AVX512_VBMI_512_AVX10: xed_cpuid_group_enum_t = 139;
pub const XED_CPUID_GROUP_AVX512_VNNI_128: xed_cpuid_group_enum_t = 140;
pub const XED_CPUID_GROUP_AVX512_VNNI_128_AVX10: xed_cpuid_group_enum_t = 141;
pub const XED_CPUID_GROUP_AVX512_VNNI_256: xed_cpuid_group_enum_t = 142;
pub const XED_CPUID_GROUP_AVX512_VNNI_256_AVX10: xed_cpuid_group_enum_t = 143;
pub const XED_CPUID_GROUP_AVX512_VNNI_512: xed_cpuid_group_enum_t = 144;
pub const XED_CPUID_GROUP_AVX512_VNNI_512_AVX10: xed_cpuid_group_enum_t = 145;
pub const XED_CPUID_GROUP_AVX512_VP2INTERSECT_128: xed_cpuid_group_enum_t = 146;
pub const XED_CPUID_GROUP_AVX512_VP2INTERSECT_256: xed_cpuid_group_enum_t = 147;
pub const XED_CPUID_GROUP_AVX512_VP2INTERSECT_512: xed_cpuid_group_enum_t = 148;
pub const XED_CPUID_GROUP_AVX512_VPCLMULQDQ_128: xed_cpuid_group_enum_t = 149;
pub const XED_CPUID_GROUP_AVX512_VPCLMULQDQ_128_AVX10: xed_cpuid_group_enum_t = 150;
pub const XED_CPUID_GROUP_AVX512_VPCLMULQDQ_256: xed_cpuid_group_enum_t = 151;
pub const XED_CPUID_GROUP_AVX512_VPCLMULQDQ_256_AVX10: xed_cpuid_group_enum_t = 152;
pub const XED_CPUID_GROUP_AVX512_VPCLMULQDQ_512: xed_cpuid_group_enum_t = 153;
pub const XED_CPUID_GROUP_AVX512_VPCLMULQDQ_512_AVX10: xed_cpuid_group_enum_t = 154;
pub const XED_CPUID_GROUP_AVX512_VPOPCNTDQ_128: xed_cpuid_group_enum_t = 155;
pub const XED_CPUID_GROUP_AVX512_VPOPCNTDQ_128_AVX10: xed_cpuid_group_enum_t = 156;
pub const XED_CPUID_GROUP_AVX512_VPOPCNTDQ_256: xed_cpuid_group_enum_t = 157;
pub const XED_CPUID_GROUP_AVX512_VPOPCNTDQ_256_AVX10: xed_cpuid_group_enum_t = 158;
pub const XED_CPUID_GROUP_AVX512_VPOPCNTDQ_512: xed_cpuid_group_enum_t = 159;
pub const XED_CPUID_GROUP_AVX512_VPOPCNTDQ_512_AVX10: xed_cpuid_group_enum_t = 160;
pub const XED_CPUID_GROUP_AVXAES: xed_cpuid_group_enum_t = 161;
pub const XED_CPUID_GROUP_AVX_GFNI: xed_cpuid_group_enum_t = 162;
pub const XED_CPUID_GROUP_AVX_IFMA: xed_cpuid_group_enum_t = 163;
pub const XED_CPUID_GROUP_AVX_NE_CONVERT: xed_cpuid_group_enum_t = 164;
pub const XED_CPUID_GROUP_AVX_VNNI: xed_cpuid_group_enum_t = 165;
pub const XED_CPUID_GROUP_AVX_VNNI_INT16: xed_cpuid_group_enum_t = 166;
pub const XED_CPUID_GROUP_AVX_VNNI_INT8: xed_cpuid_group_enum_t = 167;
pub const XED_CPUID_GROUP_BMI1: xed_cpuid_group_enum_t = 168;
pub const XED_CPUID_GROUP_BMI2: xed_cpuid_group_enum_t = 169;
pub const XED_CPUID_GROUP_CET: xed_cpuid_group_enum_t = 170;
pub const XED_CPUID_GROUP_CLDEMOTE: xed_cpuid_group_enum_t = 171;
pub const XED_CPUID_GROUP_CLFLUSHOPT: xed_cpuid_group_enum_t = 172;
pub const XED_CPUID_GROUP_CLFSH: xed_cpuid_group_enum_t = 173;
pub const XED_CPUID_GROUP_CLWB: xed_cpuid_group_enum_t = 174;
pub const XED_CPUID_GROUP_CMOV: xed_cpuid_group_enum_t = 175;
pub const XED_CPUID_GROUP_CMPCCXADD: xed_cpuid_group_enum_t = 176;
pub const XED_CPUID_GROUP_CMPXCHG16B: xed_cpuid_group_enum_t = 177;
pub const XED_CPUID_GROUP_ENQCMD: xed_cpuid_group_enum_t = 178;
pub const XED_CPUID_GROUP_F16C: xed_cpuid_group_enum_t = 179;
pub const XED_CPUID_GROUP_FCMOV: xed_cpuid_group_enum_t = 180;
pub const XED_CPUID_GROUP_FCOMI: xed_cpuid_group_enum_t = 181;
pub const XED_CPUID_GROUP_FMA: xed_cpuid_group_enum_t = 182;
pub const XED_CPUID_GROUP_FRED: xed_cpuid_group_enum_t = 183;
pub const XED_CPUID_GROUP_FXSAVE: xed_cpuid_group_enum_t = 184;
pub const XED_CPUID_GROUP_FXSAVE64: xed_cpuid_group_enum_t = 185;
pub const XED_CPUID_GROUP_GFNI: xed_cpuid_group_enum_t = 186;
pub const XED_CPUID_GROUP_HRESET: xed_cpuid_group_enum_t = 187;
pub const XED_CPUID_GROUP_ICACHE_PREFETCH: xed_cpuid_group_enum_t = 188;
pub const XED_CPUID_GROUP_INVPCID: xed_cpuid_group_enum_t = 189;
pub const XED_CPUID_GROUP_KEYLOCKER: xed_cpuid_group_enum_t = 190;
pub const XED_CPUID_GROUP_KEYLOCKER_WIDE: xed_cpuid_group_enum_t = 191;
pub const XED_CPUID_GROUP_LAHF: xed_cpuid_group_enum_t = 192;
pub const XED_CPUID_GROUP_LKGS: xed_cpuid_group_enum_t = 193;
pub const XED_CPUID_GROUP_LONGMODE: xed_cpuid_group_enum_t = 194;
pub const XED_CPUID_GROUP_LZCNT: xed_cpuid_group_enum_t = 195;
pub const XED_CPUID_GROUP_MCOMMIT: xed_cpuid_group_enum_t = 196;
pub const XED_CPUID_GROUP_MONITOR: xed_cpuid_group_enum_t = 197;
pub const XED_CPUID_GROUP_MONITORX: xed_cpuid_group_enum_t = 198;
pub const XED_CPUID_GROUP_MOVBE: xed_cpuid_group_enum_t = 199;
pub const XED_CPUID_GROUP_MOVDIR64B: xed_cpuid_group_enum_t = 200;
pub const XED_CPUID_GROUP_MOVDIRI: xed_cpuid_group_enum_t = 201;
pub const XED_CPUID_GROUP_MPX: xed_cpuid_group_enum_t = 202;
pub const XED_CPUID_GROUP_MSRLIST: xed_cpuid_group_enum_t = 203;
pub const XED_CPUID_GROUP_PBNDKB: xed_cpuid_group_enum_t = 204;
pub const XED_CPUID_GROUP_PCLMULQDQ: xed_cpuid_group_enum_t = 205;
pub const XED_CPUID_GROUP_PCONFIG: xed_cpuid_group_enum_t = 206;
pub const XED_CPUID_GROUP_PENTIUMMMX: xed_cpuid_group_enum_t = 207;
pub const XED_CPUID_GROUP_PKU: xed_cpuid_group_enum_t = 208;
pub const XED_CPUID_GROUP_POPCNT: xed_cpuid_group_enum_t = 209;
pub const XED_CPUID_GROUP_PREFETCHW: xed_cpuid_group_enum_t = 210;
pub const XED_CPUID_GROUP_PREFETCHWT1: xed_cpuid_group_enum_t = 211;
pub const XED_CPUID_GROUP_PTWRITE: xed_cpuid_group_enum_t = 212;
pub const XED_CPUID_GROUP_RAO_INT: xed_cpuid_group_enum_t = 213;
pub const XED_CPUID_GROUP_RDPID: xed_cpuid_group_enum_t = 214;
pub const XED_CPUID_GROUP_RDPRU: xed_cpuid_group_enum_t = 215;
pub const XED_CPUID_GROUP_RDRAND: xed_cpuid_group_enum_t = 216;
pub const XED_CPUID_GROUP_RDSEED: xed_cpuid_group_enum_t = 217;
pub const XED_CPUID_GROUP_RDTSCP: xed_cpuid_group_enum_t = 218;
pub const XED_CPUID_GROUP_RDWRFSGS: xed_cpuid_group_enum_t = 219;
pub const XED_CPUID_GROUP_RTM: xed_cpuid_group_enum_t = 220;
pub const XED_CPUID_GROUP_SERIALIZE: xed_cpuid_group_enum_t = 221;
pub const XED_CPUID_GROUP_SGX: xed_cpuid_group_enum_t = 222;
pub const XED_CPUID_GROUP_SHA: xed_cpuid_group_enum_t = 223;
pub const XED_CPUID_GROUP_SHA512: xed_cpuid_group_enum_t = 224;
pub const XED_CPUID_GROUP_SM3: xed_cpuid_group_enum_t = 225;
pub const XED_CPUID_GROUP_SM4: xed_cpuid_group_enum_t = 226;
pub const XED_CPUID_GROUP_SMAP: xed_cpuid_group_enum_t = 227;
pub const XED_CPUID_GROUP_SMX: xed_cpuid_group_enum_t = 228;
pub const XED_CPUID_GROUP_SNP: xed_cpuid_group_enum_t = 229;
pub const XED_CPUID_GROUP_SSE: xed_cpuid_group_enum_t = 230;
pub const XED_CPUID_GROUP_SSE2: xed_cpuid_group_enum_t = 231;
pub const XED_CPUID_GROUP_SSE2MMX: xed_cpuid_group_enum_t = 232;
pub const XED_CPUID_GROUP_SSE3: xed_cpuid_group_enum_t = 233;
pub const XED_CPUID_GROUP_SSE3X87: xed_cpuid_group_enum_t = 234;
pub const XED_CPUID_GROUP_SSE4: xed_cpuid_group_enum_t = 235;
pub const XED_CPUID_GROUP_SSE42: xed_cpuid_group_enum_t = 236;
pub const XED_CPUID_GROUP_SSE4A: xed_cpuid_group_enum_t = 237;
pub const XED_CPUID_GROUP_SSEMXCSR: xed_cpuid_group_enum_t = 238;
pub const XED_CPUID_GROUP_SSSE3: xed_cpuid_group_enum_t = 239;
pub const XED_CPUID_GROUP_SSSE3MMX: xed_cpuid_group_enum_t = 240;
pub const XED_CPUID_GROUP_TSX_LDTRK: xed_cpuid_group_enum_t = 241;
pub const XED_CPUID_GROUP_UINTR: xed_cpuid_group_enum_t = 242;
pub const XED_CPUID_GROUP_USER_MSR: xed_cpuid_group_enum_t = 243;
pub const XED_CPUID_GROUP_VAES: xed_cpuid_group_enum_t = 244;
pub const XED_CPUID_GROUP_VIA_PADLOCK_AES: xed_cpuid_group_enum_t = 245;
pub const XED_CPUID_GROUP_VIA_PADLOCK_MONTMUL: xed_cpuid_group_enum_t = 246;
pub const XED_CPUID_GROUP_VIA_PADLOCK_RNG: xed_cpuid_group_enum_t = 247;
pub const XED_CPUID_GROUP_VIA_PADLOCK_SHA: xed_cpuid_group_enum_t = 248;
pub const XED_CPUID_GROUP_VPCLMULQDQ: xed_cpuid_group_enum_t = 249;
pub const XED_CPUID_GROUP_VTX: xed_cpuid_group_enum_t = 250;
pub const XED_CPUID_GROUP_WAITPKG: xed_cpuid_group_enum_t = 251;
pub const XED_CPUID_GROUP_WBNOINVD: xed_cpuid_group_enum_t = 252;
pub const XED_CPUID_GROUP_WRMSRNS: xed_cpuid_group_enum_t = 253;
pub const XED_CPUID_GROUP_XSAVE: xed_cpuid_group_enum_t = 254;
pub const XED_CPUID_GROUP_XSAVEC: xed_cpuid_group_enum_t = 255;
pub const XED_CPUID_GROUP_XSAVEOPT: xed_cpuid_group_enum_t = 256;
pub const XED_CPUID_GROUP_XSAVES: xed_cpuid_group_enum_t = 257;
pub const XED_CPUID_GROUP_LAST: xed_cpuid_group_enum_t = 258;
pub type xed_cpuid_group_enum_t = ::core::ffi::c_uint;
extern "C" {
    #[doc = " This converts strings to #xed_cpuid_group_enum_t types.\n @param s A C-string.\n @return #xed_cpuid_group_enum_t\n @ingroup ENUM"]
    pub fn str2xed_cpuid_group_enum_t(s: *const ::core::ffi::c_char) -> xed_cpuid_group_enum_t;
}
extern "C" {
    #[doc = " This converts strings to #xed_cpuid_group_enum_t types.\n @param p An enumeration element of type xed_cpuid_group_enum_t.\n @return string\n @ingroup ENUM"]
    pub fn xed_cpuid_group_enum_t2str(p: xed_cpuid_group_enum_t) -> *const ::core::ffi::c_char;
}
extern "C" {
    #[doc = " Returns the last element of the enumeration\n @return xed_cpuid_group_enum_t The last element of the enumeration.\n @ingroup ENUM"]
    pub fn xed_cpuid_group_enum_t_last() -> xed_cpuid_group_enum_t;
}
#[doc = " @ingroup CPUID\n @brief a data structure representing a CPUID record"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct xed_cpuid_rec_t {
    #[doc = "< cpuid leaf"]
    pub leaf: u32,
    #[doc = "< cpuid subleaf"]
    pub subleaf: u32,
    #[doc = "< the register containing the bits (EAX,EBX,ECX,EDX)"]
    pub reg: xed_reg_enum_t,
    #[doc = "< the bit start index for the feature"]
    pub bit_start: u8,
    #[doc = "< the bit end index for the feature"]
    pub bit_end: u8,
    #[doc = "< the required feature value"]
    pub value: u32,
}
#[test]
fn bindgen_test_layout_xed_cpuid_rec_t() {
    const UNINIT: ::core::mem::MaybeUninit<xed_cpuid_rec_t> = ::core::mem::MaybeUninit::uninit();
    let ptr = UNINIT.as_ptr();
    assert_eq!(
        ::core::mem::size_of::<xed_cpuid_rec_t>(),
        20usize,
        concat!("Size of: ", stringify!(xed_cpuid_rec_t))
    );
    assert_eq!(
        ::core::mem::align_of::<xed_cpuid_rec_t>(),
        4usize,
        concat!("Alignment of ", stringify!(xed_cpuid_rec_t))
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).leaf) as usize - ptr as usize },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_cpuid_rec_t),
            "::",
            stringify!(leaf)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).subleaf) as usize - ptr as usize },
        4usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_cpuid_rec_t),
            "::",
            stringify!(subleaf)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).reg) as usize - ptr as usize },
        8usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_cpuid_rec_t),
            "::",
            stringify!(reg)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).bit_start) as usize - ptr as usize },
        12usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_cpuid_rec_t),
            "::",
            stringify!(bit_start)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).bit_end) as usize - ptr as usize },
        13usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_cpuid_rec_t),
            "::",
            stringify!(bit_end)
        )
    );
    assert_eq!(
        unsafe { ::core::ptr::addr_of!((*ptr).value) as usize - ptr as usize },
        16usize,
        concat!(
            "Offset of field: ",
            stringify!(xed_cpuid_rec_t),
            "::",
            stringify!(value)
        )
    );
}
extern "C" {
    #[doc = " @ingroup CPUID\n @brief Returns the name of the i'th cpuid group associated with the given isa-set.\n This function is called repeatedly, with i = 0 until reaching\n XED_MAX_CPUID_GROUPS_PER_ISA_SET or when the return value is\n XED_CPUID_GROUP_INVALID.\n An ISA-SET is supported by a chip if CPUID match is found for a single CPUID\n group (OR relationship between groups)."]
    pub fn xed_get_cpuid_group_enum_for_isa_set(
        isaset: xed_isa_set_enum_t,
        i: xed_uint_t,
    ) -> xed_cpuid_group_enum_t;
}
extern "C" {
    #[doc = " @ingroup CPUID\n @brief Returns the name of the i'th cpuid record associated with the given cpuid group.\n This function is called repeatedly, with i = 0 until reaching\n XED_MAX_CPUID_RECS_PER_GROUP or when the return value is\n XED_CPUID_REC_INVALID.\n A cpuid group is satisfied if all of its cpuid records are\n set (AND relationship between records)."]
    pub fn xed_get_cpuid_rec_enum_for_group(
        group: xed_cpuid_group_enum_t,
        i: xed_uint_t,
    ) -> xed_cpuid_rec_enum_t;
}
extern "C" {
    #[doc = " @ingroup CPUID\n @brief provides the details of the CPUID specification, if the\n enumeration value is not sufficient.\n stores the values of the CPUID record in the given pointer p\n @returns xed_bool_t 1=success , 0=failure"]
    pub fn xed_get_cpuid_rec(
        cpuid_bit: xed_cpuid_rec_enum_t,
        p: *mut xed_cpuid_rec_t,
    ) -> xed_bool_t;
}
extern "C" {
    #[doc = " @ingroup ISASET\n return 1 if the isa_set is part included in the specified chip, 0\n  otherwise."]
    pub fn xed_isa_set_is_valid_for_chip(
        isa_set: xed_isa_set_enum_t,
        chip: xed_chip_enum_t,
    ) -> xed_bool_t;
}
